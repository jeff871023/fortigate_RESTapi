basePath: /api/v2/cmdb
consumes:
- application/json
host: 172.16.177.65
info:
  contact:
    email: fosguiqateam@fortinet.com
    name: FortiOS Web Application Team
    url: http://modskristensen.net
  description: REST API for configuring FortiOS objects and settings
  termsOfService: http://fortinet.com/terms/
  title: FortiOS CMDB
  version: v2
paths:
  /emailfilter/bwl:
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Starting entry index.
        in: query
        name: start
        required: false
        type: integer
      - description: Maximum number of entries to return.
        in: query
        name: count
        required: false
        type: integer
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to include a checksum of each object's contents.
        in: query
        name: with_contents_hash
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - collectionFormat: multi
        description: "Filtering multiple key/value pairs\nOperator     |   Description\n\
          ==     |   Case insensitive match with pattern.\n!=     |    Does not match\
          \ with pattern (case insensitive).\n=@     |    Pattern found in object\
          \ value (case insensitive).\n!@     |    \uFEFFPattern not\uFEFF found in\
          \ object value (case insensitive).\n<=     |    Value must be less than\
          \ or equal to \uFEFFpattern\uFEFF.\n<     |    Value must be less than pattern\uFEFF\
          .\n.>=    |    Value must be greater than or equal to \uFEFFpattern\uFEFF\
          .\n.>     |    Value must be greater than \uFEFFpattern\uFEFF.\nLogical\
          \ OR    |    Separate filters using commas ','\nLogical AND    |    Filter\
          \ strings can be combined to create logical AND queries by including multiple\
          \ filters in the request.\nCombining AND and OR    |    You can combine\
          \ AND and OR filters together to create more complex filters.\n"
        in: query
        items:
          type: string
        name: filter
        required: false
        type: array
      - description: If present, objects will be filtered on property with this name.
        in: query
        name: key
        required: false
        type: string
      - description: If present, objects will be filtered on property with this value.
        in: query
        name: pattern
        required: false
        type: string
      - description: Scope [global|vdom|both*]
        in: query
        name: scope
        required: false
        type: string
      - description: Exclude properties/objects with default value
        in: query
        name: exclude-default-values
        required: false
        type: boolean
      - description: 'default: Return the CLI default values for entire CLI tree.

          meta: Return meta data for a specific object, table, or the entire CLI tree.

          schema: Return schema for entire CLI tree.

          '
        enum:
        - default
        - schema
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Optional comments.
                maxLength: 255
                type: string
              entries:
                description: Anti-spam black/white list entries.
                items:
                  properties:
                    action:
                      description: "Reject, mark as spam or good email.   \nreject:Reject\
                        \ the connection.   \nspam:Mark as spam email.   \nclear:Mark\
                        \ as good email."
                      enum:
                      - reject
                      - spam
                      - clear
                      type: string
                    addr-type:
                      description: "IP address type.   \nipv4:IPv4 Address type. \
                        \  \nipv6:IPv6 Address type."
                      enum:
                      - ipv4
                      - ipv6
                      type: string
                    email-pattern:
                      description: Email address pattern.
                      maxLength: 127
                      type: string
                    id:
                      description: Entry ID.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    ip4-subnet:
                      description: IPv4 network address/subnet mask bits.
                      format: ipv4
                      type: string
                    ip6-subnet:
                      description: IPv6 network address/subnet mask bits.
                      type: string
                    pattern-type:
                      description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                        \ pattern.   \nregexp:Perl regular expression."
                      enum:
                      - wildcard
                      - regexp
                      type: string
                    status:
                      description: "Enable/disable status.   \nenable:Enable status.\
                        \   \ndisable:Disable status."
                      enum:
                      - enable
                      - disable
                      type: string
                    type:
                      description: "Entry type.   \nip:By IP address.   \nemail:By\
                        \ email address."
                      enum:
                      - ip
                      - email
                      type: string
                  type: object
                maxItems: null
                type: array
              id:
                description: ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              name:
                description: Name of table.
                maxLength: 63
                type: string
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select all entries in a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/bwl
    post:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Optional comments.
              maxLength: 255
              type: string
            entries:
              description: Anti-spam black/white list entries.
              items:
                properties:
                  action:
                    description: "Reject, mark as spam or good email.   \nreject:Reject\
                      \ the connection.   \nspam:Mark as spam email.   \nclear:Mark\
                      \ as good email."
                    enum:
                    - reject
                    - spam
                    - clear
                    type: string
                  addr-type:
                    description: "IP address type.   \nipv4:IPv4 Address type.   \n\
                      ipv6:IPv6 Address type."
                    enum:
                    - ipv4
                    - ipv6
                    type: string
                  email-pattern:
                    description: Email address pattern.
                    maxLength: 127
                    type: string
                  id:
                    description: Entry ID.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  ip4-subnet:
                    description: IPv4 network address/subnet mask bits.
                    format: ipv4
                    type: string
                  ip6-subnet:
                    description: IPv6 network address/subnet mask bits.
                    type: string
                  pattern-type:
                    description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                      \ pattern.   \nregexp:Perl regular expression."
                    enum:
                    - wildcard
                    - regexp
                    type: string
                  status:
                    description: "Enable/disable status.   \nenable:Enable status.\
                      \   \ndisable:Disable status."
                    enum:
                    - enable
                    - disable
                    type: string
                  type:
                    description: "Entry type.   \nip:By IP address.   \nemail:By email\
                      \ address."
                    enum:
                    - ip
                    - email
                    type: string
                type: object
              maxItems: null
              type: array
            id:
              description: ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            name:
              description: Name of table.
              maxLength: 63
              type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_clone_: Clone this\
          \ specific resource.\nWhen *action=clone* is set, the extra parameters *nkey*\
          \ must be provided.\n__*Note:*__ If this parameter is provided when not\
          \ supported, the action will be ignored and an \u201Cinvalid request\u201D\
          \ error will be returned.\n"
        enum:
        - clone
        in: query
        name: action
        required: false
        type: string
      - description: ' If *action=clone*, use *nkey* to specify the ID for the new
          resource to be created.

          For example, to clone `address1` to `address1_clone`, use:

          __action=clone&nkey=address1_clone__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *clone*.

          '
        in: query
        name: nkey
        required: false
        type: string
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Create object(s) in this table.\n Access Group: utmgrp"
      tags:
      - emailfilter/bwl
  /emailfilter/bwl/{id}:
    delete:
      parameters:
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Delete this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/bwl
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - description: 'default: Return the CLI default values for this object type.

          schema: Return the CLI schema for this object type.

          revision: Return the CMDB revision for this object type.

          transaction-list: List all configuration transaction(s).

          '
        enum:
        - default
        - schema
        - revision
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Optional comments.
                maxLength: 255
                type: string
              entries:
                description: Anti-spam black/white list entries.
                items:
                  properties:
                    action:
                      description: "Reject, mark as spam or good email.   \nreject:Reject\
                        \ the connection.   \nspam:Mark as spam email.   \nclear:Mark\
                        \ as good email."
                      enum:
                      - reject
                      - spam
                      - clear
                      type: string
                    addr-type:
                      description: "IP address type.   \nipv4:IPv4 Address type. \
                        \  \nipv6:IPv6 Address type."
                      enum:
                      - ipv4
                      - ipv6
                      type: string
                    email-pattern:
                      description: Email address pattern.
                      maxLength: 127
                      type: string
                    id:
                      description: Entry ID.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    ip4-subnet:
                      description: IPv4 network address/subnet mask bits.
                      format: ipv4
                      type: string
                    ip6-subnet:
                      description: IPv6 network address/subnet mask bits.
                      type: string
                    pattern-type:
                      description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                        \ pattern.   \nregexp:Perl regular expression."
                      enum:
                      - wildcard
                      - regexp
                      type: string
                    status:
                      description: "Enable/disable status.   \nenable:Enable status.\
                        \   \ndisable:Disable status."
                      enum:
                      - enable
                      - disable
                      type: string
                    type:
                      description: "Entry type.   \nip:By IP address.   \nemail:By\
                        \ email address."
                      enum:
                      - ip
                      - email
                      type: string
                  type: object
                maxItems: null
                type: array
              id:
                description: ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              name:
                description: Name of table.
                maxLength: 63
                type: string
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select a specific entry from a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/bwl
    put:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Optional comments.
              maxLength: 255
              type: string
            entries:
              description: Anti-spam black/white list entries.
              items:
                properties:
                  action:
                    description: "Reject, mark as spam or good email.   \nreject:Reject\
                      \ the connection.   \nspam:Mark as spam email.   \nclear:Mark\
                      \ as good email."
                    enum:
                    - reject
                    - spam
                    - clear
                    type: string
                  addr-type:
                    description: "IP address type.   \nipv4:IPv4 Address type.   \n\
                      ipv6:IPv6 Address type."
                    enum:
                    - ipv4
                    - ipv6
                    type: string
                  email-pattern:
                    description: Email address pattern.
                    maxLength: 127
                    type: string
                  id:
                    description: Entry ID.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  ip4-subnet:
                    description: IPv4 network address/subnet mask bits.
                    format: ipv4
                    type: string
                  ip6-subnet:
                    description: IPv6 network address/subnet mask bits.
                    type: string
                  pattern-type:
                    description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                      \ pattern.   \nregexp:Perl regular expression."
                    enum:
                    - wildcard
                    - regexp
                    type: string
                  status:
                    description: "Enable/disable status.   \nenable:Enable status.\
                      \   \ndisable:Disable status."
                    enum:
                    - enable
                    - disable
                    type: string
                  type:
                    description: "Entry type.   \nip:By IP address.   \nemail:By email\
                      \ address."
                    enum:
                    - ip
                    - email
                    type: string
                type: object
              maxItems: null
              type: array
            id:
              description: ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            name:
              description: Name of table.
              maxLength: 63
              type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_move_: Move this\
          \ specific resource.\nWhen *action=move* is set, one of the extra parameters\
          \ (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is\
          \ provided when not supported, the action will be ignored and an \u201C\
          invalid request\u201D error will be returned.\n"
        enum:
        - move
        in: query
        name: action
        required: false
        type: string
      - description: 'If *action=move*, use *before* to specify the ID of the resource
          that this resource will be moved before.

          For example, to move `object 1` to before `object 2`, use:

          __action=move&before=2__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: before
        required: false
        type: string
      - description: 'If *action=move*, use *after* to specify the ID of the resource
          that this resource will be moved after.

          For example, to move `object 1` to after `object 3`, use:

          __action=move&after=3__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: after
        required: false
        type: string
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Update this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/bwl
  /emailfilter/bword:
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Starting entry index.
        in: query
        name: start
        required: false
        type: integer
      - description: Maximum number of entries to return.
        in: query
        name: count
        required: false
        type: integer
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to include a checksum of each object's contents.
        in: query
        name: with_contents_hash
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - collectionFormat: multi
        description: "Filtering multiple key/value pairs\nOperator     |   Description\n\
          ==     |   Case insensitive match with pattern.\n!=     |    Does not match\
          \ with pattern (case insensitive).\n=@     |    Pattern found in object\
          \ value (case insensitive).\n!@     |    \uFEFFPattern not\uFEFF found in\
          \ object value (case insensitive).\n<=     |    Value must be less than\
          \ or equal to \uFEFFpattern\uFEFF.\n<     |    Value must be less than pattern\uFEFF\
          .\n.>=    |    Value must be greater than or equal to \uFEFFpattern\uFEFF\
          .\n.>     |    Value must be greater than \uFEFFpattern\uFEFF.\nLogical\
          \ OR    |    Separate filters using commas ','\nLogical AND    |    Filter\
          \ strings can be combined to create logical AND queries by including multiple\
          \ filters in the request.\nCombining AND and OR    |    You can combine\
          \ AND and OR filters together to create more complex filters.\n"
        in: query
        items:
          type: string
        name: filter
        required: false
        type: array
      - description: If present, objects will be filtered on property with this name.
        in: query
        name: key
        required: false
        type: string
      - description: If present, objects will be filtered on property with this value.
        in: query
        name: pattern
        required: false
        type: string
      - description: Scope [global|vdom|both*]
        in: query
        name: scope
        required: false
        type: string
      - description: Exclude properties/objects with default value
        in: query
        name: exclude-default-values
        required: false
        type: boolean
      - description: 'default: Return the CLI default values for entire CLI tree.

          meta: Return meta data for a specific object, table, or the entire CLI tree.

          schema: Return schema for entire CLI tree.

          '
        enum:
        - default
        - schema
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Optional comments.
                maxLength: 255
                type: string
              entries:
                description: Spam filter banned word.
                items:
                  properties:
                    action:
                      description: "Mark spam or good.   \nspam:Mark as spam email.\
                        \   \nclear:Mark as good email."
                      enum:
                      - spam
                      - clear
                      type: string
                    id:
                      description: Banned word entry ID.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    language:
                      description: "Language for the banned word.   \nwestern:Western.\
                        \   \nsimch:Simplified Chinese.   \ntrach:Traditional Chinese.\
                        \   \njapanese:Japanese.   \nkorean:Korean.   \nfrench:French.\
                        \   \nthai:Thai.   \nspanish:Spanish."
                      enum:
                      - western
                      - simch
                      - trach
                      - japanese
                      - korean
                      - french
                      - thai
                      - spanish
                      type: string
                    pattern:
                      description: Pattern for the banned word.
                      maxLength: 127
                      type: string
                    pattern-type:
                      description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                        \ pattern.   \nregexp:Perl regular expression."
                      enum:
                      - wildcard
                      - regexp
                      type: string
                    score:
                      description: Score value.
                      maximum: 99999
                      minimum: 1
                      type: integer
                    status:
                      description: "Enable/disable status.   \nenable:Enable status.\
                        \   \ndisable:Disable status."
                      enum:
                      - enable
                      - disable
                      type: string
                    where:
                      description: "Component of the email to be scanned.   \nsubject:Banned\
                        \ word in email subject.   \nbody:Banned word in email body.\
                        \   \nall:Banned word in both subject and body."
                      enum:
                      - subject
                      - body
                      - all
                      type: string
                  type: object
                maxItems: null
                type: array
              id:
                description: ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              name:
                description: Name of table.
                maxLength: 63
                type: string
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select all entries in a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/bword
    post:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Optional comments.
              maxLength: 255
              type: string
            entries:
              description: Spam filter banned word.
              items:
                properties:
                  action:
                    description: "Mark spam or good.   \nspam:Mark as spam email.\
                      \   \nclear:Mark as good email."
                    enum:
                    - spam
                    - clear
                    type: string
                  id:
                    description: Banned word entry ID.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  language:
                    description: "Language for the banned word.   \nwestern:Western.\
                      \   \nsimch:Simplified Chinese.   \ntrach:Traditional Chinese.\
                      \   \njapanese:Japanese.   \nkorean:Korean.   \nfrench:French.\
                      \   \nthai:Thai.   \nspanish:Spanish."
                    enum:
                    - western
                    - simch
                    - trach
                    - japanese
                    - korean
                    - french
                    - thai
                    - spanish
                    type: string
                  pattern:
                    description: Pattern for the banned word.
                    maxLength: 127
                    type: string
                  pattern-type:
                    description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                      \ pattern.   \nregexp:Perl regular expression."
                    enum:
                    - wildcard
                    - regexp
                    type: string
                  score:
                    description: Score value.
                    maximum: 99999
                    minimum: 1
                    type: integer
                  status:
                    description: "Enable/disable status.   \nenable:Enable status.\
                      \   \ndisable:Disable status."
                    enum:
                    - enable
                    - disable
                    type: string
                  where:
                    description: "Component of the email to be scanned.   \nsubject:Banned\
                      \ word in email subject.   \nbody:Banned word in email body.\
                      \   \nall:Banned word in both subject and body."
                    enum:
                    - subject
                    - body
                    - all
                    type: string
                type: object
              maxItems: null
              type: array
            id:
              description: ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            name:
              description: Name of table.
              maxLength: 63
              type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_clone_: Clone this\
          \ specific resource.\nWhen *action=clone* is set, the extra parameters *nkey*\
          \ must be provided.\n__*Note:*__ If this parameter is provided when not\
          \ supported, the action will be ignored and an \u201Cinvalid request\u201D\
          \ error will be returned.\n"
        enum:
        - clone
        in: query
        name: action
        required: false
        type: string
      - description: ' If *action=clone*, use *nkey* to specify the ID for the new
          resource to be created.

          For example, to clone `address1` to `address1_clone`, use:

          __action=clone&nkey=address1_clone__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *clone*.

          '
        in: query
        name: nkey
        required: false
        type: string
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Create object(s) in this table.\n Access Group: utmgrp"
      tags:
      - emailfilter/bword
  /emailfilter/bword/{id}:
    delete:
      parameters:
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Delete this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/bword
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - description: 'default: Return the CLI default values for this object type.

          schema: Return the CLI schema for this object type.

          revision: Return the CMDB revision for this object type.

          transaction-list: List all configuration transaction(s).

          '
        enum:
        - default
        - schema
        - revision
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Optional comments.
                maxLength: 255
                type: string
              entries:
                description: Spam filter banned word.
                items:
                  properties:
                    action:
                      description: "Mark spam or good.   \nspam:Mark as spam email.\
                        \   \nclear:Mark as good email."
                      enum:
                      - spam
                      - clear
                      type: string
                    id:
                      description: Banned word entry ID.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    language:
                      description: "Language for the banned word.   \nwestern:Western.\
                        \   \nsimch:Simplified Chinese.   \ntrach:Traditional Chinese.\
                        \   \njapanese:Japanese.   \nkorean:Korean.   \nfrench:French.\
                        \   \nthai:Thai.   \nspanish:Spanish."
                      enum:
                      - western
                      - simch
                      - trach
                      - japanese
                      - korean
                      - french
                      - thai
                      - spanish
                      type: string
                    pattern:
                      description: Pattern for the banned word.
                      maxLength: 127
                      type: string
                    pattern-type:
                      description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                        \ pattern.   \nregexp:Perl regular expression."
                      enum:
                      - wildcard
                      - regexp
                      type: string
                    score:
                      description: Score value.
                      maximum: 99999
                      minimum: 1
                      type: integer
                    status:
                      description: "Enable/disable status.   \nenable:Enable status.\
                        \   \ndisable:Disable status."
                      enum:
                      - enable
                      - disable
                      type: string
                    where:
                      description: "Component of the email to be scanned.   \nsubject:Banned\
                        \ word in email subject.   \nbody:Banned word in email body.\
                        \   \nall:Banned word in both subject and body."
                      enum:
                      - subject
                      - body
                      - all
                      type: string
                  type: object
                maxItems: null
                type: array
              id:
                description: ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              name:
                description: Name of table.
                maxLength: 63
                type: string
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select a specific entry from a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/bword
    put:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Optional comments.
              maxLength: 255
              type: string
            entries:
              description: Spam filter banned word.
              items:
                properties:
                  action:
                    description: "Mark spam or good.   \nspam:Mark as spam email.\
                      \   \nclear:Mark as good email."
                    enum:
                    - spam
                    - clear
                    type: string
                  id:
                    description: Banned word entry ID.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  language:
                    description: "Language for the banned word.   \nwestern:Western.\
                      \   \nsimch:Simplified Chinese.   \ntrach:Traditional Chinese.\
                      \   \njapanese:Japanese.   \nkorean:Korean.   \nfrench:French.\
                      \   \nthai:Thai.   \nspanish:Spanish."
                    enum:
                    - western
                    - simch
                    - trach
                    - japanese
                    - korean
                    - french
                    - thai
                    - spanish
                    type: string
                  pattern:
                    description: Pattern for the banned word.
                    maxLength: 127
                    type: string
                  pattern-type:
                    description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                      \ pattern.   \nregexp:Perl regular expression."
                    enum:
                    - wildcard
                    - regexp
                    type: string
                  score:
                    description: Score value.
                    maximum: 99999
                    minimum: 1
                    type: integer
                  status:
                    description: "Enable/disable status.   \nenable:Enable status.\
                      \   \ndisable:Disable status."
                    enum:
                    - enable
                    - disable
                    type: string
                  where:
                    description: "Component of the email to be scanned.   \nsubject:Banned\
                      \ word in email subject.   \nbody:Banned word in email body.\
                      \   \nall:Banned word in both subject and body."
                    enum:
                    - subject
                    - body
                    - all
                    type: string
                type: object
              maxItems: null
              type: array
            id:
              description: ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            name:
              description: Name of table.
              maxLength: 63
              type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_move_: Move this\
          \ specific resource.\nWhen *action=move* is set, one of the extra parameters\
          \ (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is\
          \ provided when not supported, the action will be ignored and an \u201C\
          invalid request\u201D error will be returned.\n"
        enum:
        - move
        in: query
        name: action
        required: false
        type: string
      - description: 'If *action=move*, use *before* to specify the ID of the resource
          that this resource will be moved before.

          For example, to move `object 1` to before `object 2`, use:

          __action=move&before=2__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: before
        required: false
        type: string
      - description: 'If *action=move*, use *after* to specify the ID of the resource
          that this resource will be moved after.

          For example, to move `object 1` to after `object 3`, use:

          __action=move&after=3__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: after
        required: false
        type: string
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Update this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/bword
  /emailfilter/dnsbl:
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Starting entry index.
        in: query
        name: start
        required: false
        type: integer
      - description: Maximum number of entries to return.
        in: query
        name: count
        required: false
        type: integer
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to include a checksum of each object's contents.
        in: query
        name: with_contents_hash
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - collectionFormat: multi
        description: "Filtering multiple key/value pairs\nOperator     |   Description\n\
          ==     |   Case insensitive match with pattern.\n!=     |    Does not match\
          \ with pattern (case insensitive).\n=@     |    Pattern found in object\
          \ value (case insensitive).\n!@     |    \uFEFFPattern not\uFEFF found in\
          \ object value (case insensitive).\n<=     |    Value must be less than\
          \ or equal to \uFEFFpattern\uFEFF.\n<     |    Value must be less than pattern\uFEFF\
          .\n.>=    |    Value must be greater than or equal to \uFEFFpattern\uFEFF\
          .\n.>     |    Value must be greater than \uFEFFpattern\uFEFF.\nLogical\
          \ OR    |    Separate filters using commas ','\nLogical AND    |    Filter\
          \ strings can be combined to create logical AND queries by including multiple\
          \ filters in the request.\nCombining AND and OR    |    You can combine\
          \ AND and OR filters together to create more complex filters.\n"
        in: query
        items:
          type: string
        name: filter
        required: false
        type: array
      - description: If present, objects will be filtered on property with this name.
        in: query
        name: key
        required: false
        type: string
      - description: If present, objects will be filtered on property with this value.
        in: query
        name: pattern
        required: false
        type: string
      - description: Scope [global|vdom|both*]
        in: query
        name: scope
        required: false
        type: string
      - description: Exclude properties/objects with default value
        in: query
        name: exclude-default-values
        required: false
        type: boolean
      - description: 'default: Return the CLI default values for entire CLI tree.

          meta: Return meta data for a specific object, table, or the entire CLI tree.

          schema: Return schema for entire CLI tree.

          '
        enum:
        - default
        - schema
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Optional comments.
                maxLength: 255
                type: string
              entries:
                description: Spam filter DNSBL and ORBL server.
                items:
                  properties:
                    action:
                      description: "Reject connection or mark as spam email.   \n\
                        reject:Reject the connection.   \nspam:Mark as spam email."
                      enum:
                      - reject
                      - spam
                      type: string
                    id:
                      description: DNSBL/ORBL entry ID.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    server:
                      description: DNSBL or ORBL server name.
                      maxLength: 127
                      type: string
                    status:
                      description: "Enable/disable status.   \nenable:Enable status.\
                        \   \ndisable:Disable status."
                      enum:
                      - enable
                      - disable
                      type: string
                  type: object
                maxItems: null
                type: array
              id:
                description: ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              name:
                description: Name of table.
                maxLength: 63
                type: string
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select all entries in a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/dnsbl
    post:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Optional comments.
              maxLength: 255
              type: string
            entries:
              description: Spam filter DNSBL and ORBL server.
              items:
                properties:
                  action:
                    description: "Reject connection or mark as spam email.   \nreject:Reject\
                      \ the connection.   \nspam:Mark as spam email."
                    enum:
                    - reject
                    - spam
                    type: string
                  id:
                    description: DNSBL/ORBL entry ID.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  server:
                    description: DNSBL or ORBL server name.
                    maxLength: 127
                    type: string
                  status:
                    description: "Enable/disable status.   \nenable:Enable status.\
                      \   \ndisable:Disable status."
                    enum:
                    - enable
                    - disable
                    type: string
                type: object
              maxItems: null
              type: array
            id:
              description: ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            name:
              description: Name of table.
              maxLength: 63
              type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_clone_: Clone this\
          \ specific resource.\nWhen *action=clone* is set, the extra parameters *nkey*\
          \ must be provided.\n__*Note:*__ If this parameter is provided when not\
          \ supported, the action will be ignored and an \u201Cinvalid request\u201D\
          \ error will be returned.\n"
        enum:
        - clone
        in: query
        name: action
        required: false
        type: string
      - description: ' If *action=clone*, use *nkey* to specify the ID for the new
          resource to be created.

          For example, to clone `address1` to `address1_clone`, use:

          __action=clone&nkey=address1_clone__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *clone*.

          '
        in: query
        name: nkey
        required: false
        type: string
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Create object(s) in this table.\n Access Group: utmgrp"
      tags:
      - emailfilter/dnsbl
  /emailfilter/dnsbl/{id}:
    delete:
      parameters:
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Delete this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/dnsbl
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - description: 'default: Return the CLI default values for this object type.

          schema: Return the CLI schema for this object type.

          revision: Return the CMDB revision for this object type.

          transaction-list: List all configuration transaction(s).

          '
        enum:
        - default
        - schema
        - revision
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Optional comments.
                maxLength: 255
                type: string
              entries:
                description: Spam filter DNSBL and ORBL server.
                items:
                  properties:
                    action:
                      description: "Reject connection or mark as spam email.   \n\
                        reject:Reject the connection.   \nspam:Mark as spam email."
                      enum:
                      - reject
                      - spam
                      type: string
                    id:
                      description: DNSBL/ORBL entry ID.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    server:
                      description: DNSBL or ORBL server name.
                      maxLength: 127
                      type: string
                    status:
                      description: "Enable/disable status.   \nenable:Enable status.\
                        \   \ndisable:Disable status."
                      enum:
                      - enable
                      - disable
                      type: string
                  type: object
                maxItems: null
                type: array
              id:
                description: ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              name:
                description: Name of table.
                maxLength: 63
                type: string
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select a specific entry from a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/dnsbl
    put:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Optional comments.
              maxLength: 255
              type: string
            entries:
              description: Spam filter DNSBL and ORBL server.
              items:
                properties:
                  action:
                    description: "Reject connection or mark as spam email.   \nreject:Reject\
                      \ the connection.   \nspam:Mark as spam email."
                    enum:
                    - reject
                    - spam
                    type: string
                  id:
                    description: DNSBL/ORBL entry ID.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  server:
                    description: DNSBL or ORBL server name.
                    maxLength: 127
                    type: string
                  status:
                    description: "Enable/disable status.   \nenable:Enable status.\
                      \   \ndisable:Disable status."
                    enum:
                    - enable
                    - disable
                    type: string
                type: object
              maxItems: null
              type: array
            id:
              description: ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            name:
              description: Name of table.
              maxLength: 63
              type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_move_: Move this\
          \ specific resource.\nWhen *action=move* is set, one of the extra parameters\
          \ (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is\
          \ provided when not supported, the action will be ignored and an \u201C\
          invalid request\u201D error will be returned.\n"
        enum:
        - move
        in: query
        name: action
        required: false
        type: string
      - description: 'If *action=move*, use *before* to specify the ID of the resource
          that this resource will be moved before.

          For example, to move `object 1` to before `object 2`, use:

          __action=move&before=2__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: before
        required: false
        type: string
      - description: 'If *action=move*, use *after* to specify the ID of the resource
          that this resource will be moved after.

          For example, to move `object 1` to after `object 3`, use:

          __action=move&after=3__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: after
        required: false
        type: string
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Update this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/dnsbl
  /emailfilter/fortishield:
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Starting entry index.
        in: query
        name: start
        required: false
        type: integer
      - description: Maximum number of entries to return.
        in: query
        name: count
        required: false
        type: integer
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to include a checksum of each object's contents.
        in: query
        name: with_contents_hash
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - collectionFormat: multi
        description: "Filtering multiple key/value pairs\nOperator     |   Description\n\
          ==     |   Case insensitive match with pattern.\n!=     |    Does not match\
          \ with pattern (case insensitive).\n=@     |    Pattern found in object\
          \ value (case insensitive).\n!@     |    \uFEFFPattern not\uFEFF found in\
          \ object value (case insensitive).\n<=     |    Value must be less than\
          \ or equal to \uFEFFpattern\uFEFF.\n<     |    Value must be less than pattern\uFEFF\
          .\n.>=    |    Value must be greater than or equal to \uFEFFpattern\uFEFF\
          .\n.>     |    Value must be greater than \uFEFFpattern\uFEFF.\nLogical\
          \ OR    |    Separate filters using commas ','\nLogical AND    |    Filter\
          \ strings can be combined to create logical AND queries by including multiple\
          \ filters in the request.\nCombining AND and OR    |    You can combine\
          \ AND and OR filters together to create more complex filters.\n"
        in: query
        items:
          type: string
        name: filter
        required: false
        type: array
      - description: If present, objects will be filtered on property with this name.
        in: query
        name: key
        required: false
        type: string
      - description: If present, objects will be filtered on property with this value.
        in: query
        name: pattern
        required: false
        type: string
      - description: Scope [global|vdom|both*]
        in: query
        name: scope
        required: false
        type: string
      - description: Exclude properties/objects with default value
        in: query
        name: exclude-default-values
        required: false
        type: boolean
      - description: 'default: Return the CLI default values for entire CLI tree.

          meta: Return meta data for a specific object, table, or the entire CLI tree.

          schema: Return schema for entire CLI tree.

          '
        enum:
        - default
        - schema
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              spam-submit-force:
                description: "Enable/disable force insertion of a new mime entity\
                  \ for the submission text.   \nenable:Enable setting.   \ndisable:Disable\
                  \ setting."
                enum:
                - enable
                - disable
                type: string
              spam-submit-srv:
                description: Hostname of the spam submission server.
                maxLength: 63
                type: string
              spam-submit-txt2htm:
                description: "Enable/disable conversion of text email to HTML email.\
                  \   \nenable:Enable setting.   \ndisable:Disable setting."
                enum:
                - enable
                - disable
                type: string
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select all entries in a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/fortishield
    put:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            spam-submit-force:
              description: "Enable/disable force insertion of a new mime entity for\
                \ the submission text.   \nenable:Enable setting.   \ndisable:Disable\
                \ setting."
              enum:
              - enable
              - disable
              type: string
            spam-submit-srv:
              description: Hostname of the spam submission server.
              maxLength: 63
              type: string
            spam-submit-txt2htm:
              description: "Enable/disable conversion of text email to HTML email.\
                \   \nenable:Enable setting.   \ndisable:Disable setting."
              enum:
              - enable
              - disable
              type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_move_: Move this\
          \ specific resource.\nWhen *action=move* is set, one of the extra parameters\
          \ (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is\
          \ provided when not supported, the action will be ignored and an \u201C\
          invalid request\u201D error will be returned.\n"
        enum:
        - move
        in: query
        name: action
        required: false
        type: string
      - description: 'If *action=move*, use *before* to specify the ID of the resource
          that this resource will be moved before.

          For example, to move `object 1` to before `object 2`, use:

          __action=move&before=2__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: before
        required: false
        type: string
      - description: 'If *action=move*, use *after* to specify the ID of the resource
          that this resource will be moved after.

          For example, to move `object 1` to after `object 3`, use:

          __action=move&after=3__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: after
        required: false
        type: string
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Update this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/fortishield
  /emailfilter/iptrust:
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Starting entry index.
        in: query
        name: start
        required: false
        type: integer
      - description: Maximum number of entries to return.
        in: query
        name: count
        required: false
        type: integer
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to include a checksum of each object's contents.
        in: query
        name: with_contents_hash
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - collectionFormat: multi
        description: "Filtering multiple key/value pairs\nOperator     |   Description\n\
          ==     |   Case insensitive match with pattern.\n!=     |    Does not match\
          \ with pattern (case insensitive).\n=@     |    Pattern found in object\
          \ value (case insensitive).\n!@     |    \uFEFFPattern not\uFEFF found in\
          \ object value (case insensitive).\n<=     |    Value must be less than\
          \ or equal to \uFEFFpattern\uFEFF.\n<     |    Value must be less than pattern\uFEFF\
          .\n.>=    |    Value must be greater than or equal to \uFEFFpattern\uFEFF\
          .\n.>     |    Value must be greater than \uFEFFpattern\uFEFF.\nLogical\
          \ OR    |    Separate filters using commas ','\nLogical AND    |    Filter\
          \ strings can be combined to create logical AND queries by including multiple\
          \ filters in the request.\nCombining AND and OR    |    You can combine\
          \ AND and OR filters together to create more complex filters.\n"
        in: query
        items:
          type: string
        name: filter
        required: false
        type: array
      - description: If present, objects will be filtered on property with this name.
        in: query
        name: key
        required: false
        type: string
      - description: If present, objects will be filtered on property with this value.
        in: query
        name: pattern
        required: false
        type: string
      - description: Scope [global|vdom|both*]
        in: query
        name: scope
        required: false
        type: string
      - description: Exclude properties/objects with default value
        in: query
        name: exclude-default-values
        required: false
        type: boolean
      - description: 'default: Return the CLI default values for entire CLI tree.

          meta: Return meta data for a specific object, table, or the entire CLI tree.

          schema: Return schema for entire CLI tree.

          '
        enum:
        - default
        - schema
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Optional comments.
                maxLength: 255
                type: string
              entries:
                description: Spam filter trusted IP addresses.
                items:
                  properties:
                    addr-type:
                      description: "Type of address.   \nipv4:IPv4 Address type. \
                        \  \nipv6:IPv6 Address type."
                      enum:
                      - ipv4
                      - ipv6
                      type: string
                    id:
                      description: Trusted IP entry ID.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    ip4-subnet:
                      description: IPv4 network address or network address/subnet
                        mask bits.
                      format: ipv4
                      type: string
                    ip6-subnet:
                      description: IPv6 network address/subnet mask bits.
                      type: string
                    status:
                      description: "Enable/disable status.   \nenable:Enable status.\
                        \   \ndisable:Disable status."
                      enum:
                      - enable
                      - disable
                      type: string
                  type: object
                maxItems: null
                type: array
              id:
                description: ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              name:
                description: Name of table.
                maxLength: 63
                type: string
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select all entries in a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/iptrust
    post:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Optional comments.
              maxLength: 255
              type: string
            entries:
              description: Spam filter trusted IP addresses.
              items:
                properties:
                  addr-type:
                    description: "Type of address.   \nipv4:IPv4 Address type.   \n\
                      ipv6:IPv6 Address type."
                    enum:
                    - ipv4
                    - ipv6
                    type: string
                  id:
                    description: Trusted IP entry ID.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  ip4-subnet:
                    description: IPv4 network address or network address/subnet mask
                      bits.
                    format: ipv4
                    type: string
                  ip6-subnet:
                    description: IPv6 network address/subnet mask bits.
                    type: string
                  status:
                    description: "Enable/disable status.   \nenable:Enable status.\
                      \   \ndisable:Disable status."
                    enum:
                    - enable
                    - disable
                    type: string
                type: object
              maxItems: null
              type: array
            id:
              description: ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            name:
              description: Name of table.
              maxLength: 63
              type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_clone_: Clone this\
          \ specific resource.\nWhen *action=clone* is set, the extra parameters *nkey*\
          \ must be provided.\n__*Note:*__ If this parameter is provided when not\
          \ supported, the action will be ignored and an \u201Cinvalid request\u201D\
          \ error will be returned.\n"
        enum:
        - clone
        in: query
        name: action
        required: false
        type: string
      - description: ' If *action=clone*, use *nkey* to specify the ID for the new
          resource to be created.

          For example, to clone `address1` to `address1_clone`, use:

          __action=clone&nkey=address1_clone__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *clone*.

          '
        in: query
        name: nkey
        required: false
        type: string
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Create object(s) in this table.\n Access Group: utmgrp"
      tags:
      - emailfilter/iptrust
  /emailfilter/iptrust/{id}:
    delete:
      parameters:
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Delete this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/iptrust
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - description: 'default: Return the CLI default values for this object type.

          schema: Return the CLI schema for this object type.

          revision: Return the CMDB revision for this object type.

          transaction-list: List all configuration transaction(s).

          '
        enum:
        - default
        - schema
        - revision
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Optional comments.
                maxLength: 255
                type: string
              entries:
                description: Spam filter trusted IP addresses.
                items:
                  properties:
                    addr-type:
                      description: "Type of address.   \nipv4:IPv4 Address type. \
                        \  \nipv6:IPv6 Address type."
                      enum:
                      - ipv4
                      - ipv6
                      type: string
                    id:
                      description: Trusted IP entry ID.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    ip4-subnet:
                      description: IPv4 network address or network address/subnet
                        mask bits.
                      format: ipv4
                      type: string
                    ip6-subnet:
                      description: IPv6 network address/subnet mask bits.
                      type: string
                    status:
                      description: "Enable/disable status.   \nenable:Enable status.\
                        \   \ndisable:Disable status."
                      enum:
                      - enable
                      - disable
                      type: string
                  type: object
                maxItems: null
                type: array
              id:
                description: ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              name:
                description: Name of table.
                maxLength: 63
                type: string
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select a specific entry from a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/iptrust
    put:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Optional comments.
              maxLength: 255
              type: string
            entries:
              description: Spam filter trusted IP addresses.
              items:
                properties:
                  addr-type:
                    description: "Type of address.   \nipv4:IPv4 Address type.   \n\
                      ipv6:IPv6 Address type."
                    enum:
                    - ipv4
                    - ipv6
                    type: string
                  id:
                    description: Trusted IP entry ID.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  ip4-subnet:
                    description: IPv4 network address or network address/subnet mask
                      bits.
                    format: ipv4
                    type: string
                  ip6-subnet:
                    description: IPv6 network address/subnet mask bits.
                    type: string
                  status:
                    description: "Enable/disable status.   \nenable:Enable status.\
                      \   \ndisable:Disable status."
                    enum:
                    - enable
                    - disable
                    type: string
                type: object
              maxItems: null
              type: array
            id:
              description: ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            name:
              description: Name of table.
              maxLength: 63
              type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_move_: Move this\
          \ specific resource.\nWhen *action=move* is set, one of the extra parameters\
          \ (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is\
          \ provided when not supported, the action will be ignored and an \u201C\
          invalid request\u201D error will be returned.\n"
        enum:
        - move
        in: query
        name: action
        required: false
        type: string
      - description: 'If *action=move*, use *before* to specify the ID of the resource
          that this resource will be moved before.

          For example, to move `object 1` to before `object 2`, use:

          __action=move&before=2__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: before
        required: false
        type: string
      - description: 'If *action=move*, use *after* to specify the ID of the resource
          that this resource will be moved after.

          For example, to move `object 1` to after `object 3`, use:

          __action=move&after=3__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: after
        required: false
        type: string
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Update this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/iptrust
  /emailfilter/mheader:
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Starting entry index.
        in: query
        name: start
        required: false
        type: integer
      - description: Maximum number of entries to return.
        in: query
        name: count
        required: false
        type: integer
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to include a checksum of each object's contents.
        in: query
        name: with_contents_hash
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - collectionFormat: multi
        description: "Filtering multiple key/value pairs\nOperator     |   Description\n\
          ==     |   Case insensitive match with pattern.\n!=     |    Does not match\
          \ with pattern (case insensitive).\n=@     |    Pattern found in object\
          \ value (case insensitive).\n!@     |    \uFEFFPattern not\uFEFF found in\
          \ object value (case insensitive).\n<=     |    Value must be less than\
          \ or equal to \uFEFFpattern\uFEFF.\n<     |    Value must be less than pattern\uFEFF\
          .\n.>=    |    Value must be greater than or equal to \uFEFFpattern\uFEFF\
          .\n.>     |    Value must be greater than \uFEFFpattern\uFEFF.\nLogical\
          \ OR    |    Separate filters using commas ','\nLogical AND    |    Filter\
          \ strings can be combined to create logical AND queries by including multiple\
          \ filters in the request.\nCombining AND and OR    |    You can combine\
          \ AND and OR filters together to create more complex filters.\n"
        in: query
        items:
          type: string
        name: filter
        required: false
        type: array
      - description: If present, objects will be filtered on property with this name.
        in: query
        name: key
        required: false
        type: string
      - description: If present, objects will be filtered on property with this value.
        in: query
        name: pattern
        required: false
        type: string
      - description: Scope [global|vdom|both*]
        in: query
        name: scope
        required: false
        type: string
      - description: Exclude properties/objects with default value
        in: query
        name: exclude-default-values
        required: false
        type: boolean
      - description: 'default: Return the CLI default values for entire CLI tree.

          meta: Return meta data for a specific object, table, or the entire CLI tree.

          schema: Return schema for entire CLI tree.

          '
        enum:
        - default
        - schema
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Optional comments.
                maxLength: 255
                type: string
              entries:
                description: Spam filter mime header content.
                items:
                  properties:
                    action:
                      description: "Mark spam or good.   \nspam:Mark as spam email.\
                        \   \nclear:Mark as good email."
                      enum:
                      - spam
                      - clear
                      type: string
                    fieldbody:
                      description: Pattern for the header field body.
                      maxLength: 127
                      type: string
                    fieldname:
                      description: Pattern for header field name.
                      maxLength: 63
                      type: string
                    id:
                      description: Mime header entry ID.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    pattern-type:
                      description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                        \ pattern.   \nregexp:Perl regular expression."
                      enum:
                      - wildcard
                      - regexp
                      type: string
                    status:
                      description: "Enable/disable status.   \nenable:Enable status.\
                        \   \ndisable:Disable status."
                      enum:
                      - enable
                      - disable
                      type: string
                  type: object
                maxItems: null
                type: array
              id:
                description: ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              name:
                description: Name of table.
                maxLength: 63
                type: string
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select all entries in a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/mheader
    post:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Optional comments.
              maxLength: 255
              type: string
            entries:
              description: Spam filter mime header content.
              items:
                properties:
                  action:
                    description: "Mark spam or good.   \nspam:Mark as spam email.\
                      \   \nclear:Mark as good email."
                    enum:
                    - spam
                    - clear
                    type: string
                  fieldbody:
                    description: Pattern for the header field body.
                    maxLength: 127
                    type: string
                  fieldname:
                    description: Pattern for header field name.
                    maxLength: 63
                    type: string
                  id:
                    description: Mime header entry ID.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  pattern-type:
                    description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                      \ pattern.   \nregexp:Perl regular expression."
                    enum:
                    - wildcard
                    - regexp
                    type: string
                  status:
                    description: "Enable/disable status.   \nenable:Enable status.\
                      \   \ndisable:Disable status."
                    enum:
                    - enable
                    - disable
                    type: string
                type: object
              maxItems: null
              type: array
            id:
              description: ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            name:
              description: Name of table.
              maxLength: 63
              type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_clone_: Clone this\
          \ specific resource.\nWhen *action=clone* is set, the extra parameters *nkey*\
          \ must be provided.\n__*Note:*__ If this parameter is provided when not\
          \ supported, the action will be ignored and an \u201Cinvalid request\u201D\
          \ error will be returned.\n"
        enum:
        - clone
        in: query
        name: action
        required: false
        type: string
      - description: ' If *action=clone*, use *nkey* to specify the ID for the new
          resource to be created.

          For example, to clone `address1` to `address1_clone`, use:

          __action=clone&nkey=address1_clone__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *clone*.

          '
        in: query
        name: nkey
        required: false
        type: string
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Create object(s) in this table.\n Access Group: utmgrp"
      tags:
      - emailfilter/mheader
  /emailfilter/mheader/{id}:
    delete:
      parameters:
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Delete this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/mheader
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - description: 'default: Return the CLI default values for this object type.

          schema: Return the CLI schema for this object type.

          revision: Return the CMDB revision for this object type.

          transaction-list: List all configuration transaction(s).

          '
        enum:
        - default
        - schema
        - revision
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Optional comments.
                maxLength: 255
                type: string
              entries:
                description: Spam filter mime header content.
                items:
                  properties:
                    action:
                      description: "Mark spam or good.   \nspam:Mark as spam email.\
                        \   \nclear:Mark as good email."
                      enum:
                      - spam
                      - clear
                      type: string
                    fieldbody:
                      description: Pattern for the header field body.
                      maxLength: 127
                      type: string
                    fieldname:
                      description: Pattern for header field name.
                      maxLength: 63
                      type: string
                    id:
                      description: Mime header entry ID.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    pattern-type:
                      description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                        \ pattern.   \nregexp:Perl regular expression."
                      enum:
                      - wildcard
                      - regexp
                      type: string
                    status:
                      description: "Enable/disable status.   \nenable:Enable status.\
                        \   \ndisable:Disable status."
                      enum:
                      - enable
                      - disable
                      type: string
                  type: object
                maxItems: null
                type: array
              id:
                description: ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              name:
                description: Name of table.
                maxLength: 63
                type: string
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select a specific entry from a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/mheader
    put:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Optional comments.
              maxLength: 255
              type: string
            entries:
              description: Spam filter mime header content.
              items:
                properties:
                  action:
                    description: "Mark spam or good.   \nspam:Mark as spam email.\
                      \   \nclear:Mark as good email."
                    enum:
                    - spam
                    - clear
                    type: string
                  fieldbody:
                    description: Pattern for the header field body.
                    maxLength: 127
                    type: string
                  fieldname:
                    description: Pattern for header field name.
                    maxLength: 63
                    type: string
                  id:
                    description: Mime header entry ID.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  pattern-type:
                    description: "Wildcard pattern or regular expression.   \nwildcard:Wildcard\
                      \ pattern.   \nregexp:Perl regular expression."
                    enum:
                    - wildcard
                    - regexp
                    type: string
                  status:
                    description: "Enable/disable status.   \nenable:Enable status.\
                      \   \ndisable:Disable status."
                    enum:
                    - enable
                    - disable
                    type: string
                type: object
              maxItems: null
              type: array
            id:
              description: ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            name:
              description: Name of table.
              maxLength: 63
              type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_move_: Move this\
          \ specific resource.\nWhen *action=move* is set, one of the extra parameters\
          \ (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is\
          \ provided when not supported, the action will be ignored and an \u201C\
          invalid request\u201D error will be returned.\n"
        enum:
        - move
        in: query
        name: action
        required: false
        type: string
      - description: 'If *action=move*, use *before* to specify the ID of the resource
          that this resource will be moved before.

          For example, to move `object 1` to before `object 2`, use:

          __action=move&before=2__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: before
        required: false
        type: string
      - description: 'If *action=move*, use *after* to specify the ID of the resource
          that this resource will be moved after.

          For example, to move `object 1` to after `object 3`, use:

          __action=move&after=3__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: after
        required: false
        type: string
      - description: mkey
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Update this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/mheader
  /emailfilter/options:
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Starting entry index.
        in: query
        name: start
        required: false
        type: integer
      - description: Maximum number of entries to return.
        in: query
        name: count
        required: false
        type: integer
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to include a checksum of each object's contents.
        in: query
        name: with_contents_hash
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - collectionFormat: multi
        description: "Filtering multiple key/value pairs\nOperator     |   Description\n\
          ==     |   Case insensitive match with pattern.\n!=     |    Does not match\
          \ with pattern (case insensitive).\n=@     |    Pattern found in object\
          \ value (case insensitive).\n!@     |    \uFEFFPattern not\uFEFF found in\
          \ object value (case insensitive).\n<=     |    Value must be less than\
          \ or equal to \uFEFFpattern\uFEFF.\n<     |    Value must be less than pattern\uFEFF\
          .\n.>=    |    Value must be greater than or equal to \uFEFFpattern\uFEFF\
          .\n.>     |    Value must be greater than \uFEFFpattern\uFEFF.\nLogical\
          \ OR    |    Separate filters using commas ','\nLogical AND    |    Filter\
          \ strings can be combined to create logical AND queries by including multiple\
          \ filters in the request.\nCombining AND and OR    |    You can combine\
          \ AND and OR filters together to create more complex filters.\n"
        in: query
        items:
          type: string
        name: filter
        required: false
        type: array
      - description: If present, objects will be filtered on property with this name.
        in: query
        name: key
        required: false
        type: string
      - description: If present, objects will be filtered on property with this value.
        in: query
        name: pattern
        required: false
        type: string
      - description: Scope [global|vdom|both*]
        in: query
        name: scope
        required: false
        type: string
      - description: Exclude properties/objects with default value
        in: query
        name: exclude-default-values
        required: false
        type: boolean
      - description: 'default: Return the CLI default values for entire CLI tree.

          meta: Return meta data for a specific object, table, or the entire CLI tree.

          schema: Return schema for entire CLI tree.

          '
        enum:
        - default
        - schema
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              dns-timeout:
                description: DNS query time out (1 - 30 sec).
                maximum: 30
                minimum: 1
                type: integer
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select all entries in a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/options
    put:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            dns-timeout:
              description: DNS query time out (1 - 30 sec).
              maximum: 30
              minimum: 1
              type: integer
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_move_: Move this\
          \ specific resource.\nWhen *action=move* is set, one of the extra parameters\
          \ (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is\
          \ provided when not supported, the action will be ignored and an \u201C\
          invalid request\u201D error will be returned.\n"
        enum:
        - move
        in: query
        name: action
        required: false
        type: string
      - description: 'If *action=move*, use *before* to specify the ID of the resource
          that this resource will be moved before.

          For example, to move `object 1` to before `object 2`, use:

          __action=move&before=2__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: before
        required: false
        type: string
      - description: 'If *action=move*, use *after* to specify the ID of the resource
          that this resource will be moved after.

          For example, to move `object 1` to after `object 3`, use:

          __action=move&after=3__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: after
        required: false
        type: string
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Update this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/options
  /emailfilter/profile:
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Starting entry index.
        in: query
        name: start
        required: false
        type: integer
      - description: Maximum number of entries to return.
        in: query
        name: count
        required: false
        type: integer
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to include a checksum of each object's contents.
        in: query
        name: with_contents_hash
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - collectionFormat: multi
        description: "Filtering multiple key/value pairs\nOperator     |   Description\n\
          ==     |   Case insensitive match with pattern.\n!=     |    Does not match\
          \ with pattern (case insensitive).\n=@     |    Pattern found in object\
          \ value (case insensitive).\n!@     |    \uFEFFPattern not\uFEFF found in\
          \ object value (case insensitive).\n<=     |    Value must be less than\
          \ or equal to \uFEFFpattern\uFEFF.\n<     |    Value must be less than pattern\uFEFF\
          .\n.>=    |    Value must be greater than or equal to \uFEFFpattern\uFEFF\
          .\n.>     |    Value must be greater than \uFEFFpattern\uFEFF.\nLogical\
          \ OR    |    Separate filters using commas ','\nLogical AND    |    Filter\
          \ strings can be combined to create logical AND queries by including multiple\
          \ filters in the request.\nCombining AND and OR    |    You can combine\
          \ AND and OR filters together to create more complex filters.\n"
        in: query
        items:
          type: string
        name: filter
        required: false
        type: array
      - description: If present, objects will be filtered on property with this name.
        in: query
        name: key
        required: false
        type: string
      - description: If present, objects will be filtered on property with this value.
        in: query
        name: pattern
        required: false
        type: string
      - description: Scope [global|vdom|both*]
        in: query
        name: scope
        required: false
        type: string
      - description: Exclude properties/objects with default value
        in: query
        name: exclude-default-values
        required: false
        type: boolean
      - description: 'default: Return the CLI default values for entire CLI tree.

          meta: Return meta data for a specific object, table, or the entire CLI tree.

          schema: Return schema for entire CLI tree.

          '
        enum:
        - default
        - schema
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Comment.
                maxLength: 255
                type: string
              external:
                description: "Enable/disable external Email inspection.   \nenable:Enable\
                  \ setting.   \ndisable:Disable setting."
                enum:
                - enable
                - disable
                type: string
              feature-set:
                description: "Flow/proxy feature set.   \nflow:Flow feature set. \
                  \  \nproxy:Proxy feature set."
                enum:
                - flow
                - proxy
                type: string
              gmail:
                description: Gmail.
                items:
                  properties:
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                  type: object
                maxItems: null
                type: array
              imap:
                description: IMAP.
                items:
                  properties:
                    action:
                      description: "Action for spam email.   \npass:Allow spam email\
                        \ to pass through.   \ntag:Tag spam email with configured\
                        \ text in subject or header."
                      enum:
                      - pass
                      - tag
                      type: string
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                    tag-msg:
                      description: Subject text or header added to spam email.
                      maxLength: 63
                      type: string
                    tag-type:
                      description: "Tag subject or header for spam email.   \nsubject:Prepend\
                        \ text to spam email subject.   \nheader:Append a user defined\
                        \ mime header to spam email.   \nspaminfo:Append spam info\
                        \ to spam email header."
                      enum:
                      - subject
                      - header
                      - spaminfo
                      type: string
                  type: object
                maxItems: null
                type: array
              mapi:
                description: MAPI.
                items:
                  properties:
                    action:
                      description: "Action for spam email.   \npass:Allow spam email\
                        \ to pass through.   \ndiscard:Discard (block) spam email."
                      enum:
                      - pass
                      - discard
                      type: string
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                  type: object
                maxItems: null
                type: array
              msn-hotmail:
                description: MSN Hotmail.
                items:
                  properties:
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                  type: object
                maxItems: null
                type: array
              name:
                description: Profile name.
                maxLength: 35
                type: string
              options:
                description: "Options.   \nbannedword:Content block.   \nspambwl:Black/white\
                  \ list.   \nspamfsip:Email IP address FortiGuard AntiSpam black\
                  \ list check.   \nspamfssubmit:Add FortiGuard AntiSpam spam submission\
                  \ text.   \nspamfschksum:Email checksum FortiGuard AntiSpam check.\
                  \   \nspamfsurl:Email content URL FortiGuard AntiSpam check.   \n\
                  spamhelodns:Email helo/ehlo domain DNS check.   \nspamraddrdns:Email\
                  \ return address DNS check.   \nspamrbl:Email DNSBL & ORBL check.\
                  \   \nspamhdrcheck:Email mime header check.   \nspamfsphish:Email\
                  \ content phishing URL FortiGuard AntiSpam check."
                enum:
                - bannedword
                - spambwl
                - spamfsip
                - spamfssubmit
                - spamfschksum
                - spamfsurl
                - spamhelodns
                - spamraddrdns
                - spamrbl
                - spamhdrcheck
                - spamfsphish
                type: string
              other-webmails:
                description: Other supported webmails.
                items:
                  properties:
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                  type: object
                maxItems: null
                type: array
              pop3:
                description: POP3.
                items:
                  properties:
                    action:
                      description: "Action for spam email.   \npass:Allow spam email\
                        \ to pass through.   \ntag:Tag spam email with configured\
                        \ text in subject or header."
                      enum:
                      - pass
                      - tag
                      type: string
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                    tag-msg:
                      description: Subject text or header added to spam email.
                      maxLength: 63
                      type: string
                    tag-type:
                      description: "Tag subject or header for spam email.   \nsubject:Prepend\
                        \ text to spam email subject.   \nheader:Append a user defined\
                        \ mime header to spam email.   \nspaminfo:Append spam info\
                        \ to spam email header."
                      enum:
                      - subject
                      - header
                      - spaminfo
                      type: string
                  type: object
                maxItems: null
                type: array
              replacemsg-group:
                description: Replacement message group.
                maxLength: 35
                type: string
              smtp:
                description: SMTP.
                items:
                  properties:
                    action:
                      description: "Action for spam email.   \npass:Allow spam email\
                        \ to pass through.   \ntag:Tag spam email with configured\
                        \ text in subject or header.   \ndiscard:Discard (block) spam\
                        \ email."
                      enum:
                      - pass
                      - tag
                      - discard
                      type: string
                    hdrip:
                      description: "Enable/disable SMTP email header IP checks for\
                        \ spamfsip, spamrbl and spambwl filters.   \ndisable:Disable\
                        \ SMTP email header IP checks for spamfsip, spamrbl and spambwl\
                        \ filters.   \nenable:Enable SMTP email header IP checks for\
                        \ spamfsip, spamrbl and spambwl filters."
                      enum:
                      - disable
                      - enable
                      type: string
                    local-override:
                      description: "Enable/disable local filter to override SMTP remote\
                        \ check result.   \ndisable:Disable local filter to override\
                        \ SMTP remote check result.   \nenable:Enable local filter\
                        \ to override SMTP remote check result."
                      enum:
                      - disable
                      - enable
                      type: string
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                    tag-msg:
                      description: Subject text or header added to spam email.
                      maxLength: 63
                      type: string
                    tag-type:
                      description: "Tag subject or header for spam email.   \nsubject:Prepend\
                        \ text to spam email subject.   \nheader:Append a user defined\
                        \ mime header to spam email.   \nspaminfo:Append spam info\
                        \ to spam email header."
                      enum:
                      - subject
                      - header
                      - spaminfo
                      type: string
                  type: object
                maxItems: null
                type: array
              spam-bwl-table:
                description: Anti-spam black/white list table ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              spam-bword-table:
                description: Anti-spam banned word table ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              spam-bword-threshold:
                description: Spam banned word threshold.
                maximum: 2147483647
                minimum: 0
                type: integer
              spam-filtering:
                description: "Enable/disable spam filtering.   \nenable:Enable setting.\
                  \   \ndisable:Disable setting."
                enum:
                - enable
                - disable
                type: string
              spam-iptrust-table:
                description: Anti-spam IP trust table ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              spam-log:
                description: "Enable/disable spam logging for email filtering.   \n\
                  disable:Disable spam logging for email filtering.   \nenable:Enable\
                  \ spam logging for email filtering."
                enum:
                - disable
                - enable
                type: string
              spam-log-fortiguard-response:
                description: "Enable/disable logging FortiGuard spam response.   \n\
                  disable:Disable logging FortiGuard spam response.   \nenable:Enable\
                  \ logging FortiGuard spam response."
                enum:
                - disable
                - enable
                type: string
              spam-mheader-table:
                description: Anti-spam MIME header table ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              spam-rbl-table:
                description: Anti-spam DNSBL table ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              yahoo-mail:
                description: Yahoo! Mail.
                items:
                  properties:
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                  type: object
                maxItems: null
                type: array
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select all entries in a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/profile
    post:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Comment.
              maxLength: 255
              type: string
            external:
              description: "Enable/disable external Email inspection.   \nenable:Enable\
                \ setting.   \ndisable:Disable setting."
              enum:
              - enable
              - disable
              type: string
            feature-set:
              description: "Flow/proxy feature set.   \nflow:Flow feature set.   \n\
                proxy:Proxy feature set."
              enum:
              - flow
              - proxy
              type: string
            gmail:
              description: Gmail.
              items:
                properties:
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                type: object
              maxItems: null
              type: array
            imap:
              description: IMAP.
              items:
                properties:
                  action:
                    description: "Action for spam email.   \npass:Allow spam email\
                      \ to pass through.   \ntag:Tag spam email with configured text\
                      \ in subject or header."
                    enum:
                    - pass
                    - tag
                    type: string
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                  tag-msg:
                    description: Subject text or header added to spam email.
                    maxLength: 63
                    type: string
                  tag-type:
                    description: "Tag subject or header for spam email.   \nsubject:Prepend\
                      \ text to spam email subject.   \nheader:Append a user defined\
                      \ mime header to spam email.   \nspaminfo:Append spam info to\
                      \ spam email header."
                    enum:
                    - subject
                    - header
                    - spaminfo
                    type: string
                type: object
              maxItems: null
              type: array
            mapi:
              description: MAPI.
              items:
                properties:
                  action:
                    description: "Action for spam email.   \npass:Allow spam email\
                      \ to pass through.   \ndiscard:Discard (block) spam email."
                    enum:
                    - pass
                    - discard
                    type: string
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                type: object
              maxItems: null
              type: array
            msn-hotmail:
              description: MSN Hotmail.
              items:
                properties:
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                type: object
              maxItems: null
              type: array
            name:
              description: Profile name.
              maxLength: 35
              type: string
            options:
              description: "Options.   \nbannedword:Content block.   \nspambwl:Black/white\
                \ list.   \nspamfsip:Email IP address FortiGuard AntiSpam black list\
                \ check.   \nspamfssubmit:Add FortiGuard AntiSpam spam submission\
                \ text.   \nspamfschksum:Email checksum FortiGuard AntiSpam check.\
                \   \nspamfsurl:Email content URL FortiGuard AntiSpam check.   \n\
                spamhelodns:Email helo/ehlo domain DNS check.   \nspamraddrdns:Email\
                \ return address DNS check.   \nspamrbl:Email DNSBL & ORBL check.\
                \   \nspamhdrcheck:Email mime header check.   \nspamfsphish:Email\
                \ content phishing URL FortiGuard AntiSpam check."
              enum:
              - bannedword
              - spambwl
              - spamfsip
              - spamfssubmit
              - spamfschksum
              - spamfsurl
              - spamhelodns
              - spamraddrdns
              - spamrbl
              - spamhdrcheck
              - spamfsphish
              type: string
            other-webmails:
              description: Other supported webmails.
              items:
                properties:
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                type: object
              maxItems: null
              type: array
            pop3:
              description: POP3.
              items:
                properties:
                  action:
                    description: "Action for spam email.   \npass:Allow spam email\
                      \ to pass through.   \ntag:Tag spam email with configured text\
                      \ in subject or header."
                    enum:
                    - pass
                    - tag
                    type: string
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                  tag-msg:
                    description: Subject text or header added to spam email.
                    maxLength: 63
                    type: string
                  tag-type:
                    description: "Tag subject or header for spam email.   \nsubject:Prepend\
                      \ text to spam email subject.   \nheader:Append a user defined\
                      \ mime header to spam email.   \nspaminfo:Append spam info to\
                      \ spam email header."
                    enum:
                    - subject
                    - header
                    - spaminfo
                    type: string
                type: object
              maxItems: null
              type: array
            replacemsg-group:
              description: Replacement message group.
              maxLength: 35
              type: string
            smtp:
              description: SMTP.
              items:
                properties:
                  action:
                    description: "Action for spam email.   \npass:Allow spam email\
                      \ to pass through.   \ntag:Tag spam email with configured text\
                      \ in subject or header.   \ndiscard:Discard (block) spam email."
                    enum:
                    - pass
                    - tag
                    - discard
                    type: string
                  hdrip:
                    description: "Enable/disable SMTP email header IP checks for spamfsip,\
                      \ spamrbl and spambwl filters.   \ndisable:Disable SMTP email\
                      \ header IP checks for spamfsip, spamrbl and spambwl filters.\
                      \   \nenable:Enable SMTP email header IP checks for spamfsip,\
                      \ spamrbl and spambwl filters."
                    enum:
                    - disable
                    - enable
                    type: string
                  local-override:
                    description: "Enable/disable local filter to override SMTP remote\
                      \ check result.   \ndisable:Disable local filter to override\
                      \ SMTP remote check result.   \nenable:Enable local filter to\
                      \ override SMTP remote check result."
                    enum:
                    - disable
                    - enable
                    type: string
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                  tag-msg:
                    description: Subject text or header added to spam email.
                    maxLength: 63
                    type: string
                  tag-type:
                    description: "Tag subject or header for spam email.   \nsubject:Prepend\
                      \ text to spam email subject.   \nheader:Append a user defined\
                      \ mime header to spam email.   \nspaminfo:Append spam info to\
                      \ spam email header."
                    enum:
                    - subject
                    - header
                    - spaminfo
                    type: string
                type: object
              maxItems: null
              type: array
            spam-bwl-table:
              description: Anti-spam black/white list table ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            spam-bword-table:
              description: Anti-spam banned word table ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            spam-bword-threshold:
              description: Spam banned word threshold.
              maximum: 2147483647
              minimum: 0
              type: integer
            spam-filtering:
              description: "Enable/disable spam filtering.   \nenable:Enable setting.\
                \   \ndisable:Disable setting."
              enum:
              - enable
              - disable
              type: string
            spam-iptrust-table:
              description: Anti-spam IP trust table ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            spam-log:
              description: "Enable/disable spam logging for email filtering.   \n\
                disable:Disable spam logging for email filtering.   \nenable:Enable\
                \ spam logging for email filtering."
              enum:
              - disable
              - enable
              type: string
            spam-log-fortiguard-response:
              description: "Enable/disable logging FortiGuard spam response.   \n\
                disable:Disable logging FortiGuard spam response.   \nenable:Enable\
                \ logging FortiGuard spam response."
              enum:
              - disable
              - enable
              type: string
            spam-mheader-table:
              description: Anti-spam MIME header table ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            spam-rbl-table:
              description: Anti-spam DNSBL table ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            yahoo-mail:
              description: Yahoo! Mail.
              items:
                properties:
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                type: object
              maxItems: null
              type: array
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_clone_: Clone this\
          \ specific resource.\nWhen *action=clone* is set, the extra parameters *nkey*\
          \ must be provided.\n__*Note:*__ If this parameter is provided when not\
          \ supported, the action will be ignored and an \u201Cinvalid request\u201D\
          \ error will be returned.\n"
        enum:
        - clone
        in: query
        name: action
        required: false
        type: string
      - description: ' If *action=clone*, use *nkey* to specify the ID for the new
          resource to be created.

          For example, to clone `address1` to `address1_clone`, use:

          __action=clone&nkey=address1_clone__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *clone*.

          '
        in: query
        name: nkey
        required: false
        type: string
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Create object(s) in this table.\n Access Group: utmgrp"
      tags:
      - emailfilter/profile
  /emailfilter/profile/{name}:
    delete:
      parameters:
      - description: mkey
        in: path
        name: name
        required: true
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Delete this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/profile
    get:
      parameters:
      - description: Enable to include datasource information for each linked object.
        in: query
        name: datasource
        required: false
        type: boolean
      - description: Enable to include meta information about each object (type id,
          references, etc).
        in: query
        name: with_meta
        required: false
        type: boolean
      - description: Enable to call CLI skip operator to hide skipped properties.
        in: query
        name: skip
        required: false
        type: boolean
      - collectionFormat: pipes
        description: List of property names to include in results, separated by |
          (i.e. policyid|srcintf).
        in: query
        items:
          type: string
        name: format
        required: false
        type: array
      - description: 'default: Return the CLI default values for this object type.

          schema: Return the CLI schema for this object type.

          revision: Return the CMDB revision for this object type.

          transaction-list: List all configuration transaction(s).

          '
        enum:
        - default
        - schema
        - revision
        in: query
        name: action
        required: false
        type: string
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: mkey
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: 'OK: Request returns successful'
          schema:
            properties:
              comment:
                description: Comment.
                maxLength: 255
                type: string
              external:
                description: "Enable/disable external Email inspection.   \nenable:Enable\
                  \ setting.   \ndisable:Disable setting."
                enum:
                - enable
                - disable
                type: string
              feature-set:
                description: "Flow/proxy feature set.   \nflow:Flow feature set. \
                  \  \nproxy:Proxy feature set."
                enum:
                - flow
                - proxy
                type: string
              gmail:
                description: Gmail.
                items:
                  properties:
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                  type: object
                maxItems: null
                type: array
              imap:
                description: IMAP.
                items:
                  properties:
                    action:
                      description: "Action for spam email.   \npass:Allow spam email\
                        \ to pass through.   \ntag:Tag spam email with configured\
                        \ text in subject or header."
                      enum:
                      - pass
                      - tag
                      type: string
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                    tag-msg:
                      description: Subject text or header added to spam email.
                      maxLength: 63
                      type: string
                    tag-type:
                      description: "Tag subject or header for spam email.   \nsubject:Prepend\
                        \ text to spam email subject.   \nheader:Append a user defined\
                        \ mime header to spam email.   \nspaminfo:Append spam info\
                        \ to spam email header."
                      enum:
                      - subject
                      - header
                      - spaminfo
                      type: string
                  type: object
                maxItems: null
                type: array
              mapi:
                description: MAPI.
                items:
                  properties:
                    action:
                      description: "Action for spam email.   \npass:Allow spam email\
                        \ to pass through.   \ndiscard:Discard (block) spam email."
                      enum:
                      - pass
                      - discard
                      type: string
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                  type: object
                maxItems: null
                type: array
              msn-hotmail:
                description: MSN Hotmail.
                items:
                  properties:
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                  type: object
                maxItems: null
                type: array
              name:
                description: Profile name.
                maxLength: 35
                type: string
              options:
                description: "Options.   \nbannedword:Content block.   \nspambwl:Black/white\
                  \ list.   \nspamfsip:Email IP address FortiGuard AntiSpam black\
                  \ list check.   \nspamfssubmit:Add FortiGuard AntiSpam spam submission\
                  \ text.   \nspamfschksum:Email checksum FortiGuard AntiSpam check.\
                  \   \nspamfsurl:Email content URL FortiGuard AntiSpam check.   \n\
                  spamhelodns:Email helo/ehlo domain DNS check.   \nspamraddrdns:Email\
                  \ return address DNS check.   \nspamrbl:Email DNSBL & ORBL check.\
                  \   \nspamhdrcheck:Email mime header check.   \nspamfsphish:Email\
                  \ content phishing URL FortiGuard AntiSpam check."
                enum:
                - bannedword
                - spambwl
                - spamfsip
                - spamfssubmit
                - spamfschksum
                - spamfsurl
                - spamhelodns
                - spamraddrdns
                - spamrbl
                - spamhdrcheck
                - spamfsphish
                type: string
              other-webmails:
                description: Other supported webmails.
                items:
                  properties:
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                  type: object
                maxItems: null
                type: array
              pop3:
                description: POP3.
                items:
                  properties:
                    action:
                      description: "Action for spam email.   \npass:Allow spam email\
                        \ to pass through.   \ntag:Tag spam email with configured\
                        \ text in subject or header."
                      enum:
                      - pass
                      - tag
                      type: string
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                    tag-msg:
                      description: Subject text or header added to spam email.
                      maxLength: 63
                      type: string
                    tag-type:
                      description: "Tag subject or header for spam email.   \nsubject:Prepend\
                        \ text to spam email subject.   \nheader:Append a user defined\
                        \ mime header to spam email.   \nspaminfo:Append spam info\
                        \ to spam email header."
                      enum:
                      - subject
                      - header
                      - spaminfo
                      type: string
                  type: object
                maxItems: null
                type: array
              replacemsg-group:
                description: Replacement message group.
                maxLength: 35
                type: string
              smtp:
                description: SMTP.
                items:
                  properties:
                    action:
                      description: "Action for spam email.   \npass:Allow spam email\
                        \ to pass through.   \ntag:Tag spam email with configured\
                        \ text in subject or header.   \ndiscard:Discard (block) spam\
                        \ email."
                      enum:
                      - pass
                      - tag
                      - discard
                      type: string
                    hdrip:
                      description: "Enable/disable SMTP email header IP checks for\
                        \ spamfsip, spamrbl and spambwl filters.   \ndisable:Disable\
                        \ SMTP email header IP checks for spamfsip, spamrbl and spambwl\
                        \ filters.   \nenable:Enable SMTP email header IP checks for\
                        \ spamfsip, spamrbl and spambwl filters."
                      enum:
                      - disable
                      - enable
                      type: string
                    local-override:
                      description: "Enable/disable local filter to override SMTP remote\
                        \ check result.   \ndisable:Disable local filter to override\
                        \ SMTP remote check result.   \nenable:Enable local filter\
                        \ to override SMTP remote check result."
                      enum:
                      - disable
                      - enable
                      type: string
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                    tag-msg:
                      description: Subject text or header added to spam email.
                      maxLength: 63
                      type: string
                    tag-type:
                      description: "Tag subject or header for spam email.   \nsubject:Prepend\
                        \ text to spam email subject.   \nheader:Append a user defined\
                        \ mime header to spam email.   \nspaminfo:Append spam info\
                        \ to spam email header."
                      enum:
                      - subject
                      - header
                      - spaminfo
                      type: string
                  type: object
                maxItems: null
                type: array
              spam-bwl-table:
                description: Anti-spam black/white list table ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              spam-bword-table:
                description: Anti-spam banned word table ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              spam-bword-threshold:
                description: Spam banned word threshold.
                maximum: 2147483647
                minimum: 0
                type: integer
              spam-filtering:
                description: "Enable/disable spam filtering.   \nenable:Enable setting.\
                  \   \ndisable:Disable setting."
                enum:
                - enable
                - disable
                type: string
              spam-iptrust-table:
                description: Anti-spam IP trust table ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              spam-log:
                description: "Enable/disable spam logging for email filtering.   \n\
                  disable:Disable spam logging for email filtering.   \nenable:Enable\
                  \ spam logging for email filtering."
                enum:
                - disable
                - enable
                type: string
              spam-log-fortiguard-response:
                description: "Enable/disable logging FortiGuard spam response.   \n\
                  disable:Disable logging FortiGuard spam response.   \nenable:Enable\
                  \ logging FortiGuard spam response."
                enum:
                - disable
                - enable
                type: string
              spam-mheader-table:
                description: Anti-spam MIME header table ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              spam-rbl-table:
                description: Anti-spam DNSBL table ID.
                maximum: 4294967295
                minimum: 0
                type: integer
              yahoo-mail:
                description: Yahoo! Mail.
                items:
                  properties:
                    log-all:
                      description: "Enable/disable logging of all email traffic. \
                        \  \ndisable:Disable logging of all email traffic.   \nenable:Enable\
                        \ logging of all email traffic."
                      enum:
                      - disable
                      - enable
                      type: string
                  type: object
                maxItems: null
                type: array
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Select a specific entry from a CLI table.\n Access Group: utmgrp"
      tags:
      - emailfilter/profile
    put:
      parameters:
      - description: Possible parameters to go in the body for the request
        in: body
        name: body
        required: true
        schema:
          properties:
            comment:
              description: Comment.
              maxLength: 255
              type: string
            external:
              description: "Enable/disable external Email inspection.   \nenable:Enable\
                \ setting.   \ndisable:Disable setting."
              enum:
              - enable
              - disable
              type: string
            feature-set:
              description: "Flow/proxy feature set.   \nflow:Flow feature set.   \n\
                proxy:Proxy feature set."
              enum:
              - flow
              - proxy
              type: string
            gmail:
              description: Gmail.
              items:
                properties:
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                type: object
              maxItems: null
              type: array
            imap:
              description: IMAP.
              items:
                properties:
                  action:
                    description: "Action for spam email.   \npass:Allow spam email\
                      \ to pass through.   \ntag:Tag spam email with configured text\
                      \ in subject or header."
                    enum:
                    - pass
                    - tag
                    type: string
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                  tag-msg:
                    description: Subject text or header added to spam email.
                    maxLength: 63
                    type: string
                  tag-type:
                    description: "Tag subject or header for spam email.   \nsubject:Prepend\
                      \ text to spam email subject.   \nheader:Append a user defined\
                      \ mime header to spam email.   \nspaminfo:Append spam info to\
                      \ spam email header."
                    enum:
                    - subject
                    - header
                    - spaminfo
                    type: string
                type: object
              maxItems: null
              type: array
            mapi:
              description: MAPI.
              items:
                properties:
                  action:
                    description: "Action for spam email.   \npass:Allow spam email\
                      \ to pass through.   \ndiscard:Discard (block) spam email."
                    enum:
                    - pass
                    - discard
                    type: string
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                type: object
              maxItems: null
              type: array
            msn-hotmail:
              description: MSN Hotmail.
              items:
                properties:
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                type: object
              maxItems: null
              type: array
            name:
              description: Profile name.
              maxLength: 35
              type: string
            options:
              description: "Options.   \nbannedword:Content block.   \nspambwl:Black/white\
                \ list.   \nspamfsip:Email IP address FortiGuard AntiSpam black list\
                \ check.   \nspamfssubmit:Add FortiGuard AntiSpam spam submission\
                \ text.   \nspamfschksum:Email checksum FortiGuard AntiSpam check.\
                \   \nspamfsurl:Email content URL FortiGuard AntiSpam check.   \n\
                spamhelodns:Email helo/ehlo domain DNS check.   \nspamraddrdns:Email\
                \ return address DNS check.   \nspamrbl:Email DNSBL & ORBL check.\
                \   \nspamhdrcheck:Email mime header check.   \nspamfsphish:Email\
                \ content phishing URL FortiGuard AntiSpam check."
              enum:
              - bannedword
              - spambwl
              - spamfsip
              - spamfssubmit
              - spamfschksum
              - spamfsurl
              - spamhelodns
              - spamraddrdns
              - spamrbl
              - spamhdrcheck
              - spamfsphish
              type: string
            other-webmails:
              description: Other supported webmails.
              items:
                properties:
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                type: object
              maxItems: null
              type: array
            pop3:
              description: POP3.
              items:
                properties:
                  action:
                    description: "Action for spam email.   \npass:Allow spam email\
                      \ to pass through.   \ntag:Tag spam email with configured text\
                      \ in subject or header."
                    enum:
                    - pass
                    - tag
                    type: string
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                  tag-msg:
                    description: Subject text or header added to spam email.
                    maxLength: 63
                    type: string
                  tag-type:
                    description: "Tag subject or header for spam email.   \nsubject:Prepend\
                      \ text to spam email subject.   \nheader:Append a user defined\
                      \ mime header to spam email.   \nspaminfo:Append spam info to\
                      \ spam email header."
                    enum:
                    - subject
                    - header
                    - spaminfo
                    type: string
                type: object
              maxItems: null
              type: array
            replacemsg-group:
              description: Replacement message group.
              maxLength: 35
              type: string
            smtp:
              description: SMTP.
              items:
                properties:
                  action:
                    description: "Action for spam email.   \npass:Allow spam email\
                      \ to pass through.   \ntag:Tag spam email with configured text\
                      \ in subject or header.   \ndiscard:Discard (block) spam email."
                    enum:
                    - pass
                    - tag
                    - discard
                    type: string
                  hdrip:
                    description: "Enable/disable SMTP email header IP checks for spamfsip,\
                      \ spamrbl and spambwl filters.   \ndisable:Disable SMTP email\
                      \ header IP checks for spamfsip, spamrbl and spambwl filters.\
                      \   \nenable:Enable SMTP email header IP checks for spamfsip,\
                      \ spamrbl and spambwl filters."
                    enum:
                    - disable
                    - enable
                    type: string
                  local-override:
                    description: "Enable/disable local filter to override SMTP remote\
                      \ check result.   \ndisable:Disable local filter to override\
                      \ SMTP remote check result.   \nenable:Enable local filter to\
                      \ override SMTP remote check result."
                    enum:
                    - disable
                    - enable
                    type: string
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                  tag-msg:
                    description: Subject text or header added to spam email.
                    maxLength: 63
                    type: string
                  tag-type:
                    description: "Tag subject or header for spam email.   \nsubject:Prepend\
                      \ text to spam email subject.   \nheader:Append a user defined\
                      \ mime header to spam email.   \nspaminfo:Append spam info to\
                      \ spam email header."
                    enum:
                    - subject
                    - header
                    - spaminfo
                    type: string
                type: object
              maxItems: null
              type: array
            spam-bwl-table:
              description: Anti-spam black/white list table ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            spam-bword-table:
              description: Anti-spam banned word table ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            spam-bword-threshold:
              description: Spam banned word threshold.
              maximum: 2147483647
              minimum: 0
              type: integer
            spam-filtering:
              description: "Enable/disable spam filtering.   \nenable:Enable setting.\
                \   \ndisable:Disable setting."
              enum:
              - enable
              - disable
              type: string
            spam-iptrust-table:
              description: Anti-spam IP trust table ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            spam-log:
              description: "Enable/disable spam logging for email filtering.   \n\
                disable:Disable spam logging for email filtering.   \nenable:Enable\
                \ spam logging for email filtering."
              enum:
              - disable
              - enable
              type: string
            spam-log-fortiguard-response:
              description: "Enable/disable logging FortiGuard spam response.   \n\
                disable:Disable logging FortiGuard spam response.   \nenable:Enable\
                \ logging FortiGuard spam response."
              enum:
              - disable
              - enable
              type: string
            spam-mheader-table:
              description: Anti-spam MIME header table ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            spam-rbl-table:
              description: Anti-spam DNSBL table ID.
              maximum: 4294967295
              minimum: 0
              type: integer
            yahoo-mail:
              description: Yahoo! Mail.
              items:
                properties:
                  log-all:
                    description: "Enable/disable logging of all email traffic.   \n\
                      disable:Disable logging of all email traffic.   \nenable:Enable\
                      \ logging of all email traffic."
                    enum:
                    - disable
                    - enable
                    type: string
                type: object
              maxItems: null
              type: array
      - collectionFormat: csv
        description: 'Specify the Virtual Domain(s) from which results are returned
          or changes are applied to. If this parameter is not provided, the management
          VDOM will be used. If the admin does not have access to the VDOM, a permission
          error will be returned.

          The URL parameter is one of:

          vdom=root (Single VDOM)

          vdom=vdom1,vdom2 (Multiple VDOMs)

          vdom=* (All VDOMs)

          '
        in: query
        items:
          type: string
        name: vdom
        required: false
        type: array
      - description: "If supported, an action can be specified.\n_move_: Move this\
          \ specific resource.\nWhen *action=move* is set, one of the extra parameters\
          \ (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is\
          \ provided when not supported, the action will be ignored and an \u201C\
          invalid request\u201D error will be returned.\n"
        enum:
        - move
        in: query
        name: action
        required: false
        type: string
      - description: 'If *action=move*, use *before* to specify the ID of the resource
          that this resource will be moved before.

          For example, to move `object 1` to before `object 2`, use:

          __action=move&before=2__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: before
        required: false
        type: string
      - description: 'If *action=move*, use *after* to specify the ID of the resource
          that this resource will be moved after.

          For example, to move `object 1` to after `object 3`, use:

          __action=move&after=3__

          __*Note:*__ This parameter can only be used when the *action* parameter
          is set to *move*.

          '
        in: query
        name: after
        required: false
        type: string
      - description: mkey
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: 'OK: Request returns successful'
        '400':
          description: 'Bad Request: Request cannot be processed by the API'
        '401':
          description: 'Not Authorized: Request without successful login session'
        '403':
          description: 'Forbidden: Request is missing CSRF token or administrator
            is missing access profile permissions.'
        '404':
          description: 'Resource Not Found: Unable to find the specified resource.'
        '405':
          description: 'Method Not Allowed: Specified HTTP method is not allowed for
            this resource. '
        '413':
          description: 'Request Entity Too Large: Request cannot be processed due
            to large entity '
        '424':
          description: 'Failed Dependency: Fail dependency can be duplicate resource,
            missing required parameter, missing required attribute, invalid attribute
            value'
        '429':
          description: 'Access temporarily blocked: Maximum failed authentications
            reached. The offended source is temporarily blocked for certain amount
            of time.'
        '500':
          description: 'Internal Server Error: Internal error when processing the
            request '
      summary: "Update this specific resource.\n Access Group: utmgrp"
      tags:
      - emailfilter/profile
produces:
- application/json
schemes:
- https
security:
- APIKeyQueryParam: []
securityDefinitions:
  APIKeyQueryParam:
    in: query
    name: access_token
    type: apiKey
swagger: '2.0'
tags:
- description: Configure anti-spam black/white list.
  name: emailfilter/bwl
- description: Configure AntiSpam banned word list.
  name: emailfilter/bword
- description: Configure AntiSpam DNSBL/ORBL.
  name: emailfilter/dnsbl
- description: Configure FortiGuard - AntiSpam.
  name: emailfilter/fortishield
- description: Configure AntiSpam IP trust.
  name: emailfilter/iptrust
- description: Configure AntiSpam MIME header.
  name: emailfilter/mheader
- description: Configure AntiSpam options.
  name: emailfilter/options
- description: Configure Email Filter profiles.
  name: emailfilter/profile
