{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS CMDB"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/cmdb",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "tags": [
        {
            "name": "dlp\/filepattern",
            "description": "Configure file patterns used by DLP blocking."
        },
        {
            "name": "dlp\/fp-doc-source",
            "description": "Create a DLP fingerprint database by allowing the FortiGate to access a file server containing files from which to create fingerprints."
        },
        {
            "name": "dlp\/sensitivity",
            "description": "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source."
        },
        {
            "name": "dlp\/sensor",
            "description": "Configure DLP sensors."
        },
        {
            "name": "dlp\/settings",
            "description": "Designate logical storage for DLP fingerprint database."
        }
    ],
    "paths": {
        "\/dlp\/filepattern\/{id}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table containing the file pattern list.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure file patterns used by DLP blocking.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "filter-type": {
                                                "type": "string",
                                                "description": "Filter by file name pattern or by file type.   \npattern:Filter by file name pattern.   \ntype:Filter by file type.",
                                                "enum": [
                                                    "pattern",
                                                    "type"
                                                ]
                                            },
                                            "pattern": {
                                                "type": "string",
                                                "description": "Add a file name pattern.",
                                                "maxLength": 79
                                            },
                                            "file-type": {
                                                "type": "string",
                                                "description": "Select a file type.   \n7z:Match 7-zip files.   \narj:Match arj compressed files.   \ncab:Match Windows cab files.   \nlzh:Match lzh compressed files.   \nrar:Match rar archives.   \ntar:Match tar files.   \nzip:Match zip files.   \nbzip:Match bzip files.   \ngzip:Match gzip files.   \nbzip2:Match bzip2 files.   \nxz:Match xz files.   \nbat:Match Windows batch files.   \nuue:Match uue files.   \nmime:Match mime files.   \nbase64:Match base64 files.   \nbinhex:Match binhex files.   \nelf:Match elf files.   \nexe:Match Windows executable files.   \nhta:Match hta files.   \nhtml:Match html files.   \njad:Match jad files.   \nclass:Match class files.   \ncod:Match cod files.   \njavascript:Match javascript files.   \nmsoffice:Match MS-Office files. For example, doc, xls, ppt, and so on.   \nmsofficex:Match MS-Office XML files. For example, docx, xlsx, pptx, and so on.   \nfsg:Match fsg files.   \nupx:Match upx files.   \npetite:Match petite files.   \naspack:Match aspack files.   \nsis:Match sis files.   \nhlp:Match Windows help files.   \nactivemime:Match activemime files.   \njpeg:Match jpeg files.   \ngif:Match gif files.   \ntiff:Match tiff files.   \npng:Match png files.   \nbmp:Match bmp files.   \nunknown:Match unknown files.   \nmpeg:Match mpeg files.   \nmov:Match mov files.   \nmp3:Match mp3 files.   \nwma:Match wma files.   \nwav:Match wav files.   \npdf:Match Acrobat PDF files.   \navi:Match avi files.   \nrm:Match rm files.   \ntorrent:Match torrent files.   \nhibun:Match special-file-23-support files.   \nmsi:Match Windows Installer msi files.   \nmach-o:Match Mach object files.   \ndmg:Match Apple disk image files.   \n.net:Match .NET files.   \nxar:Match xar archive files.   \nchm:Match Windows compiled HTML help files.   \niso:Match ISO archive files.   \ncrx:Match Chrome extension files.   \nflac:Match flac files.",
                                                "enum": [
                                                    "7z",
                                                    "arj",
                                                    "cab",
                                                    "lzh",
                                                    "rar",
                                                    "tar",
                                                    "zip",
                                                    "bzip",
                                                    "gzip",
                                                    "bzip2",
                                                    "xz",
                                                    "bat",
                                                    "uue",
                                                    "mime",
                                                    "base64",
                                                    "binhex",
                                                    "elf",
                                                    "exe",
                                                    "hta",
                                                    "html",
                                                    "jad",
                                                    "class",
                                                    "cod",
                                                    "javascript",
                                                    "msoffice",
                                                    "msofficex",
                                                    "fsg",
                                                    "upx",
                                                    "petite",
                                                    "aspack",
                                                    "sis",
                                                    "hlp",
                                                    "activemime",
                                                    "jpeg",
                                                    "gif",
                                                    "tiff",
                                                    "png",
                                                    "bmp",
                                                    "unknown",
                                                    "mpeg",
                                                    "mov",
                                                    "mp3",
                                                    "wma",
                                                    "wav",
                                                    "pdf",
                                                    "avi",
                                                    "rm",
                                                    "torrent",
                                                    "hibun",
                                                    "msi",
                                                    "mach-o",
                                                    "dmg",
                                                    ".net",
                                                    "xar",
                                                    "chm",
                                                    "iso",
                                                    "crx",
                                                    "flac"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 32000
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "dlp\/filepattern"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table containing the file pattern list.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure file patterns used by DLP blocking.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "filter-type": {
                                                "type": "string",
                                                "description": "Filter by file name pattern or by file type.   \npattern:Filter by file name pattern.   \ntype:Filter by file type.",
                                                "enum": [
                                                    "pattern",
                                                    "type"
                                                ]
                                            },
                                            "pattern": {
                                                "type": "string",
                                                "description": "Add a file name pattern.",
                                                "maxLength": 79
                                            },
                                            "file-type": {
                                                "type": "string",
                                                "description": "Select a file type.   \n7z:Match 7-zip files.   \narj:Match arj compressed files.   \ncab:Match Windows cab files.   \nlzh:Match lzh compressed files.   \nrar:Match rar archives.   \ntar:Match tar files.   \nzip:Match zip files.   \nbzip:Match bzip files.   \ngzip:Match gzip files.   \nbzip2:Match bzip2 files.   \nxz:Match xz files.   \nbat:Match Windows batch files.   \nuue:Match uue files.   \nmime:Match mime files.   \nbase64:Match base64 files.   \nbinhex:Match binhex files.   \nelf:Match elf files.   \nexe:Match Windows executable files.   \nhta:Match hta files.   \nhtml:Match html files.   \njad:Match jad files.   \nclass:Match class files.   \ncod:Match cod files.   \njavascript:Match javascript files.   \nmsoffice:Match MS-Office files. For example, doc, xls, ppt, and so on.   \nmsofficex:Match MS-Office XML files. For example, docx, xlsx, pptx, and so on.   \nfsg:Match fsg files.   \nupx:Match upx files.   \npetite:Match petite files.   \naspack:Match aspack files.   \nsis:Match sis files.   \nhlp:Match Windows help files.   \nactivemime:Match activemime files.   \njpeg:Match jpeg files.   \ngif:Match gif files.   \ntiff:Match tiff files.   \npng:Match png files.   \nbmp:Match bmp files.   \nunknown:Match unknown files.   \nmpeg:Match mpeg files.   \nmov:Match mov files.   \nmp3:Match mp3 files.   \nwma:Match wma files.   \nwav:Match wav files.   \npdf:Match Acrobat PDF files.   \navi:Match avi files.   \nrm:Match rm files.   \ntorrent:Match torrent files.   \nhibun:Match special-file-23-support files.   \nmsi:Match Windows Installer msi files.   \nmach-o:Match Mach object files.   \ndmg:Match Apple disk image files.   \n.net:Match .NET files.   \nxar:Match xar archive files.   \nchm:Match Windows compiled HTML help files.   \niso:Match ISO archive files.   \ncrx:Match Chrome extension files.   \nflac:Match flac files.",
                                                "enum": [
                                                    "7z",
                                                    "arj",
                                                    "cab",
                                                    "lzh",
                                                    "rar",
                                                    "tar",
                                                    "zip",
                                                    "bzip",
                                                    "gzip",
                                                    "bzip2",
                                                    "xz",
                                                    "bat",
                                                    "uue",
                                                    "mime",
                                                    "base64",
                                                    "binhex",
                                                    "elf",
                                                    "exe",
                                                    "hta",
                                                    "html",
                                                    "jad",
                                                    "class",
                                                    "cod",
                                                    "javascript",
                                                    "msoffice",
                                                    "msofficex",
                                                    "fsg",
                                                    "upx",
                                                    "petite",
                                                    "aspack",
                                                    "sis",
                                                    "hlp",
                                                    "activemime",
                                                    "jpeg",
                                                    "gif",
                                                    "tiff",
                                                    "png",
                                                    "bmp",
                                                    "unknown",
                                                    "mpeg",
                                                    "mov",
                                                    "mp3",
                                                    "wma",
                                                    "wav",
                                                    "pdf",
                                                    "avi",
                                                    "rm",
                                                    "torrent",
                                                    "hibun",
                                                    "msi",
                                                    "mach-o",
                                                    "dmg",
                                                    ".net",
                                                    "xar",
                                                    "chm",
                                                    "iso",
                                                    "crx",
                                                    "flac"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 32000
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "dlp\/filepattern"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "dlp\/filepattern"
                ]
            }
        },
        "\/dlp\/filepattern": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table containing the file pattern list.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure file patterns used by DLP blocking.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "filter-type": {
                                                "type": "string",
                                                "description": "Filter by file name pattern or by file type.   \npattern:Filter by file name pattern.   \ntype:Filter by file type.",
                                                "enum": [
                                                    "pattern",
                                                    "type"
                                                ]
                                            },
                                            "pattern": {
                                                "type": "string",
                                                "description": "Add a file name pattern.",
                                                "maxLength": 79
                                            },
                                            "file-type": {
                                                "type": "string",
                                                "description": "Select a file type.   \n7z:Match 7-zip files.   \narj:Match arj compressed files.   \ncab:Match Windows cab files.   \nlzh:Match lzh compressed files.   \nrar:Match rar archives.   \ntar:Match tar files.   \nzip:Match zip files.   \nbzip:Match bzip files.   \ngzip:Match gzip files.   \nbzip2:Match bzip2 files.   \nxz:Match xz files.   \nbat:Match Windows batch files.   \nuue:Match uue files.   \nmime:Match mime files.   \nbase64:Match base64 files.   \nbinhex:Match binhex files.   \nelf:Match elf files.   \nexe:Match Windows executable files.   \nhta:Match hta files.   \nhtml:Match html files.   \njad:Match jad files.   \nclass:Match class files.   \ncod:Match cod files.   \njavascript:Match javascript files.   \nmsoffice:Match MS-Office files. For example, doc, xls, ppt, and so on.   \nmsofficex:Match MS-Office XML files. For example, docx, xlsx, pptx, and so on.   \nfsg:Match fsg files.   \nupx:Match upx files.   \npetite:Match petite files.   \naspack:Match aspack files.   \nsis:Match sis files.   \nhlp:Match Windows help files.   \nactivemime:Match activemime files.   \njpeg:Match jpeg files.   \ngif:Match gif files.   \ntiff:Match tiff files.   \npng:Match png files.   \nbmp:Match bmp files.   \nunknown:Match unknown files.   \nmpeg:Match mpeg files.   \nmov:Match mov files.   \nmp3:Match mp3 files.   \nwma:Match wma files.   \nwav:Match wav files.   \npdf:Match Acrobat PDF files.   \navi:Match avi files.   \nrm:Match rm files.   \ntorrent:Match torrent files.   \nhibun:Match special-file-23-support files.   \nmsi:Match Windows Installer msi files.   \nmach-o:Match Mach object files.   \ndmg:Match Apple disk image files.   \n.net:Match .NET files.   \nxar:Match xar archive files.   \nchm:Match Windows compiled HTML help files.   \niso:Match ISO archive files.   \ncrx:Match Chrome extension files.   \nflac:Match flac files.",
                                                "enum": [
                                                    "7z",
                                                    "arj",
                                                    "cab",
                                                    "lzh",
                                                    "rar",
                                                    "tar",
                                                    "zip",
                                                    "bzip",
                                                    "gzip",
                                                    "bzip2",
                                                    "xz",
                                                    "bat",
                                                    "uue",
                                                    "mime",
                                                    "base64",
                                                    "binhex",
                                                    "elf",
                                                    "exe",
                                                    "hta",
                                                    "html",
                                                    "jad",
                                                    "class",
                                                    "cod",
                                                    "javascript",
                                                    "msoffice",
                                                    "msofficex",
                                                    "fsg",
                                                    "upx",
                                                    "petite",
                                                    "aspack",
                                                    "sis",
                                                    "hlp",
                                                    "activemime",
                                                    "jpeg",
                                                    "gif",
                                                    "tiff",
                                                    "png",
                                                    "bmp",
                                                    "unknown",
                                                    "mpeg",
                                                    "mov",
                                                    "mp3",
                                                    "wma",
                                                    "wav",
                                                    "pdf",
                                                    "avi",
                                                    "rm",
                                                    "torrent",
                                                    "hibun",
                                                    "msi",
                                                    "mach-o",
                                                    "dmg",
                                                    ".net",
                                                    "xar",
                                                    "chm",
                                                    "iso",
                                                    "crx",
                                                    "flac"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 32000
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "dlp\/filepattern"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table containing the file pattern list.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure file patterns used by DLP blocking.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "filter-type": {
                                                "type": "string",
                                                "description": "Filter by file name pattern or by file type.   \npattern:Filter by file name pattern.   \ntype:Filter by file type.",
                                                "enum": [
                                                    "pattern",
                                                    "type"
                                                ]
                                            },
                                            "pattern": {
                                                "type": "string",
                                                "description": "Add a file name pattern.",
                                                "maxLength": 79
                                            },
                                            "file-type": {
                                                "type": "string",
                                                "description": "Select a file type.   \n7z:Match 7-zip files.   \narj:Match arj compressed files.   \ncab:Match Windows cab files.   \nlzh:Match lzh compressed files.   \nrar:Match rar archives.   \ntar:Match tar files.   \nzip:Match zip files.   \nbzip:Match bzip files.   \ngzip:Match gzip files.   \nbzip2:Match bzip2 files.   \nxz:Match xz files.   \nbat:Match Windows batch files.   \nuue:Match uue files.   \nmime:Match mime files.   \nbase64:Match base64 files.   \nbinhex:Match binhex files.   \nelf:Match elf files.   \nexe:Match Windows executable files.   \nhta:Match hta files.   \nhtml:Match html files.   \njad:Match jad files.   \nclass:Match class files.   \ncod:Match cod files.   \njavascript:Match javascript files.   \nmsoffice:Match MS-Office files. For example, doc, xls, ppt, and so on.   \nmsofficex:Match MS-Office XML files. For example, docx, xlsx, pptx, and so on.   \nfsg:Match fsg files.   \nupx:Match upx files.   \npetite:Match petite files.   \naspack:Match aspack files.   \nsis:Match sis files.   \nhlp:Match Windows help files.   \nactivemime:Match activemime files.   \njpeg:Match jpeg files.   \ngif:Match gif files.   \ntiff:Match tiff files.   \npng:Match png files.   \nbmp:Match bmp files.   \nunknown:Match unknown files.   \nmpeg:Match mpeg files.   \nmov:Match mov files.   \nmp3:Match mp3 files.   \nwma:Match wma files.   \nwav:Match wav files.   \npdf:Match Acrobat PDF files.   \navi:Match avi files.   \nrm:Match rm files.   \ntorrent:Match torrent files.   \nhibun:Match special-file-23-support files.   \nmsi:Match Windows Installer msi files.   \nmach-o:Match Mach object files.   \ndmg:Match Apple disk image files.   \n.net:Match .NET files.   \nxar:Match xar archive files.   \nchm:Match Windows compiled HTML help files.   \niso:Match ISO archive files.   \ncrx:Match Chrome extension files.   \nflac:Match flac files.",
                                                "enum": [
                                                    "7z",
                                                    "arj",
                                                    "cab",
                                                    "lzh",
                                                    "rar",
                                                    "tar",
                                                    "zip",
                                                    "bzip",
                                                    "gzip",
                                                    "bzip2",
                                                    "xz",
                                                    "bat",
                                                    "uue",
                                                    "mime",
                                                    "base64",
                                                    "binhex",
                                                    "elf",
                                                    "exe",
                                                    "hta",
                                                    "html",
                                                    "jad",
                                                    "class",
                                                    "cod",
                                                    "javascript",
                                                    "msoffice",
                                                    "msofficex",
                                                    "fsg",
                                                    "upx",
                                                    "petite",
                                                    "aspack",
                                                    "sis",
                                                    "hlp",
                                                    "activemime",
                                                    "jpeg",
                                                    "gif",
                                                    "tiff",
                                                    "png",
                                                    "bmp",
                                                    "unknown",
                                                    "mpeg",
                                                    "mov",
                                                    "mp3",
                                                    "wma",
                                                    "wav",
                                                    "pdf",
                                                    "avi",
                                                    "rm",
                                                    "torrent",
                                                    "hibun",
                                                    "msi",
                                                    "mach-o",
                                                    "dmg",
                                                    ".net",
                                                    "xar",
                                                    "chm",
                                                    "iso",
                                                    "crx",
                                                    "flac"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 32000
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "dlp\/filepattern"
                ]
            }
        },
        "\/dlp\/fp-doc-source\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the DLP fingerprint database.",
                                    "maxLength": 35
                                },
                                "server-type": {
                                    "type": "string",
                                    "description": "Protocol used to communicate with the file server. Currently only Samba (SMB) servers are supported.   \nsamba:SAMBA server.",
                                    "enum": [
                                        "samba"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "IPv4 or IPv6 address of the server.",
                                    "maxLength": 35
                                },
                                "period": {
                                    "type": "string",
                                    "description": "Frequency for which the FortiGate checks the server for new or changed files.   \nnone:Check the server when the FortiGate starts up.   \ndaily:Check the server once a day.   \nweekly:Check the server once a week.   \nmonthly:Check the server once a month.",
                                    "enum": [
                                        "none",
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "vdom": {
                                    "type": "string",
                                    "description": "Select the VDOM that can communicate with the file server.   \nmgmt:Communicate with the file server through the management VDOM.   \ncurrent:Communicate with the file server through the VDOM containing this DLP fingerprint database configuration.",
                                    "enum": [
                                        "mgmt",
                                        "current"
                                    ]
                                },
                                "scan-subdirectories": {
                                    "type": "string",
                                    "description": "Enable\/disable scanning subdirectories to find files to create fingerprints from.   \nenable:Scan subdirectories.   \ndisable:Do not scan subdirectories.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "scan-on-creation": {
                                    "type": "string",
                                    "description": "Enable to keep the fingerprint database up to date when a file is added or changed on the server.   \nenable:Keep the fingerprint database up to date when a file is added or changed on the server.   \ndisable:Do not check for added or changed files on the server. Saves system resources.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "remove-deleted": {
                                    "type": "string",
                                    "description": "Enable to keep the fingerprint database up to date when a file is deleted from the server.   \nenable:Keep the fingerprint database up to date when a file is deleted from the server.   \ndisable:Do not check for deleted files on the server. Saves system resources.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keep-modified": {
                                    "type": "string",
                                    "description": "Enable so that when a file is changed on the server the FortiGate keeps the old fingerprint and adds a new fingerprint to the database.   \nenable:Keep the old fingerprint and add a new fingerprint when a file is changed on the server.   \ndisable:Replace the old fingerprint with the new fingerprint when a file is changed on the server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "User name required to log into the file server.",
                                    "maxLength": 35
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password required to log into the file server."
                                },
                                "file-path": {
                                    "type": "string",
                                    "description": "Path on the server to the fingerprint files (max 119 characters).",
                                    "maxLength": 119
                                },
                                "file-pattern": {
                                    "type": "string",
                                    "description": "Files matching this pattern on the server are fingerprinted. Optionally use the * and ? wildcards.",
                                    "maxLength": 35
                                },
                                "sensitivity": {
                                    "type": "string",
                                    "description": "Select a sensitivity or threat level for matches with this fingerprint database. Add sensitivities using sensitivity.",
                                    "maxLength": 35
                                },
                                "tod-hour": {
                                    "type": "integer",
                                    "description": "Hour of the day on which to scan the server (0 - 23, default = 1).",
                                    "maximum": 23,
                                    "minimum": 0
                                },
                                "tod-min": {
                                    "type": "integer",
                                    "description": "Minute of the hour on which to scan the server (0 - 59).",
                                    "maximum": 59,
                                    "minimum": 0
                                },
                                "weekday": {
                                    "type": "string",
                                    "description": "Day of the week on which to scan the server.   \nsunday:Sunday   \nmonday:Monday   \ntuesday:Tuesday   \nwednesday:Wednesday   \nthursday:Thursday   \nfriday:Friday   \nsaturday:Saturday",
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "date": {
                                    "type": "integer",
                                    "description": "Day of the month on which to scan the server (1 - 31).",
                                    "maximum": 31,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "dlp\/fp-doc-source"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the DLP fingerprint database.",
                                    "maxLength": 35
                                },
                                "server-type": {
                                    "type": "string",
                                    "description": "Protocol used to communicate with the file server. Currently only Samba (SMB) servers are supported.   \nsamba:SAMBA server.",
                                    "enum": [
                                        "samba"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "IPv4 or IPv6 address of the server.",
                                    "maxLength": 35
                                },
                                "period": {
                                    "type": "string",
                                    "description": "Frequency for which the FortiGate checks the server for new or changed files.   \nnone:Check the server when the FortiGate starts up.   \ndaily:Check the server once a day.   \nweekly:Check the server once a week.   \nmonthly:Check the server once a month.",
                                    "enum": [
                                        "none",
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "vdom": {
                                    "type": "string",
                                    "description": "Select the VDOM that can communicate with the file server.   \nmgmt:Communicate with the file server through the management VDOM.   \ncurrent:Communicate with the file server through the VDOM containing this DLP fingerprint database configuration.",
                                    "enum": [
                                        "mgmt",
                                        "current"
                                    ]
                                },
                                "scan-subdirectories": {
                                    "type": "string",
                                    "description": "Enable\/disable scanning subdirectories to find files to create fingerprints from.   \nenable:Scan subdirectories.   \ndisable:Do not scan subdirectories.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "scan-on-creation": {
                                    "type": "string",
                                    "description": "Enable to keep the fingerprint database up to date when a file is added or changed on the server.   \nenable:Keep the fingerprint database up to date when a file is added or changed on the server.   \ndisable:Do not check for added or changed files on the server. Saves system resources.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "remove-deleted": {
                                    "type": "string",
                                    "description": "Enable to keep the fingerprint database up to date when a file is deleted from the server.   \nenable:Keep the fingerprint database up to date when a file is deleted from the server.   \ndisable:Do not check for deleted files on the server. Saves system resources.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keep-modified": {
                                    "type": "string",
                                    "description": "Enable so that when a file is changed on the server the FortiGate keeps the old fingerprint and adds a new fingerprint to the database.   \nenable:Keep the old fingerprint and add a new fingerprint when a file is changed on the server.   \ndisable:Replace the old fingerprint with the new fingerprint when a file is changed on the server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "User name required to log into the file server.",
                                    "maxLength": 35
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password required to log into the file server."
                                },
                                "file-path": {
                                    "type": "string",
                                    "description": "Path on the server to the fingerprint files (max 119 characters).",
                                    "maxLength": 119
                                },
                                "file-pattern": {
                                    "type": "string",
                                    "description": "Files matching this pattern on the server are fingerprinted. Optionally use the * and ? wildcards.",
                                    "maxLength": 35
                                },
                                "sensitivity": {
                                    "type": "string",
                                    "description": "Select a sensitivity or threat level for matches with this fingerprint database. Add sensitivities using sensitivity.",
                                    "maxLength": 35
                                },
                                "tod-hour": {
                                    "type": "integer",
                                    "description": "Hour of the day on which to scan the server (0 - 23, default = 1).",
                                    "maximum": 23,
                                    "minimum": 0
                                },
                                "tod-min": {
                                    "type": "integer",
                                    "description": "Minute of the hour on which to scan the server (0 - 59).",
                                    "maximum": 59,
                                    "minimum": 0
                                },
                                "weekday": {
                                    "type": "string",
                                    "description": "Day of the week on which to scan the server.   \nsunday:Sunday   \nmonday:Monday   \ntuesday:Tuesday   \nwednesday:Wednesday   \nthursday:Thursday   \nfriday:Friday   \nsaturday:Saturday",
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "date": {
                                    "type": "integer",
                                    "description": "Day of the month on which to scan the server (1 - 31).",
                                    "maximum": 31,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "dlp\/fp-doc-source"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "dlp\/fp-doc-source"
                ]
            }
        },
        "\/dlp\/fp-doc-source": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the DLP fingerprint database.",
                                    "maxLength": 35
                                },
                                "server-type": {
                                    "type": "string",
                                    "description": "Protocol used to communicate with the file server. Currently only Samba (SMB) servers are supported.   \nsamba:SAMBA server.",
                                    "enum": [
                                        "samba"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "IPv4 or IPv6 address of the server.",
                                    "maxLength": 35
                                },
                                "period": {
                                    "type": "string",
                                    "description": "Frequency for which the FortiGate checks the server for new or changed files.   \nnone:Check the server when the FortiGate starts up.   \ndaily:Check the server once a day.   \nweekly:Check the server once a week.   \nmonthly:Check the server once a month.",
                                    "enum": [
                                        "none",
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "vdom": {
                                    "type": "string",
                                    "description": "Select the VDOM that can communicate with the file server.   \nmgmt:Communicate with the file server through the management VDOM.   \ncurrent:Communicate with the file server through the VDOM containing this DLP fingerprint database configuration.",
                                    "enum": [
                                        "mgmt",
                                        "current"
                                    ]
                                },
                                "scan-subdirectories": {
                                    "type": "string",
                                    "description": "Enable\/disable scanning subdirectories to find files to create fingerprints from.   \nenable:Scan subdirectories.   \ndisable:Do not scan subdirectories.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "scan-on-creation": {
                                    "type": "string",
                                    "description": "Enable to keep the fingerprint database up to date when a file is added or changed on the server.   \nenable:Keep the fingerprint database up to date when a file is added or changed on the server.   \ndisable:Do not check for added or changed files on the server. Saves system resources.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "remove-deleted": {
                                    "type": "string",
                                    "description": "Enable to keep the fingerprint database up to date when a file is deleted from the server.   \nenable:Keep the fingerprint database up to date when a file is deleted from the server.   \ndisable:Do not check for deleted files on the server. Saves system resources.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keep-modified": {
                                    "type": "string",
                                    "description": "Enable so that when a file is changed on the server the FortiGate keeps the old fingerprint and adds a new fingerprint to the database.   \nenable:Keep the old fingerprint and add a new fingerprint when a file is changed on the server.   \ndisable:Replace the old fingerprint with the new fingerprint when a file is changed on the server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "User name required to log into the file server.",
                                    "maxLength": 35
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password required to log into the file server."
                                },
                                "file-path": {
                                    "type": "string",
                                    "description": "Path on the server to the fingerprint files (max 119 characters).",
                                    "maxLength": 119
                                },
                                "file-pattern": {
                                    "type": "string",
                                    "description": "Files matching this pattern on the server are fingerprinted. Optionally use the * and ? wildcards.",
                                    "maxLength": 35
                                },
                                "sensitivity": {
                                    "type": "string",
                                    "description": "Select a sensitivity or threat level for matches with this fingerprint database. Add sensitivities using sensitivity.",
                                    "maxLength": 35
                                },
                                "tod-hour": {
                                    "type": "integer",
                                    "description": "Hour of the day on which to scan the server (0 - 23, default = 1).",
                                    "maximum": 23,
                                    "minimum": 0
                                },
                                "tod-min": {
                                    "type": "integer",
                                    "description": "Minute of the hour on which to scan the server (0 - 59).",
                                    "maximum": 59,
                                    "minimum": 0
                                },
                                "weekday": {
                                    "type": "string",
                                    "description": "Day of the week on which to scan the server.   \nsunday:Sunday   \nmonday:Monday   \ntuesday:Tuesday   \nwednesday:Wednesday   \nthursday:Thursday   \nfriday:Friday   \nsaturday:Saturday",
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "date": {
                                    "type": "integer",
                                    "description": "Day of the month on which to scan the server (1 - 31).",
                                    "maximum": 31,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "dlp\/fp-doc-source"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the DLP fingerprint database.",
                                    "maxLength": 35
                                },
                                "server-type": {
                                    "type": "string",
                                    "description": "Protocol used to communicate with the file server. Currently only Samba (SMB) servers are supported.   \nsamba:SAMBA server.",
                                    "enum": [
                                        "samba"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "IPv4 or IPv6 address of the server.",
                                    "maxLength": 35
                                },
                                "period": {
                                    "type": "string",
                                    "description": "Frequency for which the FortiGate checks the server for new or changed files.   \nnone:Check the server when the FortiGate starts up.   \ndaily:Check the server once a day.   \nweekly:Check the server once a week.   \nmonthly:Check the server once a month.",
                                    "enum": [
                                        "none",
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "vdom": {
                                    "type": "string",
                                    "description": "Select the VDOM that can communicate with the file server.   \nmgmt:Communicate with the file server through the management VDOM.   \ncurrent:Communicate with the file server through the VDOM containing this DLP fingerprint database configuration.",
                                    "enum": [
                                        "mgmt",
                                        "current"
                                    ]
                                },
                                "scan-subdirectories": {
                                    "type": "string",
                                    "description": "Enable\/disable scanning subdirectories to find files to create fingerprints from.   \nenable:Scan subdirectories.   \ndisable:Do not scan subdirectories.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "scan-on-creation": {
                                    "type": "string",
                                    "description": "Enable to keep the fingerprint database up to date when a file is added or changed on the server.   \nenable:Keep the fingerprint database up to date when a file is added or changed on the server.   \ndisable:Do not check for added or changed files on the server. Saves system resources.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "remove-deleted": {
                                    "type": "string",
                                    "description": "Enable to keep the fingerprint database up to date when a file is deleted from the server.   \nenable:Keep the fingerprint database up to date when a file is deleted from the server.   \ndisable:Do not check for deleted files on the server. Saves system resources.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keep-modified": {
                                    "type": "string",
                                    "description": "Enable so that when a file is changed on the server the FortiGate keeps the old fingerprint and adds a new fingerprint to the database.   \nenable:Keep the old fingerprint and add a new fingerprint when a file is changed on the server.   \ndisable:Replace the old fingerprint with the new fingerprint when a file is changed on the server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "User name required to log into the file server.",
                                    "maxLength": 35
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password required to log into the file server."
                                },
                                "file-path": {
                                    "type": "string",
                                    "description": "Path on the server to the fingerprint files (max 119 characters).",
                                    "maxLength": 119
                                },
                                "file-pattern": {
                                    "type": "string",
                                    "description": "Files matching this pattern on the server are fingerprinted. Optionally use the * and ? wildcards.",
                                    "maxLength": 35
                                },
                                "sensitivity": {
                                    "type": "string",
                                    "description": "Select a sensitivity or threat level for matches with this fingerprint database. Add sensitivities using sensitivity.",
                                    "maxLength": 35
                                },
                                "tod-hour": {
                                    "type": "integer",
                                    "description": "Hour of the day on which to scan the server (0 - 23, default = 1).",
                                    "maximum": 23,
                                    "minimum": 0
                                },
                                "tod-min": {
                                    "type": "integer",
                                    "description": "Minute of the hour on which to scan the server (0 - 59).",
                                    "maximum": 59,
                                    "minimum": 0
                                },
                                "weekday": {
                                    "type": "string",
                                    "description": "Day of the week on which to scan the server.   \nsunday:Sunday   \nmonday:Monday   \ntuesday:Tuesday   \nwednesday:Wednesday   \nthursday:Thursday   \nfriday:Friday   \nsaturday:Saturday",
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "date": {
                                    "type": "integer",
                                    "description": "Day of the month on which to scan the server (1 - 31).",
                                    "maximum": 31,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "dlp\/fp-doc-source"
                ]
            }
        },
        "\/dlp\/sensitivity\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "DLP Sensitivity Levels.",
                                    "maxLength": 35
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "dlp\/sensitivity"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "DLP Sensitivity Levels.",
                                    "maxLength": 35
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "dlp\/sensitivity"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "dlp\/sensitivity"
                ]
            }
        },
        "\/dlp\/sensitivity": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "DLP Sensitivity Levels.",
                                    "maxLength": 35
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "dlp\/sensitivity"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "DLP Sensitivity Levels.",
                                    "maxLength": 35
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "dlp\/sensitivity"
                ]
            }
        },
        "\/dlp\/sensor\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the DLP sensor.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "feature-set": {
                                    "type": "string",
                                    "description": "Flow\/proxy feature set.   \nflow:Flow feature set.   \nproxy:Proxy feature set.",
                                    "enum": [
                                        "flow",
                                        "proxy"
                                    ]
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group used by this DLP sensor.",
                                    "maxLength": 35
                                },
                                "filter": {
                                    "description": "Set up DLP filters for this sensor.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Filter name.",
                                                "maxLength": 35
                                            },
                                            "severity": {
                                                "type": "string",
                                                "description": "Select the severity or threat level that matches this filter.   \ninfo:Informational.   \nlow:Low.   \nmedium:Medium.   \nhigh:High.   \ncritical:Critical.",
                                                "enum": [
                                                    "info",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Select whether to check the content of messages (an email message) or files (downloaded files or email attachments).    \nfile:Check the contents of downloaded or attached files.   \nmessage:Check the contents of email messages, web pages, etc.",
                                                "enum": [
                                                    "file",
                                                    "message"
                                                ]
                                            },
                                            "proto": {
                                                "type": "string",
                                                "description": "Check messages or files over one or more of these protocols.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                                "enum": [
                                                    "smtp",
                                                    "pop3",
                                                    "imap",
                                                    "http-get",
                                                    "http-post",
                                                    "ftp",
                                                    "nntp",
                                                    "mapi",
                                                    "ssh",
                                                    "cifs"
                                                ]
                                            },
                                            "filter-by": {
                                                "type": "string",
                                                "description": "Select the type of content to match.   \ncredit-card:Match credit cards.   \nssn:Match social security numbers.   \nregexp:Use a regular expression to match content.   \nfile-type:Match a DLP file pattern list.   \nfile-size:Match any file over with a size over the threshold.   \nfingerprint:Match against a fingerprint sensitivity.   \nwatermark:Look for defined file watermarks.   \nencrypted:Look for encrypted files.",
                                                "enum": [
                                                    "credit-card",
                                                    "ssn",
                                                    "regexp",
                                                    "file-type",
                                                    "file-size",
                                                    "fingerprint",
                                                    "watermark",
                                                    "encrypted"
                                                ]
                                            },
                                            "file-size": {
                                                "type": "integer",
                                                "description": "Match files this size or larger (0 - 4294967295 kbytes).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "company-identifier": {
                                                "type": "string",
                                                "description": "Enter a company identifier watermark to match. Only watermarks that your company has placed on the files are matched.",
                                                "maxLength": 35
                                            },
                                            "sensitivity": {
                                                "description": "Select a DLP file pattern sensitivity to match.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Select a DLP sensitivity.",
                                                            "maxLength": 35
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "match-percentage": {
                                                "type": "integer",
                                                "description": "Percentage of fingerprints in the fingerprint databases designated with the selected sensitivity to match.",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "file-type": {
                                                "type": "integer",
                                                "description": "Select the number of a DLP file pattern table to match.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Enter a regular expression to match (max. 255 characters).",
                                                "maxLength": 255
                                            },
                                            "archive": {
                                                "type": "string",
                                                "description": "Enable\/disable DLP archiving.   \ndisable:No DLP archiving.   \nenable:Enable full DLP archiving.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take with content that this DLP sensor matches.   \nallow:Allow the content to pass through the FortiGate and do not create a log message.   \nlog-only:Allow the content to pass through the FortiGate, but write a log message.   \nblock:Block the content and write a log message.   \nquarantine-ip:Quarantine all traffic from the IP address and write a log message.",
                                                "enum": [
                                                    "allow",
                                                    "log-only",
                                                    "block",
                                                    "quarantine-ip"
                                                ]
                                            },
                                            "expiry": {
                                                "type": "string",
                                                "description": "Quarantine duration in days, hours, minutes format (dddhhmm)."
                                            }
                                        }
                                    },
                                    "maxItems": 2000
                                },
                                "dlp-log": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP logging.   \nenable:Enable DLP logging.   \ndisable:Disable DLP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging for data leak prevention.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nac-quar-log": {
                                    "type": "string",
                                    "description": "Enable\/disable NAC quarantine logging.   \nenable:Enable NAC quarantine logging.   \ndisable:Disable NAC quarantine logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "full-archive-proto": {
                                    "type": "string",
                                    "description": "Protocols to always content archive.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                    "enum": [
                                        "smtp",
                                        "pop3",
                                        "imap",
                                        "http-get",
                                        "http-post",
                                        "ftp",
                                        "nntp",
                                        "mapi",
                                        "ssh",
                                        "cifs"
                                    ]
                                },
                                "summary-proto": {
                                    "type": "string",
                                    "description": "Protocols to always log summary.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                    "enum": [
                                        "smtp",
                                        "pop3",
                                        "imap",
                                        "http-get",
                                        "http-post",
                                        "ftp",
                                        "nntp",
                                        "mapi",
                                        "ssh",
                                        "cifs"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "dlp\/sensor"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the DLP sensor.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "feature-set": {
                                    "type": "string",
                                    "description": "Flow\/proxy feature set.   \nflow:Flow feature set.   \nproxy:Proxy feature set.",
                                    "enum": [
                                        "flow",
                                        "proxy"
                                    ]
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group used by this DLP sensor.",
                                    "maxLength": 35
                                },
                                "filter": {
                                    "description": "Set up DLP filters for this sensor.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Filter name.",
                                                "maxLength": 35
                                            },
                                            "severity": {
                                                "type": "string",
                                                "description": "Select the severity or threat level that matches this filter.   \ninfo:Informational.   \nlow:Low.   \nmedium:Medium.   \nhigh:High.   \ncritical:Critical.",
                                                "enum": [
                                                    "info",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Select whether to check the content of messages (an email message) or files (downloaded files or email attachments).    \nfile:Check the contents of downloaded or attached files.   \nmessage:Check the contents of email messages, web pages, etc.",
                                                "enum": [
                                                    "file",
                                                    "message"
                                                ]
                                            },
                                            "proto": {
                                                "type": "string",
                                                "description": "Check messages or files over one or more of these protocols.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                                "enum": [
                                                    "smtp",
                                                    "pop3",
                                                    "imap",
                                                    "http-get",
                                                    "http-post",
                                                    "ftp",
                                                    "nntp",
                                                    "mapi",
                                                    "ssh",
                                                    "cifs"
                                                ]
                                            },
                                            "filter-by": {
                                                "type": "string",
                                                "description": "Select the type of content to match.   \ncredit-card:Match credit cards.   \nssn:Match social security numbers.   \nregexp:Use a regular expression to match content.   \nfile-type:Match a DLP file pattern list.   \nfile-size:Match any file over with a size over the threshold.   \nfingerprint:Match against a fingerprint sensitivity.   \nwatermark:Look for defined file watermarks.   \nencrypted:Look for encrypted files.",
                                                "enum": [
                                                    "credit-card",
                                                    "ssn",
                                                    "regexp",
                                                    "file-type",
                                                    "file-size",
                                                    "fingerprint",
                                                    "watermark",
                                                    "encrypted"
                                                ]
                                            },
                                            "file-size": {
                                                "type": "integer",
                                                "description": "Match files this size or larger (0 - 4294967295 kbytes).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "company-identifier": {
                                                "type": "string",
                                                "description": "Enter a company identifier watermark to match. Only watermarks that your company has placed on the files are matched.",
                                                "maxLength": 35
                                            },
                                            "sensitivity": {
                                                "description": "Select a DLP file pattern sensitivity to match.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Select a DLP sensitivity.",
                                                            "maxLength": 35
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "match-percentage": {
                                                "type": "integer",
                                                "description": "Percentage of fingerprints in the fingerprint databases designated with the selected sensitivity to match.",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "file-type": {
                                                "type": "integer",
                                                "description": "Select the number of a DLP file pattern table to match.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Enter a regular expression to match (max. 255 characters).",
                                                "maxLength": 255
                                            },
                                            "archive": {
                                                "type": "string",
                                                "description": "Enable\/disable DLP archiving.   \ndisable:No DLP archiving.   \nenable:Enable full DLP archiving.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take with content that this DLP sensor matches.   \nallow:Allow the content to pass through the FortiGate and do not create a log message.   \nlog-only:Allow the content to pass through the FortiGate, but write a log message.   \nblock:Block the content and write a log message.   \nquarantine-ip:Quarantine all traffic from the IP address and write a log message.",
                                                "enum": [
                                                    "allow",
                                                    "log-only",
                                                    "block",
                                                    "quarantine-ip"
                                                ]
                                            },
                                            "expiry": {
                                                "type": "string",
                                                "description": "Quarantine duration in days, hours, minutes format (dddhhmm)."
                                            }
                                        }
                                    },
                                    "maxItems": 2000
                                },
                                "dlp-log": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP logging.   \nenable:Enable DLP logging.   \ndisable:Disable DLP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging for data leak prevention.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nac-quar-log": {
                                    "type": "string",
                                    "description": "Enable\/disable NAC quarantine logging.   \nenable:Enable NAC quarantine logging.   \ndisable:Disable NAC quarantine logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "full-archive-proto": {
                                    "type": "string",
                                    "description": "Protocols to always content archive.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                    "enum": [
                                        "smtp",
                                        "pop3",
                                        "imap",
                                        "http-get",
                                        "http-post",
                                        "ftp",
                                        "nntp",
                                        "mapi",
                                        "ssh",
                                        "cifs"
                                    ]
                                },
                                "summary-proto": {
                                    "type": "string",
                                    "description": "Protocols to always log summary.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                    "enum": [
                                        "smtp",
                                        "pop3",
                                        "imap",
                                        "http-get",
                                        "http-post",
                                        "ftp",
                                        "nntp",
                                        "mapi",
                                        "ssh",
                                        "cifs"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "dlp\/sensor"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "dlp\/sensor"
                ]
            }
        },
        "\/dlp\/sensor": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the DLP sensor.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "feature-set": {
                                    "type": "string",
                                    "description": "Flow\/proxy feature set.   \nflow:Flow feature set.   \nproxy:Proxy feature set.",
                                    "enum": [
                                        "flow",
                                        "proxy"
                                    ]
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group used by this DLP sensor.",
                                    "maxLength": 35
                                },
                                "filter": {
                                    "description": "Set up DLP filters for this sensor.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Filter name.",
                                                "maxLength": 35
                                            },
                                            "severity": {
                                                "type": "string",
                                                "description": "Select the severity or threat level that matches this filter.   \ninfo:Informational.   \nlow:Low.   \nmedium:Medium.   \nhigh:High.   \ncritical:Critical.",
                                                "enum": [
                                                    "info",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Select whether to check the content of messages (an email message) or files (downloaded files or email attachments).    \nfile:Check the contents of downloaded or attached files.   \nmessage:Check the contents of email messages, web pages, etc.",
                                                "enum": [
                                                    "file",
                                                    "message"
                                                ]
                                            },
                                            "proto": {
                                                "type": "string",
                                                "description": "Check messages or files over one or more of these protocols.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                                "enum": [
                                                    "smtp",
                                                    "pop3",
                                                    "imap",
                                                    "http-get",
                                                    "http-post",
                                                    "ftp",
                                                    "nntp",
                                                    "mapi",
                                                    "ssh",
                                                    "cifs"
                                                ]
                                            },
                                            "filter-by": {
                                                "type": "string",
                                                "description": "Select the type of content to match.   \ncredit-card:Match credit cards.   \nssn:Match social security numbers.   \nregexp:Use a regular expression to match content.   \nfile-type:Match a DLP file pattern list.   \nfile-size:Match any file over with a size over the threshold.   \nfingerprint:Match against a fingerprint sensitivity.   \nwatermark:Look for defined file watermarks.   \nencrypted:Look for encrypted files.",
                                                "enum": [
                                                    "credit-card",
                                                    "ssn",
                                                    "regexp",
                                                    "file-type",
                                                    "file-size",
                                                    "fingerprint",
                                                    "watermark",
                                                    "encrypted"
                                                ]
                                            },
                                            "file-size": {
                                                "type": "integer",
                                                "description": "Match files this size or larger (0 - 4294967295 kbytes).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "company-identifier": {
                                                "type": "string",
                                                "description": "Enter a company identifier watermark to match. Only watermarks that your company has placed on the files are matched.",
                                                "maxLength": 35
                                            },
                                            "sensitivity": {
                                                "description": "Select a DLP file pattern sensitivity to match.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Select a DLP sensitivity.",
                                                            "maxLength": 35
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "match-percentage": {
                                                "type": "integer",
                                                "description": "Percentage of fingerprints in the fingerprint databases designated with the selected sensitivity to match.",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "file-type": {
                                                "type": "integer",
                                                "description": "Select the number of a DLP file pattern table to match.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Enter a regular expression to match (max. 255 characters).",
                                                "maxLength": 255
                                            },
                                            "archive": {
                                                "type": "string",
                                                "description": "Enable\/disable DLP archiving.   \ndisable:No DLP archiving.   \nenable:Enable full DLP archiving.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take with content that this DLP sensor matches.   \nallow:Allow the content to pass through the FortiGate and do not create a log message.   \nlog-only:Allow the content to pass through the FortiGate, but write a log message.   \nblock:Block the content and write a log message.   \nquarantine-ip:Quarantine all traffic from the IP address and write a log message.",
                                                "enum": [
                                                    "allow",
                                                    "log-only",
                                                    "block",
                                                    "quarantine-ip"
                                                ]
                                            },
                                            "expiry": {
                                                "type": "string",
                                                "description": "Quarantine duration in days, hours, minutes format (dddhhmm)."
                                            }
                                        }
                                    },
                                    "maxItems": 2000
                                },
                                "dlp-log": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP logging.   \nenable:Enable DLP logging.   \ndisable:Disable DLP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging for data leak prevention.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nac-quar-log": {
                                    "type": "string",
                                    "description": "Enable\/disable NAC quarantine logging.   \nenable:Enable NAC quarantine logging.   \ndisable:Disable NAC quarantine logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "full-archive-proto": {
                                    "type": "string",
                                    "description": "Protocols to always content archive.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                    "enum": [
                                        "smtp",
                                        "pop3",
                                        "imap",
                                        "http-get",
                                        "http-post",
                                        "ftp",
                                        "nntp",
                                        "mapi",
                                        "ssh",
                                        "cifs"
                                    ]
                                },
                                "summary-proto": {
                                    "type": "string",
                                    "description": "Protocols to always log summary.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                    "enum": [
                                        "smtp",
                                        "pop3",
                                        "imap",
                                        "http-get",
                                        "http-post",
                                        "ftp",
                                        "nntp",
                                        "mapi",
                                        "ssh",
                                        "cifs"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "dlp\/sensor"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the DLP sensor.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "feature-set": {
                                    "type": "string",
                                    "description": "Flow\/proxy feature set.   \nflow:Flow feature set.   \nproxy:Proxy feature set.",
                                    "enum": [
                                        "flow",
                                        "proxy"
                                    ]
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group used by this DLP sensor.",
                                    "maxLength": 35
                                },
                                "filter": {
                                    "description": "Set up DLP filters for this sensor.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Filter name.",
                                                "maxLength": 35
                                            },
                                            "severity": {
                                                "type": "string",
                                                "description": "Select the severity or threat level that matches this filter.   \ninfo:Informational.   \nlow:Low.   \nmedium:Medium.   \nhigh:High.   \ncritical:Critical.",
                                                "enum": [
                                                    "info",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Select whether to check the content of messages (an email message) or files (downloaded files or email attachments).    \nfile:Check the contents of downloaded or attached files.   \nmessage:Check the contents of email messages, web pages, etc.",
                                                "enum": [
                                                    "file",
                                                    "message"
                                                ]
                                            },
                                            "proto": {
                                                "type": "string",
                                                "description": "Check messages or files over one or more of these protocols.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                                "enum": [
                                                    "smtp",
                                                    "pop3",
                                                    "imap",
                                                    "http-get",
                                                    "http-post",
                                                    "ftp",
                                                    "nntp",
                                                    "mapi",
                                                    "ssh",
                                                    "cifs"
                                                ]
                                            },
                                            "filter-by": {
                                                "type": "string",
                                                "description": "Select the type of content to match.   \ncredit-card:Match credit cards.   \nssn:Match social security numbers.   \nregexp:Use a regular expression to match content.   \nfile-type:Match a DLP file pattern list.   \nfile-size:Match any file over with a size over the threshold.   \nfingerprint:Match against a fingerprint sensitivity.   \nwatermark:Look for defined file watermarks.   \nencrypted:Look for encrypted files.",
                                                "enum": [
                                                    "credit-card",
                                                    "ssn",
                                                    "regexp",
                                                    "file-type",
                                                    "file-size",
                                                    "fingerprint",
                                                    "watermark",
                                                    "encrypted"
                                                ]
                                            },
                                            "file-size": {
                                                "type": "integer",
                                                "description": "Match files this size or larger (0 - 4294967295 kbytes).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "company-identifier": {
                                                "type": "string",
                                                "description": "Enter a company identifier watermark to match. Only watermarks that your company has placed on the files are matched.",
                                                "maxLength": 35
                                            },
                                            "sensitivity": {
                                                "description": "Select a DLP file pattern sensitivity to match.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Select a DLP sensitivity.",
                                                            "maxLength": 35
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "match-percentage": {
                                                "type": "integer",
                                                "description": "Percentage of fingerprints in the fingerprint databases designated with the selected sensitivity to match.",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "file-type": {
                                                "type": "integer",
                                                "description": "Select the number of a DLP file pattern table to match.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Enter a regular expression to match (max. 255 characters).",
                                                "maxLength": 255
                                            },
                                            "archive": {
                                                "type": "string",
                                                "description": "Enable\/disable DLP archiving.   \ndisable:No DLP archiving.   \nenable:Enable full DLP archiving.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take with content that this DLP sensor matches.   \nallow:Allow the content to pass through the FortiGate and do not create a log message.   \nlog-only:Allow the content to pass through the FortiGate, but write a log message.   \nblock:Block the content and write a log message.   \nquarantine-ip:Quarantine all traffic from the IP address and write a log message.",
                                                "enum": [
                                                    "allow",
                                                    "log-only",
                                                    "block",
                                                    "quarantine-ip"
                                                ]
                                            },
                                            "expiry": {
                                                "type": "string",
                                                "description": "Quarantine duration in days, hours, minutes format (dddhhmm)."
                                            }
                                        }
                                    },
                                    "maxItems": 2000
                                },
                                "dlp-log": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP logging.   \nenable:Enable DLP logging.   \ndisable:Disable DLP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging for data leak prevention.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nac-quar-log": {
                                    "type": "string",
                                    "description": "Enable\/disable NAC quarantine logging.   \nenable:Enable NAC quarantine logging.   \ndisable:Disable NAC quarantine logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "full-archive-proto": {
                                    "type": "string",
                                    "description": "Protocols to always content archive.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                    "enum": [
                                        "smtp",
                                        "pop3",
                                        "imap",
                                        "http-get",
                                        "http-post",
                                        "ftp",
                                        "nntp",
                                        "mapi",
                                        "ssh",
                                        "cifs"
                                    ]
                                },
                                "summary-proto": {
                                    "type": "string",
                                    "description": "Protocols to always log summary.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nhttp-get:HTTP GET.   \nhttp-post:HTTP POST.   \nftp:FTP.   \nnntp:NNTP.   \nmapi:MAPI.   \nssh:SFTP and SCP.   \ncifs:CIFS.",
                                    "enum": [
                                        "smtp",
                                        "pop3",
                                        "imap",
                                        "http-get",
                                        "http-post",
                                        "ftp",
                                        "nntp",
                                        "mapi",
                                        "ssh",
                                        "cifs"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "dlp\/sensor"
                ]
            }
        },
        "\/dlp\/settings": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "storage-device": {
                                    "type": "string",
                                    "description": "Storage device name.",
                                    "maxLength": 35
                                },
                                "size": {
                                    "type": "integer",
                                    "description": "Maximum total size of files within the storage (MB).",
                                    "maximum": 4294967295,
                                    "minimum": 16
                                },
                                "db-mode": {
                                    "type": "string",
                                    "description": "Behaviour when the maximum size is reached.   \nstop-adding:Stop adding entries.   \nremove-modified-then-oldest:Remove modified chunks first, then oldest file entries.   \nremove-oldest:Remove the oldest files first.",
                                    "enum": [
                                        "stop-adding",
                                        "remove-modified-then-oldest",
                                        "remove-oldest"
                                    ]
                                },
                                "cache-mem-percent": {
                                    "type": "integer",
                                    "description": "Maximum percentage of available memory allocated to caching (1 - 15%).",
                                    "maximum": 15,
                                    "minimum": 1
                                },
                                "chunk-size": {
                                    "type": "integer",
                                    "description": "Maximum fingerprint chunk size.  **Changing will flush the entire database**.",
                                    "maximum": 100000,
                                    "minimum": 100
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "dlp\/settings"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "storage-device": {
                                    "type": "string",
                                    "description": "Storage device name.",
                                    "maxLength": 35
                                },
                                "size": {
                                    "type": "integer",
                                    "description": "Maximum total size of files within the storage (MB).",
                                    "maximum": 4294967295,
                                    "minimum": 16
                                },
                                "db-mode": {
                                    "type": "string",
                                    "description": "Behaviour when the maximum size is reached.   \nstop-adding:Stop adding entries.   \nremove-modified-then-oldest:Remove modified chunks first, then oldest file entries.   \nremove-oldest:Remove the oldest files first.",
                                    "enum": [
                                        "stop-adding",
                                        "remove-modified-then-oldest",
                                        "remove-oldest"
                                    ]
                                },
                                "cache-mem-percent": {
                                    "type": "integer",
                                    "description": "Maximum percentage of available memory allocated to caching (1 - 15%).",
                                    "maximum": 15,
                                    "minimum": 1
                                },
                                "chunk-size": {
                                    "type": "integer",
                                    "description": "Maximum fingerprint chunk size.  **Changing will flush the entire database**.",
                                    "maximum": 100000,
                                    "minimum": 100
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "dlp\/settings"
                ]
            }
        }
    }
}