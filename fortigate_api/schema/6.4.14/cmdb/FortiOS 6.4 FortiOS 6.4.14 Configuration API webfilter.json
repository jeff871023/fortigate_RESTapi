{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS CMDB"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/cmdb",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "tags": [
        {
            "name": "webfilter\/content",
            "description": "Configure Web filter banned word table."
        },
        {
            "name": "webfilter\/content-header",
            "description": "Configure content types used by Web filter."
        },
        {
            "name": "webfilter\/fortiguard",
            "description": "Configure FortiGuard Web Filter service."
        },
        {
            "name": "webfilter\/ftgd-local-cat",
            "description": "Configure FortiGuard Web Filter local categories."
        },
        {
            "name": "webfilter\/ftgd-local-rating",
            "description": "Configure local FortiGuard Web Filter local ratings."
        },
        {
            "name": "webfilter\/ips-urlfilter-cache-setting",
            "description": "Configure IPS URL filter cache settings."
        },
        {
            "name": "webfilter\/ips-urlfilter-setting",
            "description": "Configure IPS URL filter settings."
        },
        {
            "name": "webfilter\/ips-urlfilter-setting6",
            "description": "Configure IPS URL filter settings for IPv6."
        },
        {
            "name": "webfilter\/override",
            "description": "Configure FortiGuard Web Filter administrative overrides."
        },
        {
            "name": "webfilter\/profile",
            "description": "Configure Web filter profiles."
        },
        {
            "name": "webfilter\/search-engine",
            "description": "Configure web filter search engines."
        },
        {
            "name": "webfilter\/urlfilter",
            "description": "Configure URL filter lists."
        }
    ],
    "paths": {
        "\/webfilter\/content\/{id}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure banned word entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Banned word.",
                                                "maxLength": 127
                                            },
                                            "pattern-type": {
                                                "type": "string",
                                                "description": "Banned word pattern type: wildcard pattern or Perl regular expression.   \nwildcard:Wildcard pattern.   \nregexp:Perl regular expression.",
                                                "enum": [
                                                    "wildcard",
                                                    "regexp"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable banned word.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "lang": {
                                                "type": "string",
                                                "description": "Language of banned word.   \nwestern:Western.   \nsimch:Simplified Chinese.   \ntrach:Traditional Chinese.   \njapanese:Japanese.   \nkorean:Korean.   \nfrench:French.   \nthai:Thai.   \nspanish:Spanish.   \ncyrillic:Cyrillic.",
                                                "enum": [
                                                    "western",
                                                    "simch",
                                                    "trach",
                                                    "japanese",
                                                    "korean",
                                                    "french",
                                                    "thai",
                                                    "spanish",
                                                    "cyrillic"
                                                ]
                                            },
                                            "score": {
                                                "type": "integer",
                                                "description": "Score, to be applied every time the word appears on a web page (0 - 4294967295, default = 10).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Block or exempt word when a match is found.   \nblock:Block matches.   \nexempt:Exempt matches.",
                                                "enum": [
                                                    "block",
                                                    "exempt"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/content"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure banned word entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Banned word.",
                                                "maxLength": 127
                                            },
                                            "pattern-type": {
                                                "type": "string",
                                                "description": "Banned word pattern type: wildcard pattern or Perl regular expression.   \nwildcard:Wildcard pattern.   \nregexp:Perl regular expression.",
                                                "enum": [
                                                    "wildcard",
                                                    "regexp"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable banned word.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "lang": {
                                                "type": "string",
                                                "description": "Language of banned word.   \nwestern:Western.   \nsimch:Simplified Chinese.   \ntrach:Traditional Chinese.   \njapanese:Japanese.   \nkorean:Korean.   \nfrench:French.   \nthai:Thai.   \nspanish:Spanish.   \ncyrillic:Cyrillic.",
                                                "enum": [
                                                    "western",
                                                    "simch",
                                                    "trach",
                                                    "japanese",
                                                    "korean",
                                                    "french",
                                                    "thai",
                                                    "spanish",
                                                    "cyrillic"
                                                ]
                                            },
                                            "score": {
                                                "type": "integer",
                                                "description": "Score, to be applied every time the word appears on a web page (0 - 4294967295, default = 10).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Block or exempt word when a match is found.   \nblock:Block matches.   \nexempt:Exempt matches.",
                                                "enum": [
                                                    "block",
                                                    "exempt"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/content"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/content"
                ]
            }
        },
        "\/webfilter\/content": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure banned word entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Banned word.",
                                                "maxLength": 127
                                            },
                                            "pattern-type": {
                                                "type": "string",
                                                "description": "Banned word pattern type: wildcard pattern or Perl regular expression.   \nwildcard:Wildcard pattern.   \nregexp:Perl regular expression.",
                                                "enum": [
                                                    "wildcard",
                                                    "regexp"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable banned word.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "lang": {
                                                "type": "string",
                                                "description": "Language of banned word.   \nwestern:Western.   \nsimch:Simplified Chinese.   \ntrach:Traditional Chinese.   \njapanese:Japanese.   \nkorean:Korean.   \nfrench:French.   \nthai:Thai.   \nspanish:Spanish.   \ncyrillic:Cyrillic.",
                                                "enum": [
                                                    "western",
                                                    "simch",
                                                    "trach",
                                                    "japanese",
                                                    "korean",
                                                    "french",
                                                    "thai",
                                                    "spanish",
                                                    "cyrillic"
                                                ]
                                            },
                                            "score": {
                                                "type": "integer",
                                                "description": "Score, to be applied every time the word appears on a web page (0 - 4294967295, default = 10).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Block or exempt word when a match is found.   \nblock:Block matches.   \nexempt:Exempt matches.",
                                                "enum": [
                                                    "block",
                                                    "exempt"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/content"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure banned word entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Banned word.",
                                                "maxLength": 127
                                            },
                                            "pattern-type": {
                                                "type": "string",
                                                "description": "Banned word pattern type: wildcard pattern or Perl regular expression.   \nwildcard:Wildcard pattern.   \nregexp:Perl regular expression.",
                                                "enum": [
                                                    "wildcard",
                                                    "regexp"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable banned word.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "lang": {
                                                "type": "string",
                                                "description": "Language of banned word.   \nwestern:Western.   \nsimch:Simplified Chinese.   \ntrach:Traditional Chinese.   \njapanese:Japanese.   \nkorean:Korean.   \nfrench:French.   \nthai:Thai.   \nspanish:Spanish.   \ncyrillic:Cyrillic.",
                                                "enum": [
                                                    "western",
                                                    "simch",
                                                    "trach",
                                                    "japanese",
                                                    "korean",
                                                    "french",
                                                    "thai",
                                                    "spanish",
                                                    "cyrillic"
                                                ]
                                            },
                                            "score": {
                                                "type": "integer",
                                                "description": "Score, to be applied every time the word appears on a web page (0 - 4294967295, default = 10).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Block or exempt word when a match is found.   \nblock:Block matches.   \nexempt:Exempt matches.",
                                                "enum": [
                                                    "block",
                                                    "exempt"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/content"
                ]
            }
        },
        "\/webfilter\/content-header\/{id}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure content types used by web filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "pattern": {
                                                "type": "string",
                                                "description": "Content type (regular expression).",
                                                "maxLength": 31
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take for this content type.   \nblock:Block content type.   \nallow:Allow content type.   \nexempt:Exempt content type.",
                                                "enum": [
                                                    "block",
                                                    "allow",
                                                    "exempt"
                                                ]
                                            },
                                            "category": {
                                                "type": "string",
                                                "description": "Categories that this content type applies to."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/content-header"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure content types used by web filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "pattern": {
                                                "type": "string",
                                                "description": "Content type (regular expression).",
                                                "maxLength": 31
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take for this content type.   \nblock:Block content type.   \nallow:Allow content type.   \nexempt:Exempt content type.",
                                                "enum": [
                                                    "block",
                                                    "allow",
                                                    "exempt"
                                                ]
                                            },
                                            "category": {
                                                "type": "string",
                                                "description": "Categories that this content type applies to."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/content-header"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/content-header"
                ]
            }
        },
        "\/webfilter\/content-header": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure content types used by web filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "pattern": {
                                                "type": "string",
                                                "description": "Content type (regular expression).",
                                                "maxLength": 31
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take for this content type.   \nblock:Block content type.   \nallow:Allow content type.   \nexempt:Exempt content type.",
                                                "enum": [
                                                    "block",
                                                    "allow",
                                                    "exempt"
                                                ]
                                            },
                                            "category": {
                                                "type": "string",
                                                "description": "Categories that this content type applies to."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/content-header"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of table.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "entries": {
                                    "description": "Configure content types used by web filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "pattern": {
                                                "type": "string",
                                                "description": "Content type (regular expression).",
                                                "maxLength": 31
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take for this content type.   \nblock:Block content type.   \nallow:Allow content type.   \nexempt:Exempt content type.",
                                                "enum": [
                                                    "block",
                                                    "allow",
                                                    "exempt"
                                                ]
                                            },
                                            "category": {
                                                "type": "string",
                                                "description": "Categories that this content type applies to."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/content-header"
                ]
            }
        },
        "\/webfilter\/fortiguard": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "cache-mode": {
                                    "type": "string",
                                    "description": "Cache entry expiration mode.   \nttl:Expire cache items by time-to-live.   \ndb-ver:Expire cache items when the server DB version changes.",
                                    "enum": [
                                        "ttl",
                                        "db-ver"
                                    ]
                                },
                                "cache-prefix-match": {
                                    "type": "string",
                                    "description": "Enable\/disable prefix matching in the cache.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "cache-mem-percent": {
                                    "type": "integer",
                                    "description": "Maximum percentage of available memory allocated to caching (1 - 15%).",
                                    "maximum": 15,
                                    "minimum": 1
                                },
                                "ovrd-auth-port-http": {
                                    "type": "integer",
                                    "description": "Port to use for FortiGuard Web Filter HTTP override authentication",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "ovrd-auth-port-https": {
                                    "type": "integer",
                                    "description": "Port to use for FortiGuard Web Filter HTTPS override authentication in proxy mode.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "ovrd-auth-port-https-flow": {
                                    "type": "integer",
                                    "description": "Port to use for FortiGuard Web Filter HTTPS override authentication in flow mode.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "ovrd-auth-port-warning": {
                                    "type": "integer",
                                    "description": "Port to use for FortiGuard Web Filter Warning override authentication.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "ovrd-auth-https": {
                                    "type": "string",
                                    "description": "Enable\/disable use of HTTPS for override authentication.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "warn-auth-https": {
                                    "type": "string",
                                    "description": "Enable\/disable use of HTTPS for warning and authentication.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "close-ports": {
                                    "type": "string",
                                    "description": "Close ports used for HTTP\/HTTPS override authentication and disable user overrides.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "request-packet-size-limit": {
                                    "type": "integer",
                                    "description": "Limit size of URL request packets sent to FortiGuard server (0 for default).",
                                    "maximum": 10000,
                                    "minimum": 576
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/fortiguard"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "cache-mode": {
                                    "type": "string",
                                    "description": "Cache entry expiration mode.   \nttl:Expire cache items by time-to-live.   \ndb-ver:Expire cache items when the server DB version changes.",
                                    "enum": [
                                        "ttl",
                                        "db-ver"
                                    ]
                                },
                                "cache-prefix-match": {
                                    "type": "string",
                                    "description": "Enable\/disable prefix matching in the cache.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "cache-mem-percent": {
                                    "type": "integer",
                                    "description": "Maximum percentage of available memory allocated to caching (1 - 15%).",
                                    "maximum": 15,
                                    "minimum": 1
                                },
                                "ovrd-auth-port-http": {
                                    "type": "integer",
                                    "description": "Port to use for FortiGuard Web Filter HTTP override authentication",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "ovrd-auth-port-https": {
                                    "type": "integer",
                                    "description": "Port to use for FortiGuard Web Filter HTTPS override authentication in proxy mode.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "ovrd-auth-port-https-flow": {
                                    "type": "integer",
                                    "description": "Port to use for FortiGuard Web Filter HTTPS override authentication in flow mode.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "ovrd-auth-port-warning": {
                                    "type": "integer",
                                    "description": "Port to use for FortiGuard Web Filter Warning override authentication.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "ovrd-auth-https": {
                                    "type": "string",
                                    "description": "Enable\/disable use of HTTPS for override authentication.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "warn-auth-https": {
                                    "type": "string",
                                    "description": "Enable\/disable use of HTTPS for warning and authentication.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "close-ports": {
                                    "type": "string",
                                    "description": "Close ports used for HTTP\/HTTPS override authentication and disable user overrides.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "request-packet-size-limit": {
                                    "type": "integer",
                                    "description": "Limit size of URL request packets sent to FortiGuard server (0 for default).",
                                    "maximum": 10000,
                                    "minimum": 576
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/fortiguard"
                ]
            }
        },
        "\/webfilter\/ftgd-local-cat\/{desc}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable the local category.   \nenable:Enable the local category.   \ndisable:Disable the local category.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Local category ID.",
                                    "maximum": 191,
                                    "minimum": 140
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "Local category description.",
                                    "maxLength": 79
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/ftgd-local-cat"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable the local category.   \nenable:Enable the local category.   \ndisable:Disable the local category.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Local category ID.",
                                    "maximum": 191,
                                    "minimum": 140
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "Local category description.",
                                    "maxLength": 79
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "desc",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/ftgd-local-cat"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "desc",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/ftgd-local-cat"
                ]
            }
        },
        "\/webfilter\/ftgd-local-cat": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable the local category.   \nenable:Enable the local category.   \ndisable:Disable the local category.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Local category ID.",
                                    "maximum": 191,
                                    "minimum": 140
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "Local category description.",
                                    "maxLength": 79
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/ftgd-local-cat"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable the local category.   \nenable:Enable the local category.   \ndisable:Disable the local category.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Local category ID.",
                                    "maximum": 191,
                                    "minimum": 140
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "Local category description.",
                                    "maxLength": 79
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/ftgd-local-cat"
                ]
            }
        },
        "\/webfilter\/ftgd-local-rating\/{url}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "description": "URL to rate locally.",
                                    "maxLength": 511
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable local rating.   \nenable:Enable local rating.   \ndisable:Disable local rating.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "rating": {
                                    "type": "string",
                                    "description": "Local rating."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/ftgd-local-rating"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "description": "URL to rate locally.",
                                    "maxLength": 511
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable local rating.   \nenable:Enable local rating.   \ndisable:Disable local rating.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "rating": {
                                    "type": "string",
                                    "description": "Local rating."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "url",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/ftgd-local-rating"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "url",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/ftgd-local-rating"
                ]
            }
        },
        "\/webfilter\/ftgd-local-rating": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "description": "URL to rate locally.",
                                    "maxLength": 511
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable local rating.   \nenable:Enable local rating.   \ndisable:Disable local rating.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "rating": {
                                    "type": "string",
                                    "description": "Local rating."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/ftgd-local-rating"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "description": "URL to rate locally.",
                                    "maxLength": 511
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable local rating.   \nenable:Enable local rating.   \ndisable:Disable local rating.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "rating": {
                                    "type": "string",
                                    "description": "Local rating."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/ftgd-local-rating"
                ]
            }
        },
        "\/webfilter\/ips-urlfilter-cache-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "dns-retry-interval": {
                                    "type": "integer",
                                    "description": "Retry interval. Refresh DNS faster than TTL to capture multiple IPs for hosts. 0 means use DNS server's TTL only.",
                                    "maximum": 2147483,
                                    "minimum": 0
                                },
                                "extended-ttl": {
                                    "type": "integer",
                                    "description": "Extend time to live beyond reported by DNS. 0 means use DNS server's TTL",
                                    "maximum": 2147483,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/ips-urlfilter-cache-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "dns-retry-interval": {
                                    "type": "integer",
                                    "description": "Retry interval. Refresh DNS faster than TTL to capture multiple IPs for hosts. 0 means use DNS server's TTL only.",
                                    "maximum": 2147483,
                                    "minimum": 0
                                },
                                "extended-ttl": {
                                    "type": "integer",
                                    "description": "Extend time to live beyond reported by DNS. 0 means use DNS server's TTL",
                                    "maximum": 2147483,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/ips-urlfilter-cache-setting"
                ]
            }
        },
        "\/webfilter\/ips-urlfilter-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "device": {
                                    "type": "string",
                                    "description": "Interface for this route.",
                                    "maxLength": 35
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255) for this route.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Gateway IP address for this route."
                                },
                                "geo-filter": {
                                    "type": "string",
                                    "description": "Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/ips-urlfilter-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "device": {
                                    "type": "string",
                                    "description": "Interface for this route.",
                                    "maxLength": 35
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255) for this route.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Gateway IP address for this route."
                                },
                                "geo-filter": {
                                    "type": "string",
                                    "description": "Filter based on geographical location. Route will NOT be installed if the resolved IP address belongs to the country in the filter.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/ips-urlfilter-setting"
                ]
            }
        },
        "\/webfilter\/ips-urlfilter-setting6": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "device": {
                                    "type": "string",
                                    "description": "Interface for this route.",
                                    "maxLength": 35
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255) for this route.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "gateway6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Gateway IPv6 address for this route."
                                },
                                "geo-filter": {
                                    "type": "string",
                                    "description": "Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/ips-urlfilter-setting6"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "device": {
                                    "type": "string",
                                    "description": "Interface for this route.",
                                    "maxLength": 35
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255) for this route.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "gateway6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Gateway IPv6 address for this route."
                                },
                                "geo-filter": {
                                    "type": "string",
                                    "description": "Filter based on geographical location. Route will NOT be installed if the resolved IPv6 address belongs to the country in the filter.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/ips-urlfilter-setting6"
                ]
            }
        },
        "\/webfilter\/override\/{id}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Override rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable override rule.   \nenable:Enable override rule.   \ndisable:Disable override rule.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "Override either the specific user, user group, IPv4 address, or IPv6 address.   \nuser:Override the specified user.   \nuser-group:Override the specified user group.   \nip:Override the specified IP address.   \nip6:Override the specified IPv6 address.",
                                    "enum": [
                                        "user",
                                        "user-group",
                                        "ip",
                                        "ip6"
                                    ]
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address which the override applies."
                                },
                                "user": {
                                    "type": "string",
                                    "description": "Name of the user which the override applies.",
                                    "maxLength": 64
                                },
                                "user-group": {
                                    "type": "string",
                                    "description": "Specify the user group for which the override applies.",
                                    "maxLength": 63
                                },
                                "old-profile": {
                                    "type": "string",
                                    "description": "Name of the web filter profile which the override applies.",
                                    "maxLength": 35
                                },
                                "new-profile": {
                                    "type": "string",
                                    "description": "Name of the new web filter profile used by the override.",
                                    "maxLength": 35
                                },
                                "ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address which the override applies."
                                },
                                "expires": {
                                    "type": "string",
                                    "description": "Override expiration date and time, from 5 minutes to 365 from now (format: yyyy\/mm\/dd hh:mm:ss)."
                                },
                                "initiator": {
                                    "type": "string",
                                    "description": "Initiating user of override (read-only setting).",
                                    "maxLength": 64
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/override"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Override rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable override rule.   \nenable:Enable override rule.   \ndisable:Disable override rule.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "Override either the specific user, user group, IPv4 address, or IPv6 address.   \nuser:Override the specified user.   \nuser-group:Override the specified user group.   \nip:Override the specified IP address.   \nip6:Override the specified IPv6 address.",
                                    "enum": [
                                        "user",
                                        "user-group",
                                        "ip",
                                        "ip6"
                                    ]
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address which the override applies."
                                },
                                "user": {
                                    "type": "string",
                                    "description": "Name of the user which the override applies.",
                                    "maxLength": 64
                                },
                                "user-group": {
                                    "type": "string",
                                    "description": "Specify the user group for which the override applies.",
                                    "maxLength": 63
                                },
                                "old-profile": {
                                    "type": "string",
                                    "description": "Name of the web filter profile which the override applies.",
                                    "maxLength": 35
                                },
                                "new-profile": {
                                    "type": "string",
                                    "description": "Name of the new web filter profile used by the override.",
                                    "maxLength": 35
                                },
                                "ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address which the override applies."
                                },
                                "expires": {
                                    "type": "string",
                                    "description": "Override expiration date and time, from 5 minutes to 365 from now (format: yyyy\/mm\/dd hh:mm:ss)."
                                },
                                "initiator": {
                                    "type": "string",
                                    "description": "Initiating user of override (read-only setting).",
                                    "maxLength": 64
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/override"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/override"
                ]
            }
        },
        "\/webfilter\/override": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Override rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable override rule.   \nenable:Enable override rule.   \ndisable:Disable override rule.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "Override either the specific user, user group, IPv4 address, or IPv6 address.   \nuser:Override the specified user.   \nuser-group:Override the specified user group.   \nip:Override the specified IP address.   \nip6:Override the specified IPv6 address.",
                                    "enum": [
                                        "user",
                                        "user-group",
                                        "ip",
                                        "ip6"
                                    ]
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address which the override applies."
                                },
                                "user": {
                                    "type": "string",
                                    "description": "Name of the user which the override applies.",
                                    "maxLength": 64
                                },
                                "user-group": {
                                    "type": "string",
                                    "description": "Specify the user group for which the override applies.",
                                    "maxLength": 63
                                },
                                "old-profile": {
                                    "type": "string",
                                    "description": "Name of the web filter profile which the override applies.",
                                    "maxLength": 35
                                },
                                "new-profile": {
                                    "type": "string",
                                    "description": "Name of the new web filter profile used by the override.",
                                    "maxLength": 35
                                },
                                "ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address which the override applies."
                                },
                                "expires": {
                                    "type": "string",
                                    "description": "Override expiration date and time, from 5 minutes to 365 from now (format: yyyy\/mm\/dd hh:mm:ss)."
                                },
                                "initiator": {
                                    "type": "string",
                                    "description": "Initiating user of override (read-only setting).",
                                    "maxLength": 64
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/override"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Override rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable override rule.   \nenable:Enable override rule.   \ndisable:Disable override rule.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "Override either the specific user, user group, IPv4 address, or IPv6 address.   \nuser:Override the specified user.   \nuser-group:Override the specified user group.   \nip:Override the specified IP address.   \nip6:Override the specified IPv6 address.",
                                    "enum": [
                                        "user",
                                        "user-group",
                                        "ip",
                                        "ip6"
                                    ]
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address which the override applies."
                                },
                                "user": {
                                    "type": "string",
                                    "description": "Name of the user which the override applies.",
                                    "maxLength": 64
                                },
                                "user-group": {
                                    "type": "string",
                                    "description": "Specify the user group for which the override applies.",
                                    "maxLength": 63
                                },
                                "old-profile": {
                                    "type": "string",
                                    "description": "Name of the web filter profile which the override applies.",
                                    "maxLength": 35
                                },
                                "new-profile": {
                                    "type": "string",
                                    "description": "Name of the new web filter profile used by the override.",
                                    "maxLength": 35
                                },
                                "ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address which the override applies."
                                },
                                "expires": {
                                    "type": "string",
                                    "description": "Override expiration date and time, from 5 minutes to 365 from now (format: yyyy\/mm\/dd hh:mm:ss)."
                                },
                                "initiator": {
                                    "type": "string",
                                    "description": "Initiating user of override (read-only setting).",
                                    "maxLength": 64
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/override"
                ]
            }
        },
        "\/webfilter\/profile\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Profile name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "feature-set": {
                                    "type": "string",
                                    "description": "Flow\/proxy feature set.   \nflow:Flow feature set.   \nproxy:Proxy feature set.",
                                    "enum": [
                                        "flow",
                                        "proxy"
                                    ]
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Options.   \nactivexfilter:ActiveX filter.   \ncookiefilter:Cookie filter.   \njavafilter:Java applet filter.   \nblock-invalid-url:Block sessions contained an invalid domain name.   \njscript:Javascript block.   \njs:JS block.   \nvbs:VB script block.   \nunknown:Unknown script block.   \nintrinsic:Intrinsic script block.   \nwf-referer:Referring block.   \nwf-cookie:Cookie block.",
                                    "enum": [
                                        "activexfilter",
                                        "cookiefilter",
                                        "javafilter",
                                        "block-invalid-url",
                                        "jscript",
                                        "js",
                                        "vbs",
                                        "unknown",
                                        "intrinsic",
                                        "wf-referer",
                                        "wf-cookie"
                                    ]
                                },
                                "https-replacemsg": {
                                    "type": "string",
                                    "description": "Enable replacement messages for HTTPS.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ovrd-perm": {
                                    "type": "string",
                                    "description": "Permitted override types.   \nbannedword-override:Banned word override.   \nurlfilter-override:URL filter override.   \nfortiguard-wf-override:FortiGuard Web Filter override.   \ncontenttype-check-override:Content-type header override.",
                                    "enum": [
                                        "bannedword-override",
                                        "urlfilter-override",
                                        "fortiguard-wf-override",
                                        "contenttype-check-override"
                                    ]
                                },
                                "post-action": {
                                    "type": "string",
                                    "description": "Action taken for HTTP POST traffic.   \nnormal:Normal, POST requests are allowed.   \nblock:POST requests are blocked.",
                                    "enum": [
                                        "normal",
                                        "block"
                                    ]
                                },
                                "override": {
                                    "description": "Web Filter override settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ovrd-cookie": {
                                                "type": "string",
                                                "description": "Allow\/deny browser-based (cookie) overrides.   \nallow:Allow browser-based (cookie) override.   \ndeny:Deny browser-based (cookie) override.",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ]
                                            },
                                            "ovrd-scope": {
                                                "type": "string",
                                                "description": "Override scope.   \nuser:Override for the user.   \nuser-group:Override for the user's group.   \nip:Override for the initiating IP.   \nbrowser:Create browser-based (cookie) override.   \nask:Prompt for scope when initiating an override.",
                                                "enum": [
                                                    "user",
                                                    "user-group",
                                                    "ip",
                                                    "browser",
                                                    "ask"
                                                ]
                                            },
                                            "profile-type": {
                                                "type": "string",
                                                "description": "Override profile type.   \nlist:Profile chosen from list.   \nradius:Profile determined by RADIUS server.",
                                                "enum": [
                                                    "list",
                                                    "radius"
                                                ]
                                            },
                                            "ovrd-dur-mode": {
                                                "type": "string",
                                                "description": "Override duration mode.   \nconstant:Constant mode.   \nask:Prompt for duration when initiating an override.",
                                                "enum": [
                                                    "constant",
                                                    "ask"
                                                ]
                                            },
                                            "ovrd-dur": {
                                                "type": "string",
                                                "description": "Override duration."
                                            },
                                            "profile-attribute": {
                                                "type": "string",
                                                "description": "Profile attribute to retrieve from the RADIUS server.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                                "enum": [
                                                    "User-Name",
                                                    "NAS-IP-Address",
                                                    "Framed-IP-Address",
                                                    "Framed-IP-Netmask",
                                                    "Filter-Id",
                                                    "Login-IP-Host",
                                                    "Reply-Message",
                                                    "Callback-Number",
                                                    "Callback-Id",
                                                    "Framed-Route",
                                                    "Framed-IPX-Network",
                                                    "Class",
                                                    "Called-Station-Id",
                                                    "Calling-Station-Id",
                                                    "NAS-Identifier",
                                                    "Proxy-State",
                                                    "Login-LAT-Service",
                                                    "Login-LAT-Node",
                                                    "Login-LAT-Group",
                                                    "Framed-AppleTalk-Zone",
                                                    "Acct-Session-Id",
                                                    "Acct-Multi-Session-Id"
                                                ]
                                            },
                                            "ovrd-user-group": {
                                                "description": "User groups with permission to use the override.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "User group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "profile": {
                                                "description": "Web filter profile with permission to create overrides.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Web profile.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "web": {
                                    "description": "Web content filtering settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "bword-threshold": {
                                                "type": "integer",
                                                "description": "Banned word score threshold.",
                                                "maximum": 2147483647,
                                                "minimum": 0
                                            },
                                            "bword-table": {
                                                "type": "integer",
                                                "description": "Banned word table ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "urlfilter-table": {
                                                "type": "integer",
                                                "description": "URL filter table ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "content-header-list": {
                                                "type": "integer",
                                                "description": "Content header list.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "blacklist": {
                                                "type": "string",
                                                "description": "Enable\/disable automatic addition of URLs detected by FortiSandbox to blacklist.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "whitelist": {
                                                "type": "string",
                                                "description": "FortiGuard whitelist settings.   \nexempt-av:Exempt antivirus.   \nexempt-webcontent:Exempt web content.   \nexempt-activex-java-cookie:Exempt ActiveX-JAVA-Cookie.   \nexempt-dlp:Exempt DLP.   \nexempt-rangeblock:Exempt RangeBlock.   \nextended-log-others:Support extended log.",
                                                "enum": [
                                                    "exempt-av",
                                                    "exempt-webcontent",
                                                    "exempt-activex-java-cookie",
                                                    "exempt-dlp",
                                                    "exempt-rangeblock",
                                                    "extended-log-others"
                                                ]
                                            },
                                            "safe-search": {
                                                "type": "string",
                                                "description": "Safe search type.   \nurl:Insert safe search string into URL.   \nheader:Insert safe search header.",
                                                "enum": [
                                                    "url",
                                                    "header"
                                                ]
                                            },
                                            "youtube-restrict": {
                                                "type": "string",
                                                "description": "YouTube EDU filter level.   \nnone:Full access for YouTube.   \nstrict:Strict access for YouTube.   \nmoderate:Moderate access for YouTube.",
                                                "enum": [
                                                    "none",
                                                    "strict",
                                                    "moderate"
                                                ]
                                            },
                                            "log-search": {
                                                "type": "string",
                                                "description": "Enable\/disable logging all search phrases.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "keyword-match": {
                                                "description": "Search keywords to log when match is found.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "pattern": {
                                                            "type": "string",
                                                            "description": "Pattern\/keyword to search for.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "youtube-channel-status": {
                                    "type": "string",
                                    "description": "YouTube channel filter status.   \ndisable:Disable YouTube channel filter.   \nblacklist:Block matches.   \nwhitelist:Allow matches.",
                                    "enum": [
                                        "disable",
                                        "blacklist",
                                        "whitelist"
                                    ]
                                },
                                "youtube-channel-filter": {
                                    "description": "YouTube channel filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "channel-id": {
                                                "type": "string",
                                                "description": "YouTube channel ID to be filtered.",
                                                "maxLength": 255
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "Comment.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ftgd-wf": {
                                    "description": "FortiGuard Web Filter settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "options": {
                                                "type": "string",
                                                "description": "Options for FortiGuard Web Filter.   \nerror-allow:Allow web pages with a rating error to pass through.   \nrate-server-ip:Rate the server IP in addition to the domain name.   \nconnect-request-bypass:Bypass connection which has CONNECT request.   \nftgd-disable:Disable FortiGuard scanning.",
                                                "enum": [
                                                    "error-allow",
                                                    "rate-server-ip",
                                                    "connect-request-bypass",
                                                    "ftgd-disable"
                                                ]
                                            },
                                            "exempt-quota": {
                                                "type": "string",
                                                "description": "Do not stop quota for these categories."
                                            },
                                            "ovrd": {
                                                "type": "string",
                                                "description": "Allow web filter profile overrides."
                                            },
                                            "filters": {
                                                "description": "FortiGuard filters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID number.",
                                                            "maximum": 255,
                                                            "minimum": 0
                                                        },
                                                        "category": {
                                                            "type": "integer",
                                                            "description": "Categories and groups the filter examines.",
                                                            "maximum": 255,
                                                            "minimum": 0
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "Action to take for matches.   \nblock:Block access.   \nauthenticate:Authenticate user before allowing access.   \nmonitor:Allow access while logging the action.   \nwarning:Allow access after warning the user.",
                                                            "enum": [
                                                                "block",
                                                                "authenticate",
                                                                "monitor",
                                                                "warning"
                                                            ]
                                                        },
                                                        "warn-duration": {
                                                            "type": "string",
                                                            "description": "Duration of warnings."
                                                        },
                                                        "auth-usr-grp": {
                                                            "description": "Groups with permission to authenticate.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "User group name.",
                                                                        "maxLength": 79
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        },
                                                        "log": {
                                                            "type": "string",
                                                            "description": "Enable\/disable logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "override-replacemsg": {
                                                            "type": "string",
                                                            "description": "Override replacement message.",
                                                            "maxLength": 28
                                                        },
                                                        "warning-prompt": {
                                                            "type": "string",
                                                            "description": "Warning prompts in each category or each domain.   \nper-domain:Per-domain warnings.   \nper-category:Per-category warnings.",
                                                            "enum": [
                                                                "per-domain",
                                                                "per-category"
                                                            ]
                                                        },
                                                        "warning-duration-type": {
                                                            "type": "string",
                                                            "description": "Re-display warning after closing browser or after a timeout.   \nsession:After session ends.   \ntimeout:After timeout occurs.",
                                                            "enum": [
                                                                "session",
                                                                "timeout"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "quota": {
                                                "description": "FortiGuard traffic quota settings.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID number.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "description": "FortiGuard categories to apply quota to (category action must be set to monitor)."
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": "Quota type.   \ntime:Use a time-based quota.   \ntraffic:Use a traffic-based quota.",
                                                            "enum": [
                                                                "time",
                                                                "traffic"
                                                            ]
                                                        },
                                                        "unit": {
                                                            "type": "string",
                                                            "description": "Traffic quota unit of measurement.   \nB:Quota in bytes.   \nKB:Quota in kilobytes.   \nMB:Quota in megabytes.   \nGB:Quota in gigabytes.",
                                                            "enum": [
                                                                "B",
                                                                "KB",
                                                                "MB",
                                                                "GB"
                                                            ]
                                                        },
                                                        "value": {
                                                            "type": "integer",
                                                            "description": "Traffic quota value.",
                                                            "maximum": 4294967295,
                                                            "minimum": 1
                                                        },
                                                        "duration": {
                                                            "type": "string",
                                                            "description": "Duration of quota."
                                                        },
                                                        "override-replacemsg": {
                                                            "type": "string",
                                                            "description": "Override replacement message.",
                                                            "maxLength": 28
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "max-quota-timeout": {
                                                "type": "integer",
                                                "description": "Maximum FortiGuard quota used by single page view in seconds (excludes streams).",
                                                "maximum": 86400,
                                                "minimum": 1
                                            },
                                            "rate-javascript-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating JavaScript by URL.   \ndisable:Disable rating JavaScript by URL.   \nenable:Enable rating JavaScript by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-css-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating CSS by URL.   \ndisable:Disable rating CSS by URL.   \nenable:Enable rating CSS by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-crl-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating CRL by URL.   \ndisable:Disable rating CRL by URL.   \nenable:Enable rating CRL by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "antiphish": {
                                    "description": "AntiPhishing profile.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "string",
                                                "description": "Toggle AntiPhishing functionality.   \nenable:Enable AntiPhishing functionality.   \ndisable:Disable AntiPhishing functionality.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "domain-controller": {
                                                "type": "string",
                                                "description": "Domain for which to verify received credentials against.",
                                                "maxLength": 63
                                            },
                                            "default-action": {
                                                "type": "string",
                                                "description": "Action to be taken when there is no matching rule.   \nexempt:Exempt requests from matching.   \nlog:Log all matched requests.   \nblock:Block all matched requests.",
                                                "enum": [
                                                    "exempt",
                                                    "log",
                                                    "block"
                                                ]
                                            },
                                            "check-uri": {
                                                "type": "string",
                                                "description": "Enable\/disable checking of GET URI parameters for known credentials.   \nenable:Enable checking of GET URI for username and password fields.   \ndisable:Disable checking of GET URI for username and password fields.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "check-basic-auth": {
                                                "type": "string",
                                                "description": "Enable\/disable checking of HTTP Basic Auth field for known credentials.   \nenable:Enable checking of HTTP Basic Auth field for known credentials.   \ndisable:Disable checking of HTTP Basic Auth field for known credentials.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "check-username-only": {
                                                "type": "string",
                                                "description": "Enable\/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity.   \nenable:Enable acting only on valid username credentials.   \ndisable:Disable acting only on valid username credentials.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "max-body-len": {
                                                "type": "integer",
                                                "description": "Maximum size of a POST body to check for credentials.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "inspection-entries": {
                                                "description": "AntiPhishing entries.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Inspection target name.",
                                                            "maxLength": 63
                                                        },
                                                        "fortiguard-category": {
                                                            "type": "string",
                                                            "description": "FortiGuard category to match."
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "Action to be taken upon an AntiPhishing match.   \nexempt:Exempt requests from matching.   \nlog:Log all matched requests.   \nblock:Block all matched requests.",
                                                            "enum": [
                                                                "exempt",
                                                                "log",
                                                                "block"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "custom-patterns": {
                                                "description": "Custom username and password regex patterns.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "pattern": {
                                                            "type": "string",
                                                            "description": "Target pattern.",
                                                            "maxLength": 255
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "description": "Category that the pattern matches.   \nusername:Pattern matches username fields.   \npassword:Pattern matches password fields.",
                                                            "enum": [
                                                                "username",
                                                                "password"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "wisp": {
                                    "type": "string",
                                    "description": "Enable\/disable web proxy WISP.   \nenable:Enable web proxy WISP.   \ndisable:Disable web proxy WISP.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "wisp-servers": {
                                    "description": "WISP servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "wisp-algorithm": {
                                    "type": "string",
                                    "description": "WISP server selection algorithm.   \nprimary-secondary:Select the first healthy server in order.   \nround-robin:Select the next healthy server.   \nauto-learning:Select the lightest loading healthy server.",
                                    "enum": [
                                        "primary-secondary",
                                        "round-robin",
                                        "auto-learning"
                                    ]
                                },
                                "log-all-url": {
                                    "type": "string",
                                    "description": "Enable\/disable logging all URLs visited.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-content-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging logging blocked web content.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-activex-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging ActiveX.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-command-block-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging blocked commands.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-cookie-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging cookie filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-applet-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging Java applets.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-jscript-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging JScripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-js-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging Java scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-vbs-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging VBS scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-unknown-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging unknown scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-referer-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging referrers.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-cookie-removal-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging blocked cookies.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-url-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging URL filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-invalid-domain-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging invalid domain names.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-ftgd-err-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging rating errors.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-ftgd-quota-usage": {
                                    "type": "string",
                                    "description": "Enable\/disable logging daily quota usage.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging for web filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-extended-all-action-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended any filter action logging for web filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-antiphishing-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging of AntiPhishing checks.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/profile"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Profile name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "feature-set": {
                                    "type": "string",
                                    "description": "Flow\/proxy feature set.   \nflow:Flow feature set.   \nproxy:Proxy feature set.",
                                    "enum": [
                                        "flow",
                                        "proxy"
                                    ]
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Options.   \nactivexfilter:ActiveX filter.   \ncookiefilter:Cookie filter.   \njavafilter:Java applet filter.   \nblock-invalid-url:Block sessions contained an invalid domain name.   \njscript:Javascript block.   \njs:JS block.   \nvbs:VB script block.   \nunknown:Unknown script block.   \nintrinsic:Intrinsic script block.   \nwf-referer:Referring block.   \nwf-cookie:Cookie block.",
                                    "enum": [
                                        "activexfilter",
                                        "cookiefilter",
                                        "javafilter",
                                        "block-invalid-url",
                                        "jscript",
                                        "js",
                                        "vbs",
                                        "unknown",
                                        "intrinsic",
                                        "wf-referer",
                                        "wf-cookie"
                                    ]
                                },
                                "https-replacemsg": {
                                    "type": "string",
                                    "description": "Enable replacement messages for HTTPS.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ovrd-perm": {
                                    "type": "string",
                                    "description": "Permitted override types.   \nbannedword-override:Banned word override.   \nurlfilter-override:URL filter override.   \nfortiguard-wf-override:FortiGuard Web Filter override.   \ncontenttype-check-override:Content-type header override.",
                                    "enum": [
                                        "bannedword-override",
                                        "urlfilter-override",
                                        "fortiguard-wf-override",
                                        "contenttype-check-override"
                                    ]
                                },
                                "post-action": {
                                    "type": "string",
                                    "description": "Action taken for HTTP POST traffic.   \nnormal:Normal, POST requests are allowed.   \nblock:POST requests are blocked.",
                                    "enum": [
                                        "normal",
                                        "block"
                                    ]
                                },
                                "override": {
                                    "description": "Web Filter override settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ovrd-cookie": {
                                                "type": "string",
                                                "description": "Allow\/deny browser-based (cookie) overrides.   \nallow:Allow browser-based (cookie) override.   \ndeny:Deny browser-based (cookie) override.",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ]
                                            },
                                            "ovrd-scope": {
                                                "type": "string",
                                                "description": "Override scope.   \nuser:Override for the user.   \nuser-group:Override for the user's group.   \nip:Override for the initiating IP.   \nbrowser:Create browser-based (cookie) override.   \nask:Prompt for scope when initiating an override.",
                                                "enum": [
                                                    "user",
                                                    "user-group",
                                                    "ip",
                                                    "browser",
                                                    "ask"
                                                ]
                                            },
                                            "profile-type": {
                                                "type": "string",
                                                "description": "Override profile type.   \nlist:Profile chosen from list.   \nradius:Profile determined by RADIUS server.",
                                                "enum": [
                                                    "list",
                                                    "radius"
                                                ]
                                            },
                                            "ovrd-dur-mode": {
                                                "type": "string",
                                                "description": "Override duration mode.   \nconstant:Constant mode.   \nask:Prompt for duration when initiating an override.",
                                                "enum": [
                                                    "constant",
                                                    "ask"
                                                ]
                                            },
                                            "ovrd-dur": {
                                                "type": "string",
                                                "description": "Override duration."
                                            },
                                            "profile-attribute": {
                                                "type": "string",
                                                "description": "Profile attribute to retrieve from the RADIUS server.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                                "enum": [
                                                    "User-Name",
                                                    "NAS-IP-Address",
                                                    "Framed-IP-Address",
                                                    "Framed-IP-Netmask",
                                                    "Filter-Id",
                                                    "Login-IP-Host",
                                                    "Reply-Message",
                                                    "Callback-Number",
                                                    "Callback-Id",
                                                    "Framed-Route",
                                                    "Framed-IPX-Network",
                                                    "Class",
                                                    "Called-Station-Id",
                                                    "Calling-Station-Id",
                                                    "NAS-Identifier",
                                                    "Proxy-State",
                                                    "Login-LAT-Service",
                                                    "Login-LAT-Node",
                                                    "Login-LAT-Group",
                                                    "Framed-AppleTalk-Zone",
                                                    "Acct-Session-Id",
                                                    "Acct-Multi-Session-Id"
                                                ]
                                            },
                                            "ovrd-user-group": {
                                                "description": "User groups with permission to use the override.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "User group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "profile": {
                                                "description": "Web filter profile with permission to create overrides.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Web profile.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "web": {
                                    "description": "Web content filtering settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "bword-threshold": {
                                                "type": "integer",
                                                "description": "Banned word score threshold.",
                                                "maximum": 2147483647,
                                                "minimum": 0
                                            },
                                            "bword-table": {
                                                "type": "integer",
                                                "description": "Banned word table ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "urlfilter-table": {
                                                "type": "integer",
                                                "description": "URL filter table ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "content-header-list": {
                                                "type": "integer",
                                                "description": "Content header list.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "blacklist": {
                                                "type": "string",
                                                "description": "Enable\/disable automatic addition of URLs detected by FortiSandbox to blacklist.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "whitelist": {
                                                "type": "string",
                                                "description": "FortiGuard whitelist settings.   \nexempt-av:Exempt antivirus.   \nexempt-webcontent:Exempt web content.   \nexempt-activex-java-cookie:Exempt ActiveX-JAVA-Cookie.   \nexempt-dlp:Exempt DLP.   \nexempt-rangeblock:Exempt RangeBlock.   \nextended-log-others:Support extended log.",
                                                "enum": [
                                                    "exempt-av",
                                                    "exempt-webcontent",
                                                    "exempt-activex-java-cookie",
                                                    "exempt-dlp",
                                                    "exempt-rangeblock",
                                                    "extended-log-others"
                                                ]
                                            },
                                            "safe-search": {
                                                "type": "string",
                                                "description": "Safe search type.   \nurl:Insert safe search string into URL.   \nheader:Insert safe search header.",
                                                "enum": [
                                                    "url",
                                                    "header"
                                                ]
                                            },
                                            "youtube-restrict": {
                                                "type": "string",
                                                "description": "YouTube EDU filter level.   \nnone:Full access for YouTube.   \nstrict:Strict access for YouTube.   \nmoderate:Moderate access for YouTube.",
                                                "enum": [
                                                    "none",
                                                    "strict",
                                                    "moderate"
                                                ]
                                            },
                                            "log-search": {
                                                "type": "string",
                                                "description": "Enable\/disable logging all search phrases.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "keyword-match": {
                                                "description": "Search keywords to log when match is found.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "pattern": {
                                                            "type": "string",
                                                            "description": "Pattern\/keyword to search for.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "youtube-channel-status": {
                                    "type": "string",
                                    "description": "YouTube channel filter status.   \ndisable:Disable YouTube channel filter.   \nblacklist:Block matches.   \nwhitelist:Allow matches.",
                                    "enum": [
                                        "disable",
                                        "blacklist",
                                        "whitelist"
                                    ]
                                },
                                "youtube-channel-filter": {
                                    "description": "YouTube channel filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "channel-id": {
                                                "type": "string",
                                                "description": "YouTube channel ID to be filtered.",
                                                "maxLength": 255
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "Comment.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ftgd-wf": {
                                    "description": "FortiGuard Web Filter settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "options": {
                                                "type": "string",
                                                "description": "Options for FortiGuard Web Filter.   \nerror-allow:Allow web pages with a rating error to pass through.   \nrate-server-ip:Rate the server IP in addition to the domain name.   \nconnect-request-bypass:Bypass connection which has CONNECT request.   \nftgd-disable:Disable FortiGuard scanning.",
                                                "enum": [
                                                    "error-allow",
                                                    "rate-server-ip",
                                                    "connect-request-bypass",
                                                    "ftgd-disable"
                                                ]
                                            },
                                            "exempt-quota": {
                                                "type": "string",
                                                "description": "Do not stop quota for these categories."
                                            },
                                            "ovrd": {
                                                "type": "string",
                                                "description": "Allow web filter profile overrides."
                                            },
                                            "filters": {
                                                "description": "FortiGuard filters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID number.",
                                                            "maximum": 255,
                                                            "minimum": 0
                                                        },
                                                        "category": {
                                                            "type": "integer",
                                                            "description": "Categories and groups the filter examines.",
                                                            "maximum": 255,
                                                            "minimum": 0
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "Action to take for matches.   \nblock:Block access.   \nauthenticate:Authenticate user before allowing access.   \nmonitor:Allow access while logging the action.   \nwarning:Allow access after warning the user.",
                                                            "enum": [
                                                                "block",
                                                                "authenticate",
                                                                "monitor",
                                                                "warning"
                                                            ]
                                                        },
                                                        "warn-duration": {
                                                            "type": "string",
                                                            "description": "Duration of warnings."
                                                        },
                                                        "auth-usr-grp": {
                                                            "description": "Groups with permission to authenticate.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "User group name.",
                                                                        "maxLength": 79
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        },
                                                        "log": {
                                                            "type": "string",
                                                            "description": "Enable\/disable logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "override-replacemsg": {
                                                            "type": "string",
                                                            "description": "Override replacement message.",
                                                            "maxLength": 28
                                                        },
                                                        "warning-prompt": {
                                                            "type": "string",
                                                            "description": "Warning prompts in each category or each domain.   \nper-domain:Per-domain warnings.   \nper-category:Per-category warnings.",
                                                            "enum": [
                                                                "per-domain",
                                                                "per-category"
                                                            ]
                                                        },
                                                        "warning-duration-type": {
                                                            "type": "string",
                                                            "description": "Re-display warning after closing browser or after a timeout.   \nsession:After session ends.   \ntimeout:After timeout occurs.",
                                                            "enum": [
                                                                "session",
                                                                "timeout"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "quota": {
                                                "description": "FortiGuard traffic quota settings.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID number.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "description": "FortiGuard categories to apply quota to (category action must be set to monitor)."
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": "Quota type.   \ntime:Use a time-based quota.   \ntraffic:Use a traffic-based quota.",
                                                            "enum": [
                                                                "time",
                                                                "traffic"
                                                            ]
                                                        },
                                                        "unit": {
                                                            "type": "string",
                                                            "description": "Traffic quota unit of measurement.   \nB:Quota in bytes.   \nKB:Quota in kilobytes.   \nMB:Quota in megabytes.   \nGB:Quota in gigabytes.",
                                                            "enum": [
                                                                "B",
                                                                "KB",
                                                                "MB",
                                                                "GB"
                                                            ]
                                                        },
                                                        "value": {
                                                            "type": "integer",
                                                            "description": "Traffic quota value.",
                                                            "maximum": 4294967295,
                                                            "minimum": 1
                                                        },
                                                        "duration": {
                                                            "type": "string",
                                                            "description": "Duration of quota."
                                                        },
                                                        "override-replacemsg": {
                                                            "type": "string",
                                                            "description": "Override replacement message.",
                                                            "maxLength": 28
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "max-quota-timeout": {
                                                "type": "integer",
                                                "description": "Maximum FortiGuard quota used by single page view in seconds (excludes streams).",
                                                "maximum": 86400,
                                                "minimum": 1
                                            },
                                            "rate-javascript-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating JavaScript by URL.   \ndisable:Disable rating JavaScript by URL.   \nenable:Enable rating JavaScript by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-css-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating CSS by URL.   \ndisable:Disable rating CSS by URL.   \nenable:Enable rating CSS by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-crl-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating CRL by URL.   \ndisable:Disable rating CRL by URL.   \nenable:Enable rating CRL by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "antiphish": {
                                    "description": "AntiPhishing profile.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "string",
                                                "description": "Toggle AntiPhishing functionality.   \nenable:Enable AntiPhishing functionality.   \ndisable:Disable AntiPhishing functionality.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "domain-controller": {
                                                "type": "string",
                                                "description": "Domain for which to verify received credentials against.",
                                                "maxLength": 63
                                            },
                                            "default-action": {
                                                "type": "string",
                                                "description": "Action to be taken when there is no matching rule.   \nexempt:Exempt requests from matching.   \nlog:Log all matched requests.   \nblock:Block all matched requests.",
                                                "enum": [
                                                    "exempt",
                                                    "log",
                                                    "block"
                                                ]
                                            },
                                            "check-uri": {
                                                "type": "string",
                                                "description": "Enable\/disable checking of GET URI parameters for known credentials.   \nenable:Enable checking of GET URI for username and password fields.   \ndisable:Disable checking of GET URI for username and password fields.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "check-basic-auth": {
                                                "type": "string",
                                                "description": "Enable\/disable checking of HTTP Basic Auth field for known credentials.   \nenable:Enable checking of HTTP Basic Auth field for known credentials.   \ndisable:Disable checking of HTTP Basic Auth field for known credentials.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "check-username-only": {
                                                "type": "string",
                                                "description": "Enable\/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity.   \nenable:Enable acting only on valid username credentials.   \ndisable:Disable acting only on valid username credentials.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "max-body-len": {
                                                "type": "integer",
                                                "description": "Maximum size of a POST body to check for credentials.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "inspection-entries": {
                                                "description": "AntiPhishing entries.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Inspection target name.",
                                                            "maxLength": 63
                                                        },
                                                        "fortiguard-category": {
                                                            "type": "string",
                                                            "description": "FortiGuard category to match."
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "Action to be taken upon an AntiPhishing match.   \nexempt:Exempt requests from matching.   \nlog:Log all matched requests.   \nblock:Block all matched requests.",
                                                            "enum": [
                                                                "exempt",
                                                                "log",
                                                                "block"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "custom-patterns": {
                                                "description": "Custom username and password regex patterns.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "pattern": {
                                                            "type": "string",
                                                            "description": "Target pattern.",
                                                            "maxLength": 255
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "description": "Category that the pattern matches.   \nusername:Pattern matches username fields.   \npassword:Pattern matches password fields.",
                                                            "enum": [
                                                                "username",
                                                                "password"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "wisp": {
                                    "type": "string",
                                    "description": "Enable\/disable web proxy WISP.   \nenable:Enable web proxy WISP.   \ndisable:Disable web proxy WISP.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "wisp-servers": {
                                    "description": "WISP servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "wisp-algorithm": {
                                    "type": "string",
                                    "description": "WISP server selection algorithm.   \nprimary-secondary:Select the first healthy server in order.   \nround-robin:Select the next healthy server.   \nauto-learning:Select the lightest loading healthy server.",
                                    "enum": [
                                        "primary-secondary",
                                        "round-robin",
                                        "auto-learning"
                                    ]
                                },
                                "log-all-url": {
                                    "type": "string",
                                    "description": "Enable\/disable logging all URLs visited.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-content-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging logging blocked web content.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-activex-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging ActiveX.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-command-block-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging blocked commands.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-cookie-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging cookie filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-applet-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging Java applets.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-jscript-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging JScripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-js-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging Java scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-vbs-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging VBS scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-unknown-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging unknown scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-referer-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging referrers.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-cookie-removal-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging blocked cookies.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-url-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging URL filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-invalid-domain-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging invalid domain names.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-ftgd-err-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging rating errors.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-ftgd-quota-usage": {
                                    "type": "string",
                                    "description": "Enable\/disable logging daily quota usage.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging for web filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-extended-all-action-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended any filter action logging for web filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-antiphishing-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging of AntiPhishing checks.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/profile"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/profile"
                ]
            }
        },
        "\/webfilter\/profile": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Profile name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "feature-set": {
                                    "type": "string",
                                    "description": "Flow\/proxy feature set.   \nflow:Flow feature set.   \nproxy:Proxy feature set.",
                                    "enum": [
                                        "flow",
                                        "proxy"
                                    ]
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Options.   \nactivexfilter:ActiveX filter.   \ncookiefilter:Cookie filter.   \njavafilter:Java applet filter.   \nblock-invalid-url:Block sessions contained an invalid domain name.   \njscript:Javascript block.   \njs:JS block.   \nvbs:VB script block.   \nunknown:Unknown script block.   \nintrinsic:Intrinsic script block.   \nwf-referer:Referring block.   \nwf-cookie:Cookie block.",
                                    "enum": [
                                        "activexfilter",
                                        "cookiefilter",
                                        "javafilter",
                                        "block-invalid-url",
                                        "jscript",
                                        "js",
                                        "vbs",
                                        "unknown",
                                        "intrinsic",
                                        "wf-referer",
                                        "wf-cookie"
                                    ]
                                },
                                "https-replacemsg": {
                                    "type": "string",
                                    "description": "Enable replacement messages for HTTPS.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ovrd-perm": {
                                    "type": "string",
                                    "description": "Permitted override types.   \nbannedword-override:Banned word override.   \nurlfilter-override:URL filter override.   \nfortiguard-wf-override:FortiGuard Web Filter override.   \ncontenttype-check-override:Content-type header override.",
                                    "enum": [
                                        "bannedword-override",
                                        "urlfilter-override",
                                        "fortiguard-wf-override",
                                        "contenttype-check-override"
                                    ]
                                },
                                "post-action": {
                                    "type": "string",
                                    "description": "Action taken for HTTP POST traffic.   \nnormal:Normal, POST requests are allowed.   \nblock:POST requests are blocked.",
                                    "enum": [
                                        "normal",
                                        "block"
                                    ]
                                },
                                "override": {
                                    "description": "Web Filter override settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ovrd-cookie": {
                                                "type": "string",
                                                "description": "Allow\/deny browser-based (cookie) overrides.   \nallow:Allow browser-based (cookie) override.   \ndeny:Deny browser-based (cookie) override.",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ]
                                            },
                                            "ovrd-scope": {
                                                "type": "string",
                                                "description": "Override scope.   \nuser:Override for the user.   \nuser-group:Override for the user's group.   \nip:Override for the initiating IP.   \nbrowser:Create browser-based (cookie) override.   \nask:Prompt for scope when initiating an override.",
                                                "enum": [
                                                    "user",
                                                    "user-group",
                                                    "ip",
                                                    "browser",
                                                    "ask"
                                                ]
                                            },
                                            "profile-type": {
                                                "type": "string",
                                                "description": "Override profile type.   \nlist:Profile chosen from list.   \nradius:Profile determined by RADIUS server.",
                                                "enum": [
                                                    "list",
                                                    "radius"
                                                ]
                                            },
                                            "ovrd-dur-mode": {
                                                "type": "string",
                                                "description": "Override duration mode.   \nconstant:Constant mode.   \nask:Prompt for duration when initiating an override.",
                                                "enum": [
                                                    "constant",
                                                    "ask"
                                                ]
                                            },
                                            "ovrd-dur": {
                                                "type": "string",
                                                "description": "Override duration."
                                            },
                                            "profile-attribute": {
                                                "type": "string",
                                                "description": "Profile attribute to retrieve from the RADIUS server.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                                "enum": [
                                                    "User-Name",
                                                    "NAS-IP-Address",
                                                    "Framed-IP-Address",
                                                    "Framed-IP-Netmask",
                                                    "Filter-Id",
                                                    "Login-IP-Host",
                                                    "Reply-Message",
                                                    "Callback-Number",
                                                    "Callback-Id",
                                                    "Framed-Route",
                                                    "Framed-IPX-Network",
                                                    "Class",
                                                    "Called-Station-Id",
                                                    "Calling-Station-Id",
                                                    "NAS-Identifier",
                                                    "Proxy-State",
                                                    "Login-LAT-Service",
                                                    "Login-LAT-Node",
                                                    "Login-LAT-Group",
                                                    "Framed-AppleTalk-Zone",
                                                    "Acct-Session-Id",
                                                    "Acct-Multi-Session-Id"
                                                ]
                                            },
                                            "ovrd-user-group": {
                                                "description": "User groups with permission to use the override.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "User group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "profile": {
                                                "description": "Web filter profile with permission to create overrides.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Web profile.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "web": {
                                    "description": "Web content filtering settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "bword-threshold": {
                                                "type": "integer",
                                                "description": "Banned word score threshold.",
                                                "maximum": 2147483647,
                                                "minimum": 0
                                            },
                                            "bword-table": {
                                                "type": "integer",
                                                "description": "Banned word table ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "urlfilter-table": {
                                                "type": "integer",
                                                "description": "URL filter table ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "content-header-list": {
                                                "type": "integer",
                                                "description": "Content header list.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "blacklist": {
                                                "type": "string",
                                                "description": "Enable\/disable automatic addition of URLs detected by FortiSandbox to blacklist.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "whitelist": {
                                                "type": "string",
                                                "description": "FortiGuard whitelist settings.   \nexempt-av:Exempt antivirus.   \nexempt-webcontent:Exempt web content.   \nexempt-activex-java-cookie:Exempt ActiveX-JAVA-Cookie.   \nexempt-dlp:Exempt DLP.   \nexempt-rangeblock:Exempt RangeBlock.   \nextended-log-others:Support extended log.",
                                                "enum": [
                                                    "exempt-av",
                                                    "exempt-webcontent",
                                                    "exempt-activex-java-cookie",
                                                    "exempt-dlp",
                                                    "exempt-rangeblock",
                                                    "extended-log-others"
                                                ]
                                            },
                                            "safe-search": {
                                                "type": "string",
                                                "description": "Safe search type.   \nurl:Insert safe search string into URL.   \nheader:Insert safe search header.",
                                                "enum": [
                                                    "url",
                                                    "header"
                                                ]
                                            },
                                            "youtube-restrict": {
                                                "type": "string",
                                                "description": "YouTube EDU filter level.   \nnone:Full access for YouTube.   \nstrict:Strict access for YouTube.   \nmoderate:Moderate access for YouTube.",
                                                "enum": [
                                                    "none",
                                                    "strict",
                                                    "moderate"
                                                ]
                                            },
                                            "log-search": {
                                                "type": "string",
                                                "description": "Enable\/disable logging all search phrases.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "keyword-match": {
                                                "description": "Search keywords to log when match is found.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "pattern": {
                                                            "type": "string",
                                                            "description": "Pattern\/keyword to search for.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "youtube-channel-status": {
                                    "type": "string",
                                    "description": "YouTube channel filter status.   \ndisable:Disable YouTube channel filter.   \nblacklist:Block matches.   \nwhitelist:Allow matches.",
                                    "enum": [
                                        "disable",
                                        "blacklist",
                                        "whitelist"
                                    ]
                                },
                                "youtube-channel-filter": {
                                    "description": "YouTube channel filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "channel-id": {
                                                "type": "string",
                                                "description": "YouTube channel ID to be filtered.",
                                                "maxLength": 255
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "Comment.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ftgd-wf": {
                                    "description": "FortiGuard Web Filter settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "options": {
                                                "type": "string",
                                                "description": "Options for FortiGuard Web Filter.   \nerror-allow:Allow web pages with a rating error to pass through.   \nrate-server-ip:Rate the server IP in addition to the domain name.   \nconnect-request-bypass:Bypass connection which has CONNECT request.   \nftgd-disable:Disable FortiGuard scanning.",
                                                "enum": [
                                                    "error-allow",
                                                    "rate-server-ip",
                                                    "connect-request-bypass",
                                                    "ftgd-disable"
                                                ]
                                            },
                                            "exempt-quota": {
                                                "type": "string",
                                                "description": "Do not stop quota for these categories."
                                            },
                                            "ovrd": {
                                                "type": "string",
                                                "description": "Allow web filter profile overrides."
                                            },
                                            "filters": {
                                                "description": "FortiGuard filters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID number.",
                                                            "maximum": 255,
                                                            "minimum": 0
                                                        },
                                                        "category": {
                                                            "type": "integer",
                                                            "description": "Categories and groups the filter examines.",
                                                            "maximum": 255,
                                                            "minimum": 0
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "Action to take for matches.   \nblock:Block access.   \nauthenticate:Authenticate user before allowing access.   \nmonitor:Allow access while logging the action.   \nwarning:Allow access after warning the user.",
                                                            "enum": [
                                                                "block",
                                                                "authenticate",
                                                                "monitor",
                                                                "warning"
                                                            ]
                                                        },
                                                        "warn-duration": {
                                                            "type": "string",
                                                            "description": "Duration of warnings."
                                                        },
                                                        "auth-usr-grp": {
                                                            "description": "Groups with permission to authenticate.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "User group name.",
                                                                        "maxLength": 79
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        },
                                                        "log": {
                                                            "type": "string",
                                                            "description": "Enable\/disable logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "override-replacemsg": {
                                                            "type": "string",
                                                            "description": "Override replacement message.",
                                                            "maxLength": 28
                                                        },
                                                        "warning-prompt": {
                                                            "type": "string",
                                                            "description": "Warning prompts in each category or each domain.   \nper-domain:Per-domain warnings.   \nper-category:Per-category warnings.",
                                                            "enum": [
                                                                "per-domain",
                                                                "per-category"
                                                            ]
                                                        },
                                                        "warning-duration-type": {
                                                            "type": "string",
                                                            "description": "Re-display warning after closing browser or after a timeout.   \nsession:After session ends.   \ntimeout:After timeout occurs.",
                                                            "enum": [
                                                                "session",
                                                                "timeout"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "quota": {
                                                "description": "FortiGuard traffic quota settings.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID number.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "description": "FortiGuard categories to apply quota to (category action must be set to monitor)."
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": "Quota type.   \ntime:Use a time-based quota.   \ntraffic:Use a traffic-based quota.",
                                                            "enum": [
                                                                "time",
                                                                "traffic"
                                                            ]
                                                        },
                                                        "unit": {
                                                            "type": "string",
                                                            "description": "Traffic quota unit of measurement.   \nB:Quota in bytes.   \nKB:Quota in kilobytes.   \nMB:Quota in megabytes.   \nGB:Quota in gigabytes.",
                                                            "enum": [
                                                                "B",
                                                                "KB",
                                                                "MB",
                                                                "GB"
                                                            ]
                                                        },
                                                        "value": {
                                                            "type": "integer",
                                                            "description": "Traffic quota value.",
                                                            "maximum": 4294967295,
                                                            "minimum": 1
                                                        },
                                                        "duration": {
                                                            "type": "string",
                                                            "description": "Duration of quota."
                                                        },
                                                        "override-replacemsg": {
                                                            "type": "string",
                                                            "description": "Override replacement message.",
                                                            "maxLength": 28
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "max-quota-timeout": {
                                                "type": "integer",
                                                "description": "Maximum FortiGuard quota used by single page view in seconds (excludes streams).",
                                                "maximum": 86400,
                                                "minimum": 1
                                            },
                                            "rate-javascript-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating JavaScript by URL.   \ndisable:Disable rating JavaScript by URL.   \nenable:Enable rating JavaScript by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-css-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating CSS by URL.   \ndisable:Disable rating CSS by URL.   \nenable:Enable rating CSS by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-crl-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating CRL by URL.   \ndisable:Disable rating CRL by URL.   \nenable:Enable rating CRL by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "antiphish": {
                                    "description": "AntiPhishing profile.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "string",
                                                "description": "Toggle AntiPhishing functionality.   \nenable:Enable AntiPhishing functionality.   \ndisable:Disable AntiPhishing functionality.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "domain-controller": {
                                                "type": "string",
                                                "description": "Domain for which to verify received credentials against.",
                                                "maxLength": 63
                                            },
                                            "default-action": {
                                                "type": "string",
                                                "description": "Action to be taken when there is no matching rule.   \nexempt:Exempt requests from matching.   \nlog:Log all matched requests.   \nblock:Block all matched requests.",
                                                "enum": [
                                                    "exempt",
                                                    "log",
                                                    "block"
                                                ]
                                            },
                                            "check-uri": {
                                                "type": "string",
                                                "description": "Enable\/disable checking of GET URI parameters for known credentials.   \nenable:Enable checking of GET URI for username and password fields.   \ndisable:Disable checking of GET URI for username and password fields.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "check-basic-auth": {
                                                "type": "string",
                                                "description": "Enable\/disable checking of HTTP Basic Auth field for known credentials.   \nenable:Enable checking of HTTP Basic Auth field for known credentials.   \ndisable:Disable checking of HTTP Basic Auth field for known credentials.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "check-username-only": {
                                                "type": "string",
                                                "description": "Enable\/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity.   \nenable:Enable acting only on valid username credentials.   \ndisable:Disable acting only on valid username credentials.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "max-body-len": {
                                                "type": "integer",
                                                "description": "Maximum size of a POST body to check for credentials.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "inspection-entries": {
                                                "description": "AntiPhishing entries.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Inspection target name.",
                                                            "maxLength": 63
                                                        },
                                                        "fortiguard-category": {
                                                            "type": "string",
                                                            "description": "FortiGuard category to match."
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "Action to be taken upon an AntiPhishing match.   \nexempt:Exempt requests from matching.   \nlog:Log all matched requests.   \nblock:Block all matched requests.",
                                                            "enum": [
                                                                "exempt",
                                                                "log",
                                                                "block"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "custom-patterns": {
                                                "description": "Custom username and password regex patterns.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "pattern": {
                                                            "type": "string",
                                                            "description": "Target pattern.",
                                                            "maxLength": 255
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "description": "Category that the pattern matches.   \nusername:Pattern matches username fields.   \npassword:Pattern matches password fields.",
                                                            "enum": [
                                                                "username",
                                                                "password"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "wisp": {
                                    "type": "string",
                                    "description": "Enable\/disable web proxy WISP.   \nenable:Enable web proxy WISP.   \ndisable:Disable web proxy WISP.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "wisp-servers": {
                                    "description": "WISP servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "wisp-algorithm": {
                                    "type": "string",
                                    "description": "WISP server selection algorithm.   \nprimary-secondary:Select the first healthy server in order.   \nround-robin:Select the next healthy server.   \nauto-learning:Select the lightest loading healthy server.",
                                    "enum": [
                                        "primary-secondary",
                                        "round-robin",
                                        "auto-learning"
                                    ]
                                },
                                "log-all-url": {
                                    "type": "string",
                                    "description": "Enable\/disable logging all URLs visited.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-content-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging logging blocked web content.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-activex-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging ActiveX.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-command-block-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging blocked commands.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-cookie-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging cookie filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-applet-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging Java applets.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-jscript-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging JScripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-js-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging Java scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-vbs-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging VBS scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-unknown-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging unknown scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-referer-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging referrers.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-cookie-removal-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging blocked cookies.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-url-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging URL filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-invalid-domain-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging invalid domain names.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-ftgd-err-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging rating errors.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-ftgd-quota-usage": {
                                    "type": "string",
                                    "description": "Enable\/disable logging daily quota usage.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging for web filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-extended-all-action-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended any filter action logging for web filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-antiphishing-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging of AntiPhishing checks.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/profile"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Profile name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "feature-set": {
                                    "type": "string",
                                    "description": "Flow\/proxy feature set.   \nflow:Flow feature set.   \nproxy:Proxy feature set.",
                                    "enum": [
                                        "flow",
                                        "proxy"
                                    ]
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Options.   \nactivexfilter:ActiveX filter.   \ncookiefilter:Cookie filter.   \njavafilter:Java applet filter.   \nblock-invalid-url:Block sessions contained an invalid domain name.   \njscript:Javascript block.   \njs:JS block.   \nvbs:VB script block.   \nunknown:Unknown script block.   \nintrinsic:Intrinsic script block.   \nwf-referer:Referring block.   \nwf-cookie:Cookie block.",
                                    "enum": [
                                        "activexfilter",
                                        "cookiefilter",
                                        "javafilter",
                                        "block-invalid-url",
                                        "jscript",
                                        "js",
                                        "vbs",
                                        "unknown",
                                        "intrinsic",
                                        "wf-referer",
                                        "wf-cookie"
                                    ]
                                },
                                "https-replacemsg": {
                                    "type": "string",
                                    "description": "Enable replacement messages for HTTPS.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ovrd-perm": {
                                    "type": "string",
                                    "description": "Permitted override types.   \nbannedword-override:Banned word override.   \nurlfilter-override:URL filter override.   \nfortiguard-wf-override:FortiGuard Web Filter override.   \ncontenttype-check-override:Content-type header override.",
                                    "enum": [
                                        "bannedword-override",
                                        "urlfilter-override",
                                        "fortiguard-wf-override",
                                        "contenttype-check-override"
                                    ]
                                },
                                "post-action": {
                                    "type": "string",
                                    "description": "Action taken for HTTP POST traffic.   \nnormal:Normal, POST requests are allowed.   \nblock:POST requests are blocked.",
                                    "enum": [
                                        "normal",
                                        "block"
                                    ]
                                },
                                "override": {
                                    "description": "Web Filter override settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ovrd-cookie": {
                                                "type": "string",
                                                "description": "Allow\/deny browser-based (cookie) overrides.   \nallow:Allow browser-based (cookie) override.   \ndeny:Deny browser-based (cookie) override.",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ]
                                            },
                                            "ovrd-scope": {
                                                "type": "string",
                                                "description": "Override scope.   \nuser:Override for the user.   \nuser-group:Override for the user's group.   \nip:Override for the initiating IP.   \nbrowser:Create browser-based (cookie) override.   \nask:Prompt for scope when initiating an override.",
                                                "enum": [
                                                    "user",
                                                    "user-group",
                                                    "ip",
                                                    "browser",
                                                    "ask"
                                                ]
                                            },
                                            "profile-type": {
                                                "type": "string",
                                                "description": "Override profile type.   \nlist:Profile chosen from list.   \nradius:Profile determined by RADIUS server.",
                                                "enum": [
                                                    "list",
                                                    "radius"
                                                ]
                                            },
                                            "ovrd-dur-mode": {
                                                "type": "string",
                                                "description": "Override duration mode.   \nconstant:Constant mode.   \nask:Prompt for duration when initiating an override.",
                                                "enum": [
                                                    "constant",
                                                    "ask"
                                                ]
                                            },
                                            "ovrd-dur": {
                                                "type": "string",
                                                "description": "Override duration."
                                            },
                                            "profile-attribute": {
                                                "type": "string",
                                                "description": "Profile attribute to retrieve from the RADIUS server.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                                "enum": [
                                                    "User-Name",
                                                    "NAS-IP-Address",
                                                    "Framed-IP-Address",
                                                    "Framed-IP-Netmask",
                                                    "Filter-Id",
                                                    "Login-IP-Host",
                                                    "Reply-Message",
                                                    "Callback-Number",
                                                    "Callback-Id",
                                                    "Framed-Route",
                                                    "Framed-IPX-Network",
                                                    "Class",
                                                    "Called-Station-Id",
                                                    "Calling-Station-Id",
                                                    "NAS-Identifier",
                                                    "Proxy-State",
                                                    "Login-LAT-Service",
                                                    "Login-LAT-Node",
                                                    "Login-LAT-Group",
                                                    "Framed-AppleTalk-Zone",
                                                    "Acct-Session-Id",
                                                    "Acct-Multi-Session-Id"
                                                ]
                                            },
                                            "ovrd-user-group": {
                                                "description": "User groups with permission to use the override.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "User group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "profile": {
                                                "description": "Web filter profile with permission to create overrides.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Web profile.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "web": {
                                    "description": "Web content filtering settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "bword-threshold": {
                                                "type": "integer",
                                                "description": "Banned word score threshold.",
                                                "maximum": 2147483647,
                                                "minimum": 0
                                            },
                                            "bword-table": {
                                                "type": "integer",
                                                "description": "Banned word table ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "urlfilter-table": {
                                                "type": "integer",
                                                "description": "URL filter table ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "content-header-list": {
                                                "type": "integer",
                                                "description": "Content header list.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "blacklist": {
                                                "type": "string",
                                                "description": "Enable\/disable automatic addition of URLs detected by FortiSandbox to blacklist.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "whitelist": {
                                                "type": "string",
                                                "description": "FortiGuard whitelist settings.   \nexempt-av:Exempt antivirus.   \nexempt-webcontent:Exempt web content.   \nexempt-activex-java-cookie:Exempt ActiveX-JAVA-Cookie.   \nexempt-dlp:Exempt DLP.   \nexempt-rangeblock:Exempt RangeBlock.   \nextended-log-others:Support extended log.",
                                                "enum": [
                                                    "exempt-av",
                                                    "exempt-webcontent",
                                                    "exempt-activex-java-cookie",
                                                    "exempt-dlp",
                                                    "exempt-rangeblock",
                                                    "extended-log-others"
                                                ]
                                            },
                                            "safe-search": {
                                                "type": "string",
                                                "description": "Safe search type.   \nurl:Insert safe search string into URL.   \nheader:Insert safe search header.",
                                                "enum": [
                                                    "url",
                                                    "header"
                                                ]
                                            },
                                            "youtube-restrict": {
                                                "type": "string",
                                                "description": "YouTube EDU filter level.   \nnone:Full access for YouTube.   \nstrict:Strict access for YouTube.   \nmoderate:Moderate access for YouTube.",
                                                "enum": [
                                                    "none",
                                                    "strict",
                                                    "moderate"
                                                ]
                                            },
                                            "log-search": {
                                                "type": "string",
                                                "description": "Enable\/disable logging all search phrases.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "keyword-match": {
                                                "description": "Search keywords to log when match is found.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "pattern": {
                                                            "type": "string",
                                                            "description": "Pattern\/keyword to search for.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "youtube-channel-status": {
                                    "type": "string",
                                    "description": "YouTube channel filter status.   \ndisable:Disable YouTube channel filter.   \nblacklist:Block matches.   \nwhitelist:Allow matches.",
                                    "enum": [
                                        "disable",
                                        "blacklist",
                                        "whitelist"
                                    ]
                                },
                                "youtube-channel-filter": {
                                    "description": "YouTube channel filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "channel-id": {
                                                "type": "string",
                                                "description": "YouTube channel ID to be filtered.",
                                                "maxLength": 255
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "Comment.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ftgd-wf": {
                                    "description": "FortiGuard Web Filter settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "options": {
                                                "type": "string",
                                                "description": "Options for FortiGuard Web Filter.   \nerror-allow:Allow web pages with a rating error to pass through.   \nrate-server-ip:Rate the server IP in addition to the domain name.   \nconnect-request-bypass:Bypass connection which has CONNECT request.   \nftgd-disable:Disable FortiGuard scanning.",
                                                "enum": [
                                                    "error-allow",
                                                    "rate-server-ip",
                                                    "connect-request-bypass",
                                                    "ftgd-disable"
                                                ]
                                            },
                                            "exempt-quota": {
                                                "type": "string",
                                                "description": "Do not stop quota for these categories."
                                            },
                                            "ovrd": {
                                                "type": "string",
                                                "description": "Allow web filter profile overrides."
                                            },
                                            "filters": {
                                                "description": "FortiGuard filters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID number.",
                                                            "maximum": 255,
                                                            "minimum": 0
                                                        },
                                                        "category": {
                                                            "type": "integer",
                                                            "description": "Categories and groups the filter examines.",
                                                            "maximum": 255,
                                                            "minimum": 0
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "Action to take for matches.   \nblock:Block access.   \nauthenticate:Authenticate user before allowing access.   \nmonitor:Allow access while logging the action.   \nwarning:Allow access after warning the user.",
                                                            "enum": [
                                                                "block",
                                                                "authenticate",
                                                                "monitor",
                                                                "warning"
                                                            ]
                                                        },
                                                        "warn-duration": {
                                                            "type": "string",
                                                            "description": "Duration of warnings."
                                                        },
                                                        "auth-usr-grp": {
                                                            "description": "Groups with permission to authenticate.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "User group name.",
                                                                        "maxLength": 79
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        },
                                                        "log": {
                                                            "type": "string",
                                                            "description": "Enable\/disable logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "override-replacemsg": {
                                                            "type": "string",
                                                            "description": "Override replacement message.",
                                                            "maxLength": 28
                                                        },
                                                        "warning-prompt": {
                                                            "type": "string",
                                                            "description": "Warning prompts in each category or each domain.   \nper-domain:Per-domain warnings.   \nper-category:Per-category warnings.",
                                                            "enum": [
                                                                "per-domain",
                                                                "per-category"
                                                            ]
                                                        },
                                                        "warning-duration-type": {
                                                            "type": "string",
                                                            "description": "Re-display warning after closing browser or after a timeout.   \nsession:After session ends.   \ntimeout:After timeout occurs.",
                                                            "enum": [
                                                                "session",
                                                                "timeout"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "quota": {
                                                "description": "FortiGuard traffic quota settings.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID number.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "description": "FortiGuard categories to apply quota to (category action must be set to monitor)."
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": "Quota type.   \ntime:Use a time-based quota.   \ntraffic:Use a traffic-based quota.",
                                                            "enum": [
                                                                "time",
                                                                "traffic"
                                                            ]
                                                        },
                                                        "unit": {
                                                            "type": "string",
                                                            "description": "Traffic quota unit of measurement.   \nB:Quota in bytes.   \nKB:Quota in kilobytes.   \nMB:Quota in megabytes.   \nGB:Quota in gigabytes.",
                                                            "enum": [
                                                                "B",
                                                                "KB",
                                                                "MB",
                                                                "GB"
                                                            ]
                                                        },
                                                        "value": {
                                                            "type": "integer",
                                                            "description": "Traffic quota value.",
                                                            "maximum": 4294967295,
                                                            "minimum": 1
                                                        },
                                                        "duration": {
                                                            "type": "string",
                                                            "description": "Duration of quota."
                                                        },
                                                        "override-replacemsg": {
                                                            "type": "string",
                                                            "description": "Override replacement message.",
                                                            "maxLength": 28
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "max-quota-timeout": {
                                                "type": "integer",
                                                "description": "Maximum FortiGuard quota used by single page view in seconds (excludes streams).",
                                                "maximum": 86400,
                                                "minimum": 1
                                            },
                                            "rate-javascript-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating JavaScript by URL.   \ndisable:Disable rating JavaScript by URL.   \nenable:Enable rating JavaScript by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-css-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating CSS by URL.   \ndisable:Disable rating CSS by URL.   \nenable:Enable rating CSS by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-crl-urls": {
                                                "type": "string",
                                                "description": "Enable\/disable rating CRL by URL.   \ndisable:Disable rating CRL by URL.   \nenable:Enable rating CRL by URL.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "antiphish": {
                                    "description": "AntiPhishing profile.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "string",
                                                "description": "Toggle AntiPhishing functionality.   \nenable:Enable AntiPhishing functionality.   \ndisable:Disable AntiPhishing functionality.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "domain-controller": {
                                                "type": "string",
                                                "description": "Domain for which to verify received credentials against.",
                                                "maxLength": 63
                                            },
                                            "default-action": {
                                                "type": "string",
                                                "description": "Action to be taken when there is no matching rule.   \nexempt:Exempt requests from matching.   \nlog:Log all matched requests.   \nblock:Block all matched requests.",
                                                "enum": [
                                                    "exempt",
                                                    "log",
                                                    "block"
                                                ]
                                            },
                                            "check-uri": {
                                                "type": "string",
                                                "description": "Enable\/disable checking of GET URI parameters for known credentials.   \nenable:Enable checking of GET URI for username and password fields.   \ndisable:Disable checking of GET URI for username and password fields.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "check-basic-auth": {
                                                "type": "string",
                                                "description": "Enable\/disable checking of HTTP Basic Auth field for known credentials.   \nenable:Enable checking of HTTP Basic Auth field for known credentials.   \ndisable:Disable checking of HTTP Basic Auth field for known credentials.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "check-username-only": {
                                                "type": "string",
                                                "description": "Enable\/disable acting only on valid username credentials. Action will be taken for valid usernames regardless of password validity.   \nenable:Enable acting only on valid username credentials.   \ndisable:Disable acting only on valid username credentials.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "max-body-len": {
                                                "type": "integer",
                                                "description": "Maximum size of a POST body to check for credentials.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "inspection-entries": {
                                                "description": "AntiPhishing entries.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Inspection target name.",
                                                            "maxLength": 63
                                                        },
                                                        "fortiguard-category": {
                                                            "type": "string",
                                                            "description": "FortiGuard category to match."
                                                        },
                                                        "action": {
                                                            "type": "string",
                                                            "description": "Action to be taken upon an AntiPhishing match.   \nexempt:Exempt requests from matching.   \nlog:Log all matched requests.   \nblock:Block all matched requests.",
                                                            "enum": [
                                                                "exempt",
                                                                "log",
                                                                "block"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "custom-patterns": {
                                                "description": "Custom username and password regex patterns.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "pattern": {
                                                            "type": "string",
                                                            "description": "Target pattern.",
                                                            "maxLength": 255
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "description": "Category that the pattern matches.   \nusername:Pattern matches username fields.   \npassword:Pattern matches password fields.",
                                                            "enum": [
                                                                "username",
                                                                "password"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "wisp": {
                                    "type": "string",
                                    "description": "Enable\/disable web proxy WISP.   \nenable:Enable web proxy WISP.   \ndisable:Disable web proxy WISP.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "wisp-servers": {
                                    "description": "WISP servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "wisp-algorithm": {
                                    "type": "string",
                                    "description": "WISP server selection algorithm.   \nprimary-secondary:Select the first healthy server in order.   \nround-robin:Select the next healthy server.   \nauto-learning:Select the lightest loading healthy server.",
                                    "enum": [
                                        "primary-secondary",
                                        "round-robin",
                                        "auto-learning"
                                    ]
                                },
                                "log-all-url": {
                                    "type": "string",
                                    "description": "Enable\/disable logging all URLs visited.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-content-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging logging blocked web content.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-activex-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging ActiveX.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-command-block-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging blocked commands.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-cookie-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging cookie filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-applet-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging Java applets.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-jscript-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging JScripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-js-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging Java scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-vbs-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging VBS scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-unknown-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging unknown scripts.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-referer-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging referrers.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-filter-cookie-removal-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging blocked cookies.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-url-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging URL filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-invalid-domain-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging invalid domain names.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-ftgd-err-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging rating errors.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-ftgd-quota-usage": {
                                    "type": "string",
                                    "description": "Enable\/disable logging daily quota usage.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging for web filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-extended-all-action-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended any filter action logging for web filtering.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "web-antiphishing-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging of AntiPhishing checks.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/profile"
                ]
            }
        },
        "\/webfilter\/search-engine\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Search engine name.",
                                    "maxLength": 35
                                },
                                "hostname": {
                                    "type": "string",
                                    "description": "Hostname (regular expression).",
                                    "maxLength": 127
                                },
                                "url": {
                                    "type": "string",
                                    "description": "URL (regular expression).",
                                    "maxLength": 127
                                },
                                "query": {
                                    "type": "string",
                                    "description": "Code used to prefix a query (must end with an equals character).",
                                    "maxLength": 15
                                },
                                "safesearch": {
                                    "type": "string",
                                    "description": "Safe search method. You can disable safe search, add the safe search string to URLs, or insert a safe search header.   \ndisable:Site does not support safe search.   \nurl:Safe search selected with a parameter in the URL.   \nheader:Safe search selected by search header (i.e. youtube.edu).   \ntranslate:Perform URL FortiGuard check on HTTP requests parameter.   \nyt-pattern:Pattern to match YouTube channel ID.   \nyt-scan:Perform IPS scan.   \nyt-video:Pattern to match YouTube video name.   \nyt-channel:Pattern to match YouTube channel name.",
                                    "enum": [
                                        "disable",
                                        "url",
                                        "header",
                                        "translate",
                                        "yt-pattern",
                                        "yt-scan",
                                        "yt-video",
                                        "yt-channel"
                                    ]
                                },
                                "charset": {
                                    "type": "string",
                                    "description": "Search engine charset.   \nutf-8:UTF-8 encoding.   \ngb2312:GB2312 encoding.",
                                    "enum": [
                                        "utf-8",
                                        "gb2312"
                                    ]
                                },
                                "safesearch-str": {
                                    "type": "string",
                                    "description": "Safe search parameter used in the URL.",
                                    "maxLength": 79
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/search-engine"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Search engine name.",
                                    "maxLength": 35
                                },
                                "hostname": {
                                    "type": "string",
                                    "description": "Hostname (regular expression).",
                                    "maxLength": 127
                                },
                                "url": {
                                    "type": "string",
                                    "description": "URL (regular expression).",
                                    "maxLength": 127
                                },
                                "query": {
                                    "type": "string",
                                    "description": "Code used to prefix a query (must end with an equals character).",
                                    "maxLength": 15
                                },
                                "safesearch": {
                                    "type": "string",
                                    "description": "Safe search method. You can disable safe search, add the safe search string to URLs, or insert a safe search header.   \ndisable:Site does not support safe search.   \nurl:Safe search selected with a parameter in the URL.   \nheader:Safe search selected by search header (i.e. youtube.edu).   \ntranslate:Perform URL FortiGuard check on HTTP requests parameter.   \nyt-pattern:Pattern to match YouTube channel ID.   \nyt-scan:Perform IPS scan.   \nyt-video:Pattern to match YouTube video name.   \nyt-channel:Pattern to match YouTube channel name.",
                                    "enum": [
                                        "disable",
                                        "url",
                                        "header",
                                        "translate",
                                        "yt-pattern",
                                        "yt-scan",
                                        "yt-video",
                                        "yt-channel"
                                    ]
                                },
                                "charset": {
                                    "type": "string",
                                    "description": "Search engine charset.   \nutf-8:UTF-8 encoding.   \ngb2312:GB2312 encoding.",
                                    "enum": [
                                        "utf-8",
                                        "gb2312"
                                    ]
                                },
                                "safesearch-str": {
                                    "type": "string",
                                    "description": "Safe search parameter used in the URL.",
                                    "maxLength": 79
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/search-engine"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/search-engine"
                ]
            }
        },
        "\/webfilter\/search-engine": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Search engine name.",
                                    "maxLength": 35
                                },
                                "hostname": {
                                    "type": "string",
                                    "description": "Hostname (regular expression).",
                                    "maxLength": 127
                                },
                                "url": {
                                    "type": "string",
                                    "description": "URL (regular expression).",
                                    "maxLength": 127
                                },
                                "query": {
                                    "type": "string",
                                    "description": "Code used to prefix a query (must end with an equals character).",
                                    "maxLength": 15
                                },
                                "safesearch": {
                                    "type": "string",
                                    "description": "Safe search method. You can disable safe search, add the safe search string to URLs, or insert a safe search header.   \ndisable:Site does not support safe search.   \nurl:Safe search selected with a parameter in the URL.   \nheader:Safe search selected by search header (i.e. youtube.edu).   \ntranslate:Perform URL FortiGuard check on HTTP requests parameter.   \nyt-pattern:Pattern to match YouTube channel ID.   \nyt-scan:Perform IPS scan.   \nyt-video:Pattern to match YouTube video name.   \nyt-channel:Pattern to match YouTube channel name.",
                                    "enum": [
                                        "disable",
                                        "url",
                                        "header",
                                        "translate",
                                        "yt-pattern",
                                        "yt-scan",
                                        "yt-video",
                                        "yt-channel"
                                    ]
                                },
                                "charset": {
                                    "type": "string",
                                    "description": "Search engine charset.   \nutf-8:UTF-8 encoding.   \ngb2312:GB2312 encoding.",
                                    "enum": [
                                        "utf-8",
                                        "gb2312"
                                    ]
                                },
                                "safesearch-str": {
                                    "type": "string",
                                    "description": "Safe search parameter used in the URL.",
                                    "maxLength": 79
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/search-engine"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Search engine name.",
                                    "maxLength": 35
                                },
                                "hostname": {
                                    "type": "string",
                                    "description": "Hostname (regular expression).",
                                    "maxLength": 127
                                },
                                "url": {
                                    "type": "string",
                                    "description": "URL (regular expression).",
                                    "maxLength": 127
                                },
                                "query": {
                                    "type": "string",
                                    "description": "Code used to prefix a query (must end with an equals character).",
                                    "maxLength": 15
                                },
                                "safesearch": {
                                    "type": "string",
                                    "description": "Safe search method. You can disable safe search, add the safe search string to URLs, or insert a safe search header.   \ndisable:Site does not support safe search.   \nurl:Safe search selected with a parameter in the URL.   \nheader:Safe search selected by search header (i.e. youtube.edu).   \ntranslate:Perform URL FortiGuard check on HTTP requests parameter.   \nyt-pattern:Pattern to match YouTube channel ID.   \nyt-scan:Perform IPS scan.   \nyt-video:Pattern to match YouTube video name.   \nyt-channel:Pattern to match YouTube channel name.",
                                    "enum": [
                                        "disable",
                                        "url",
                                        "header",
                                        "translate",
                                        "yt-pattern",
                                        "yt-scan",
                                        "yt-video",
                                        "yt-channel"
                                    ]
                                },
                                "charset": {
                                    "type": "string",
                                    "description": "Search engine charset.   \nutf-8:UTF-8 encoding.   \ngb2312:GB2312 encoding.",
                                    "enum": [
                                        "utf-8",
                                        "gb2312"
                                    ]
                                },
                                "safesearch-str": {
                                    "type": "string",
                                    "description": "Safe search parameter used in the URL.",
                                    "maxLength": 79
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/search-engine"
                ]
            }
        },
        "\/webfilter\/urlfilter\/{id}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of URL filter list.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "one-arm-ips-urlfilter": {
                                    "type": "string",
                                    "description": "Enable\/disable DNS resolver for one-arm IPS URL filter operation.   \nenable:Enable DNS resolver for one-arm IPS URL filter operation.   \ndisable:Disable DNS resolver for one-arm IPS URL filter operation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-addr-block": {
                                    "type": "string",
                                    "description": "Enable\/disable blocking URLs when the hostname appears as an IP address.   \nenable:Enable blocking URLs when the hostname appears as an IP address.   \ndisable:Disable blocking URLs when the hostname appears as an IP address.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "entries": {
                                    "description": "URL filter entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Id.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL to be filtered.",
                                                "maxLength": 511
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Filter type (simple, regex, or wildcard).   \nsimple:Simple URL string.   \nregex:Regular expression URL string.   \nwildcard:Wildcard URL string.",
                                                "enum": [
                                                    "simple",
                                                    "regex",
                                                    "wildcard"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take for URL filter matches.   \nexempt:Exempt matches.   \nblock:Block matches.   \nallow:Allow matches (no log).   \nmonitor:Allow matches (with log).",
                                                "enum": [
                                                    "exempt",
                                                    "block",
                                                    "allow",
                                                    "monitor"
                                                ]
                                            },
                                            "antiphish-action": {
                                                "type": "string",
                                                "description": "Action to take for AntiPhishing matches.   \nblock:Block matches.   \nlog:Allow matches with log.",
                                                "enum": [
                                                    "block",
                                                    "log"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable this URL filter.   \nenable:Enable this URL filter.   \ndisable:Disable this URL filter.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "exempt": {
                                                "type": "string",
                                                "description": "If action is set to exempt, select the security profile operations that exempt URLs skip. Separate multiple options with a space.   \nav:AntiVirus scanning.   \nweb-content:Web filter content matching.   \nactivex-java-cookie:ActiveX, Java, and cookie filtering.   \ndlp:DLP scanning.   \nfortiguard:FortiGuard web filtering.   \nrange-block:Range block feature.   \npass:Pass single connection from all.   \nantiphish:AntiPhish credential checking.   \nall:Exempt from all security profiles.",
                                                "enum": [
                                                    "av",
                                                    "web-content",
                                                    "activex-java-cookie",
                                                    "dlp",
                                                    "fortiguard",
                                                    "range-block",
                                                    "pass",
                                                    "antiphish",
                                                    "all"
                                                ]
                                            },
                                            "web-proxy-profile": {
                                                "type": "string",
                                                "description": "Web proxy profile.",
                                                "maxLength": 63
                                            },
                                            "referrer-host": {
                                                "type": "string",
                                                "description": "Referrer host name.",
                                                "maxLength": 255
                                            },
                                            "dns-address-family": {
                                                "type": "string",
                                                "description": "Resolve IPv4 address, IPv6 address, or both from DNS server.   \nipv4:Resolve IPv4 address from DNS server.   \nipv6:Resolve IPv6 address from DNS server.   \nboth:Resolve both IPv4 and IPv6 addresses from DNS server.",
                                                "enum": [
                                                    "ipv4",
                                                    "ipv6",
                                                    "both"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/urlfilter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of URL filter list.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "one-arm-ips-urlfilter": {
                                    "type": "string",
                                    "description": "Enable\/disable DNS resolver for one-arm IPS URL filter operation.   \nenable:Enable DNS resolver for one-arm IPS URL filter operation.   \ndisable:Disable DNS resolver for one-arm IPS URL filter operation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-addr-block": {
                                    "type": "string",
                                    "description": "Enable\/disable blocking URLs when the hostname appears as an IP address.   \nenable:Enable blocking URLs when the hostname appears as an IP address.   \ndisable:Disable blocking URLs when the hostname appears as an IP address.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "entries": {
                                    "description": "URL filter entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Id.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL to be filtered.",
                                                "maxLength": 511
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Filter type (simple, regex, or wildcard).   \nsimple:Simple URL string.   \nregex:Regular expression URL string.   \nwildcard:Wildcard URL string.",
                                                "enum": [
                                                    "simple",
                                                    "regex",
                                                    "wildcard"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take for URL filter matches.   \nexempt:Exempt matches.   \nblock:Block matches.   \nallow:Allow matches (no log).   \nmonitor:Allow matches (with log).",
                                                "enum": [
                                                    "exempt",
                                                    "block",
                                                    "allow",
                                                    "monitor"
                                                ]
                                            },
                                            "antiphish-action": {
                                                "type": "string",
                                                "description": "Action to take for AntiPhishing matches.   \nblock:Block matches.   \nlog:Allow matches with log.",
                                                "enum": [
                                                    "block",
                                                    "log"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable this URL filter.   \nenable:Enable this URL filter.   \ndisable:Disable this URL filter.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "exempt": {
                                                "type": "string",
                                                "description": "If action is set to exempt, select the security profile operations that exempt URLs skip. Separate multiple options with a space.   \nav:AntiVirus scanning.   \nweb-content:Web filter content matching.   \nactivex-java-cookie:ActiveX, Java, and cookie filtering.   \ndlp:DLP scanning.   \nfortiguard:FortiGuard web filtering.   \nrange-block:Range block feature.   \npass:Pass single connection from all.   \nantiphish:AntiPhish credential checking.   \nall:Exempt from all security profiles.",
                                                "enum": [
                                                    "av",
                                                    "web-content",
                                                    "activex-java-cookie",
                                                    "dlp",
                                                    "fortiguard",
                                                    "range-block",
                                                    "pass",
                                                    "antiphish",
                                                    "all"
                                                ]
                                            },
                                            "web-proxy-profile": {
                                                "type": "string",
                                                "description": "Web proxy profile.",
                                                "maxLength": 63
                                            },
                                            "referrer-host": {
                                                "type": "string",
                                                "description": "Referrer host name.",
                                                "maxLength": 255
                                            },
                                            "dns-address-family": {
                                                "type": "string",
                                                "description": "Resolve IPv4 address, IPv6 address, or both from DNS server.   \nipv4:Resolve IPv4 address from DNS server.   \nipv6:Resolve IPv6 address from DNS server.   \nboth:Resolve both IPv4 and IPv6 addresses from DNS server.",
                                                "enum": [
                                                    "ipv4",
                                                    "ipv6",
                                                    "both"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "webfilter\/urlfilter"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/urlfilter"
                ]
            }
        },
        "\/webfilter\/urlfilter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of URL filter list.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "one-arm-ips-urlfilter": {
                                    "type": "string",
                                    "description": "Enable\/disable DNS resolver for one-arm IPS URL filter operation.   \nenable:Enable DNS resolver for one-arm IPS URL filter operation.   \ndisable:Disable DNS resolver for one-arm IPS URL filter operation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-addr-block": {
                                    "type": "string",
                                    "description": "Enable\/disable blocking URLs when the hostname appears as an IP address.   \nenable:Enable blocking URLs when the hostname appears as an IP address.   \ndisable:Disable blocking URLs when the hostname appears as an IP address.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "entries": {
                                    "description": "URL filter entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Id.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL to be filtered.",
                                                "maxLength": 511
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Filter type (simple, regex, or wildcard).   \nsimple:Simple URL string.   \nregex:Regular expression URL string.   \nwildcard:Wildcard URL string.",
                                                "enum": [
                                                    "simple",
                                                    "regex",
                                                    "wildcard"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take for URL filter matches.   \nexempt:Exempt matches.   \nblock:Block matches.   \nallow:Allow matches (no log).   \nmonitor:Allow matches (with log).",
                                                "enum": [
                                                    "exempt",
                                                    "block",
                                                    "allow",
                                                    "monitor"
                                                ]
                                            },
                                            "antiphish-action": {
                                                "type": "string",
                                                "description": "Action to take for AntiPhishing matches.   \nblock:Block matches.   \nlog:Allow matches with log.",
                                                "enum": [
                                                    "block",
                                                    "log"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable this URL filter.   \nenable:Enable this URL filter.   \ndisable:Disable this URL filter.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "exempt": {
                                                "type": "string",
                                                "description": "If action is set to exempt, select the security profile operations that exempt URLs skip. Separate multiple options with a space.   \nav:AntiVirus scanning.   \nweb-content:Web filter content matching.   \nactivex-java-cookie:ActiveX, Java, and cookie filtering.   \ndlp:DLP scanning.   \nfortiguard:FortiGuard web filtering.   \nrange-block:Range block feature.   \npass:Pass single connection from all.   \nantiphish:AntiPhish credential checking.   \nall:Exempt from all security profiles.",
                                                "enum": [
                                                    "av",
                                                    "web-content",
                                                    "activex-java-cookie",
                                                    "dlp",
                                                    "fortiguard",
                                                    "range-block",
                                                    "pass",
                                                    "antiphish",
                                                    "all"
                                                ]
                                            },
                                            "web-proxy-profile": {
                                                "type": "string",
                                                "description": "Web proxy profile.",
                                                "maxLength": 63
                                            },
                                            "referrer-host": {
                                                "type": "string",
                                                "description": "Referrer host name.",
                                                "maxLength": 255
                                            },
                                            "dns-address-family": {
                                                "type": "string",
                                                "description": "Resolve IPv4 address, IPv6 address, or both from DNS server.   \nipv4:Resolve IPv4 address from DNS server.   \nipv6:Resolve IPv6 address from DNS server.   \nboth:Resolve both IPv4 and IPv6 addresses from DNS server.",
                                                "enum": [
                                                    "ipv4",
                                                    "ipv6",
                                                    "both"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "webfilter\/urlfilter"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of URL filter list.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "one-arm-ips-urlfilter": {
                                    "type": "string",
                                    "description": "Enable\/disable DNS resolver for one-arm IPS URL filter operation.   \nenable:Enable DNS resolver for one-arm IPS URL filter operation.   \ndisable:Disable DNS resolver for one-arm IPS URL filter operation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-addr-block": {
                                    "type": "string",
                                    "description": "Enable\/disable blocking URLs when the hostname appears as an IP address.   \nenable:Enable blocking URLs when the hostname appears as an IP address.   \ndisable:Disable blocking URLs when the hostname appears as an IP address.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "entries": {
                                    "description": "URL filter entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Id.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL to be filtered.",
                                                "maxLength": 511
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Filter type (simple, regex, or wildcard).   \nsimple:Simple URL string.   \nregex:Regular expression URL string.   \nwildcard:Wildcard URL string.",
                                                "enum": [
                                                    "simple",
                                                    "regex",
                                                    "wildcard"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action to take for URL filter matches.   \nexempt:Exempt matches.   \nblock:Block matches.   \nallow:Allow matches (no log).   \nmonitor:Allow matches (with log).",
                                                "enum": [
                                                    "exempt",
                                                    "block",
                                                    "allow",
                                                    "monitor"
                                                ]
                                            },
                                            "antiphish-action": {
                                                "type": "string",
                                                "description": "Action to take for AntiPhishing matches.   \nblock:Block matches.   \nlog:Allow matches with log.",
                                                "enum": [
                                                    "block",
                                                    "log"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable this URL filter.   \nenable:Enable this URL filter.   \ndisable:Disable this URL filter.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "exempt": {
                                                "type": "string",
                                                "description": "If action is set to exempt, select the security profile operations that exempt URLs skip. Separate multiple options with a space.   \nav:AntiVirus scanning.   \nweb-content:Web filter content matching.   \nactivex-java-cookie:ActiveX, Java, and cookie filtering.   \ndlp:DLP scanning.   \nfortiguard:FortiGuard web filtering.   \nrange-block:Range block feature.   \npass:Pass single connection from all.   \nantiphish:AntiPhish credential checking.   \nall:Exempt from all security profiles.",
                                                "enum": [
                                                    "av",
                                                    "web-content",
                                                    "activex-java-cookie",
                                                    "dlp",
                                                    "fortiguard",
                                                    "range-block",
                                                    "pass",
                                                    "antiphish",
                                                    "all"
                                                ]
                                            },
                                            "web-proxy-profile": {
                                                "type": "string",
                                                "description": "Web proxy profile.",
                                                "maxLength": 63
                                            },
                                            "referrer-host": {
                                                "type": "string",
                                                "description": "Referrer host name.",
                                                "maxLength": 255
                                            },
                                            "dns-address-family": {
                                                "type": "string",
                                                "description": "Resolve IPv4 address, IPv6 address, or both from DNS server.   \nipv4:Resolve IPv4 address from DNS server.   \nipv6:Resolve IPv6 address from DNS server.   \nboth:Resolve both IPv4 and IPv6 addresses from DNS server.",
                                                "enum": [
                                                    "ipv4",
                                                    "ipv6",
                                                    "both"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "webfilter\/urlfilter"
                ]
            }
        }
    }
}