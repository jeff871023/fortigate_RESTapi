{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS CMDB"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/cmdb",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "tags": [
        {
            "name": "router\/access-list",
            "description": "Configure access lists."
        },
        {
            "name": "router\/access-list6",
            "description": "Configure IPv6 access lists."
        },
        {
            "name": "router\/aspath-list",
            "description": "Configure Autonomous System (AS) path lists."
        },
        {
            "name": "router\/auth-path",
            "description": "Configure authentication based routing."
        },
        {
            "name": "router\/bfd",
            "description": "Configure BFD."
        },
        {
            "name": "router\/bfd6",
            "description": "Configure IPv6 BFD."
        },
        {
            "name": "router\/bgp",
            "description": "Configure BGP."
        },
        {
            "name": "router\/community-list",
            "description": "Configure community lists."
        },
        {
            "name": "router\/isis",
            "description": "Configure IS-IS."
        },
        {
            "name": "router\/key-chain",
            "description": "Configure key-chain."
        },
        {
            "name": "router\/multicast",
            "description": "Configure router multicast."
        },
        {
            "name": "router\/multicast-flow",
            "description": "Configure multicast-flow."
        },
        {
            "name": "router\/multicast6",
            "description": "Configure IPv6 multicast."
        },
        {
            "name": "router\/ospf",
            "description": "Configure OSPF."
        },
        {
            "name": "router\/ospf6",
            "description": "Configure IPv6 OSPF."
        },
        {
            "name": "router\/policy",
            "description": "Configure IPv4 routing policies."
        },
        {
            "name": "router\/policy6",
            "description": "Configure IPv6 routing policies."
        },
        {
            "name": "router\/prefix-list",
            "description": "Configure IPv4 prefix lists."
        },
        {
            "name": "router\/prefix-list6",
            "description": "Configure IPv6 prefix lists."
        },
        {
            "name": "router\/rip",
            "description": "Configure RIP."
        },
        {
            "name": "router\/ripng",
            "description": "Configure RIPng."
        },
        {
            "name": "router\/route-map",
            "description": "Configure route maps."
        },
        {
            "name": "router\/setting",
            "description": "Configure router settings."
        },
        {
            "name": "router\/static",
            "description": "Configure IPv4 static routing tables."
        },
        {
            "name": "router\/static6",
            "description": "Configure IPv6 static routing tables."
        }
    ],
    "paths": {
        "\/router\/access-list\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Permit or allow this IP address and netmask prefix.   \ndeny:Deny this IP address and netmask prefix.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "description": "IPv4 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "wildcard": {
                                                "type": "string",
                                                "description": "Wildcard to define Cisco-style wildcard filter criteria."
                                            },
                                            "exact-match": {
                                                "type": "string",
                                                "description": "Enable\/disable exact match.   \nenable:Enable exact match.   \ndisable:Disable exact match.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/access-list"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Permit or allow this IP address and netmask prefix.   \ndeny:Deny this IP address and netmask prefix.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "description": "IPv4 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "wildcard": {
                                                "type": "string",
                                                "description": "Wildcard to define Cisco-style wildcard filter criteria."
                                            },
                                            "exact-match": {
                                                "type": "string",
                                                "description": "Enable\/disable exact match.   \nenable:Enable exact match.   \ndisable:Disable exact match.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/access-list"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/access-list"
                ]
            }
        },
        "\/router\/access-list": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Permit or allow this IP address and netmask prefix.   \ndeny:Deny this IP address and netmask prefix.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "description": "IPv4 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "wildcard": {
                                                "type": "string",
                                                "description": "Wildcard to define Cisco-style wildcard filter criteria."
                                            },
                                            "exact-match": {
                                                "type": "string",
                                                "description": "Enable\/disable exact match.   \nenable:Enable exact match.   \ndisable:Disable exact match.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/access-list"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Permit or allow this IP address and netmask prefix.   \ndeny:Deny this IP address and netmask prefix.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "description": "IPv4 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "wildcard": {
                                                "type": "string",
                                                "description": "Wildcard to define Cisco-style wildcard filter criteria."
                                            },
                                            "exact-match": {
                                                "type": "string",
                                                "description": "Enable\/disable exact match.   \nenable:Enable exact match.   \ndisable:Disable exact match.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/access-list"
                ]
            }
        },
        "\/router\/access-list6\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Permit or allow this IP address and netmask prefix.   \ndeny:Deny this IP address and netmask prefix.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "exact-match": {
                                                "type": "string",
                                                "description": "Enable\/disable exact prefix match.   \nenable:Enable exact match.   \ndisable:Disable exact match.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/access-list6"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Permit or allow this IP address and netmask prefix.   \ndeny:Deny this IP address and netmask prefix.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "exact-match": {
                                                "type": "string",
                                                "description": "Enable\/disable exact prefix match.   \nenable:Enable exact match.   \ndisable:Disable exact match.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/access-list6"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/access-list6"
                ]
            }
        },
        "\/router\/access-list6": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Permit or allow this IP address and netmask prefix.   \ndeny:Deny this IP address and netmask prefix.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "exact-match": {
                                                "type": "string",
                                                "description": "Enable\/disable exact prefix match.   \nenable:Enable exact match.   \ndisable:Disable exact match.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/access-list6"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Permit or allow this IP address and netmask prefix.   \ndeny:Deny this IP address and netmask prefix.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "exact-match": {
                                                "type": "string",
                                                "description": "Enable\/disable exact prefix match.   \nenable:Enable exact match.   \ndisable:Disable exact match.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/access-list6"
                ]
            }
        },
        "\/router\/aspath-list\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "AS path list name.",
                                    "maxLength": 35
                                },
                                "rule": {
                                    "description": "AS path list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny route-based operations, based on the route's AS_PATH attribute.   \ndeny:Deny route-based operations.   \npermit:Permit route-based operations.",
                                                "enum": [
                                                    "deny",
                                                    "permit"
                                                ]
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Regular-expression to match the Border Gateway Protocol (BGP) AS paths.",
                                                "maxLength": 63
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/aspath-list"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "AS path list name.",
                                    "maxLength": 35
                                },
                                "rule": {
                                    "description": "AS path list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny route-based operations, based on the route's AS_PATH attribute.   \ndeny:Deny route-based operations.   \npermit:Permit route-based operations.",
                                                "enum": [
                                                    "deny",
                                                    "permit"
                                                ]
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Regular-expression to match the Border Gateway Protocol (BGP) AS paths.",
                                                "maxLength": 63
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/aspath-list"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/aspath-list"
                ]
            }
        },
        "\/router\/aspath-list": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "AS path list name.",
                                    "maxLength": 35
                                },
                                "rule": {
                                    "description": "AS path list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny route-based operations, based on the route's AS_PATH attribute.   \ndeny:Deny route-based operations.   \npermit:Permit route-based operations.",
                                                "enum": [
                                                    "deny",
                                                    "permit"
                                                ]
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Regular-expression to match the Border Gateway Protocol (BGP) AS paths.",
                                                "maxLength": 63
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/aspath-list"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "AS path list name.",
                                    "maxLength": 35
                                },
                                "rule": {
                                    "description": "AS path list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny route-based operations, based on the route's AS_PATH attribute.   \ndeny:Deny route-based operations.   \npermit:Permit route-based operations.",
                                                "enum": [
                                                    "deny",
                                                    "permit"
                                                ]
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Regular-expression to match the Border Gateway Protocol (BGP) AS paths.",
                                                "maxLength": 63
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/aspath-list"
                ]
            }
        },
        "\/router\/auth-path\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the entry.",
                                    "maxLength": 15
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Outgoing interface.",
                                    "maxLength": 35
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Gateway IP address."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/auth-path"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the entry.",
                                    "maxLength": 15
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Outgoing interface.",
                                    "maxLength": 35
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Gateway IP address."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/auth-path"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/auth-path"
                ]
            }
        },
        "\/router\/auth-path": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the entry.",
                                    "maxLength": 15
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Outgoing interface.",
                                    "maxLength": 35
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Gateway IP address."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/auth-path"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the entry.",
                                    "maxLength": 15
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Outgoing interface.",
                                    "maxLength": 35
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Gateway IP address."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/auth-path"
                ]
            }
        },
        "\/router\/bfd": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "neighbor": {
                                    "description": "neighbor",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "IPv4 address of the BFD neighbor."
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/bfd"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "neighbor": {
                                    "description": "neighbor",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "IPv4 address of the BFD neighbor."
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/bfd"
                ]
            }
        },
        "\/router\/bfd6": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "neighbor": {
                                    "description": "Configure neighbor of IPv6 BFD.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip6-address": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 address of the BFD neighbor."
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Interface to the BFD neighbor.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/bfd6"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "neighbor": {
                                    "description": "Configure neighbor of IPv6 BFD.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip6-address": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 address of the BFD neighbor."
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Interface to the BFD neighbor.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/bfd6"
                ]
            }
        },
        "\/router\/bgp": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "as": {
                                    "type": "integer",
                                    "description": "Router AS number, valid from 1 to 4294967295, 0 to disable BGP.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "router-id": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Router ID."
                                },
                                "keepalive-timer": {
                                    "type": "integer",
                                    "description": "Frequency to send keep alive requests.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "holdtime-timer": {
                                    "type": "integer",
                                    "description": "Number of seconds to mark peer as dead.",
                                    "maximum": 65535,
                                    "minimum": 3
                                },
                                "always-compare-med": {
                                    "type": "string",
                                    "description": "Enable\/disable always compare MED.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bestpath-as-path-ignore": {
                                    "type": "string",
                                    "description": "Enable\/disable ignore AS path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bestpath-cmp-confed-aspath": {
                                    "type": "string",
                                    "description": "Enable\/disable compare federation AS path length.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bestpath-cmp-routerid": {
                                    "type": "string",
                                    "description": "Enable\/disable compare router ID for identical EBGP paths.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bestpath-med-confed": {
                                    "type": "string",
                                    "description": "Enable\/disable compare MED among confederation paths.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bestpath-med-missing-as-worst": {
                                    "type": "string",
                                    "description": "Enable\/disable treat missing MED as least preferred.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "client-to-client-reflection": {
                                    "type": "string",
                                    "description": "Enable\/disable client-to-client route reflection.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dampening": {
                                    "type": "string",
                                    "description": "Enable\/disable route-flap dampening.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "deterministic-med": {
                                    "type": "string",
                                    "description": "Enable\/disable enforce deterministic comparison of MED.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ebgp-multipath": {
                                    "type": "string",
                                    "description": "Enable\/disable EBGP multi-path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ibgp-multipath": {
                                    "type": "string",
                                    "description": "Enable\/disable IBGP multi-path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "enforce-first-as": {
                                    "type": "string",
                                    "description": "Enable\/disable enforce first AS for EBGP routes.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fast-external-failover": {
                                    "type": "string",
                                    "description": "Enable\/disable reset peer BGP session if link goes down.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-neighbour-changes": {
                                    "type": "string",
                                    "description": "Enable logging of BGP neighbour's changes   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "network-import-check": {
                                    "type": "string",
                                    "description": "Enable\/disable ensure BGP network route exists in IGP.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ignore-optional-capability": {
                                    "type": "string",
                                    "description": "Don't send unknown optional capability notification message   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "additional-path": {
                                    "type": "string",
                                    "description": "Enable\/disable selection of BGP IPv4 additional paths.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "additional-path6": {
                                    "type": "string",
                                    "description": "Enable\/disable selection of BGP IPv6 additional paths.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multipath-recursive-distance": {
                                    "type": "string",
                                    "description": "Enable\/disable use of recursive distance to select multipath.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "cluster-id": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Route reflector cluster ID."
                                },
                                "confederation-identifier": {
                                    "type": "integer",
                                    "description": "Confederation identifier.",
                                    "maximum": 4294967295,
                                    "minimum": 1
                                },
                                "confederation-peers": {
                                    "description": "Confederation peers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "peer": {
                                                "type": "string",
                                                "description": "Peer ID.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dampening-route-map": {
                                    "type": "string",
                                    "description": "Criteria for dampening.",
                                    "maxLength": 35
                                },
                                "dampening-reachability-half-life": {
                                    "type": "integer",
                                    "description": "Reachability half-life time for penalty (min).",
                                    "maximum": 45,
                                    "minimum": 1
                                },
                                "dampening-reuse": {
                                    "type": "integer",
                                    "description": "Threshold to reuse routes.",
                                    "maximum": 20000,
                                    "minimum": 1
                                },
                                "dampening-suppress": {
                                    "type": "integer",
                                    "description": "Threshold to suppress routes.",
                                    "maximum": 20000,
                                    "minimum": 1
                                },
                                "dampening-max-suppress-time": {
                                    "type": "integer",
                                    "description": "Maximum minutes a route can be suppressed.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "dampening-unreachability-half-life": {
                                    "type": "integer",
                                    "description": "Unreachability half-life time for penalty (min).",
                                    "maximum": 45,
                                    "minimum": 1
                                },
                                "default-local-preference": {
                                    "type": "integer",
                                    "description": "Default local preference.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "scan-time": {
                                    "type": "integer",
                                    "description": "Background scanner interval (sec), 0 to disable it.",
                                    "maximum": 60,
                                    "minimum": 5
                                },
                                "distance-external": {
                                    "type": "integer",
                                    "description": "Distance for routes external to the AS.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "distance-internal": {
                                    "type": "integer",
                                    "description": "Distance for routes internal to the AS.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "distance-local": {
                                    "type": "integer",
                                    "description": "Distance for routes local to the AS.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "synchronization": {
                                    "type": "string",
                                    "description": "Enable\/disable only advertise routes from iBGP if routes present in an IGP.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "graceful-restart": {
                                    "type": "string",
                                    "description": "Enable\/disable BGP graceful restart capabilities.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "graceful-restart-time": {
                                    "type": "integer",
                                    "description": "Time needed for neighbors to restart (sec).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "graceful-stalepath-time": {
                                    "type": "integer",
                                    "description": "Time to hold stale paths of restarting neighbor (sec).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "graceful-update-delay": {
                                    "type": "integer",
                                    "description": "Route advertisement\/selection delay after restart (sec).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "graceful-end-on-timer": {
                                    "type": "string",
                                    "description": "Enable\/disable to exit graceful restart on timer only.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "additional-path-select": {
                                    "type": "integer",
                                    "description": "Number of additional paths to be selected for each IPv4 NLRI.",
                                    "maximum": 255,
                                    "minimum": 2
                                },
                                "additional-path-select6": {
                                    "type": "integer",
                                    "description": "Number of additional paths to be selected for each IPv6 NLRI.",
                                    "maximum": 255,
                                    "minimum": 2
                                },
                                "aggregate-address": {
                                    "description": "BGP aggregate address table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Aggregate prefix."
                                            },
                                            "as-set": {
                                                "type": "string",
                                                "description": "Enable\/disable generate AS set path information.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "summary-only": {
                                                "type": "string",
                                                "description": "Enable\/disable filter more specific routes from updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "aggregate-address6": {
                                    "description": "BGP IPv6 aggregate address table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Aggregate IPv6 prefix."
                                            },
                                            "as-set": {
                                                "type": "string",
                                                "description": "Enable\/disable generate AS set path information.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "summary-only": {
                                                "type": "string",
                                                "description": "Enable\/disable filter more specific routes from updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor": {
                                    "description": "BGP neighbor table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip": {
                                                "type": "string",
                                                "description": "IP\/IPv6 address of neighbor.",
                                                "maxLength": 45
                                            },
                                            "advertisement-interval": {
                                                "type": "integer",
                                                "description": "Minimum interval (sec) between sending updates.",
                                                "maximum": 600,
                                                "minimum": 1
                                            },
                                            "allowas-in-enable": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 Enable to allow my AS in AS path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "allowas-in-enable6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 Enable to allow my AS in AS path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "allowas-in": {
                                                "type": "integer",
                                                "description": "IPv4 The maximum number of occurrence of my AS number allowed.",
                                                "maximum": 10,
                                                "minimum": 1
                                            },
                                            "allowas-in6": {
                                                "type": "integer",
                                                "description": "IPv6 The maximum number of occurrence of my AS number allowed.",
                                                "maximum": 10,
                                                "minimum": 1
                                            },
                                            "attribute-unchanged": {
                                                "type": "string",
                                                "description": "IPv4 List of attributes that should be unchanged.   \nas-path:AS path.   \nmed:MED.   \nnext-hop:Next hop.",
                                                "enum": [
                                                    "as-path",
                                                    "med",
                                                    "next-hop"
                                                ]
                                            },
                                            "attribute-unchanged6": {
                                                "type": "string",
                                                "description": "IPv6 List of attributes that should be unchanged.   \nas-path:AS path.   \nmed:MED.   \nnext-hop:Next hop.",
                                                "enum": [
                                                    "as-path",
                                                    "med",
                                                    "next-hop"
                                                ]
                                            },
                                            "activate": {
                                                "type": "string",
                                                "description": "Enable\/disable address family IPv4 for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "activate6": {
                                                "type": "string",
                                                "description": "Enable\/disable address family IPv6 for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "bfd": {
                                                "type": "string",
                                                "description": "Enable\/disable BFD for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-dynamic": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise dynamic capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-orf": {
                                                "type": "string",
                                                "description": "Accept\/Send IPv4 ORF lists to\/from this neighbor.   \nnone:None.   \nreceive:Receive ORF lists.   \nsend:Send ORF list.   \nboth:Send and receive ORF lists.",
                                                "enum": [
                                                    "none",
                                                    "receive",
                                                    "send",
                                                    "both"
                                                ]
                                            },
                                            "capability-orf6": {
                                                "type": "string",
                                                "description": "Accept\/Send IPv6 ORF lists to\/from this neighbor.   \nnone:None.   \nreceive:Receive ORF lists.   \nsend:Send ORF list.   \nboth:Send and receive ORF lists.",
                                                "enum": [
                                                    "none",
                                                    "receive",
                                                    "send",
                                                    "both"
                                                ]
                                            },
                                            "capability-graceful-restart": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise IPv4 graceful restart capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-graceful-restart6": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise IPv6 graceful restart capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-route-refresh": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise route refresh capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-default-originate": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise default IPv4 route to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-default-originate6": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise default IPv6 route to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "dont-capability-negotiate": {
                                                "type": "string",
                                                "description": "Don't negotiate capabilities with this neighbor   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "ebgp-enforce-multihop": {
                                                "type": "string",
                                                "description": "Enable\/disable allow multi-hop EBGP neighbors.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "link-down-failover": {
                                                "type": "string",
                                                "description": "Enable\/disable failover upon link down.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "stale-route": {
                                                "type": "string",
                                                "description": "Enable\/disable stale route after neighbor down.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 next-hop calculation for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 next-hop calculation for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self-rr": {
                                                "type": "string",
                                                "description": "Enable\/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self-rr6": {
                                                "type": "string",
                                                "description": "Enable\/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "override-capability": {
                                                "type": "string",
                                                "description": "Enable\/disable override result of capability negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "passive": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of open messages to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "remove-private-as": {
                                                "type": "string",
                                                "description": "Enable\/disable remove private AS number from IPv4 outbound updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "remove-private-as6": {
                                                "type": "string",
                                                "description": "Enable\/disable remove private AS number from IPv6 outbound updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-reflector-client": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 AS route reflector client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-reflector-client6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 AS route reflector client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-server-client": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 AS route server client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-server-client6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 AS route server client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "shutdown": {
                                                "type": "string",
                                                "description": "Enable\/disable shutdown this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "soft-reconfiguration": {
                                                "type": "string",
                                                "description": "Enable\/disable allow IPv4 inbound soft reconfiguration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "soft-reconfiguration6": {
                                                "type": "string",
                                                "description": "Enable\/disable allow IPv6 inbound soft reconfiguration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "as-override": {
                                                "type": "string",
                                                "description": "Enable\/disable replace peer AS with own AS for IPv4.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "as-override6": {
                                                "type": "string",
                                                "description": "Enable\/disable replace peer AS with own AS for IPv6.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "strict-capability-match": {
                                                "type": "string",
                                                "description": "Enable\/disable strict capability matching.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "default-originate-routemap": {
                                                "type": "string",
                                                "description": "Route map to specify criteria to originate IPv4 default.",
                                                "maxLength": 35
                                            },
                                            "default-originate-routemap6": {
                                                "type": "string",
                                                "description": "Route map to specify criteria to originate IPv6 default.",
                                                "maxLength": 35
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 63
                                            },
                                            "distribute-list-in": {
                                                "type": "string",
                                                "description": "Filter for IPv4 updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-in6": {
                                                "type": "string",
                                                "description": "Filter for IPv6 updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-out": {
                                                "type": "string",
                                                "description": "Filter for IPv4 updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-out6": {
                                                "type": "string",
                                                "description": "Filter for IPv6 updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "ebgp-multihop-ttl": {
                                                "type": "integer",
                                                "description": "EBGP multihop TTL for this peer.",
                                                "maximum": 255,
                                                "minimum": 1
                                            },
                                            "filter-list-in": {
                                                "type": "string",
                                                "description": "BGP filter for IPv4 inbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-in6": {
                                                "type": "string",
                                                "description": "BGP filter for IPv6 inbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-out": {
                                                "type": "string",
                                                "description": "BGP filter for IPv4 outbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-out6": {
                                                "type": "string",
                                                "description": "BGP filter for IPv6 outbound routes.",
                                                "maxLength": 35
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Specify outgoing interface for peer connection. For IPv6 peer, the interface should have link-local address.",
                                                "maxLength": 15
                                            },
                                            "maximum-prefix": {
                                                "type": "integer",
                                                "description": "Maximum number of IPv4 prefixes to accept from this peer.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "maximum-prefix6": {
                                                "type": "integer",
                                                "description": "Maximum number of IPv6 prefixes to accept from this peer.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-threshold": {
                                                "type": "integer",
                                                "description": "Maximum IPv4 prefix threshold value (1 - 100 percent).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-threshold6": {
                                                "type": "integer",
                                                "description": "Maximum IPv6 prefix threshold value (1 - 100 percent).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-warning-only": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 Only give warning message when limit is exceeded.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "maximum-prefix-warning-only6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 Only give warning message when limit is exceeded.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "prefix-list-in": {
                                                "type": "string",
                                                "description": "IPv4 Inbound filter for updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-in6": {
                                                "type": "string",
                                                "description": "IPv6 Inbound filter for updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-out": {
                                                "type": "string",
                                                "description": "IPv4 Outbound filter for updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-out6": {
                                                "type": "string",
                                                "description": "IPv6 Outbound filter for updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "remote-as": {
                                                "type": "integer",
                                                "description": "AS number of neighbor.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "local-as": {
                                                "type": "integer",
                                                "description": "Local AS number of neighbor.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "local-as-no-prepend": {
                                                "type": "string",
                                                "description": "Do not prepend local-as to incoming updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "local-as-replace-as": {
                                                "type": "string",
                                                "description": "Replace real AS with local-as in outgoing updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "retain-stale-time": {
                                                "type": "integer",
                                                "description": "Time to retain stale routes.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "route-map-in": {
                                                "type": "string",
                                                "description": "IPv4 Inbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-in6": {
                                                "type": "string",
                                                "description": "IPv6 Inbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out": {
                                                "type": "string",
                                                "description": "IPv4 outbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out-preferable": {
                                                "type": "string",
                                                "description": "IPv4 outbound route map filter if the peer is preferred.",
                                                "maxLength": 35
                                            },
                                            "route-map-out6": {
                                                "type": "string",
                                                "description": "IPv6 Outbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out6-preferable": {
                                                "type": "string",
                                                "description": "IPv6 outbound route map filter if the peer is preferred.",
                                                "maxLength": 35
                                            },
                                            "send-community": {
                                                "type": "string",
                                                "description": "IPv4 Send community attribute to neighbor.   \nstandard:Standard.   \nextended:Extended.   \nboth:Both.   \ndisable:Disable",
                                                "enum": [
                                                    "standard",
                                                    "extended",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "send-community6": {
                                                "type": "string",
                                                "description": "IPv6 Send community attribute to neighbor.   \nstandard:Standard.   \nextended:Extended.   \nboth:Both.   \ndisable:Disable",
                                                "enum": [
                                                    "standard",
                                                    "extended",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "keep-alive-timer": {
                                                "type": "integer",
                                                "description": "Keep alive timer interval (sec).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "holdtime-timer": {
                                                "type": "integer",
                                                "description": "Interval (sec) before peer considered dead.",
                                                "maximum": 65535,
                                                "minimum": 3
                                            },
                                            "connect-timer": {
                                                "type": "integer",
                                                "description": "Interval (sec) for connect timer.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "unsuppress-map": {
                                                "type": "string",
                                                "description": "IPv4 Route map to selectively unsuppress suppressed routes.",
                                                "maxLength": 35
                                            },
                                            "unsuppress-map6": {
                                                "type": "string",
                                                "description": "IPv6 Route map to selectively unsuppress suppressed routes.",
                                                "maxLength": 35
                                            },
                                            "update-source": {
                                                "type": "string",
                                                "description": "Interface to use as source IP\/IPv6 address of TCP connections.",
                                                "maxLength": 15
                                            },
                                            "weight": {
                                                "type": "integer",
                                                "description": "Neighbor weight.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "restart-time": {
                                                "type": "integer",
                                                "description": "Graceful restart delay time (sec, 0 = global default).",
                                                "maximum": 3600,
                                                "minimum": 0
                                            },
                                            "additional-path": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 additional-path capability.   \nsend:Enable sending additional paths.   \nreceive:Enable receiving additional paths.   \nboth:Enable sending and receiving additional paths.   \ndisable:Disable additional paths.",
                                                "enum": [
                                                    "send",
                                                    "receive",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "additional-path6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 additional-path capability.   \nsend:Enable sending additional paths.   \nreceive:Enable receiving additional paths.   \nboth:Enable sending and receiving additional paths.   \ndisable:Disable additional paths.",
                                                "enum": [
                                                    "send",
                                                    "receive",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "adv-additional-path": {
                                                "type": "integer",
                                                "description": "Number of IPv4 additional paths that can be advertised to this neighbor.",
                                                "maximum": 255,
                                                "minimum": 2
                                            },
                                            "adv-additional-path6": {
                                                "type": "integer",
                                                "description": "Number of IPv6 additional paths that can be advertised to this neighbor.",
                                                "maximum": 255,
                                                "minimum": 2
                                            },
                                            "password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Password used in MD5 authentication."
                                            },
                                            "conditional-advertise": {
                                                "description": "Conditional advertisement.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "advertise-routemap": {
                                                            "type": "string",
                                                            "description": "Name of advertising route map.",
                                                            "maxLength": 35
                                                        },
                                                        "condition-routemap": {
                                                            "type": "string",
                                                            "description": "Name of condition route map.",
                                                            "maxLength": 35
                                                        },
                                                        "condition-type": {
                                                            "type": "string",
                                                            "description": "Type of condition.   \nexist:True if condition route map is matched.   \nnon-exist:True if condition route map is not matched.",
                                                            "enum": [
                                                                "exist",
                                                                "non-exist"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor-group": {
                                    "description": "BGP neighbor group table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Neighbor group name.",
                                                "maxLength": 45
                                            },
                                            "advertisement-interval": {
                                                "type": "integer",
                                                "description": "Minimum interval (sec) between sending updates.",
                                                "maximum": 600,
                                                "minimum": 1
                                            },
                                            "allowas-in-enable": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 Enable to allow my AS in AS path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "allowas-in-enable6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 Enable to allow my AS in AS path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "allowas-in": {
                                                "type": "integer",
                                                "description": "IPv4 The maximum number of occurrence of my AS number allowed.",
                                                "maximum": 10,
                                                "minimum": 1
                                            },
                                            "allowas-in6": {
                                                "type": "integer",
                                                "description": "IPv6 The maximum number of occurrence of my AS number allowed.",
                                                "maximum": 10,
                                                "minimum": 1
                                            },
                                            "attribute-unchanged": {
                                                "type": "string",
                                                "description": "IPv4 List of attributes that should be unchanged.   \nas-path:AS path.   \nmed:MED.   \nnext-hop:Next hop.",
                                                "enum": [
                                                    "as-path",
                                                    "med",
                                                    "next-hop"
                                                ]
                                            },
                                            "attribute-unchanged6": {
                                                "type": "string",
                                                "description": "IPv6 List of attributes that should be unchanged.   \nas-path:AS path.   \nmed:MED.   \nnext-hop:Next hop.",
                                                "enum": [
                                                    "as-path",
                                                    "med",
                                                    "next-hop"
                                                ]
                                            },
                                            "activate": {
                                                "type": "string",
                                                "description": "Enable\/disable address family IPv4 for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "activate6": {
                                                "type": "string",
                                                "description": "Enable\/disable address family IPv6 for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "bfd": {
                                                "type": "string",
                                                "description": "Enable\/disable BFD for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-dynamic": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise dynamic capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-orf": {
                                                "type": "string",
                                                "description": "Accept\/Send IPv4 ORF lists to\/from this neighbor.   \nnone:None.   \nreceive:Receive ORF lists.   \nsend:Send ORF list.   \nboth:Send and receive ORF lists.",
                                                "enum": [
                                                    "none",
                                                    "receive",
                                                    "send",
                                                    "both"
                                                ]
                                            },
                                            "capability-orf6": {
                                                "type": "string",
                                                "description": "Accept\/Send IPv6 ORF lists to\/from this neighbor.   \nnone:None.   \nreceive:Receive ORF lists.   \nsend:Send ORF list.   \nboth:Send and receive ORF lists.",
                                                "enum": [
                                                    "none",
                                                    "receive",
                                                    "send",
                                                    "both"
                                                ]
                                            },
                                            "capability-graceful-restart": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise IPv4 graceful restart capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-graceful-restart6": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise IPv6 graceful restart capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-route-refresh": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise route refresh capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-default-originate": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise default IPv4 route to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-default-originate6": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise default IPv6 route to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "dont-capability-negotiate": {
                                                "type": "string",
                                                "description": "Don't negotiate capabilities with this neighbor   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "ebgp-enforce-multihop": {
                                                "type": "string",
                                                "description": "Enable\/disable allow multi-hop EBGP neighbors.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "link-down-failover": {
                                                "type": "string",
                                                "description": "Enable\/disable failover upon link down.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "stale-route": {
                                                "type": "string",
                                                "description": "Enable\/disable stale route after neighbor down.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 next-hop calculation for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 next-hop calculation for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self-rr": {
                                                "type": "string",
                                                "description": "Enable\/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self-rr6": {
                                                "type": "string",
                                                "description": "Enable\/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "override-capability": {
                                                "type": "string",
                                                "description": "Enable\/disable override result of capability negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "passive": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of open messages to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "remove-private-as": {
                                                "type": "string",
                                                "description": "Enable\/disable remove private AS number from IPv4 outbound updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "remove-private-as6": {
                                                "type": "string",
                                                "description": "Enable\/disable remove private AS number from IPv6 outbound updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-reflector-client": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 AS route reflector client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-reflector-client6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 AS route reflector client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-server-client": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 AS route server client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-server-client6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 AS route server client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "shutdown": {
                                                "type": "string",
                                                "description": "Enable\/disable shutdown this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "soft-reconfiguration": {
                                                "type": "string",
                                                "description": "Enable\/disable allow IPv4 inbound soft reconfiguration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "soft-reconfiguration6": {
                                                "type": "string",
                                                "description": "Enable\/disable allow IPv6 inbound soft reconfiguration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "as-override": {
                                                "type": "string",
                                                "description": "Enable\/disable replace peer AS with own AS for IPv4.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "as-override6": {
                                                "type": "string",
                                                "description": "Enable\/disable replace peer AS with own AS for IPv6.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "strict-capability-match": {
                                                "type": "string",
                                                "description": "Enable\/disable strict capability matching.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "default-originate-routemap": {
                                                "type": "string",
                                                "description": "Route map to specify criteria to originate IPv4 default.",
                                                "maxLength": 35
                                            },
                                            "default-originate-routemap6": {
                                                "type": "string",
                                                "description": "Route map to specify criteria to originate IPv6 default.",
                                                "maxLength": 35
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 63
                                            },
                                            "distribute-list-in": {
                                                "type": "string",
                                                "description": "Filter for IPv4 updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-in6": {
                                                "type": "string",
                                                "description": "Filter for IPv6 updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-out": {
                                                "type": "string",
                                                "description": "Filter for IPv4 updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-out6": {
                                                "type": "string",
                                                "description": "Filter for IPv6 updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "ebgp-multihop-ttl": {
                                                "type": "integer",
                                                "description": "EBGP multihop TTL for this peer.",
                                                "maximum": 255,
                                                "minimum": 1
                                            },
                                            "filter-list-in": {
                                                "type": "string",
                                                "description": "BGP filter for IPv4 inbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-in6": {
                                                "type": "string",
                                                "description": "BGP filter for IPv6 inbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-out": {
                                                "type": "string",
                                                "description": "BGP filter for IPv4 outbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-out6": {
                                                "type": "string",
                                                "description": "BGP filter for IPv6 outbound routes.",
                                                "maxLength": 35
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Specify outgoing interface for peer connection. For IPv6 peer, the interface should have link-local address.",
                                                "maxLength": 15
                                            },
                                            "maximum-prefix": {
                                                "type": "integer",
                                                "description": "Maximum number of IPv4 prefixes to accept from this peer.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "maximum-prefix6": {
                                                "type": "integer",
                                                "description": "Maximum number of IPv6 prefixes to accept from this peer.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-threshold": {
                                                "type": "integer",
                                                "description": "Maximum IPv4 prefix threshold value (1 - 100 percent).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-threshold6": {
                                                "type": "integer",
                                                "description": "Maximum IPv6 prefix threshold value (1 - 100 percent).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-warning-only": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 Only give warning message when limit is exceeded.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "maximum-prefix-warning-only6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 Only give warning message when limit is exceeded.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "prefix-list-in": {
                                                "type": "string",
                                                "description": "IPv4 Inbound filter for updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-in6": {
                                                "type": "string",
                                                "description": "IPv6 Inbound filter for updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-out": {
                                                "type": "string",
                                                "description": "IPv4 Outbound filter for updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-out6": {
                                                "type": "string",
                                                "description": "IPv6 Outbound filter for updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "remote-as": {
                                                "type": "integer",
                                                "description": "AS number of neighbor.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "local-as": {
                                                "type": "integer",
                                                "description": "Local AS number of neighbor.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "local-as-no-prepend": {
                                                "type": "string",
                                                "description": "Do not prepend local-as to incoming updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "local-as-replace-as": {
                                                "type": "string",
                                                "description": "Replace real AS with local-as in outgoing updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "retain-stale-time": {
                                                "type": "integer",
                                                "description": "Time to retain stale routes.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "route-map-in": {
                                                "type": "string",
                                                "description": "IPv4 Inbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-in6": {
                                                "type": "string",
                                                "description": "IPv6 Inbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out": {
                                                "type": "string",
                                                "description": "IPv4 outbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out-preferable": {
                                                "type": "string",
                                                "description": "IPv4 outbound route map filter if the peer is preferred.",
                                                "maxLength": 35
                                            },
                                            "route-map-out6": {
                                                "type": "string",
                                                "description": "IPv6 Outbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out6-preferable": {
                                                "type": "string",
                                                "description": "IPv6 outbound route map filter if the peer is preferred.",
                                                "maxLength": 35
                                            },
                                            "send-community": {
                                                "type": "string",
                                                "description": "IPv4 Send community attribute to neighbor.   \nstandard:Standard.   \nextended:Extended.   \nboth:Both.   \ndisable:Disable",
                                                "enum": [
                                                    "standard",
                                                    "extended",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "send-community6": {
                                                "type": "string",
                                                "description": "IPv6 Send community attribute to neighbor.   \nstandard:Standard.   \nextended:Extended.   \nboth:Both.   \ndisable:Disable",
                                                "enum": [
                                                    "standard",
                                                    "extended",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "keep-alive-timer": {
                                                "type": "integer",
                                                "description": "Keep alive timer interval (sec).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "holdtime-timer": {
                                                "type": "integer",
                                                "description": "Interval (sec) before peer considered dead.",
                                                "maximum": 65535,
                                                "minimum": 3
                                            },
                                            "connect-timer": {
                                                "type": "integer",
                                                "description": "Interval (sec) for connect timer.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "unsuppress-map": {
                                                "type": "string",
                                                "description": "IPv4 Route map to selectively unsuppress suppressed routes.",
                                                "maxLength": 35
                                            },
                                            "unsuppress-map6": {
                                                "type": "string",
                                                "description": "IPv6 Route map to selectively unsuppress suppressed routes.",
                                                "maxLength": 35
                                            },
                                            "update-source": {
                                                "type": "string",
                                                "description": "Interface to use as source IP\/IPv6 address of TCP connections.",
                                                "maxLength": 15
                                            },
                                            "weight": {
                                                "type": "integer",
                                                "description": "Neighbor weight.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "restart-time": {
                                                "type": "integer",
                                                "description": "Graceful restart delay time (sec, 0 = global default).",
                                                "maximum": 3600,
                                                "minimum": 0
                                            },
                                            "additional-path": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 additional-path capability.   \nsend:Enable sending additional paths.   \nreceive:Enable receiving additional paths.   \nboth:Enable sending and receiving additional paths.   \ndisable:Disable additional paths.",
                                                "enum": [
                                                    "send",
                                                    "receive",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "additional-path6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 additional-path capability.   \nsend:Enable sending additional paths.   \nreceive:Enable receiving additional paths.   \nboth:Enable sending and receiving additional paths.   \ndisable:Disable additional paths.",
                                                "enum": [
                                                    "send",
                                                    "receive",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "adv-additional-path": {
                                                "type": "integer",
                                                "description": "Number of IPv4 additional paths that can be advertised to this neighbor.",
                                                "maximum": 255,
                                                "minimum": 2
                                            },
                                            "adv-additional-path6": {
                                                "type": "integer",
                                                "description": "Number of IPv6 additional paths that can be advertised to this neighbor.",
                                                "maximum": 255,
                                                "minimum": 2
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor-range": {
                                    "description": "BGP neighbor range table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Neighbor range ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Neighbor range prefix."
                                            },
                                            "max-neighbor-num": {
                                                "type": "integer",
                                                "description": "Maximum number of neighbors.",
                                                "maximum": 1000,
                                                "minimum": 1
                                            },
                                            "neighbor-group": {
                                                "type": "string",
                                                "description": "Neighbor group name.",
                                                "maxLength": 63
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor-range6": {
                                    "description": "BGP IPv6 neighbor range table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "IPv6 neighbor range ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix."
                                            },
                                            "max-neighbor-num": {
                                                "type": "integer",
                                                "description": "Maximum number of neighbors.",
                                                "maximum": 1000,
                                                "minimum": 1
                                            },
                                            "neighbor-group": {
                                                "type": "string",
                                                "description": "Neighbor group name.",
                                                "maxLength": 63
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "network": {
                                    "description": "BGP network table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Network prefix."
                                            },
                                            "backdoor": {
                                                "type": "string",
                                                "description": "Enable\/disable route as backdoor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-map": {
                                                "type": "string",
                                                "description": "Route map to modify generated route.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "network6": {
                                    "description": "BGP IPv6 network table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "Network IPv6 prefix."
                                            },
                                            "backdoor": {
                                                "type": "string",
                                                "description": "Enable\/disable route as backdoor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-map": {
                                                "type": "string",
                                                "description": "Route map to modify generated route.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "BGP IPv4 redistribute table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Distribute list entry name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-map": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute6": {
                                    "description": "BGP IPv6 redistribute table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Distribute list entry name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-map": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "admin-distance": {
                                    "description": "Administrative distance modifications.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "neighbour-prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Neighbor address prefix."
                                            },
                                            "route-list": {
                                                "type": "string",
                                                "description": "Access list of routes to apply new distance to.",
                                                "maxLength": 35
                                            },
                                            "distance": {
                                                "type": "integer",
                                                "description": "Administrative distance to apply (1 - 255).",
                                                "maximum": 255,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "vrf-leak": {
                                    "description": "BGP VRF leaking table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "vrf": {
                                                "type": "string",
                                                "description": "Origin VRF ID <0 - 31>.",
                                                "maxLength": 7
                                            },
                                            "target": {
                                                "description": "Target VRF table.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "vrf": {
                                                            "type": "string",
                                                            "description": "Target VRF ID <0 - 31>.",
                                                            "maxLength": 7
                                                        },
                                                        "route-map": {
                                                            "type": "string",
                                                            "description": "Route map of VRF leaking.",
                                                            "maxLength": 35
                                                        },
                                                        "interface": {
                                                            "type": "string",
                                                            "description": "Interface which is used to leak routes to target VRF.",
                                                            "maxLength": 15
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/bgp"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "as": {
                                    "type": "integer",
                                    "description": "Router AS number, valid from 1 to 4294967295, 0 to disable BGP.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "router-id": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Router ID."
                                },
                                "keepalive-timer": {
                                    "type": "integer",
                                    "description": "Frequency to send keep alive requests.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "holdtime-timer": {
                                    "type": "integer",
                                    "description": "Number of seconds to mark peer as dead.",
                                    "maximum": 65535,
                                    "minimum": 3
                                },
                                "always-compare-med": {
                                    "type": "string",
                                    "description": "Enable\/disable always compare MED.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bestpath-as-path-ignore": {
                                    "type": "string",
                                    "description": "Enable\/disable ignore AS path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bestpath-cmp-confed-aspath": {
                                    "type": "string",
                                    "description": "Enable\/disable compare federation AS path length.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bestpath-cmp-routerid": {
                                    "type": "string",
                                    "description": "Enable\/disable compare router ID for identical EBGP paths.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bestpath-med-confed": {
                                    "type": "string",
                                    "description": "Enable\/disable compare MED among confederation paths.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bestpath-med-missing-as-worst": {
                                    "type": "string",
                                    "description": "Enable\/disable treat missing MED as least preferred.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "client-to-client-reflection": {
                                    "type": "string",
                                    "description": "Enable\/disable client-to-client route reflection.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dampening": {
                                    "type": "string",
                                    "description": "Enable\/disable route-flap dampening.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "deterministic-med": {
                                    "type": "string",
                                    "description": "Enable\/disable enforce deterministic comparison of MED.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ebgp-multipath": {
                                    "type": "string",
                                    "description": "Enable\/disable EBGP multi-path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ibgp-multipath": {
                                    "type": "string",
                                    "description": "Enable\/disable IBGP multi-path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "enforce-first-as": {
                                    "type": "string",
                                    "description": "Enable\/disable enforce first AS for EBGP routes.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fast-external-failover": {
                                    "type": "string",
                                    "description": "Enable\/disable reset peer BGP session if link goes down.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-neighbour-changes": {
                                    "type": "string",
                                    "description": "Enable logging of BGP neighbour's changes   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "network-import-check": {
                                    "type": "string",
                                    "description": "Enable\/disable ensure BGP network route exists in IGP.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ignore-optional-capability": {
                                    "type": "string",
                                    "description": "Don't send unknown optional capability notification message   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "additional-path": {
                                    "type": "string",
                                    "description": "Enable\/disable selection of BGP IPv4 additional paths.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "additional-path6": {
                                    "type": "string",
                                    "description": "Enable\/disable selection of BGP IPv6 additional paths.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multipath-recursive-distance": {
                                    "type": "string",
                                    "description": "Enable\/disable use of recursive distance to select multipath.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "cluster-id": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Route reflector cluster ID."
                                },
                                "confederation-identifier": {
                                    "type": "integer",
                                    "description": "Confederation identifier.",
                                    "maximum": 4294967295,
                                    "minimum": 1
                                },
                                "confederation-peers": {
                                    "description": "Confederation peers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "peer": {
                                                "type": "string",
                                                "description": "Peer ID.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dampening-route-map": {
                                    "type": "string",
                                    "description": "Criteria for dampening.",
                                    "maxLength": 35
                                },
                                "dampening-reachability-half-life": {
                                    "type": "integer",
                                    "description": "Reachability half-life time for penalty (min).",
                                    "maximum": 45,
                                    "minimum": 1
                                },
                                "dampening-reuse": {
                                    "type": "integer",
                                    "description": "Threshold to reuse routes.",
                                    "maximum": 20000,
                                    "minimum": 1
                                },
                                "dampening-suppress": {
                                    "type": "integer",
                                    "description": "Threshold to suppress routes.",
                                    "maximum": 20000,
                                    "minimum": 1
                                },
                                "dampening-max-suppress-time": {
                                    "type": "integer",
                                    "description": "Maximum minutes a route can be suppressed.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "dampening-unreachability-half-life": {
                                    "type": "integer",
                                    "description": "Unreachability half-life time for penalty (min).",
                                    "maximum": 45,
                                    "minimum": 1
                                },
                                "default-local-preference": {
                                    "type": "integer",
                                    "description": "Default local preference.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "scan-time": {
                                    "type": "integer",
                                    "description": "Background scanner interval (sec), 0 to disable it.",
                                    "maximum": 60,
                                    "minimum": 5
                                },
                                "distance-external": {
                                    "type": "integer",
                                    "description": "Distance for routes external to the AS.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "distance-internal": {
                                    "type": "integer",
                                    "description": "Distance for routes internal to the AS.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "distance-local": {
                                    "type": "integer",
                                    "description": "Distance for routes local to the AS.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "synchronization": {
                                    "type": "string",
                                    "description": "Enable\/disable only advertise routes from iBGP if routes present in an IGP.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "graceful-restart": {
                                    "type": "string",
                                    "description": "Enable\/disable BGP graceful restart capabilities.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "graceful-restart-time": {
                                    "type": "integer",
                                    "description": "Time needed for neighbors to restart (sec).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "graceful-stalepath-time": {
                                    "type": "integer",
                                    "description": "Time to hold stale paths of restarting neighbor (sec).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "graceful-update-delay": {
                                    "type": "integer",
                                    "description": "Route advertisement\/selection delay after restart (sec).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "graceful-end-on-timer": {
                                    "type": "string",
                                    "description": "Enable\/disable to exit graceful restart on timer only.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "additional-path-select": {
                                    "type": "integer",
                                    "description": "Number of additional paths to be selected for each IPv4 NLRI.",
                                    "maximum": 255,
                                    "minimum": 2
                                },
                                "additional-path-select6": {
                                    "type": "integer",
                                    "description": "Number of additional paths to be selected for each IPv6 NLRI.",
                                    "maximum": 255,
                                    "minimum": 2
                                },
                                "aggregate-address": {
                                    "description": "BGP aggregate address table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Aggregate prefix."
                                            },
                                            "as-set": {
                                                "type": "string",
                                                "description": "Enable\/disable generate AS set path information.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "summary-only": {
                                                "type": "string",
                                                "description": "Enable\/disable filter more specific routes from updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "aggregate-address6": {
                                    "description": "BGP IPv6 aggregate address table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Aggregate IPv6 prefix."
                                            },
                                            "as-set": {
                                                "type": "string",
                                                "description": "Enable\/disable generate AS set path information.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "summary-only": {
                                                "type": "string",
                                                "description": "Enable\/disable filter more specific routes from updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor": {
                                    "description": "BGP neighbor table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ip": {
                                                "type": "string",
                                                "description": "IP\/IPv6 address of neighbor.",
                                                "maxLength": 45
                                            },
                                            "advertisement-interval": {
                                                "type": "integer",
                                                "description": "Minimum interval (sec) between sending updates.",
                                                "maximum": 600,
                                                "minimum": 1
                                            },
                                            "allowas-in-enable": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 Enable to allow my AS in AS path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "allowas-in-enable6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 Enable to allow my AS in AS path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "allowas-in": {
                                                "type": "integer",
                                                "description": "IPv4 The maximum number of occurrence of my AS number allowed.",
                                                "maximum": 10,
                                                "minimum": 1
                                            },
                                            "allowas-in6": {
                                                "type": "integer",
                                                "description": "IPv6 The maximum number of occurrence of my AS number allowed.",
                                                "maximum": 10,
                                                "minimum": 1
                                            },
                                            "attribute-unchanged": {
                                                "type": "string",
                                                "description": "IPv4 List of attributes that should be unchanged.   \nas-path:AS path.   \nmed:MED.   \nnext-hop:Next hop.",
                                                "enum": [
                                                    "as-path",
                                                    "med",
                                                    "next-hop"
                                                ]
                                            },
                                            "attribute-unchanged6": {
                                                "type": "string",
                                                "description": "IPv6 List of attributes that should be unchanged.   \nas-path:AS path.   \nmed:MED.   \nnext-hop:Next hop.",
                                                "enum": [
                                                    "as-path",
                                                    "med",
                                                    "next-hop"
                                                ]
                                            },
                                            "activate": {
                                                "type": "string",
                                                "description": "Enable\/disable address family IPv4 for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "activate6": {
                                                "type": "string",
                                                "description": "Enable\/disable address family IPv6 for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "bfd": {
                                                "type": "string",
                                                "description": "Enable\/disable BFD for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-dynamic": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise dynamic capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-orf": {
                                                "type": "string",
                                                "description": "Accept\/Send IPv4 ORF lists to\/from this neighbor.   \nnone:None.   \nreceive:Receive ORF lists.   \nsend:Send ORF list.   \nboth:Send and receive ORF lists.",
                                                "enum": [
                                                    "none",
                                                    "receive",
                                                    "send",
                                                    "both"
                                                ]
                                            },
                                            "capability-orf6": {
                                                "type": "string",
                                                "description": "Accept\/Send IPv6 ORF lists to\/from this neighbor.   \nnone:None.   \nreceive:Receive ORF lists.   \nsend:Send ORF list.   \nboth:Send and receive ORF lists.",
                                                "enum": [
                                                    "none",
                                                    "receive",
                                                    "send",
                                                    "both"
                                                ]
                                            },
                                            "capability-graceful-restart": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise IPv4 graceful restart capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-graceful-restart6": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise IPv6 graceful restart capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-route-refresh": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise route refresh capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-default-originate": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise default IPv4 route to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-default-originate6": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise default IPv6 route to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "dont-capability-negotiate": {
                                                "type": "string",
                                                "description": "Don't negotiate capabilities with this neighbor   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "ebgp-enforce-multihop": {
                                                "type": "string",
                                                "description": "Enable\/disable allow multi-hop EBGP neighbors.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "link-down-failover": {
                                                "type": "string",
                                                "description": "Enable\/disable failover upon link down.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "stale-route": {
                                                "type": "string",
                                                "description": "Enable\/disable stale route after neighbor down.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 next-hop calculation for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 next-hop calculation for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self-rr": {
                                                "type": "string",
                                                "description": "Enable\/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self-rr6": {
                                                "type": "string",
                                                "description": "Enable\/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "override-capability": {
                                                "type": "string",
                                                "description": "Enable\/disable override result of capability negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "passive": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of open messages to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "remove-private-as": {
                                                "type": "string",
                                                "description": "Enable\/disable remove private AS number from IPv4 outbound updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "remove-private-as6": {
                                                "type": "string",
                                                "description": "Enable\/disable remove private AS number from IPv6 outbound updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-reflector-client": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 AS route reflector client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-reflector-client6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 AS route reflector client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-server-client": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 AS route server client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-server-client6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 AS route server client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "shutdown": {
                                                "type": "string",
                                                "description": "Enable\/disable shutdown this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "soft-reconfiguration": {
                                                "type": "string",
                                                "description": "Enable\/disable allow IPv4 inbound soft reconfiguration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "soft-reconfiguration6": {
                                                "type": "string",
                                                "description": "Enable\/disable allow IPv6 inbound soft reconfiguration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "as-override": {
                                                "type": "string",
                                                "description": "Enable\/disable replace peer AS with own AS for IPv4.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "as-override6": {
                                                "type": "string",
                                                "description": "Enable\/disable replace peer AS with own AS for IPv6.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "strict-capability-match": {
                                                "type": "string",
                                                "description": "Enable\/disable strict capability matching.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "default-originate-routemap": {
                                                "type": "string",
                                                "description": "Route map to specify criteria to originate IPv4 default.",
                                                "maxLength": 35
                                            },
                                            "default-originate-routemap6": {
                                                "type": "string",
                                                "description": "Route map to specify criteria to originate IPv6 default.",
                                                "maxLength": 35
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 63
                                            },
                                            "distribute-list-in": {
                                                "type": "string",
                                                "description": "Filter for IPv4 updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-in6": {
                                                "type": "string",
                                                "description": "Filter for IPv6 updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-out": {
                                                "type": "string",
                                                "description": "Filter for IPv4 updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-out6": {
                                                "type": "string",
                                                "description": "Filter for IPv6 updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "ebgp-multihop-ttl": {
                                                "type": "integer",
                                                "description": "EBGP multihop TTL for this peer.",
                                                "maximum": 255,
                                                "minimum": 1
                                            },
                                            "filter-list-in": {
                                                "type": "string",
                                                "description": "BGP filter for IPv4 inbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-in6": {
                                                "type": "string",
                                                "description": "BGP filter for IPv6 inbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-out": {
                                                "type": "string",
                                                "description": "BGP filter for IPv4 outbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-out6": {
                                                "type": "string",
                                                "description": "BGP filter for IPv6 outbound routes.",
                                                "maxLength": 35
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Specify outgoing interface for peer connection. For IPv6 peer, the interface should have link-local address.",
                                                "maxLength": 15
                                            },
                                            "maximum-prefix": {
                                                "type": "integer",
                                                "description": "Maximum number of IPv4 prefixes to accept from this peer.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "maximum-prefix6": {
                                                "type": "integer",
                                                "description": "Maximum number of IPv6 prefixes to accept from this peer.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-threshold": {
                                                "type": "integer",
                                                "description": "Maximum IPv4 prefix threshold value (1 - 100 percent).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-threshold6": {
                                                "type": "integer",
                                                "description": "Maximum IPv6 prefix threshold value (1 - 100 percent).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-warning-only": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 Only give warning message when limit is exceeded.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "maximum-prefix-warning-only6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 Only give warning message when limit is exceeded.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "prefix-list-in": {
                                                "type": "string",
                                                "description": "IPv4 Inbound filter for updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-in6": {
                                                "type": "string",
                                                "description": "IPv6 Inbound filter for updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-out": {
                                                "type": "string",
                                                "description": "IPv4 Outbound filter for updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-out6": {
                                                "type": "string",
                                                "description": "IPv6 Outbound filter for updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "remote-as": {
                                                "type": "integer",
                                                "description": "AS number of neighbor.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "local-as": {
                                                "type": "integer",
                                                "description": "Local AS number of neighbor.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "local-as-no-prepend": {
                                                "type": "string",
                                                "description": "Do not prepend local-as to incoming updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "local-as-replace-as": {
                                                "type": "string",
                                                "description": "Replace real AS with local-as in outgoing updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "retain-stale-time": {
                                                "type": "integer",
                                                "description": "Time to retain stale routes.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "route-map-in": {
                                                "type": "string",
                                                "description": "IPv4 Inbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-in6": {
                                                "type": "string",
                                                "description": "IPv6 Inbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out": {
                                                "type": "string",
                                                "description": "IPv4 outbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out-preferable": {
                                                "type": "string",
                                                "description": "IPv4 outbound route map filter if the peer is preferred.",
                                                "maxLength": 35
                                            },
                                            "route-map-out6": {
                                                "type": "string",
                                                "description": "IPv6 Outbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out6-preferable": {
                                                "type": "string",
                                                "description": "IPv6 outbound route map filter if the peer is preferred.",
                                                "maxLength": 35
                                            },
                                            "send-community": {
                                                "type": "string",
                                                "description": "IPv4 Send community attribute to neighbor.   \nstandard:Standard.   \nextended:Extended.   \nboth:Both.   \ndisable:Disable",
                                                "enum": [
                                                    "standard",
                                                    "extended",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "send-community6": {
                                                "type": "string",
                                                "description": "IPv6 Send community attribute to neighbor.   \nstandard:Standard.   \nextended:Extended.   \nboth:Both.   \ndisable:Disable",
                                                "enum": [
                                                    "standard",
                                                    "extended",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "keep-alive-timer": {
                                                "type": "integer",
                                                "description": "Keep alive timer interval (sec).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "holdtime-timer": {
                                                "type": "integer",
                                                "description": "Interval (sec) before peer considered dead.",
                                                "maximum": 65535,
                                                "minimum": 3
                                            },
                                            "connect-timer": {
                                                "type": "integer",
                                                "description": "Interval (sec) for connect timer.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "unsuppress-map": {
                                                "type": "string",
                                                "description": "IPv4 Route map to selectively unsuppress suppressed routes.",
                                                "maxLength": 35
                                            },
                                            "unsuppress-map6": {
                                                "type": "string",
                                                "description": "IPv6 Route map to selectively unsuppress suppressed routes.",
                                                "maxLength": 35
                                            },
                                            "update-source": {
                                                "type": "string",
                                                "description": "Interface to use as source IP\/IPv6 address of TCP connections.",
                                                "maxLength": 15
                                            },
                                            "weight": {
                                                "type": "integer",
                                                "description": "Neighbor weight.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "restart-time": {
                                                "type": "integer",
                                                "description": "Graceful restart delay time (sec, 0 = global default).",
                                                "maximum": 3600,
                                                "minimum": 0
                                            },
                                            "additional-path": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 additional-path capability.   \nsend:Enable sending additional paths.   \nreceive:Enable receiving additional paths.   \nboth:Enable sending and receiving additional paths.   \ndisable:Disable additional paths.",
                                                "enum": [
                                                    "send",
                                                    "receive",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "additional-path6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 additional-path capability.   \nsend:Enable sending additional paths.   \nreceive:Enable receiving additional paths.   \nboth:Enable sending and receiving additional paths.   \ndisable:Disable additional paths.",
                                                "enum": [
                                                    "send",
                                                    "receive",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "adv-additional-path": {
                                                "type": "integer",
                                                "description": "Number of IPv4 additional paths that can be advertised to this neighbor.",
                                                "maximum": 255,
                                                "minimum": 2
                                            },
                                            "adv-additional-path6": {
                                                "type": "integer",
                                                "description": "Number of IPv6 additional paths that can be advertised to this neighbor.",
                                                "maximum": 255,
                                                "minimum": 2
                                            },
                                            "password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Password used in MD5 authentication."
                                            },
                                            "conditional-advertise": {
                                                "description": "Conditional advertisement.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "advertise-routemap": {
                                                            "type": "string",
                                                            "description": "Name of advertising route map.",
                                                            "maxLength": 35
                                                        },
                                                        "condition-routemap": {
                                                            "type": "string",
                                                            "description": "Name of condition route map.",
                                                            "maxLength": 35
                                                        },
                                                        "condition-type": {
                                                            "type": "string",
                                                            "description": "Type of condition.   \nexist:True if condition route map is matched.   \nnon-exist:True if condition route map is not matched.",
                                                            "enum": [
                                                                "exist",
                                                                "non-exist"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor-group": {
                                    "description": "BGP neighbor group table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Neighbor group name.",
                                                "maxLength": 45
                                            },
                                            "advertisement-interval": {
                                                "type": "integer",
                                                "description": "Minimum interval (sec) between sending updates.",
                                                "maximum": 600,
                                                "minimum": 1
                                            },
                                            "allowas-in-enable": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 Enable to allow my AS in AS path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "allowas-in-enable6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 Enable to allow my AS in AS path.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "allowas-in": {
                                                "type": "integer",
                                                "description": "IPv4 The maximum number of occurrence of my AS number allowed.",
                                                "maximum": 10,
                                                "minimum": 1
                                            },
                                            "allowas-in6": {
                                                "type": "integer",
                                                "description": "IPv6 The maximum number of occurrence of my AS number allowed.",
                                                "maximum": 10,
                                                "minimum": 1
                                            },
                                            "attribute-unchanged": {
                                                "type": "string",
                                                "description": "IPv4 List of attributes that should be unchanged.   \nas-path:AS path.   \nmed:MED.   \nnext-hop:Next hop.",
                                                "enum": [
                                                    "as-path",
                                                    "med",
                                                    "next-hop"
                                                ]
                                            },
                                            "attribute-unchanged6": {
                                                "type": "string",
                                                "description": "IPv6 List of attributes that should be unchanged.   \nas-path:AS path.   \nmed:MED.   \nnext-hop:Next hop.",
                                                "enum": [
                                                    "as-path",
                                                    "med",
                                                    "next-hop"
                                                ]
                                            },
                                            "activate": {
                                                "type": "string",
                                                "description": "Enable\/disable address family IPv4 for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "activate6": {
                                                "type": "string",
                                                "description": "Enable\/disable address family IPv6 for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "bfd": {
                                                "type": "string",
                                                "description": "Enable\/disable BFD for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-dynamic": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise dynamic capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-orf": {
                                                "type": "string",
                                                "description": "Accept\/Send IPv4 ORF lists to\/from this neighbor.   \nnone:None.   \nreceive:Receive ORF lists.   \nsend:Send ORF list.   \nboth:Send and receive ORF lists.",
                                                "enum": [
                                                    "none",
                                                    "receive",
                                                    "send",
                                                    "both"
                                                ]
                                            },
                                            "capability-orf6": {
                                                "type": "string",
                                                "description": "Accept\/Send IPv6 ORF lists to\/from this neighbor.   \nnone:None.   \nreceive:Receive ORF lists.   \nsend:Send ORF list.   \nboth:Send and receive ORF lists.",
                                                "enum": [
                                                    "none",
                                                    "receive",
                                                    "send",
                                                    "both"
                                                ]
                                            },
                                            "capability-graceful-restart": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise IPv4 graceful restart capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-graceful-restart6": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise IPv6 graceful restart capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-route-refresh": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise route refresh capability to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-default-originate": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise default IPv4 route to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "capability-default-originate6": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise default IPv6 route to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "dont-capability-negotiate": {
                                                "type": "string",
                                                "description": "Don't negotiate capabilities with this neighbor   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "ebgp-enforce-multihop": {
                                                "type": "string",
                                                "description": "Enable\/disable allow multi-hop EBGP neighbors.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "link-down-failover": {
                                                "type": "string",
                                                "description": "Enable\/disable failover upon link down.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "stale-route": {
                                                "type": "string",
                                                "description": "Enable\/disable stale route after neighbor down.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 next-hop calculation for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 next-hop calculation for this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self-rr": {
                                                "type": "string",
                                                "description": "Enable\/disable setting nexthop's address to interface's IPv4 address for route-reflector routes.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "next-hop-self-rr6": {
                                                "type": "string",
                                                "description": "Enable\/disable setting nexthop's address to interface's IPv6 address for route-reflector routes.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "override-capability": {
                                                "type": "string",
                                                "description": "Enable\/disable override result of capability negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "passive": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of open messages to this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "remove-private-as": {
                                                "type": "string",
                                                "description": "Enable\/disable remove private AS number from IPv4 outbound updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "remove-private-as6": {
                                                "type": "string",
                                                "description": "Enable\/disable remove private AS number from IPv6 outbound updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-reflector-client": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 AS route reflector client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-reflector-client6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 AS route reflector client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-server-client": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 AS route server client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-server-client6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 AS route server client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "shutdown": {
                                                "type": "string",
                                                "description": "Enable\/disable shutdown this neighbor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "soft-reconfiguration": {
                                                "type": "string",
                                                "description": "Enable\/disable allow IPv4 inbound soft reconfiguration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "soft-reconfiguration6": {
                                                "type": "string",
                                                "description": "Enable\/disable allow IPv6 inbound soft reconfiguration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "as-override": {
                                                "type": "string",
                                                "description": "Enable\/disable replace peer AS with own AS for IPv4.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "as-override6": {
                                                "type": "string",
                                                "description": "Enable\/disable replace peer AS with own AS for IPv6.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "strict-capability-match": {
                                                "type": "string",
                                                "description": "Enable\/disable strict capability matching.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "default-originate-routemap": {
                                                "type": "string",
                                                "description": "Route map to specify criteria to originate IPv4 default.",
                                                "maxLength": 35
                                            },
                                            "default-originate-routemap6": {
                                                "type": "string",
                                                "description": "Route map to specify criteria to originate IPv6 default.",
                                                "maxLength": 35
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 63
                                            },
                                            "distribute-list-in": {
                                                "type": "string",
                                                "description": "Filter for IPv4 updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-in6": {
                                                "type": "string",
                                                "description": "Filter for IPv6 updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-out": {
                                                "type": "string",
                                                "description": "Filter for IPv4 updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "distribute-list-out6": {
                                                "type": "string",
                                                "description": "Filter for IPv6 updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "ebgp-multihop-ttl": {
                                                "type": "integer",
                                                "description": "EBGP multihop TTL for this peer.",
                                                "maximum": 255,
                                                "minimum": 1
                                            },
                                            "filter-list-in": {
                                                "type": "string",
                                                "description": "BGP filter for IPv4 inbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-in6": {
                                                "type": "string",
                                                "description": "BGP filter for IPv6 inbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-out": {
                                                "type": "string",
                                                "description": "BGP filter for IPv4 outbound routes.",
                                                "maxLength": 35
                                            },
                                            "filter-list-out6": {
                                                "type": "string",
                                                "description": "BGP filter for IPv6 outbound routes.",
                                                "maxLength": 35
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Specify outgoing interface for peer connection. For IPv6 peer, the interface should have link-local address.",
                                                "maxLength": 15
                                            },
                                            "maximum-prefix": {
                                                "type": "integer",
                                                "description": "Maximum number of IPv4 prefixes to accept from this peer.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "maximum-prefix6": {
                                                "type": "integer",
                                                "description": "Maximum number of IPv6 prefixes to accept from this peer.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-threshold": {
                                                "type": "integer",
                                                "description": "Maximum IPv4 prefix threshold value (1 - 100 percent).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-threshold6": {
                                                "type": "integer",
                                                "description": "Maximum IPv6 prefix threshold value (1 - 100 percent).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "maximum-prefix-warning-only": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 Only give warning message when limit is exceeded.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "maximum-prefix-warning-only6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 Only give warning message when limit is exceeded.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "prefix-list-in": {
                                                "type": "string",
                                                "description": "IPv4 Inbound filter for updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-in6": {
                                                "type": "string",
                                                "description": "IPv6 Inbound filter for updates from this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-out": {
                                                "type": "string",
                                                "description": "IPv4 Outbound filter for updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "prefix-list-out6": {
                                                "type": "string",
                                                "description": "IPv6 Outbound filter for updates to this neighbor.",
                                                "maxLength": 35
                                            },
                                            "remote-as": {
                                                "type": "integer",
                                                "description": "AS number of neighbor.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "local-as": {
                                                "type": "integer",
                                                "description": "Local AS number of neighbor.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "local-as-no-prepend": {
                                                "type": "string",
                                                "description": "Do not prepend local-as to incoming updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "local-as-replace-as": {
                                                "type": "string",
                                                "description": "Replace real AS with local-as in outgoing updates.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "retain-stale-time": {
                                                "type": "integer",
                                                "description": "Time to retain stale routes.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "route-map-in": {
                                                "type": "string",
                                                "description": "IPv4 Inbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-in6": {
                                                "type": "string",
                                                "description": "IPv6 Inbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out": {
                                                "type": "string",
                                                "description": "IPv4 outbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out-preferable": {
                                                "type": "string",
                                                "description": "IPv4 outbound route map filter if the peer is preferred.",
                                                "maxLength": 35
                                            },
                                            "route-map-out6": {
                                                "type": "string",
                                                "description": "IPv6 Outbound route map filter.",
                                                "maxLength": 35
                                            },
                                            "route-map-out6-preferable": {
                                                "type": "string",
                                                "description": "IPv6 outbound route map filter if the peer is preferred.",
                                                "maxLength": 35
                                            },
                                            "send-community": {
                                                "type": "string",
                                                "description": "IPv4 Send community attribute to neighbor.   \nstandard:Standard.   \nextended:Extended.   \nboth:Both.   \ndisable:Disable",
                                                "enum": [
                                                    "standard",
                                                    "extended",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "send-community6": {
                                                "type": "string",
                                                "description": "IPv6 Send community attribute to neighbor.   \nstandard:Standard.   \nextended:Extended.   \nboth:Both.   \ndisable:Disable",
                                                "enum": [
                                                    "standard",
                                                    "extended",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "keep-alive-timer": {
                                                "type": "integer",
                                                "description": "Keep alive timer interval (sec).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "holdtime-timer": {
                                                "type": "integer",
                                                "description": "Interval (sec) before peer considered dead.",
                                                "maximum": 65535,
                                                "minimum": 3
                                            },
                                            "connect-timer": {
                                                "type": "integer",
                                                "description": "Interval (sec) for connect timer.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "unsuppress-map": {
                                                "type": "string",
                                                "description": "IPv4 Route map to selectively unsuppress suppressed routes.",
                                                "maxLength": 35
                                            },
                                            "unsuppress-map6": {
                                                "type": "string",
                                                "description": "IPv6 Route map to selectively unsuppress suppressed routes.",
                                                "maxLength": 35
                                            },
                                            "update-source": {
                                                "type": "string",
                                                "description": "Interface to use as source IP\/IPv6 address of TCP connections.",
                                                "maxLength": 15
                                            },
                                            "weight": {
                                                "type": "integer",
                                                "description": "Neighbor weight.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "restart-time": {
                                                "type": "integer",
                                                "description": "Graceful restart delay time (sec, 0 = global default).",
                                                "maximum": 3600,
                                                "minimum": 0
                                            },
                                            "additional-path": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv4 additional-path capability.   \nsend:Enable sending additional paths.   \nreceive:Enable receiving additional paths.   \nboth:Enable sending and receiving additional paths.   \ndisable:Disable additional paths.",
                                                "enum": [
                                                    "send",
                                                    "receive",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "additional-path6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 additional-path capability.   \nsend:Enable sending additional paths.   \nreceive:Enable receiving additional paths.   \nboth:Enable sending and receiving additional paths.   \ndisable:Disable additional paths.",
                                                "enum": [
                                                    "send",
                                                    "receive",
                                                    "both",
                                                    "disable"
                                                ]
                                            },
                                            "adv-additional-path": {
                                                "type": "integer",
                                                "description": "Number of IPv4 additional paths that can be advertised to this neighbor.",
                                                "maximum": 255,
                                                "minimum": 2
                                            },
                                            "adv-additional-path6": {
                                                "type": "integer",
                                                "description": "Number of IPv6 additional paths that can be advertised to this neighbor.",
                                                "maximum": 255,
                                                "minimum": 2
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor-range": {
                                    "description": "BGP neighbor range table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Neighbor range ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Neighbor range prefix."
                                            },
                                            "max-neighbor-num": {
                                                "type": "integer",
                                                "description": "Maximum number of neighbors.",
                                                "maximum": 1000,
                                                "minimum": 1
                                            },
                                            "neighbor-group": {
                                                "type": "string",
                                                "description": "Neighbor group name.",
                                                "maxLength": 63
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor-range6": {
                                    "description": "BGP IPv6 neighbor range table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "IPv6 neighbor range ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix."
                                            },
                                            "max-neighbor-num": {
                                                "type": "integer",
                                                "description": "Maximum number of neighbors.",
                                                "maximum": 1000,
                                                "minimum": 1
                                            },
                                            "neighbor-group": {
                                                "type": "string",
                                                "description": "Neighbor group name.",
                                                "maxLength": 63
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "network": {
                                    "description": "BGP network table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Network prefix."
                                            },
                                            "backdoor": {
                                                "type": "string",
                                                "description": "Enable\/disable route as backdoor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-map": {
                                                "type": "string",
                                                "description": "Route map to modify generated route.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "network6": {
                                    "description": "BGP IPv6 network table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "Network IPv6 prefix."
                                            },
                                            "backdoor": {
                                                "type": "string",
                                                "description": "Enable\/disable route as backdoor.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-map": {
                                                "type": "string",
                                                "description": "Route map to modify generated route.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "BGP IPv4 redistribute table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Distribute list entry name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-map": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute6": {
                                    "description": "BGP IPv6 redistribute table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Distribute list entry name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "route-map": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "admin-distance": {
                                    "description": "Administrative distance modifications.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "neighbour-prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Neighbor address prefix."
                                            },
                                            "route-list": {
                                                "type": "string",
                                                "description": "Access list of routes to apply new distance to.",
                                                "maxLength": 35
                                            },
                                            "distance": {
                                                "type": "integer",
                                                "description": "Administrative distance to apply (1 - 255).",
                                                "maximum": 255,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "vrf-leak": {
                                    "description": "BGP VRF leaking table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "vrf": {
                                                "type": "string",
                                                "description": "Origin VRF ID <0 - 31>.",
                                                "maxLength": 7
                                            },
                                            "target": {
                                                "description": "Target VRF table.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "vrf": {
                                                            "type": "string",
                                                            "description": "Target VRF ID <0 - 31>.",
                                                            "maxLength": 7
                                                        },
                                                        "route-map": {
                                                            "type": "string",
                                                            "description": "Route map of VRF leaking.",
                                                            "maxLength": 35
                                                        },
                                                        "interface": {
                                                            "type": "string",
                                                            "description": "Interface which is used to leak routes to target VRF.",
                                                            "maxLength": 15
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/bgp"
                ]
            }
        },
        "\/router\/community-list\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Community list name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Community list type (standard or expanded).   \nstandard:Standard community list type.   \nexpanded:Expanded community list type.",
                                    "enum": [
                                        "standard",
                                        "expanded"
                                    ]
                                },
                                "rule": {
                                    "description": "Community list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny route-based operations, based on the route's COMMUNITY attribute.   \ndeny:Deny route-based operations.   \npermit:Permit or allow route-based operations.",
                                                "enum": [
                                                    "deny",
                                                    "permit"
                                                ]
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Ordered list of COMMUNITY attributes as a regular expression.",
                                                "maxLength": 255
                                            },
                                            "match": {
                                                "type": "string",
                                                "description": "Community specifications for matching a reserved community.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/community-list"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Community list name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Community list type (standard or expanded).   \nstandard:Standard community list type.   \nexpanded:Expanded community list type.",
                                    "enum": [
                                        "standard",
                                        "expanded"
                                    ]
                                },
                                "rule": {
                                    "description": "Community list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny route-based operations, based on the route's COMMUNITY attribute.   \ndeny:Deny route-based operations.   \npermit:Permit or allow route-based operations.",
                                                "enum": [
                                                    "deny",
                                                    "permit"
                                                ]
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Ordered list of COMMUNITY attributes as a regular expression.",
                                                "maxLength": 255
                                            },
                                            "match": {
                                                "type": "string",
                                                "description": "Community specifications for matching a reserved community.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/community-list"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/community-list"
                ]
            }
        },
        "\/router\/community-list": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Community list name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Community list type (standard or expanded).   \nstandard:Standard community list type.   \nexpanded:Expanded community list type.",
                                    "enum": [
                                        "standard",
                                        "expanded"
                                    ]
                                },
                                "rule": {
                                    "description": "Community list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny route-based operations, based on the route's COMMUNITY attribute.   \ndeny:Deny route-based operations.   \npermit:Permit or allow route-based operations.",
                                                "enum": [
                                                    "deny",
                                                    "permit"
                                                ]
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Ordered list of COMMUNITY attributes as a regular expression.",
                                                "maxLength": 255
                                            },
                                            "match": {
                                                "type": "string",
                                                "description": "Community specifications for matching a reserved community.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/community-list"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Community list name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Community list type (standard or expanded).   \nstandard:Standard community list type.   \nexpanded:Expanded community list type.",
                                    "enum": [
                                        "standard",
                                        "expanded"
                                    ]
                                },
                                "rule": {
                                    "description": "Community list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny route-based operations, based on the route's COMMUNITY attribute.   \ndeny:Deny route-based operations.   \npermit:Permit or allow route-based operations.",
                                                "enum": [
                                                    "deny",
                                                    "permit"
                                                ]
                                            },
                                            "regexp": {
                                                "type": "string",
                                                "description": "Ordered list of COMMUNITY attributes as a regular expression.",
                                                "maxLength": 255
                                            },
                                            "match": {
                                                "type": "string",
                                                "description": "Community specifications for matching a reserved community.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/community-list"
                ]
            }
        },
        "\/router\/isis": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "is-type": {
                                    "type": "string",
                                    "description": "IS type.   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1 only.   \nlevel-2-only:Level 2 only.",
                                    "enum": [
                                        "level-1-2",
                                        "level-1",
                                        "level-2-only"
                                    ]
                                },
                                "adv-passive-only": {
                                    "type": "string",
                                    "description": "Enable\/disable IS-IS advertisement of passive interfaces only.   \nenable:Advertise passive interfaces only.   \ndisable:Advertise all IS-IS enabled interfaces.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "adv-passive-only6": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 IS-IS advertisement of passive interfaces only.   \nenable:Advertise passive interfaces only.   \ndisable:Advertise all IS-IS enabled interfaces.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-mode-l1": {
                                    "type": "string",
                                    "description": "Level 1 authentication mode.   \npassword:Password.   \nmd5:MD5.",
                                    "enum": [
                                        "password",
                                        "md5"
                                    ]
                                },
                                "auth-mode-l2": {
                                    "type": "string",
                                    "description": "Level 2 authentication mode.   \npassword:Password.   \nmd5:MD5.",
                                    "enum": [
                                        "password",
                                        "md5"
                                    ]
                                },
                                "auth-password-l1": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Authentication password for level 1 PDUs."
                                },
                                "auth-password-l2": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Authentication password for level 2 PDUs."
                                },
                                "auth-keychain-l1": {
                                    "type": "string",
                                    "description": "Authentication key-chain for level 1 PDUs.",
                                    "maxLength": 35
                                },
                                "auth-keychain-l2": {
                                    "type": "string",
                                    "description": "Authentication key-chain for level 2 PDUs.",
                                    "maxLength": 35
                                },
                                "auth-sendonly-l1": {
                                    "type": "string",
                                    "description": "Enable\/disable level 1 authentication send-only.   \nenable:Enable level 1 authentication send-only.   \ndisable:Disable level 1 authentication send-only.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-sendonly-l2": {
                                    "type": "string",
                                    "description": "Enable\/disable level 2 authentication send-only.   \nenable:Enable level 2 authentication send-only.   \ndisable:Disable level 2 authentication send-only.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ignore-lsp-errors": {
                                    "type": "string",
                                    "description": "Enable\/disable ignoring of LSP errors with bad checksums.   \nenable:Enable ignoring of LSP errors with bad checksums.   \ndisable:Disable ignoring of LSP errors with bad checksums.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "lsp-gen-interval-l1": {
                                    "type": "integer",
                                    "description": "Minimum interval for level 1 LSP regenerating.",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "lsp-gen-interval-l2": {
                                    "type": "integer",
                                    "description": "Minimum interval for level 2 LSP regenerating.",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "lsp-refresh-interval": {
                                    "type": "integer",
                                    "description": "LSP refresh time in seconds.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "max-lsp-lifetime": {
                                    "type": "integer",
                                    "description": "Maximum LSP lifetime in seconds.",
                                    "maximum": 65535,
                                    "minimum": 350
                                },
                                "spf-interval-exp-l1": {
                                    "type": "string",
                                    "description": "Level 1 SPF calculation delay."
                                },
                                "spf-interval-exp-l2": {
                                    "type": "string",
                                    "description": "Level 2 SPF calculation delay."
                                },
                                "dynamic-hostname": {
                                    "type": "string",
                                    "description": "Enable\/disable dynamic hostname.   \nenable:Enable dynamic hostname.   \ndisable:Disable dynamic hostname.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "adjacency-check": {
                                    "type": "string",
                                    "description": "Enable\/disable adjacency check.   \nenable:Enable adjacency check.   \ndisable:Disable adjacency check.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "adjacency-check6": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 adjacency check.   \nenable:Enable IPv6 adjacency check.   \ndisable:Disable IPv6 adjacency check.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "overload-bit": {
                                    "type": "string",
                                    "description": "Enable\/disable signal other routers not to use us in SPF.   \nenable:Enable overload bit.   \ndisable:Disable overload bit.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "overload-bit-suppress": {
                                    "type": "string",
                                    "description": "Suppress overload-bit for the specific prefixes.   \nexternal:External.   \ninterlevel:Inter-level.",
                                    "enum": [
                                        "external",
                                        "interlevel"
                                    ]
                                },
                                "overload-bit-on-startup": {
                                    "type": "integer",
                                    "description": "Overload-bit only temporarily after reboot.",
                                    "maximum": 86400,
                                    "minimum": 5
                                },
                                "default-originate": {
                                    "type": "string",
                                    "description": "Enable\/disable distribution of default route information.   \nenable:Enable distribution of default route information.   \ndisable:Disable distribution of default route information.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "default-originate6": {
                                    "type": "string",
                                    "description": "Enable\/disable distribution of default IPv6 route information.   \nenable:Enable distribution of default IPv6 route information.   \ndisable:Disable distribution of default IPv6 route information.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "metric-style": {
                                    "type": "string",
                                    "description": "Use old-style (ISO 10589) or new-style packet formats   \nnarrow:Use old style of TLVs with narrow metric.   \nwide:Use new style of TLVs to carry wider metric.   \ntransition:Send and accept both styles of TLVs during transition.   \nnarrow-transition:Narrow and accept both styles of TLVs during transition.   \nnarrow-transition-l1:Narrow-transition level-1 only.   \nnarrow-transition-l2:Narrow-transition level-2 only.   \nwide-l1:Wide level-1 only.   \nwide-l2:Wide level-2 only.   \nwide-transition:Wide and accept both styles of TLVs during transition.   \nwide-transition-l1:Wide-transition level-1 only.   \nwide-transition-l2:Wide-transition level-2 only.   \ntransition-l1:Transition level-1 only.   \ntransition-l2:Transition level-2 only.",
                                    "enum": [
                                        "narrow",
                                        "wide",
                                        "transition",
                                        "narrow-transition",
                                        "narrow-transition-l1",
                                        "narrow-transition-l2",
                                        "wide-l1",
                                        "wide-l2",
                                        "wide-transition",
                                        "wide-transition-l1",
                                        "wide-transition-l2",
                                        "transition-l1",
                                        "transition-l2"
                                    ]
                                },
                                "redistribute-l1": {
                                    "type": "string",
                                    "description": "Enable\/disable redistribution of level 1 routes into level 2.   \nenable:Enable redistribution of level 1 routes into level 2.   \ndisable:Disable redistribution of level 1 routes into level 2.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "redistribute-l1-list": {
                                    "type": "string",
                                    "description": "Access-list for route redistribution from l1 to l2.",
                                    "maxLength": 35
                                },
                                "redistribute-l2": {
                                    "type": "string",
                                    "description": "Enable\/disable redistribution of level 2 routes into level 1.   \nenable:Enable redistribution of level 2 routes into level 1.   \ndisable:Disable redistribution of  level 2 routes into level 1.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "redistribute-l2-list": {
                                    "type": "string",
                                    "description": "Access-list for route redistribution from l2 to l1.",
                                    "maxLength": 35
                                },
                                "redistribute6-l1": {
                                    "type": "string",
                                    "description": "Enable\/disable redistribution of level 1 IPv6 routes into level 2.   \nenable:Enable redistribution of level 1 IPv6 routes into level 2.   \ndisable:Disable redistribution of level 1 IPv6 routes into level 2.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "redistribute6-l1-list": {
                                    "type": "string",
                                    "description": "Access-list for IPv6 route redistribution from l1 to l2.",
                                    "maxLength": 35
                                },
                                "redistribute6-l2": {
                                    "type": "string",
                                    "description": "Enable\/disable redistribution of level 2 IPv6 routes into level 1.   \nenable:Enable redistribution of level 2 IPv6 routes into level 1.   \ndisable:Disable redistribution of level 2 IPv6 routes into level 1.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "redistribute6-l2-list": {
                                    "type": "string",
                                    "description": "Access-list for IPv6 route redistribution from l2 to l1.",
                                    "maxLength": 35
                                },
                                "isis-net": {
                                    "description": "IS-IS net configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "isis-net ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "net": {
                                                "type": "string",
                                                "description": "IS-IS net xx.xxxx. ... .xxxx.xx."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "isis-interface": {
                                    "description": "IS-IS interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "IS-IS interface name.",
                                                "maxLength": 15
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable interface for IS-IS.   \nenable:Enable interface for IS-IS.   \ndisable:Disable interface for IS-IS.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "status6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 interface for IS-IS.   \nenable:Enable IPv6 interface for IS-IS.   \ndisable:Disable IPv6 interface for IS-IS.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "network-type": {
                                                "type": "string",
                                                "description": "IS-IS interface's network type   \nbroadcast:Broadcast.   \npoint-to-point:Point-to-point.   \nloopback:Loopback.",
                                                "enum": [
                                                    "broadcast",
                                                    "point-to-point",
                                                    "loopback"
                                                ]
                                            },
                                            "circuit-type": {
                                                "type": "string",
                                                "description": "IS-IS interface's circuit type   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1.   \nlevel-2:Level 2.",
                                                "enum": [
                                                    "level-1-2",
                                                    "level-1",
                                                    "level-2"
                                                ]
                                            },
                                            "csnp-interval-l1": {
                                                "type": "integer",
                                                "description": "Level 1 CSNP interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "csnp-interval-l2": {
                                                "type": "integer",
                                                "description": "Level 2 CSNP interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "hello-interval-l1": {
                                                "type": "integer",
                                                "description": "Level 1 hello interval.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "hello-interval-l2": {
                                                "type": "integer",
                                                "description": "Level 2 hello interval.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "hello-multiplier-l1": {
                                                "type": "integer",
                                                "description": "Level 1 multiplier for Hello holding time.",
                                                "maximum": 100,
                                                "minimum": 2
                                            },
                                            "hello-multiplier-l2": {
                                                "type": "integer",
                                                "description": "Level 2 multiplier for Hello holding time.",
                                                "maximum": 100,
                                                "minimum": 2
                                            },
                                            "hello-padding": {
                                                "type": "string",
                                                "description": "Enable\/disable padding to IS-IS hello packets.   \nenable:Enable padding to IS-IS hello packets.   \ndisable:Disable padding to IS-IS hello packets.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "lsp-interval": {
                                                "type": "integer",
                                                "description": "LSP transmission interval (milliseconds).",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "lsp-retransmit-interval": {
                                                "type": "integer",
                                                "description": "LSP retransmission interval (sec).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "metric-l1": {
                                                "type": "integer",
                                                "description": "Level 1 metric for interface.",
                                                "maximum": 63,
                                                "minimum": 1
                                            },
                                            "metric-l2": {
                                                "type": "integer",
                                                "description": "Level 2 metric for interface.",
                                                "maximum": 63,
                                                "minimum": 1
                                            },
                                            "wide-metric-l1": {
                                                "type": "integer",
                                                "description": "Level 1 wide metric for interface.",
                                                "maximum": 16777214,
                                                "minimum": 1
                                            },
                                            "wide-metric-l2": {
                                                "type": "integer",
                                                "description": "Level 2 wide metric for interface.",
                                                "maximum": 16777214,
                                                "minimum": 1
                                            },
                                            "auth-password-l1": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Authentication password for level 1 PDUs."
                                            },
                                            "auth-password-l2": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Authentication password for level 2 PDUs."
                                            },
                                            "auth-keychain-l1": {
                                                "type": "string",
                                                "description": "Authentication key-chain for level 1 PDUs.",
                                                "maxLength": 35
                                            },
                                            "auth-keychain-l2": {
                                                "type": "string",
                                                "description": "Authentication key-chain for level 2 PDUs.",
                                                "maxLength": 35
                                            },
                                            "auth-send-only-l1": {
                                                "type": "string",
                                                "description": "Enable\/disable authentication send-only for level 1 PDUs.   \nenable:Enable authentication send-only for level 1 PDUs.   \ndisable:Disable authentication send-only for level 1 PDUs.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "auth-send-only-l2": {
                                                "type": "string",
                                                "description": "Enable\/disable authentication send-only for level 2 PDUs.   \nenable:Enable authentication send-only for level 2 PDUs.   \ndisable:Disable authentication send-only for level 2 PDUs.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "auth-mode-l1": {
                                                "type": "string",
                                                "description": "Level 1 authentication mode.   \nmd5:MD5.   \npassword:Password.",
                                                "enum": [
                                                    "md5",
                                                    "password"
                                                ]
                                            },
                                            "auth-mode-l2": {
                                                "type": "string",
                                                "description": "Level 2 authentication mode.   \nmd5:MD5.   \npassword:Password.",
                                                "enum": [
                                                    "md5",
                                                    "password"
                                                ]
                                            },
                                            "priority-l1": {
                                                "type": "integer",
                                                "description": "Level 1 priority.",
                                                "maximum": 127,
                                                "minimum": 0
                                            },
                                            "priority-l2": {
                                                "type": "integer",
                                                "description": "Level 2 priority.",
                                                "maximum": 127,
                                                "minimum": 0
                                            },
                                            "mesh-group": {
                                                "type": "string",
                                                "description": "Enable\/disable IS-IS mesh group.   \nenable:Enable IS-IS mesh group.   \ndisable:Disable IS-IS mesh group.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "mesh-group-id": {
                                                "type": "integer",
                                                "description": "Mesh group ID <0-4294967295>, 0: mesh-group blocked.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "summary-address": {
                                    "description": "IS-IS summary addresses.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Summary address entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Prefix."
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Level.   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1.   \nlevel-2:Level 2.",
                                                "enum": [
                                                    "level-1-2",
                                                    "level-1",
                                                    "level-2"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "summary-address6": {
                                    "description": "IS-IS IPv6 summary address.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Prefix entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 prefix."
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Level.   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1.   \nlevel-2:Level 2.",
                                                "enum": [
                                                    "level-1-2",
                                                    "level-1",
                                                    "level-2"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "IS-IS redistribute protocols.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "protocol": {
                                                "type": "string",
                                                "description": "Protocol name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status.   \nenable:Enable.   \ndisable:Disable.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Metric.",
                                                "maximum": 4261412864,
                                                "minimum": 0
                                            },
                                            "metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \nexternal:External.   \ninternal:Internal.",
                                                "enum": [
                                                    "external",
                                                    "internal"
                                                ]
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Level.   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1.   \nlevel-2:Level 2.",
                                                "enum": [
                                                    "level-1-2",
                                                    "level-1",
                                                    "level-2"
                                                ]
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute6": {
                                    "description": "IS-IS IPv6 redistribution for routing protocols.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "protocol": {
                                                "type": "string",
                                                "description": "Protocol name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable redistribution.   \nenable:Enable redistribution.   \ndisable:Disable redistribution.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Metric.",
                                                "maximum": 4261412864,
                                                "minimum": 0
                                            },
                                            "metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \nexternal:External metric type.   \ninternal:Internal metric type.",
                                                "enum": [
                                                    "external",
                                                    "internal"
                                                ]
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Level.   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1.   \nlevel-2:Level 2.",
                                                "enum": [
                                                    "level-1-2",
                                                    "level-1",
                                                    "level-2"
                                                ]
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/isis"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "is-type": {
                                    "type": "string",
                                    "description": "IS type.   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1 only.   \nlevel-2-only:Level 2 only.",
                                    "enum": [
                                        "level-1-2",
                                        "level-1",
                                        "level-2-only"
                                    ]
                                },
                                "adv-passive-only": {
                                    "type": "string",
                                    "description": "Enable\/disable IS-IS advertisement of passive interfaces only.   \nenable:Advertise passive interfaces only.   \ndisable:Advertise all IS-IS enabled interfaces.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "adv-passive-only6": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 IS-IS advertisement of passive interfaces only.   \nenable:Advertise passive interfaces only.   \ndisable:Advertise all IS-IS enabled interfaces.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-mode-l1": {
                                    "type": "string",
                                    "description": "Level 1 authentication mode.   \npassword:Password.   \nmd5:MD5.",
                                    "enum": [
                                        "password",
                                        "md5"
                                    ]
                                },
                                "auth-mode-l2": {
                                    "type": "string",
                                    "description": "Level 2 authentication mode.   \npassword:Password.   \nmd5:MD5.",
                                    "enum": [
                                        "password",
                                        "md5"
                                    ]
                                },
                                "auth-password-l1": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Authentication password for level 1 PDUs."
                                },
                                "auth-password-l2": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Authentication password for level 2 PDUs."
                                },
                                "auth-keychain-l1": {
                                    "type": "string",
                                    "description": "Authentication key-chain for level 1 PDUs.",
                                    "maxLength": 35
                                },
                                "auth-keychain-l2": {
                                    "type": "string",
                                    "description": "Authentication key-chain for level 2 PDUs.",
                                    "maxLength": 35
                                },
                                "auth-sendonly-l1": {
                                    "type": "string",
                                    "description": "Enable\/disable level 1 authentication send-only.   \nenable:Enable level 1 authentication send-only.   \ndisable:Disable level 1 authentication send-only.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-sendonly-l2": {
                                    "type": "string",
                                    "description": "Enable\/disable level 2 authentication send-only.   \nenable:Enable level 2 authentication send-only.   \ndisable:Disable level 2 authentication send-only.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ignore-lsp-errors": {
                                    "type": "string",
                                    "description": "Enable\/disable ignoring of LSP errors with bad checksums.   \nenable:Enable ignoring of LSP errors with bad checksums.   \ndisable:Disable ignoring of LSP errors with bad checksums.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "lsp-gen-interval-l1": {
                                    "type": "integer",
                                    "description": "Minimum interval for level 1 LSP regenerating.",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "lsp-gen-interval-l2": {
                                    "type": "integer",
                                    "description": "Minimum interval for level 2 LSP regenerating.",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "lsp-refresh-interval": {
                                    "type": "integer",
                                    "description": "LSP refresh time in seconds.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "max-lsp-lifetime": {
                                    "type": "integer",
                                    "description": "Maximum LSP lifetime in seconds.",
                                    "maximum": 65535,
                                    "minimum": 350
                                },
                                "spf-interval-exp-l1": {
                                    "type": "string",
                                    "description": "Level 1 SPF calculation delay."
                                },
                                "spf-interval-exp-l2": {
                                    "type": "string",
                                    "description": "Level 2 SPF calculation delay."
                                },
                                "dynamic-hostname": {
                                    "type": "string",
                                    "description": "Enable\/disable dynamic hostname.   \nenable:Enable dynamic hostname.   \ndisable:Disable dynamic hostname.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "adjacency-check": {
                                    "type": "string",
                                    "description": "Enable\/disable adjacency check.   \nenable:Enable adjacency check.   \ndisable:Disable adjacency check.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "adjacency-check6": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 adjacency check.   \nenable:Enable IPv6 adjacency check.   \ndisable:Disable IPv6 adjacency check.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "overload-bit": {
                                    "type": "string",
                                    "description": "Enable\/disable signal other routers not to use us in SPF.   \nenable:Enable overload bit.   \ndisable:Disable overload bit.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "overload-bit-suppress": {
                                    "type": "string",
                                    "description": "Suppress overload-bit for the specific prefixes.   \nexternal:External.   \ninterlevel:Inter-level.",
                                    "enum": [
                                        "external",
                                        "interlevel"
                                    ]
                                },
                                "overload-bit-on-startup": {
                                    "type": "integer",
                                    "description": "Overload-bit only temporarily after reboot.",
                                    "maximum": 86400,
                                    "minimum": 5
                                },
                                "default-originate": {
                                    "type": "string",
                                    "description": "Enable\/disable distribution of default route information.   \nenable:Enable distribution of default route information.   \ndisable:Disable distribution of default route information.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "default-originate6": {
                                    "type": "string",
                                    "description": "Enable\/disable distribution of default IPv6 route information.   \nenable:Enable distribution of default IPv6 route information.   \ndisable:Disable distribution of default IPv6 route information.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "metric-style": {
                                    "type": "string",
                                    "description": "Use old-style (ISO 10589) or new-style packet formats   \nnarrow:Use old style of TLVs with narrow metric.   \nwide:Use new style of TLVs to carry wider metric.   \ntransition:Send and accept both styles of TLVs during transition.   \nnarrow-transition:Narrow and accept both styles of TLVs during transition.   \nnarrow-transition-l1:Narrow-transition level-1 only.   \nnarrow-transition-l2:Narrow-transition level-2 only.   \nwide-l1:Wide level-1 only.   \nwide-l2:Wide level-2 only.   \nwide-transition:Wide and accept both styles of TLVs during transition.   \nwide-transition-l1:Wide-transition level-1 only.   \nwide-transition-l2:Wide-transition level-2 only.   \ntransition-l1:Transition level-1 only.   \ntransition-l2:Transition level-2 only.",
                                    "enum": [
                                        "narrow",
                                        "wide",
                                        "transition",
                                        "narrow-transition",
                                        "narrow-transition-l1",
                                        "narrow-transition-l2",
                                        "wide-l1",
                                        "wide-l2",
                                        "wide-transition",
                                        "wide-transition-l1",
                                        "wide-transition-l2",
                                        "transition-l1",
                                        "transition-l2"
                                    ]
                                },
                                "redistribute-l1": {
                                    "type": "string",
                                    "description": "Enable\/disable redistribution of level 1 routes into level 2.   \nenable:Enable redistribution of level 1 routes into level 2.   \ndisable:Disable redistribution of level 1 routes into level 2.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "redistribute-l1-list": {
                                    "type": "string",
                                    "description": "Access-list for route redistribution from l1 to l2.",
                                    "maxLength": 35
                                },
                                "redistribute-l2": {
                                    "type": "string",
                                    "description": "Enable\/disable redistribution of level 2 routes into level 1.   \nenable:Enable redistribution of level 2 routes into level 1.   \ndisable:Disable redistribution of  level 2 routes into level 1.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "redistribute-l2-list": {
                                    "type": "string",
                                    "description": "Access-list for route redistribution from l2 to l1.",
                                    "maxLength": 35
                                },
                                "redistribute6-l1": {
                                    "type": "string",
                                    "description": "Enable\/disable redistribution of level 1 IPv6 routes into level 2.   \nenable:Enable redistribution of level 1 IPv6 routes into level 2.   \ndisable:Disable redistribution of level 1 IPv6 routes into level 2.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "redistribute6-l1-list": {
                                    "type": "string",
                                    "description": "Access-list for IPv6 route redistribution from l1 to l2.",
                                    "maxLength": 35
                                },
                                "redistribute6-l2": {
                                    "type": "string",
                                    "description": "Enable\/disable redistribution of level 2 IPv6 routes into level 1.   \nenable:Enable redistribution of level 2 IPv6 routes into level 1.   \ndisable:Disable redistribution of level 2 IPv6 routes into level 1.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "redistribute6-l2-list": {
                                    "type": "string",
                                    "description": "Access-list for IPv6 route redistribution from l2 to l1.",
                                    "maxLength": 35
                                },
                                "isis-net": {
                                    "description": "IS-IS net configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "isis-net ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "net": {
                                                "type": "string",
                                                "description": "IS-IS net xx.xxxx. ... .xxxx.xx."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "isis-interface": {
                                    "description": "IS-IS interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "IS-IS interface name.",
                                                "maxLength": 15
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable interface for IS-IS.   \nenable:Enable interface for IS-IS.   \ndisable:Disable interface for IS-IS.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "status6": {
                                                "type": "string",
                                                "description": "Enable\/disable IPv6 interface for IS-IS.   \nenable:Enable IPv6 interface for IS-IS.   \ndisable:Disable IPv6 interface for IS-IS.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "network-type": {
                                                "type": "string",
                                                "description": "IS-IS interface's network type   \nbroadcast:Broadcast.   \npoint-to-point:Point-to-point.   \nloopback:Loopback.",
                                                "enum": [
                                                    "broadcast",
                                                    "point-to-point",
                                                    "loopback"
                                                ]
                                            },
                                            "circuit-type": {
                                                "type": "string",
                                                "description": "IS-IS interface's circuit type   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1.   \nlevel-2:Level 2.",
                                                "enum": [
                                                    "level-1-2",
                                                    "level-1",
                                                    "level-2"
                                                ]
                                            },
                                            "csnp-interval-l1": {
                                                "type": "integer",
                                                "description": "Level 1 CSNP interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "csnp-interval-l2": {
                                                "type": "integer",
                                                "description": "Level 2 CSNP interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "hello-interval-l1": {
                                                "type": "integer",
                                                "description": "Level 1 hello interval.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "hello-interval-l2": {
                                                "type": "integer",
                                                "description": "Level 2 hello interval.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "hello-multiplier-l1": {
                                                "type": "integer",
                                                "description": "Level 1 multiplier for Hello holding time.",
                                                "maximum": 100,
                                                "minimum": 2
                                            },
                                            "hello-multiplier-l2": {
                                                "type": "integer",
                                                "description": "Level 2 multiplier for Hello holding time.",
                                                "maximum": 100,
                                                "minimum": 2
                                            },
                                            "hello-padding": {
                                                "type": "string",
                                                "description": "Enable\/disable padding to IS-IS hello packets.   \nenable:Enable padding to IS-IS hello packets.   \ndisable:Disable padding to IS-IS hello packets.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "lsp-interval": {
                                                "type": "integer",
                                                "description": "LSP transmission interval (milliseconds).",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "lsp-retransmit-interval": {
                                                "type": "integer",
                                                "description": "LSP retransmission interval (sec).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "metric-l1": {
                                                "type": "integer",
                                                "description": "Level 1 metric for interface.",
                                                "maximum": 63,
                                                "minimum": 1
                                            },
                                            "metric-l2": {
                                                "type": "integer",
                                                "description": "Level 2 metric for interface.",
                                                "maximum": 63,
                                                "minimum": 1
                                            },
                                            "wide-metric-l1": {
                                                "type": "integer",
                                                "description": "Level 1 wide metric for interface.",
                                                "maximum": 16777214,
                                                "minimum": 1
                                            },
                                            "wide-metric-l2": {
                                                "type": "integer",
                                                "description": "Level 2 wide metric for interface.",
                                                "maximum": 16777214,
                                                "minimum": 1
                                            },
                                            "auth-password-l1": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Authentication password for level 1 PDUs."
                                            },
                                            "auth-password-l2": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Authentication password for level 2 PDUs."
                                            },
                                            "auth-keychain-l1": {
                                                "type": "string",
                                                "description": "Authentication key-chain for level 1 PDUs.",
                                                "maxLength": 35
                                            },
                                            "auth-keychain-l2": {
                                                "type": "string",
                                                "description": "Authentication key-chain for level 2 PDUs.",
                                                "maxLength": 35
                                            },
                                            "auth-send-only-l1": {
                                                "type": "string",
                                                "description": "Enable\/disable authentication send-only for level 1 PDUs.   \nenable:Enable authentication send-only for level 1 PDUs.   \ndisable:Disable authentication send-only for level 1 PDUs.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "auth-send-only-l2": {
                                                "type": "string",
                                                "description": "Enable\/disable authentication send-only for level 2 PDUs.   \nenable:Enable authentication send-only for level 2 PDUs.   \ndisable:Disable authentication send-only for level 2 PDUs.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "auth-mode-l1": {
                                                "type": "string",
                                                "description": "Level 1 authentication mode.   \nmd5:MD5.   \npassword:Password.",
                                                "enum": [
                                                    "md5",
                                                    "password"
                                                ]
                                            },
                                            "auth-mode-l2": {
                                                "type": "string",
                                                "description": "Level 2 authentication mode.   \nmd5:MD5.   \npassword:Password.",
                                                "enum": [
                                                    "md5",
                                                    "password"
                                                ]
                                            },
                                            "priority-l1": {
                                                "type": "integer",
                                                "description": "Level 1 priority.",
                                                "maximum": 127,
                                                "minimum": 0
                                            },
                                            "priority-l2": {
                                                "type": "integer",
                                                "description": "Level 2 priority.",
                                                "maximum": 127,
                                                "minimum": 0
                                            },
                                            "mesh-group": {
                                                "type": "string",
                                                "description": "Enable\/disable IS-IS mesh group.   \nenable:Enable IS-IS mesh group.   \ndisable:Disable IS-IS mesh group.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "mesh-group-id": {
                                                "type": "integer",
                                                "description": "Mesh group ID <0-4294967295>, 0: mesh-group blocked.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "summary-address": {
                                    "description": "IS-IS summary addresses.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Summary address entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Prefix."
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Level.   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1.   \nlevel-2:Level 2.",
                                                "enum": [
                                                    "level-1-2",
                                                    "level-1",
                                                    "level-2"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "summary-address6": {
                                    "description": "IS-IS IPv6 summary address.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Prefix entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 prefix."
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Level.   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1.   \nlevel-2:Level 2.",
                                                "enum": [
                                                    "level-1-2",
                                                    "level-1",
                                                    "level-2"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "IS-IS redistribute protocols.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "protocol": {
                                                "type": "string",
                                                "description": "Protocol name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status.   \nenable:Enable.   \ndisable:Disable.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Metric.",
                                                "maximum": 4261412864,
                                                "minimum": 0
                                            },
                                            "metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \nexternal:External.   \ninternal:Internal.",
                                                "enum": [
                                                    "external",
                                                    "internal"
                                                ]
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Level.   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1.   \nlevel-2:Level 2.",
                                                "enum": [
                                                    "level-1-2",
                                                    "level-1",
                                                    "level-2"
                                                ]
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute6": {
                                    "description": "IS-IS IPv6 redistribution for routing protocols.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "protocol": {
                                                "type": "string",
                                                "description": "Protocol name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable redistribution.   \nenable:Enable redistribution.   \ndisable:Disable redistribution.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Metric.",
                                                "maximum": 4261412864,
                                                "minimum": 0
                                            },
                                            "metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \nexternal:External metric type.   \ninternal:Internal metric type.",
                                                "enum": [
                                                    "external",
                                                    "internal"
                                                ]
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Level.   \nlevel-1-2:Level 1 and 2.   \nlevel-1:Level 1.   \nlevel-2:Level 2.",
                                                "enum": [
                                                    "level-1-2",
                                                    "level-1",
                                                    "level-2"
                                                ]
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/isis"
                ]
            }
        },
        "\/router\/key-chain\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Key-chain name.",
                                    "maxLength": 35
                                },
                                "key": {
                                    "description": "Configuration method to edit key settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "Key ID (0 - 2147483647).",
                                                "maxLength": 10
                                            },
                                            "accept-lifetime": {
                                                "type": "string",
                                                "description": "Lifetime of received authentication key (format: hh:mm:ss day month year)."
                                            },
                                            "send-lifetime": {
                                                "type": "string",
                                                "description": "Lifetime of sent authentication key (format: hh:mm:ss day month year)."
                                            },
                                            "key-string": {
                                                "type": "string",
                                                "description": "Password for the key (max. = 35 characters).",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": 20
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/key-chain"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Key-chain name.",
                                    "maxLength": 35
                                },
                                "key": {
                                    "description": "Configuration method to edit key settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "Key ID (0 - 2147483647).",
                                                "maxLength": 10
                                            },
                                            "accept-lifetime": {
                                                "type": "string",
                                                "description": "Lifetime of received authentication key (format: hh:mm:ss day month year)."
                                            },
                                            "send-lifetime": {
                                                "type": "string",
                                                "description": "Lifetime of sent authentication key (format: hh:mm:ss day month year)."
                                            },
                                            "key-string": {
                                                "type": "string",
                                                "description": "Password for the key (max. = 35 characters).",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": 20
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/key-chain"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/key-chain"
                ]
            }
        },
        "\/router\/key-chain": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Key-chain name.",
                                    "maxLength": 35
                                },
                                "key": {
                                    "description": "Configuration method to edit key settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "Key ID (0 - 2147483647).",
                                                "maxLength": 10
                                            },
                                            "accept-lifetime": {
                                                "type": "string",
                                                "description": "Lifetime of received authentication key (format: hh:mm:ss day month year)."
                                            },
                                            "send-lifetime": {
                                                "type": "string",
                                                "description": "Lifetime of sent authentication key (format: hh:mm:ss day month year)."
                                            },
                                            "key-string": {
                                                "type": "string",
                                                "description": "Password for the key (max. = 35 characters).",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": 20
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/key-chain"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Key-chain name.",
                                    "maxLength": 35
                                },
                                "key": {
                                    "description": "Configuration method to edit key settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "Key ID (0 - 2147483647).",
                                                "maxLength": 10
                                            },
                                            "accept-lifetime": {
                                                "type": "string",
                                                "description": "Lifetime of received authentication key (format: hh:mm:ss day month year)."
                                            },
                                            "send-lifetime": {
                                                "type": "string",
                                                "description": "Lifetime of sent authentication key (format: hh:mm:ss day month year)."
                                            },
                                            "key-string": {
                                                "type": "string",
                                                "description": "Password for the key (max. = 35 characters).",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": 20
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/key-chain"
                ]
            }
        },
        "\/router\/multicast": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "route-threshold": {
                                    "type": "integer",
                                    "description": "Generate warnings when the number of multicast routes exceeds this number, must not be greater than route-limit.",
                                    "maximum": 2147483647,
                                    "minimum": 1
                                },
                                "route-limit": {
                                    "type": "integer",
                                    "description": "Maximum number of multicast routes.",
                                    "maximum": 2147483647,
                                    "minimum": 1
                                },
                                "multicast-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable IP multicast routing.   \nenable:Enable IP multicast routing.   \ndisable:Disable IP multicast routing.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "pim-sm-global": {
                                    "description": "PIM sparse-mode global settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "message-interval": {
                                                "type": "integer",
                                                "description": "Period of time between sending periodic PIM join\/prune messages in seconds (1 - 65535, default = 60).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "join-prune-holdtime": {
                                                "type": "integer",
                                                "description": "Join\/prune holdtime (1 - 65535, default = 210).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "accept-register-list": {
                                                "type": "string",
                                                "description": "Sources allowed to register packets with this Rendezvous Point (RP).",
                                                "maxLength": 35
                                            },
                                            "accept-source-list": {
                                                "type": "string",
                                                "description": "Sources allowed to send multicast traffic.",
                                                "maxLength": 35
                                            },
                                            "bsr-candidate": {
                                                "type": "string",
                                                "description": "Enable\/disable allowing this router to become a bootstrap router (BSR).   \nenable:Allow this router to function as a BSR.   \ndisable:Do not allow this router to function as a BSR.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "bsr-interface": {
                                                "type": "string",
                                                "description": "Interface to advertise as candidate BSR.",
                                                "maxLength": 15
                                            },
                                            "bsr-priority": {
                                                "type": "integer",
                                                "description": "BSR priority (0 - 255, default = 0).",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "bsr-hash": {
                                                "type": "integer",
                                                "description": "BSR hash length (0 - 32, default = 10).",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "bsr-allow-quick-refresh": {
                                                "type": "string",
                                                "description": "Enable\/disable accept BSR quick refresh packets from neighbors.   \nenable:Allow quick refresh packets.   \ndisable:Do not allow quick refresh packets.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "cisco-register-checksum": {
                                                "type": "string",
                                                "description": "Checksum entire register packet(for old Cisco IOS compatibility).   \nenable:register checksum entire packet.   \ndisable:Do not register checksum entire packet.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "cisco-register-checksum-group": {
                                                "type": "string",
                                                "description": "Cisco register checksum only these groups.",
                                                "maxLength": 35
                                            },
                                            "cisco-crp-prefix": {
                                                "type": "string",
                                                "description": "Enable\/disable making candidate RP compatible with old Cisco IOS.   \nenable:Do not allow sending group prefix of zero.   \ndisable:Allow sending group prefix of zero.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "cisco-ignore-rp-set-priority": {
                                                "type": "string",
                                                "description": "Use only hash for RP selection (compatibility with old Cisco IOS).   \nenable:Ignore RP-SET priority value.   \ndisable:Do not ignore RP-SET priority value.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "register-rp-reachability": {
                                                "type": "string",
                                                "description": "Enable\/disable check RP is reachable before registering packets.   \nenable:Check target RP is unicast reachable before registering.   \ndisable:Do not check RP unicast reachability.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "register-source": {
                                                "type": "string",
                                                "description": "Override source address in register packets.   \ndisable:Use source address of RPF interface.   \ninterface:Use primary IP of an interface.   \nip-address:Use a local IP address.",
                                                "enum": [
                                                    "disable",
                                                    "interface",
                                                    "ip-address"
                                                ]
                                            },
                                            "register-source-interface": {
                                                "type": "string",
                                                "description": "Override with primary interface address.",
                                                "maxLength": 15
                                            },
                                            "register-source-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Override with local IP address."
                                            },
                                            "register-supression": {
                                                "type": "integer",
                                                "description": "Period of time to honor register-stop message (1 - 65535 sec, default = 60).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "null-register-retries": {
                                                "type": "integer",
                                                "description": "Maximum retries of null register (1 - 20, default = 1).",
                                                "maximum": 20,
                                                "minimum": 1
                                            },
                                            "rp-register-keepalive": {
                                                "type": "integer",
                                                "description": "Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "spt-threshold": {
                                                "type": "string",
                                                "description": "Enable\/disable switching to source specific trees.   \nenable:Switch to Source tree when available.   \ndisable:Do not switch to Source tree when available.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "spt-threshold-group": {
                                                "type": "string",
                                                "description": "Groups allowed to switch to source tree.",
                                                "maxLength": 35
                                            },
                                            "ssm": {
                                                "type": "string",
                                                "description": "Enable\/disable source specific multicast.   \nenable:Allow source specific multicast.   \ndisable:Do not allow source specific multicast.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "ssm-range": {
                                                "type": "string",
                                                "description": "Groups allowed to source specific multicast.",
                                                "maxLength": 35
                                            },
                                            "register-rate-limit": {
                                                "type": "integer",
                                                "description": "Limit of packets\/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rp-address": {
                                                "description": "Statically configure RP addresses.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "ip-address": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "RP router address."
                                                        },
                                                        "group": {
                                                            "type": "string",
                                                            "description": "Groups to use this RP.",
                                                            "maxLength": 35
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface": {
                                    "description": "PIM interfaces.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            },
                                            "ttl-threshold": {
                                                "type": "integer",
                                                "description": "Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).",
                                                "maximum": 255,
                                                "minimum": 1
                                            },
                                            "pim-mode": {
                                                "type": "string",
                                                "description": "PIM operation mode.   \nsparse-mode:sparse-mode   \ndense-mode:dense-mode",
                                                "enum": [
                                                    "sparse-mode",
                                                    "dense-mode"
                                                ]
                                            },
                                            "passive": {
                                                "type": "string",
                                                "description": "Enable\/disable listening to IGMP but not participating in PIM.   \nenable:Listen only.   \ndisable:Participate in PIM.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "bfd": {
                                                "type": "string",
                                                "description": "Enable\/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).   \nenable:Enable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "neighbour-filter": {
                                                "type": "string",
                                                "description": "Routers acknowledged as neighbor routers.",
                                                "maxLength": 35
                                            },
                                            "hello-interval": {
                                                "type": "integer",
                                                "description": "Interval between sending PIM hello messages (0 - 65535 sec, default = 30).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "hello-holdtime": {
                                                "type": "integer",
                                                "description": "Time before old neighbor information expires (0 - 65535 sec, default = 105).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "cisco-exclude-genid": {
                                                "type": "string",
                                                "description": "Exclude GenID from hello packets (compatibility with old Cisco IOS).   \nenable:Do not send GenID.   \ndisable:Send GenID according to standard.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "dr-priority": {
                                                "type": "integer",
                                                "description": "DR election priority.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "propagation-delay": {
                                                "type": "integer",
                                                "description": "Delay flooding packets on this interface (100 - 5000 msec, default = 500).",
                                                "maximum": 5000,
                                                "minimum": 100
                                            },
                                            "state-refresh-interval": {
                                                "type": "integer",
                                                "description": "Interval between sending state-refresh packets (1 - 100 sec, default = 60).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "rp-candidate": {
                                                "type": "string",
                                                "description": "Enable\/disable compete to become RP in elections.   \nenable:Compete for RP elections.   \ndisable:Do not compete for RP elections.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "rp-candidate-group": {
                                                "type": "string",
                                                "description": "Multicast groups managed by this RP.",
                                                "maxLength": 35
                                            },
                                            "rp-candidate-priority": {
                                                "type": "integer",
                                                "description": "Router's priority as RP.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "rp-candidate-interval": {
                                                "type": "integer",
                                                "description": "RP candidate advertisement interval (1 - 16383 sec, default = 60).",
                                                "maximum": 16383,
                                                "minimum": 1
                                            },
                                            "multicast-flow": {
                                                "type": "string",
                                                "description": "Acceptable source for multicast group.",
                                                "maxLength": 35
                                            },
                                            "static-group": {
                                                "type": "string",
                                                "description": "Statically set multicast groups to forward out.",
                                                "maxLength": 35
                                            },
                                            "rpf-nbr-fail-back": {
                                                "type": "string",
                                                "description": "Enable\/disable fail back for RPF neighbor query.   \nenable:Enable fail back for RPF neighbor query.   \ndisable:Disable fail back for RPF neighbor query.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "rpf-nbr-fail-back-filter": {
                                                "type": "string",
                                                "description": "Filter for fail back RPF neighbors.",
                                                "maxLength": 35
                                            },
                                            "join-group": {
                                                "description": "Join multicast groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Multicast group IP address."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "igmp": {
                                                "description": "IGMP configuration options.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "access-group": {
                                                            "type": "string",
                                                            "description": "Groups IGMP hosts are allowed to join.",
                                                            "maxLength": 35
                                                        },
                                                        "version": {
                                                            "type": "string",
                                                            "description": "Maximum version of IGMP to support.   \n3:Version 3 and lower.   \n2:Version 2 and lower.   \n1:Version 1.",
                                                            "enum": [
                                                                "3",
                                                                "2",
                                                                "1"
                                                            ]
                                                        },
                                                        "immediate-leave-group": {
                                                            "type": "string",
                                                            "description": "Groups to drop membership for immediately after receiving IGMPv2 leave.",
                                                            "maxLength": 35
                                                        },
                                                        "last-member-query-interval": {
                                                            "type": "integer",
                                                            "description": "Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "last-member-query-count": {
                                                            "type": "integer",
                                                            "description": "Number of group specific queries before removing group (2 - 7, default = 2).",
                                                            "maximum": 7,
                                                            "minimum": 2
                                                        },
                                                        "query-max-response-time": {
                                                            "type": "integer",
                                                            "description": "Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).",
                                                            "maximum": 25,
                                                            "minimum": 1
                                                        },
                                                        "query-interval": {
                                                            "type": "integer",
                                                            "description": "Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "query-timeout": {
                                                            "type": "integer",
                                                            "description": "Timeout between queries before becoming querier for network (60 - 900, default = 255).",
                                                            "maximum": 900,
                                                            "minimum": 60
                                                        },
                                                        "router-alert-check": {
                                                            "type": "string",
                                                            "description": "Enable\/disable require IGMP packets contain router alert option.   \nenable:Require Router Alert option in IGMP packets.   \ndisable:don't require Router Alert option in IGMP packets",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/multicast"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "route-threshold": {
                                    "type": "integer",
                                    "description": "Generate warnings when the number of multicast routes exceeds this number, must not be greater than route-limit.",
                                    "maximum": 2147483647,
                                    "minimum": 1
                                },
                                "route-limit": {
                                    "type": "integer",
                                    "description": "Maximum number of multicast routes.",
                                    "maximum": 2147483647,
                                    "minimum": 1
                                },
                                "multicast-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable IP multicast routing.   \nenable:Enable IP multicast routing.   \ndisable:Disable IP multicast routing.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "pim-sm-global": {
                                    "description": "PIM sparse-mode global settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "message-interval": {
                                                "type": "integer",
                                                "description": "Period of time between sending periodic PIM join\/prune messages in seconds (1 - 65535, default = 60).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "join-prune-holdtime": {
                                                "type": "integer",
                                                "description": "Join\/prune holdtime (1 - 65535, default = 210).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "accept-register-list": {
                                                "type": "string",
                                                "description": "Sources allowed to register packets with this Rendezvous Point (RP).",
                                                "maxLength": 35
                                            },
                                            "accept-source-list": {
                                                "type": "string",
                                                "description": "Sources allowed to send multicast traffic.",
                                                "maxLength": 35
                                            },
                                            "bsr-candidate": {
                                                "type": "string",
                                                "description": "Enable\/disable allowing this router to become a bootstrap router (BSR).   \nenable:Allow this router to function as a BSR.   \ndisable:Do not allow this router to function as a BSR.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "bsr-interface": {
                                                "type": "string",
                                                "description": "Interface to advertise as candidate BSR.",
                                                "maxLength": 15
                                            },
                                            "bsr-priority": {
                                                "type": "integer",
                                                "description": "BSR priority (0 - 255, default = 0).",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "bsr-hash": {
                                                "type": "integer",
                                                "description": "BSR hash length (0 - 32, default = 10).",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "bsr-allow-quick-refresh": {
                                                "type": "string",
                                                "description": "Enable\/disable accept BSR quick refresh packets from neighbors.   \nenable:Allow quick refresh packets.   \ndisable:Do not allow quick refresh packets.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "cisco-register-checksum": {
                                                "type": "string",
                                                "description": "Checksum entire register packet(for old Cisco IOS compatibility).   \nenable:register checksum entire packet.   \ndisable:Do not register checksum entire packet.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "cisco-register-checksum-group": {
                                                "type": "string",
                                                "description": "Cisco register checksum only these groups.",
                                                "maxLength": 35
                                            },
                                            "cisco-crp-prefix": {
                                                "type": "string",
                                                "description": "Enable\/disable making candidate RP compatible with old Cisco IOS.   \nenable:Do not allow sending group prefix of zero.   \ndisable:Allow sending group prefix of zero.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "cisco-ignore-rp-set-priority": {
                                                "type": "string",
                                                "description": "Use only hash for RP selection (compatibility with old Cisco IOS).   \nenable:Ignore RP-SET priority value.   \ndisable:Do not ignore RP-SET priority value.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "register-rp-reachability": {
                                                "type": "string",
                                                "description": "Enable\/disable check RP is reachable before registering packets.   \nenable:Check target RP is unicast reachable before registering.   \ndisable:Do not check RP unicast reachability.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "register-source": {
                                                "type": "string",
                                                "description": "Override source address in register packets.   \ndisable:Use source address of RPF interface.   \ninterface:Use primary IP of an interface.   \nip-address:Use a local IP address.",
                                                "enum": [
                                                    "disable",
                                                    "interface",
                                                    "ip-address"
                                                ]
                                            },
                                            "register-source-interface": {
                                                "type": "string",
                                                "description": "Override with primary interface address.",
                                                "maxLength": 15
                                            },
                                            "register-source-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Override with local IP address."
                                            },
                                            "register-supression": {
                                                "type": "integer",
                                                "description": "Period of time to honor register-stop message (1 - 65535 sec, default = 60).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "null-register-retries": {
                                                "type": "integer",
                                                "description": "Maximum retries of null register (1 - 20, default = 1).",
                                                "maximum": 20,
                                                "minimum": 1
                                            },
                                            "rp-register-keepalive": {
                                                "type": "integer",
                                                "description": "Timeout for RP receiving data on (S,G) tree (1 - 65535 sec, default = 185).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "spt-threshold": {
                                                "type": "string",
                                                "description": "Enable\/disable switching to source specific trees.   \nenable:Switch to Source tree when available.   \ndisable:Do not switch to Source tree when available.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "spt-threshold-group": {
                                                "type": "string",
                                                "description": "Groups allowed to switch to source tree.",
                                                "maxLength": 35
                                            },
                                            "ssm": {
                                                "type": "string",
                                                "description": "Enable\/disable source specific multicast.   \nenable:Allow source specific multicast.   \ndisable:Do not allow source specific multicast.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "ssm-range": {
                                                "type": "string",
                                                "description": "Groups allowed to source specific multicast.",
                                                "maxLength": 35
                                            },
                                            "register-rate-limit": {
                                                "type": "integer",
                                                "description": "Limit of packets\/sec per source registered through this RP (0 - 65535, default = 0 which means unlimited).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rp-address": {
                                                "description": "Statically configure RP addresses.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "ip-address": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "RP router address."
                                                        },
                                                        "group": {
                                                            "type": "string",
                                                            "description": "Groups to use this RP.",
                                                            "maxLength": 35
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface": {
                                    "description": "PIM interfaces.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            },
                                            "ttl-threshold": {
                                                "type": "integer",
                                                "description": "Minimum TTL of multicast packets that will be forwarded (applied only to new multicast routes) (1 - 255, default = 1).",
                                                "maximum": 255,
                                                "minimum": 1
                                            },
                                            "pim-mode": {
                                                "type": "string",
                                                "description": "PIM operation mode.   \nsparse-mode:sparse-mode   \ndense-mode:dense-mode",
                                                "enum": [
                                                    "sparse-mode",
                                                    "dense-mode"
                                                ]
                                            },
                                            "passive": {
                                                "type": "string",
                                                "description": "Enable\/disable listening to IGMP but not participating in PIM.   \nenable:Listen only.   \ndisable:Participate in PIM.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "bfd": {
                                                "type": "string",
                                                "description": "Enable\/disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).   \nenable:Enable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Protocol Independent Multicast (PIM) Bidirectional Forwarding Detection (BFD).",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "neighbour-filter": {
                                                "type": "string",
                                                "description": "Routers acknowledged as neighbor routers.",
                                                "maxLength": 35
                                            },
                                            "hello-interval": {
                                                "type": "integer",
                                                "description": "Interval between sending PIM hello messages (0 - 65535 sec, default = 30).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "hello-holdtime": {
                                                "type": "integer",
                                                "description": "Time before old neighbor information expires (0 - 65535 sec, default = 105).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "cisco-exclude-genid": {
                                                "type": "string",
                                                "description": "Exclude GenID from hello packets (compatibility with old Cisco IOS).   \nenable:Do not send GenID.   \ndisable:Send GenID according to standard.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "dr-priority": {
                                                "type": "integer",
                                                "description": "DR election priority.",
                                                "maximum": 4294967295,
                                                "minimum": 1
                                            },
                                            "propagation-delay": {
                                                "type": "integer",
                                                "description": "Delay flooding packets on this interface (100 - 5000 msec, default = 500).",
                                                "maximum": 5000,
                                                "minimum": 100
                                            },
                                            "state-refresh-interval": {
                                                "type": "integer",
                                                "description": "Interval between sending state-refresh packets (1 - 100 sec, default = 60).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "rp-candidate": {
                                                "type": "string",
                                                "description": "Enable\/disable compete to become RP in elections.   \nenable:Compete for RP elections.   \ndisable:Do not compete for RP elections.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "rp-candidate-group": {
                                                "type": "string",
                                                "description": "Multicast groups managed by this RP.",
                                                "maxLength": 35
                                            },
                                            "rp-candidate-priority": {
                                                "type": "integer",
                                                "description": "Router's priority as RP.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "rp-candidate-interval": {
                                                "type": "integer",
                                                "description": "RP candidate advertisement interval (1 - 16383 sec, default = 60).",
                                                "maximum": 16383,
                                                "minimum": 1
                                            },
                                            "multicast-flow": {
                                                "type": "string",
                                                "description": "Acceptable source for multicast group.",
                                                "maxLength": 35
                                            },
                                            "static-group": {
                                                "type": "string",
                                                "description": "Statically set multicast groups to forward out.",
                                                "maxLength": 35
                                            },
                                            "rpf-nbr-fail-back": {
                                                "type": "string",
                                                "description": "Enable\/disable fail back for RPF neighbor query.   \nenable:Enable fail back for RPF neighbor query.   \ndisable:Disable fail back for RPF neighbor query.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "rpf-nbr-fail-back-filter": {
                                                "type": "string",
                                                "description": "Filter for fail back RPF neighbors.",
                                                "maxLength": 35
                                            },
                                            "join-group": {
                                                "description": "Join multicast groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Multicast group IP address."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "igmp": {
                                                "description": "IGMP configuration options.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "access-group": {
                                                            "type": "string",
                                                            "description": "Groups IGMP hosts are allowed to join.",
                                                            "maxLength": 35
                                                        },
                                                        "version": {
                                                            "type": "string",
                                                            "description": "Maximum version of IGMP to support.   \n3:Version 3 and lower.   \n2:Version 2 and lower.   \n1:Version 1.",
                                                            "enum": [
                                                                "3",
                                                                "2",
                                                                "1"
                                                            ]
                                                        },
                                                        "immediate-leave-group": {
                                                            "type": "string",
                                                            "description": "Groups to drop membership for immediately after receiving IGMPv2 leave.",
                                                            "maxLength": 35
                                                        },
                                                        "last-member-query-interval": {
                                                            "type": "integer",
                                                            "description": "Timeout between IGMPv2 leave and removing group (1 - 65535 msec, default = 1000).",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "last-member-query-count": {
                                                            "type": "integer",
                                                            "description": "Number of group specific queries before removing group (2 - 7, default = 2).",
                                                            "maximum": 7,
                                                            "minimum": 2
                                                        },
                                                        "query-max-response-time": {
                                                            "type": "integer",
                                                            "description": "Maximum time to wait for a IGMP query response (1 - 25 sec, default = 10).",
                                                            "maximum": 25,
                                                            "minimum": 1
                                                        },
                                                        "query-interval": {
                                                            "type": "integer",
                                                            "description": "Interval between queries to IGMP hosts (1 - 65535 sec, default = 125).",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "query-timeout": {
                                                            "type": "integer",
                                                            "description": "Timeout between queries before becoming querier for network (60 - 900, default = 255).",
                                                            "maximum": 900,
                                                            "minimum": 60
                                                        },
                                                        "router-alert-check": {
                                                            "type": "string",
                                                            "description": "Enable\/disable require IGMP packets contain router alert option.   \nenable:Require Router Alert option in IGMP packets.   \ndisable:don't require Router Alert option in IGMP packets",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/multicast"
                ]
            }
        },
        "\/router\/multicast-flow\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "flows": {
                                    "description": "Multicast-flow entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Flow ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "group-addr": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Multicast group IP address."
                                            },
                                            "source-addr": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Multicast source IP address."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/multicast-flow"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "flows": {
                                    "description": "Multicast-flow entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Flow ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "group-addr": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Multicast group IP address."
                                            },
                                            "source-addr": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Multicast source IP address."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/multicast-flow"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/multicast-flow"
                ]
            }
        },
        "\/router\/multicast-flow": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "flows": {
                                    "description": "Multicast-flow entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Flow ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "group-addr": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Multicast group IP address."
                                            },
                                            "source-addr": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Multicast source IP address."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/multicast-flow"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "flows": {
                                    "description": "Multicast-flow entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Flow ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "group-addr": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Multicast group IP address."
                                            },
                                            "source-addr": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Multicast source IP address."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/multicast-flow"
                ]
            }
        },
        "\/router\/multicast6": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "multicast-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 multicast routing.   \nenable:Enable IPv6 multicast routing.   \ndisable:Disable IPv6 multicast routing.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-pmtu": {
                                    "type": "string",
                                    "description": "Enable\/disable PMTU for IPv6 multicast.   \nenable:Enable PMTU for IPv6 multicast.   \ndisable:Disable PMTU for IPv6 multicast.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "interface": {
                                    "description": "Protocol Independent Multicast (PIM) interfaces.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            },
                                            "hello-interval": {
                                                "type": "integer",
                                                "description": "Interval between sending PIM hello messages  (1 - 65535 sec, default = 30)..",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "hello-holdtime": {
                                                "type": "integer",
                                                "description": "Time before old neighbour information expires (1 - 65535 sec, default = 105).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "pim-sm-global": {
                                    "description": "PIM sparse-mode global settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "register-rate-limit": {
                                                "type": "integer",
                                                "description": "Limit of packets\/sec per source registered through this RP (0 means unlimited).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rp-address": {
                                                "description": "Statically configured RP addresses.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID of the entry.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "ip6-address": {
                                                            "type": "string",
                                                            "format": "ipv6",
                                                            "description": "RP router IPv6 address."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/multicast6"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "multicast-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 multicast routing.   \nenable:Enable IPv6 multicast routing.   \ndisable:Disable IPv6 multicast routing.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-pmtu": {
                                    "type": "string",
                                    "description": "Enable\/disable PMTU for IPv6 multicast.   \nenable:Enable PMTU for IPv6 multicast.   \ndisable:Disable PMTU for IPv6 multicast.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "interface": {
                                    "description": "Protocol Independent Multicast (PIM) interfaces.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            },
                                            "hello-interval": {
                                                "type": "integer",
                                                "description": "Interval between sending PIM hello messages  (1 - 65535 sec, default = 30)..",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "hello-holdtime": {
                                                "type": "integer",
                                                "description": "Time before old neighbour information expires (1 - 65535 sec, default = 105).",
                                                "maximum": 65535,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "pim-sm-global": {
                                    "description": "PIM sparse-mode global settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "register-rate-limit": {
                                                "type": "integer",
                                                "description": "Limit of packets\/sec per source registered through this RP (0 means unlimited).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rp-address": {
                                                "description": "Statically configured RP addresses.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID of the entry.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "ip6-address": {
                                                            "type": "string",
                                                            "format": "ipv6",
                                                            "description": "RP router IPv6 address."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/multicast6"
                ]
            }
        },
        "\/router\/ospf": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "abr-type": {
                                    "type": "string",
                                    "description": "Area border router type.   \ncisco:Cisco.   \nibm:IBM.   \nshortcut:Shortcut.   \nstandard:Standard.",
                                    "enum": [
                                        "cisco",
                                        "ibm",
                                        "shortcut",
                                        "standard"
                                    ]
                                },
                                "auto-cost-ref-bandwidth": {
                                    "type": "integer",
                                    "description": "Reference bandwidth in terms of megabits per second.",
                                    "maximum": 1000000,
                                    "minimum": 1
                                },
                                "distance-external": {
                                    "type": "integer",
                                    "description": "Administrative external distance.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "distance-inter-area": {
                                    "type": "integer",
                                    "description": "Administrative inter-area distance.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "distance-intra-area": {
                                    "type": "integer",
                                    "description": "Administrative intra-area distance.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "database-overflow": {
                                    "type": "string",
                                    "description": "Enable\/disable database overflow.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "database-overflow-max-lsas": {
                                    "type": "integer",
                                    "description": "Database overflow maximum LSAs.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "database-overflow-time-to-recover": {
                                    "type": "integer",
                                    "description": "Database overflow time to recover (sec).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "default-information-originate": {
                                    "type": "string",
                                    "description": "Enable\/disable generation of default route.   \nenable:Enable setting.   \nalways:Always advertise the default router.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "always",
                                        "disable"
                                    ]
                                },
                                "default-information-metric": {
                                    "type": "integer",
                                    "description": "Default information metric.",
                                    "maximum": 16777214,
                                    "minimum": 1
                                },
                                "default-information-metric-type": {
                                    "type": "string",
                                    "description": "Default information metric type.   \n1:Type 1.   \n2:Type 2.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "default-information-route-map": {
                                    "type": "string",
                                    "description": "Default information route map.",
                                    "maxLength": 35
                                },
                                "default-metric": {
                                    "type": "integer",
                                    "description": "Default metric of redistribute routes.",
                                    "maximum": 16777214,
                                    "minimum": 1
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance of the route.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "rfc1583-compatible": {
                                    "type": "string",
                                    "description": "Enable\/disable RFC1583 compatibility.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "router-id": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Router ID."
                                },
                                "spf-timers": {
                                    "type": "string",
                                    "description": "SPF calculation frequency."
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Bidirectional Forwarding Detection (BFD).   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-neighbour-changes": {
                                    "type": "string",
                                    "description": "Enable logging of OSPF neighbour's changes   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "distribute-list-in": {
                                    "type": "string",
                                    "description": "Filter incoming routes.",
                                    "maxLength": 35
                                },
                                "distribute-route-map-in": {
                                    "type": "string",
                                    "description": "Filter incoming external routes by route-map.",
                                    "maxLength": 35
                                },
                                "restart-mode": {
                                    "type": "string",
                                    "description": "OSPF restart mode (graceful or LLS).   \nnone:Hitless restart disabled.   \nlls:LLS mode.   \ngraceful-restart:Graceful Restart Mode.",
                                    "enum": [
                                        "none",
                                        "lls",
                                        "graceful-restart"
                                    ]
                                },
                                "restart-period": {
                                    "type": "integer",
                                    "description": "Graceful restart period.",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "area": {
                                    "description": "OSPF area configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Area entry IP address."
                                            },
                                            "shortcut": {
                                                "type": "string",
                                                "description": "Enable\/disable shortcut option.   \ndisable:Disable shortcut option.   \nenable:Enable shortcut option.   \ndefault:Default shortcut option.",
                                                "enum": [
                                                    "disable",
                                                    "enable",
                                                    "default"
                                                ]
                                            },
                                            "authentication": {
                                                "type": "string",
                                                "description": "Authentication type.   \nnone:None.   \ntext:Text.   \nmd5:MD5.",
                                                "enum": [
                                                    "none",
                                                    "text",
                                                    "md5"
                                                ]
                                            },
                                            "default-cost": {
                                                "type": "integer",
                                                "description": "Summary default cost of stub or NSSA area.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "nssa-translator-role": {
                                                "type": "string",
                                                "description": "NSSA translator role type.   \ncandidate:Candidate.   \nnever:Never.   \nalways:Always.",
                                                "enum": [
                                                    "candidate",
                                                    "never",
                                                    "always"
                                                ]
                                            },
                                            "stub-type": {
                                                "type": "string",
                                                "description": "Stub summary setting.   \nno-summary:No summary.   \nsummary:Summary.",
                                                "enum": [
                                                    "no-summary",
                                                    "summary"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Area type setting.   \nregular:Regular.   \nnssa:NSSA.   \nstub:Stub.",
                                                "enum": [
                                                    "regular",
                                                    "nssa",
                                                    "stub"
                                                ]
                                            },
                                            "nssa-default-information-originate": {
                                                "type": "string",
                                                "description": "Redistribute, advertise, or do not originate Type-7 default route into NSSA area.   \nenable:Redistribute Type-7 default route from routing table.   \nalways:Advertise a self-originated Type-7 default route.   \ndisable:Do not advertise Type-7 default route.",
                                                "enum": [
                                                    "enable",
                                                    "always",
                                                    "disable"
                                                ]
                                            },
                                            "nssa-default-information-originate-metric": {
                                                "type": "integer",
                                                "description": "OSPF default metric.",
                                                "maximum": 16777214,
                                                "minimum": 0
                                            },
                                            "nssa-default-information-originate-metric-type": {
                                                "type": "string",
                                                "description": "OSPF metric type for default routes.   \n1:Type 1.   \n2:Type 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            },
                                            "nssa-redistribution": {
                                                "type": "string",
                                                "description": "Enable\/disable redistribute into NSSA area.   \nenable:Enable redistribute into NSSA area.   \ndisable:Disable redistribute into NSSA area.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "range": {
                                                "description": "OSPF area range configuration.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Range entry ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "prefix": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Prefix."
                                                        },
                                                        "advertise": {
                                                            "type": "string",
                                                            "description": "Enable\/disable advertise status.   \ndisable:Disable advertise status.   \nenable:Enable advertise status.",
                                                            "enum": [
                                                                "disable",
                                                                "enable"
                                                            ]
                                                        },
                                                        "substitute": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Substitute prefix."
                                                        },
                                                        "substitute-status": {
                                                            "type": "string",
                                                            "description": "Enable\/disable substitute status.   \nenable:Enable substitute status.   \ndisable:Disable substitute status.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "virtual-link": {
                                                "description": "OSPF virtual link configuration.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Virtual link entry name.",
                                                            "maxLength": 35
                                                        },
                                                        "authentication": {
                                                            "type": "string",
                                                            "description": "Authentication type.   \nnone:None.   \ntext:Text.   \nmd5:MD5.",
                                                            "enum": [
                                                                "none",
                                                                "text",
                                                                "md5"
                                                            ]
                                                        },
                                                        "authentication-key": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Authentication key."
                                                        },
                                                        "md5-keychain": {
                                                            "type": "string",
                                                            "description": "Authentication MD5 key-chain name.",
                                                            "maxLength": 35
                                                        },
                                                        "dead-interval": {
                                                            "type": "integer",
                                                            "description": "Dead interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "hello-interval": {
                                                            "type": "integer",
                                                            "description": "Hello interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "retransmit-interval": {
                                                            "type": "integer",
                                                            "description": "Retransmit interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "transmit-delay": {
                                                            "type": "integer",
                                                            "description": "Transmit delay.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "peer": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Peer IP."
                                                        },
                                                        "md5-keys": {
                                                            "description": "MD5 key.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Key ID (1 - 255).",
                                                                        "maximum": 255,
                                                                        "minimum": 1
                                                                    },
                                                                    "key-string": {
                                                                        "type": "string",
                                                                        "format": "password",
                                                                        "description": "Password for the key."
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "filter-list": {
                                                "description": "OSPF area filter-list configuration.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Filter list entry ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "list": {
                                                            "type": "string",
                                                            "description": "Access-list or prefix-list name.",
                                                            "maxLength": 35
                                                        },
                                                        "direction": {
                                                            "type": "string",
                                                            "description": "Direction.   \nin:In.   \nout:Out.",
                                                            "enum": [
                                                                "in",
                                                                "out"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ospf-interface": {
                                    "description": "OSPF interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface entry name.",
                                                "maxLength": 35
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Configuration interface name.",
                                                "maxLength": 15
                                            },
                                            "ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "IP address."
                                            },
                                            "authentication": {
                                                "type": "string",
                                                "description": "Authentication type.   \nnone:None.   \ntext:Text.   \nmd5:MD5.",
                                                "enum": [
                                                    "none",
                                                    "text",
                                                    "md5"
                                                ]
                                            },
                                            "authentication-key": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Authentication key."
                                            },
                                            "md5-keychain": {
                                                "type": "string",
                                                "description": "Authentication MD5 key-chain name.",
                                                "maxLength": 35
                                            },
                                            "prefix-length": {
                                                "type": "integer",
                                                "description": "Prefix length.",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "retransmit-interval": {
                                                "type": "integer",
                                                "description": "Retransmit interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "transmit-delay": {
                                                "type": "integer",
                                                "description": "Transmit delay.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "Cost of the interface, value range from 0 to 65535, 0 means auto-cost.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "priority": {
                                                "type": "integer",
                                                "description": "Priority.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "dead-interval": {
                                                "type": "integer",
                                                "description": "Dead interval.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "hello-interval": {
                                                "type": "integer",
                                                "description": "Hello interval.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "hello-multiplier": {
                                                "type": "integer",
                                                "description": "Number of hello packets within dead interval.",
                                                "maximum": 10,
                                                "minimum": 3
                                            },
                                            "database-filter-out": {
                                                "type": "string",
                                                "description": "Enable\/disable control of flooding out LSAs.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "mtu": {
                                                "type": "integer",
                                                "description": "MTU for database description packets.",
                                                "maximum": 65535,
                                                "minimum": 576
                                            },
                                            "mtu-ignore": {
                                                "type": "string",
                                                "description": "Enable\/disable ignore MTU.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "network-type": {
                                                "type": "string",
                                                "description": "Network type.   \nbroadcast:Broadcast.   \nnon-broadcast:Non-broadcast.   \npoint-to-point:Point-to-point.   \npoint-to-multipoint:Point-to-multipoint.   \npoint-to-multipoint-non-broadcast:Point-to-multipoint and non-broadcast.",
                                                "enum": [
                                                    "broadcast",
                                                    "non-broadcast",
                                                    "point-to-point",
                                                    "point-to-multipoint",
                                                    "point-to-multipoint-non-broadcast"
                                                ]
                                            },
                                            "bfd": {
                                                "type": "string",
                                                "description": "Bidirectional Forwarding Detection (BFD).   \nglobal:Follow global configuration.   \nenable:Enable BFD on this interface.   \ndisable:Disable BFD on this interface.",
                                                "enum": [
                                                    "global",
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable status.   \ndisable:Disable status.   \nenable:Enable status.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "resync-timeout": {
                                                "type": "integer",
                                                "description": "Graceful restart neighbor resynchronization timeout.",
                                                "maximum": 3600,
                                                "minimum": 1
                                            },
                                            "md5-keys": {
                                                "description": "MD5 key.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Key ID (1 - 255).",
                                                            "maximum": 255,
                                                            "minimum": 1
                                                        },
                                                        "key-string": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Password for the key."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "network": {
                                    "description": "OSPF network configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Network entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Prefix."
                                            },
                                            "area": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Attach the network to area."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor": {
                                    "description": "OSPF neighbor configuration are used when OSPF runs on non-broadcast media",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Neighbor entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Interface IP address of the neighbor."
                                            },
                                            "poll-interval": {
                                                "type": "integer",
                                                "description": "Poll interval time in seconds.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "Cost of the interface, value range from 0 to 65535, 0 means auto-cost.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "priority": {
                                                "type": "integer",
                                                "description": "Priority.",
                                                "maximum": 255,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "passive-interface": {
                                    "description": "Passive interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Passive interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "summary-address": {
                                    "description": "IP address summary configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Summary address entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Prefix."
                                            },
                                            "tag": {
                                                "type": "integer",
                                                "description": "Tag value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "advertise": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise status.   \ndisable:Disable advertise status.   \nenable:Enable advertise status.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "distribute-list": {
                                    "description": "Distribute list configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Distribute list entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "access-list": {
                                                "type": "string",
                                                "description": "Access list name.",
                                                "maxLength": 35
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "description": "Protocol type.   \nconnected:Connected type.   \nstatic:Static type.   \nrip:RIP type.",
                                                "enum": [
                                                    "connected",
                                                    "static",
                                                    "rip"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "Redistribute configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Redistribute name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Redistribute metric setting.",
                                                "maximum": 16777214,
                                                "minimum": 0
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            },
                                            "metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \n1:Type 1.   \n2:Type 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            },
                                            "tag": {
                                                "type": "integer",
                                                "description": "Tag value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/ospf"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "abr-type": {
                                    "type": "string",
                                    "description": "Area border router type.   \ncisco:Cisco.   \nibm:IBM.   \nshortcut:Shortcut.   \nstandard:Standard.",
                                    "enum": [
                                        "cisco",
                                        "ibm",
                                        "shortcut",
                                        "standard"
                                    ]
                                },
                                "auto-cost-ref-bandwidth": {
                                    "type": "integer",
                                    "description": "Reference bandwidth in terms of megabits per second.",
                                    "maximum": 1000000,
                                    "minimum": 1
                                },
                                "distance-external": {
                                    "type": "integer",
                                    "description": "Administrative external distance.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "distance-inter-area": {
                                    "type": "integer",
                                    "description": "Administrative inter-area distance.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "distance-intra-area": {
                                    "type": "integer",
                                    "description": "Administrative intra-area distance.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "database-overflow": {
                                    "type": "string",
                                    "description": "Enable\/disable database overflow.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "database-overflow-max-lsas": {
                                    "type": "integer",
                                    "description": "Database overflow maximum LSAs.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "database-overflow-time-to-recover": {
                                    "type": "integer",
                                    "description": "Database overflow time to recover (sec).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "default-information-originate": {
                                    "type": "string",
                                    "description": "Enable\/disable generation of default route.   \nenable:Enable setting.   \nalways:Always advertise the default router.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "always",
                                        "disable"
                                    ]
                                },
                                "default-information-metric": {
                                    "type": "integer",
                                    "description": "Default information metric.",
                                    "maximum": 16777214,
                                    "minimum": 1
                                },
                                "default-information-metric-type": {
                                    "type": "string",
                                    "description": "Default information metric type.   \n1:Type 1.   \n2:Type 2.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "default-information-route-map": {
                                    "type": "string",
                                    "description": "Default information route map.",
                                    "maxLength": 35
                                },
                                "default-metric": {
                                    "type": "integer",
                                    "description": "Default metric of redistribute routes.",
                                    "maximum": 16777214,
                                    "minimum": 1
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance of the route.",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "rfc1583-compatible": {
                                    "type": "string",
                                    "description": "Enable\/disable RFC1583 compatibility.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "router-id": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Router ID."
                                },
                                "spf-timers": {
                                    "type": "string",
                                    "description": "SPF calculation frequency."
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Bidirectional Forwarding Detection (BFD).   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-neighbour-changes": {
                                    "type": "string",
                                    "description": "Enable logging of OSPF neighbour's changes   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "distribute-list-in": {
                                    "type": "string",
                                    "description": "Filter incoming routes.",
                                    "maxLength": 35
                                },
                                "distribute-route-map-in": {
                                    "type": "string",
                                    "description": "Filter incoming external routes by route-map.",
                                    "maxLength": 35
                                },
                                "restart-mode": {
                                    "type": "string",
                                    "description": "OSPF restart mode (graceful or LLS).   \nnone:Hitless restart disabled.   \nlls:LLS mode.   \ngraceful-restart:Graceful Restart Mode.",
                                    "enum": [
                                        "none",
                                        "lls",
                                        "graceful-restart"
                                    ]
                                },
                                "restart-period": {
                                    "type": "integer",
                                    "description": "Graceful restart period.",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "area": {
                                    "description": "OSPF area configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Area entry IP address."
                                            },
                                            "shortcut": {
                                                "type": "string",
                                                "description": "Enable\/disable shortcut option.   \ndisable:Disable shortcut option.   \nenable:Enable shortcut option.   \ndefault:Default shortcut option.",
                                                "enum": [
                                                    "disable",
                                                    "enable",
                                                    "default"
                                                ]
                                            },
                                            "authentication": {
                                                "type": "string",
                                                "description": "Authentication type.   \nnone:None.   \ntext:Text.   \nmd5:MD5.",
                                                "enum": [
                                                    "none",
                                                    "text",
                                                    "md5"
                                                ]
                                            },
                                            "default-cost": {
                                                "type": "integer",
                                                "description": "Summary default cost of stub or NSSA area.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "nssa-translator-role": {
                                                "type": "string",
                                                "description": "NSSA translator role type.   \ncandidate:Candidate.   \nnever:Never.   \nalways:Always.",
                                                "enum": [
                                                    "candidate",
                                                    "never",
                                                    "always"
                                                ]
                                            },
                                            "stub-type": {
                                                "type": "string",
                                                "description": "Stub summary setting.   \nno-summary:No summary.   \nsummary:Summary.",
                                                "enum": [
                                                    "no-summary",
                                                    "summary"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Area type setting.   \nregular:Regular.   \nnssa:NSSA.   \nstub:Stub.",
                                                "enum": [
                                                    "regular",
                                                    "nssa",
                                                    "stub"
                                                ]
                                            },
                                            "nssa-default-information-originate": {
                                                "type": "string",
                                                "description": "Redistribute, advertise, or do not originate Type-7 default route into NSSA area.   \nenable:Redistribute Type-7 default route from routing table.   \nalways:Advertise a self-originated Type-7 default route.   \ndisable:Do not advertise Type-7 default route.",
                                                "enum": [
                                                    "enable",
                                                    "always",
                                                    "disable"
                                                ]
                                            },
                                            "nssa-default-information-originate-metric": {
                                                "type": "integer",
                                                "description": "OSPF default metric.",
                                                "maximum": 16777214,
                                                "minimum": 0
                                            },
                                            "nssa-default-information-originate-metric-type": {
                                                "type": "string",
                                                "description": "OSPF metric type for default routes.   \n1:Type 1.   \n2:Type 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            },
                                            "nssa-redistribution": {
                                                "type": "string",
                                                "description": "Enable\/disable redistribute into NSSA area.   \nenable:Enable redistribute into NSSA area.   \ndisable:Disable redistribute into NSSA area.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "range": {
                                                "description": "OSPF area range configuration.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Range entry ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "prefix": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Prefix."
                                                        },
                                                        "advertise": {
                                                            "type": "string",
                                                            "description": "Enable\/disable advertise status.   \ndisable:Disable advertise status.   \nenable:Enable advertise status.",
                                                            "enum": [
                                                                "disable",
                                                                "enable"
                                                            ]
                                                        },
                                                        "substitute": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Substitute prefix."
                                                        },
                                                        "substitute-status": {
                                                            "type": "string",
                                                            "description": "Enable\/disable substitute status.   \nenable:Enable substitute status.   \ndisable:Disable substitute status.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "virtual-link": {
                                                "description": "OSPF virtual link configuration.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Virtual link entry name.",
                                                            "maxLength": 35
                                                        },
                                                        "authentication": {
                                                            "type": "string",
                                                            "description": "Authentication type.   \nnone:None.   \ntext:Text.   \nmd5:MD5.",
                                                            "enum": [
                                                                "none",
                                                                "text",
                                                                "md5"
                                                            ]
                                                        },
                                                        "authentication-key": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Authentication key."
                                                        },
                                                        "md5-keychain": {
                                                            "type": "string",
                                                            "description": "Authentication MD5 key-chain name.",
                                                            "maxLength": 35
                                                        },
                                                        "dead-interval": {
                                                            "type": "integer",
                                                            "description": "Dead interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "hello-interval": {
                                                            "type": "integer",
                                                            "description": "Hello interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "retransmit-interval": {
                                                            "type": "integer",
                                                            "description": "Retransmit interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "transmit-delay": {
                                                            "type": "integer",
                                                            "description": "Transmit delay.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "peer": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Peer IP."
                                                        },
                                                        "md5-keys": {
                                                            "description": "MD5 key.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Key ID (1 - 255).",
                                                                        "maximum": 255,
                                                                        "minimum": 1
                                                                    },
                                                                    "key-string": {
                                                                        "type": "string",
                                                                        "format": "password",
                                                                        "description": "Password for the key."
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "filter-list": {
                                                "description": "OSPF area filter-list configuration.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Filter list entry ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "list": {
                                                            "type": "string",
                                                            "description": "Access-list or prefix-list name.",
                                                            "maxLength": 35
                                                        },
                                                        "direction": {
                                                            "type": "string",
                                                            "description": "Direction.   \nin:In.   \nout:Out.",
                                                            "enum": [
                                                                "in",
                                                                "out"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ospf-interface": {
                                    "description": "OSPF interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface entry name.",
                                                "maxLength": 35
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Configuration interface name.",
                                                "maxLength": 15
                                            },
                                            "ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "IP address."
                                            },
                                            "authentication": {
                                                "type": "string",
                                                "description": "Authentication type.   \nnone:None.   \ntext:Text.   \nmd5:MD5.",
                                                "enum": [
                                                    "none",
                                                    "text",
                                                    "md5"
                                                ]
                                            },
                                            "authentication-key": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Authentication key."
                                            },
                                            "md5-keychain": {
                                                "type": "string",
                                                "description": "Authentication MD5 key-chain name.",
                                                "maxLength": 35
                                            },
                                            "prefix-length": {
                                                "type": "integer",
                                                "description": "Prefix length.",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "retransmit-interval": {
                                                "type": "integer",
                                                "description": "Retransmit interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "transmit-delay": {
                                                "type": "integer",
                                                "description": "Transmit delay.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "Cost of the interface, value range from 0 to 65535, 0 means auto-cost.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "priority": {
                                                "type": "integer",
                                                "description": "Priority.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "dead-interval": {
                                                "type": "integer",
                                                "description": "Dead interval.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "hello-interval": {
                                                "type": "integer",
                                                "description": "Hello interval.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "hello-multiplier": {
                                                "type": "integer",
                                                "description": "Number of hello packets within dead interval.",
                                                "maximum": 10,
                                                "minimum": 3
                                            },
                                            "database-filter-out": {
                                                "type": "string",
                                                "description": "Enable\/disable control of flooding out LSAs.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "mtu": {
                                                "type": "integer",
                                                "description": "MTU for database description packets.",
                                                "maximum": 65535,
                                                "minimum": 576
                                            },
                                            "mtu-ignore": {
                                                "type": "string",
                                                "description": "Enable\/disable ignore MTU.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "network-type": {
                                                "type": "string",
                                                "description": "Network type.   \nbroadcast:Broadcast.   \nnon-broadcast:Non-broadcast.   \npoint-to-point:Point-to-point.   \npoint-to-multipoint:Point-to-multipoint.   \npoint-to-multipoint-non-broadcast:Point-to-multipoint and non-broadcast.",
                                                "enum": [
                                                    "broadcast",
                                                    "non-broadcast",
                                                    "point-to-point",
                                                    "point-to-multipoint",
                                                    "point-to-multipoint-non-broadcast"
                                                ]
                                            },
                                            "bfd": {
                                                "type": "string",
                                                "description": "Bidirectional Forwarding Detection (BFD).   \nglobal:Follow global configuration.   \nenable:Enable BFD on this interface.   \ndisable:Disable BFD on this interface.",
                                                "enum": [
                                                    "global",
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable status.   \ndisable:Disable status.   \nenable:Enable status.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "resync-timeout": {
                                                "type": "integer",
                                                "description": "Graceful restart neighbor resynchronization timeout.",
                                                "maximum": 3600,
                                                "minimum": 1
                                            },
                                            "md5-keys": {
                                                "description": "MD5 key.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Key ID (1 - 255).",
                                                            "maximum": 255,
                                                            "minimum": 1
                                                        },
                                                        "key-string": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Password for the key."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "network": {
                                    "description": "OSPF network configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Network entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Prefix."
                                            },
                                            "area": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Attach the network to area."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor": {
                                    "description": "OSPF neighbor configuration are used when OSPF runs on non-broadcast media",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Neighbor entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Interface IP address of the neighbor."
                                            },
                                            "poll-interval": {
                                                "type": "integer",
                                                "description": "Poll interval time in seconds.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "Cost of the interface, value range from 0 to 65535, 0 means auto-cost.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "priority": {
                                                "type": "integer",
                                                "description": "Priority.",
                                                "maximum": 255,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "passive-interface": {
                                    "description": "Passive interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Passive interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "summary-address": {
                                    "description": "IP address summary configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Summary address entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Prefix."
                                            },
                                            "tag": {
                                                "type": "integer",
                                                "description": "Tag value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "advertise": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise status.   \ndisable:Disable advertise status.   \nenable:Enable advertise status.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "distribute-list": {
                                    "description": "Distribute list configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Distribute list entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "access-list": {
                                                "type": "string",
                                                "description": "Access list name.",
                                                "maxLength": 35
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "description": "Protocol type.   \nconnected:Connected type.   \nstatic:Static type.   \nrip:RIP type.",
                                                "enum": [
                                                    "connected",
                                                    "static",
                                                    "rip"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "Redistribute configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Redistribute name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Redistribute metric setting.",
                                                "maximum": 16777214,
                                                "minimum": 0
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            },
                                            "metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \n1:Type 1.   \n2:Type 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            },
                                            "tag": {
                                                "type": "integer",
                                                "description": "Tag value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/ospf"
                ]
            }
        },
        "\/router\/ospf6": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "abr-type": {
                                    "type": "string",
                                    "description": "Area border router type.   \ncisco:Cisco.   \nibm:IBM.   \nstandard:Standard.",
                                    "enum": [
                                        "cisco",
                                        "ibm",
                                        "standard"
                                    ]
                                },
                                "auto-cost-ref-bandwidth": {
                                    "type": "integer",
                                    "description": "Reference bandwidth in terms of megabits per second.",
                                    "maximum": 1000000,
                                    "minimum": 1
                                },
                                "default-information-originate": {
                                    "type": "string",
                                    "description": "Enable\/disable generation of default route.   \nenable:Enable setting.   \nalways:Always advertise the default router.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "always",
                                        "disable"
                                    ]
                                },
                                "log-neighbour-changes": {
                                    "type": "string",
                                    "description": "Enable logging of OSPFv3 neighbour's changes   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "default-information-metric": {
                                    "type": "integer",
                                    "description": "Default information metric.",
                                    "maximum": 16777214,
                                    "minimum": 1
                                },
                                "default-information-metric-type": {
                                    "type": "string",
                                    "description": "Default information metric type.   \n1:Type 1.   \n2:Type 2.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "default-information-route-map": {
                                    "type": "string",
                                    "description": "Default information route map.",
                                    "maxLength": 35
                                },
                                "default-metric": {
                                    "type": "integer",
                                    "description": "Default metric of redistribute routes.",
                                    "maximum": 16777214,
                                    "minimum": 1
                                },
                                "router-id": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "A.B.C.D, in IPv4 address format."
                                },
                                "spf-timers": {
                                    "type": "string",
                                    "description": "SPF calculation frequency."
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Bidirectional Forwarding Detection (BFD).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "area": {
                                    "description": "OSPF6 area configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Area entry IP address."
                                            },
                                            "default-cost": {
                                                "type": "integer",
                                                "description": "Summary default cost of stub or NSSA area.",
                                                "maximum": 16777215,
                                                "minimum": 0
                                            },
                                            "nssa-translator-role": {
                                                "type": "string",
                                                "description": "NSSA translator role type.   \ncandidate:Candidate.   \nnever:Never.   \nalways:Always.",
                                                "enum": [
                                                    "candidate",
                                                    "never",
                                                    "always"
                                                ]
                                            },
                                            "stub-type": {
                                                "type": "string",
                                                "description": "Stub summary setting.   \nno-summary:No summary.   \nsummary:Summary.",
                                                "enum": [
                                                    "no-summary",
                                                    "summary"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Area type setting.   \nregular:Regular.   \nnssa:NSSA.   \nstub:Stub.",
                                                "enum": [
                                                    "regular",
                                                    "nssa",
                                                    "stub"
                                                ]
                                            },
                                            "nssa-default-information-originate": {
                                                "type": "string",
                                                "description": "Enable\/disable originate type 7 default into NSSA area.   \nenable:Enable originate type 7 default into NSSA area.   \ndisable:Disable originate type 7 default into NSSA area.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "nssa-default-information-originate-metric": {
                                                "type": "integer",
                                                "description": "OSPFv3 default metric.",
                                                "maximum": 16777214,
                                                "minimum": 0
                                            },
                                            "nssa-default-information-originate-metric-type": {
                                                "type": "string",
                                                "description": "OSPFv3 metric type for default routes.   \n1:Type 1.   \n2:Type 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            },
                                            "nssa-redistribution": {
                                                "type": "string",
                                                "description": "Enable\/disable redistribute into NSSA area.   \nenable:Enable redistribute into NSSA area.   \ndisable:Disable redistribute into NSSA area.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "authentication": {
                                                "type": "string",
                                                "description": "Authentication mode.   \nnone:Disable authentication.   \nah:Authentication Header.   \nesp:Encapsulating Security Payload.",
                                                "enum": [
                                                    "none",
                                                    "ah",
                                                    "esp"
                                                ]
                                            },
                                            "key-rollover-interval": {
                                                "type": "integer",
                                                "description": "Key roll-over interval.",
                                                "maximum": 216000,
                                                "minimum": 300
                                            },
                                            "ipsec-auth-alg": {
                                                "type": "string",
                                                "description": "Authentication algorithm.   \nmd5:MD5.   \nsha1:SHA1.   \nsha256:SHA256.   \nsha384:SHA384.   \nsha512:SHA512.",
                                                "enum": [
                                                    "md5",
                                                    "sha1",
                                                    "sha256",
                                                    "sha384",
                                                    "sha512"
                                                ]
                                            },
                                            "ipsec-enc-alg": {
                                                "type": "string",
                                                "description": "Encryption algorithm.   \nnull:No encryption.   \ndes:DES.   \n3des:3DES.   \naes128:AES128.   \naes192:AES192.   \naes256:AES256.",
                                                "enum": [
                                                    "null",
                                                    "des",
                                                    "3des",
                                                    "aes128",
                                                    "aes192",
                                                    "aes256"
                                                ]
                                            },
                                            "ipsec-keys": {
                                                "description": "IPsec authentication and encryption keys.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "spi": {
                                                            "type": "integer",
                                                            "description": "Security Parameters Index.",
                                                            "maximum": 4294967295,
                                                            "minimum": 256
                                                        },
                                                        "auth-key": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Authentication key."
                                                        },
                                                        "enc-key": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Encryption key."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "range": {
                                                "description": "OSPF6 area range configuration.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Range entry ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "prefix6": {
                                                            "type": "string",
                                                            "description": "IPv6 prefix."
                                                        },
                                                        "advertise": {
                                                            "type": "string",
                                                            "description": "Enable\/disable advertise status.   \ndisable:disable   \nenable:enable",
                                                            "enum": [
                                                                "disable",
                                                                "enable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "virtual-link": {
                                                "description": "OSPF6 virtual link configuration.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Virtual link entry name.",
                                                            "maxLength": 35
                                                        },
                                                        "dead-interval": {
                                                            "type": "integer",
                                                            "description": "Dead interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "hello-interval": {
                                                            "type": "integer",
                                                            "description": "Hello interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "retransmit-interval": {
                                                            "type": "integer",
                                                            "description": "Retransmit interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "transmit-delay": {
                                                            "type": "integer",
                                                            "description": "Transmit delay.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "peer": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "A.B.C.D, peer router ID."
                                                        },
                                                        "authentication": {
                                                            "type": "string",
                                                            "description": "Authentication mode.   \nnone:Disable authentication.   \nah:Authentication Header.   \nesp:Encapsulating Security Payload.   \narea:Use the routing area's authentication configuration.",
                                                            "enum": [
                                                                "none",
                                                                "ah",
                                                                "esp",
                                                                "area"
                                                            ]
                                                        },
                                                        "key-rollover-interval": {
                                                            "type": "integer",
                                                            "description": "Key roll-over interval.",
                                                            "maximum": 216000,
                                                            "minimum": 300
                                                        },
                                                        "ipsec-auth-alg": {
                                                            "type": "string",
                                                            "description": "Authentication algorithm.   \nmd5:MD5.   \nsha1:SHA1.   \nsha256:SHA256.   \nsha384:SHA384.   \nsha512:SHA512.",
                                                            "enum": [
                                                                "md5",
                                                                "sha1",
                                                                "sha256",
                                                                "sha384",
                                                                "sha512"
                                                            ]
                                                        },
                                                        "ipsec-enc-alg": {
                                                            "type": "string",
                                                            "description": "Encryption algorithm.   \nnull:No encryption.   \ndes:DES.   \n3des:3DES.   \naes128:AES128.   \naes192:AES192.   \naes256:AES256.",
                                                            "enum": [
                                                                "null",
                                                                "des",
                                                                "3des",
                                                                "aes128",
                                                                "aes192",
                                                                "aes256"
                                                            ]
                                                        },
                                                        "ipsec-keys": {
                                                            "description": "IPsec authentication and encryption keys.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "spi": {
                                                                        "type": "integer",
                                                                        "description": "Security Parameters Index.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 256
                                                                    },
                                                                    "auth-key": {
                                                                        "type": "string",
                                                                        "format": "password",
                                                                        "description": "Authentication key."
                                                                    },
                                                                    "enc-key": {
                                                                        "type": "string",
                                                                        "format": "password",
                                                                        "description": "Encryption key."
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ospf6-interface": {
                                    "description": "OSPF6 interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface entry name.",
                                                "maxLength": 35
                                            },
                                            "area-id": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "A.B.C.D, in IPv4 address format."
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Configuration interface name.",
                                                "maxLength": 15
                                            },
                                            "retransmit-interval": {
                                                "type": "integer",
                                                "description": "Retransmit interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "transmit-delay": {
                                                "type": "integer",
                                                "description": "Transmit delay.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "Cost of the interface, value range from 0 to 65535, 0 means auto-cost.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "priority": {
                                                "type": "integer",
                                                "description": "priority",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "dead-interval": {
                                                "type": "integer",
                                                "description": "Dead interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "hello-interval": {
                                                "type": "integer",
                                                "description": "Hello interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable OSPF6 routing on this interface.   \ndisable:Disable OSPF6 routing.   \nenable:Enable OSPF6 routing.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "network-type": {
                                                "type": "string",
                                                "description": "Network type.   \nbroadcast:broadcast   \npoint-to-point:point-to-point   \nnon-broadcast:non-broadcast   \npoint-to-multipoint:point-to-multipoint   \npoint-to-multipoint-non-broadcast:point-to-multipoint and non-broadcast.",
                                                "enum": [
                                                    "broadcast",
                                                    "point-to-point",
                                                    "non-broadcast",
                                                    "point-to-multipoint",
                                                    "point-to-multipoint-non-broadcast"
                                                ]
                                            },
                                            "bfd": {
                                                "type": "string",
                                                "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nglobal:Use global configuration of Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD) on this interface.   \ndisable:Disable Bidirectional Forwarding Detection (BFD) on this interface.",
                                                "enum": [
                                                    "global",
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "mtu": {
                                                "type": "integer",
                                                "description": "MTU for OSPFv3 packets.",
                                                "maximum": 65535,
                                                "minimum": 576
                                            },
                                            "mtu-ignore": {
                                                "type": "string",
                                                "description": "Enable\/disable ignoring MTU field in DBD packets.   \nenable:Ignore MTU field in DBD packets.   \ndisable:Do not ignore MTU field in DBD packets.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "authentication": {
                                                "type": "string",
                                                "description": "Authentication mode.   \nnone:Disable authentication.   \nah:Authentication Header.   \nesp:Encapsulating Security Payload.   \narea:Use the routing area's authentication configuration.",
                                                "enum": [
                                                    "none",
                                                    "ah",
                                                    "esp",
                                                    "area"
                                                ]
                                            },
                                            "key-rollover-interval": {
                                                "type": "integer",
                                                "description": "Key roll-over interval.",
                                                "maximum": 216000,
                                                "minimum": 300
                                            },
                                            "ipsec-auth-alg": {
                                                "type": "string",
                                                "description": "Authentication algorithm.   \nmd5:MD5.   \nsha1:SHA1.   \nsha256:SHA256.   \nsha384:SHA384.   \nsha512:SHA512.",
                                                "enum": [
                                                    "md5",
                                                    "sha1",
                                                    "sha256",
                                                    "sha384",
                                                    "sha512"
                                                ]
                                            },
                                            "ipsec-enc-alg": {
                                                "type": "string",
                                                "description": "Encryption algorithm.   \nnull:No encryption.   \ndes:DES.   \n3des:3DES.   \naes128:AES128.   \naes192:AES192.   \naes256:AES256.",
                                                "enum": [
                                                    "null",
                                                    "des",
                                                    "3des",
                                                    "aes128",
                                                    "aes192",
                                                    "aes256"
                                                ]
                                            },
                                            "ipsec-keys": {
                                                "description": "IPsec authentication and encryption keys.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "spi": {
                                                            "type": "integer",
                                                            "description": "Security Parameters Index.",
                                                            "maximum": 4294967295,
                                                            "minimum": 256
                                                        },
                                                        "auth-key": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Authentication key."
                                                        },
                                                        "enc-key": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Encryption key."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "neighbor": {
                                                "description": "OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "ip6": {
                                                            "type": "string",
                                                            "format": "ipv6",
                                                            "description": "IPv6 link local address of the neighbor."
                                                        },
                                                        "poll-interval": {
                                                            "type": "integer",
                                                            "description": "Poll interval time in seconds.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "cost": {
                                                            "type": "integer",
                                                            "description": "Cost of the interface, value range from 0 to 65535, 0 means auto-cost.",
                                                            "maximum": 65535,
                                                            "minimum": 0
                                                        },
                                                        "priority": {
                                                            "type": "integer",
                                                            "description": "priority",
                                                            "maximum": 255,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "Redistribute configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Redistribute name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Redistribute metric setting.",
                                                "maximum": 16777214,
                                                "minimum": 0
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            },
                                            "metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \n1:Type 1.   \n2:Type 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "passive-interface": {
                                    "description": "Passive interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Passive interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "summary-address": {
                                    "description": "IPv6 address summary configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Summary address entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix."
                                            },
                                            "advertise": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise status.   \ndisable:disable   \nenable:enable",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "tag": {
                                                "type": "integer",
                                                "description": "Tag value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/ospf6"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "abr-type": {
                                    "type": "string",
                                    "description": "Area border router type.   \ncisco:Cisco.   \nibm:IBM.   \nstandard:Standard.",
                                    "enum": [
                                        "cisco",
                                        "ibm",
                                        "standard"
                                    ]
                                },
                                "auto-cost-ref-bandwidth": {
                                    "type": "integer",
                                    "description": "Reference bandwidth in terms of megabits per second.",
                                    "maximum": 1000000,
                                    "minimum": 1
                                },
                                "default-information-originate": {
                                    "type": "string",
                                    "description": "Enable\/disable generation of default route.   \nenable:Enable setting.   \nalways:Always advertise the default router.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "always",
                                        "disable"
                                    ]
                                },
                                "log-neighbour-changes": {
                                    "type": "string",
                                    "description": "Enable logging of OSPFv3 neighbour's changes   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "default-information-metric": {
                                    "type": "integer",
                                    "description": "Default information metric.",
                                    "maximum": 16777214,
                                    "minimum": 1
                                },
                                "default-information-metric-type": {
                                    "type": "string",
                                    "description": "Default information metric type.   \n1:Type 1.   \n2:Type 2.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "default-information-route-map": {
                                    "type": "string",
                                    "description": "Default information route map.",
                                    "maxLength": 35
                                },
                                "default-metric": {
                                    "type": "integer",
                                    "description": "Default metric of redistribute routes.",
                                    "maximum": 16777214,
                                    "minimum": 1
                                },
                                "router-id": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "A.B.C.D, in IPv4 address format."
                                },
                                "spf-timers": {
                                    "type": "string",
                                    "description": "SPF calculation frequency."
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Bidirectional Forwarding Detection (BFD).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "area": {
                                    "description": "OSPF6 area configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Area entry IP address."
                                            },
                                            "default-cost": {
                                                "type": "integer",
                                                "description": "Summary default cost of stub or NSSA area.",
                                                "maximum": 16777215,
                                                "minimum": 0
                                            },
                                            "nssa-translator-role": {
                                                "type": "string",
                                                "description": "NSSA translator role type.   \ncandidate:Candidate.   \nnever:Never.   \nalways:Always.",
                                                "enum": [
                                                    "candidate",
                                                    "never",
                                                    "always"
                                                ]
                                            },
                                            "stub-type": {
                                                "type": "string",
                                                "description": "Stub summary setting.   \nno-summary:No summary.   \nsummary:Summary.",
                                                "enum": [
                                                    "no-summary",
                                                    "summary"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Area type setting.   \nregular:Regular.   \nnssa:NSSA.   \nstub:Stub.",
                                                "enum": [
                                                    "regular",
                                                    "nssa",
                                                    "stub"
                                                ]
                                            },
                                            "nssa-default-information-originate": {
                                                "type": "string",
                                                "description": "Enable\/disable originate type 7 default into NSSA area.   \nenable:Enable originate type 7 default into NSSA area.   \ndisable:Disable originate type 7 default into NSSA area.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "nssa-default-information-originate-metric": {
                                                "type": "integer",
                                                "description": "OSPFv3 default metric.",
                                                "maximum": 16777214,
                                                "minimum": 0
                                            },
                                            "nssa-default-information-originate-metric-type": {
                                                "type": "string",
                                                "description": "OSPFv3 metric type for default routes.   \n1:Type 1.   \n2:Type 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            },
                                            "nssa-redistribution": {
                                                "type": "string",
                                                "description": "Enable\/disable redistribute into NSSA area.   \nenable:Enable redistribute into NSSA area.   \ndisable:Disable redistribute into NSSA area.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "authentication": {
                                                "type": "string",
                                                "description": "Authentication mode.   \nnone:Disable authentication.   \nah:Authentication Header.   \nesp:Encapsulating Security Payload.",
                                                "enum": [
                                                    "none",
                                                    "ah",
                                                    "esp"
                                                ]
                                            },
                                            "key-rollover-interval": {
                                                "type": "integer",
                                                "description": "Key roll-over interval.",
                                                "maximum": 216000,
                                                "minimum": 300
                                            },
                                            "ipsec-auth-alg": {
                                                "type": "string",
                                                "description": "Authentication algorithm.   \nmd5:MD5.   \nsha1:SHA1.   \nsha256:SHA256.   \nsha384:SHA384.   \nsha512:SHA512.",
                                                "enum": [
                                                    "md5",
                                                    "sha1",
                                                    "sha256",
                                                    "sha384",
                                                    "sha512"
                                                ]
                                            },
                                            "ipsec-enc-alg": {
                                                "type": "string",
                                                "description": "Encryption algorithm.   \nnull:No encryption.   \ndes:DES.   \n3des:3DES.   \naes128:AES128.   \naes192:AES192.   \naes256:AES256.",
                                                "enum": [
                                                    "null",
                                                    "des",
                                                    "3des",
                                                    "aes128",
                                                    "aes192",
                                                    "aes256"
                                                ]
                                            },
                                            "ipsec-keys": {
                                                "description": "IPsec authentication and encryption keys.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "spi": {
                                                            "type": "integer",
                                                            "description": "Security Parameters Index.",
                                                            "maximum": 4294967295,
                                                            "minimum": 256
                                                        },
                                                        "auth-key": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Authentication key."
                                                        },
                                                        "enc-key": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Encryption key."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "range": {
                                                "description": "OSPF6 area range configuration.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Range entry ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "prefix6": {
                                                            "type": "string",
                                                            "description": "IPv6 prefix."
                                                        },
                                                        "advertise": {
                                                            "type": "string",
                                                            "description": "Enable\/disable advertise status.   \ndisable:disable   \nenable:enable",
                                                            "enum": [
                                                                "disable",
                                                                "enable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "virtual-link": {
                                                "description": "OSPF6 virtual link configuration.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Virtual link entry name.",
                                                            "maxLength": 35
                                                        },
                                                        "dead-interval": {
                                                            "type": "integer",
                                                            "description": "Dead interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "hello-interval": {
                                                            "type": "integer",
                                                            "description": "Hello interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "retransmit-interval": {
                                                            "type": "integer",
                                                            "description": "Retransmit interval.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "transmit-delay": {
                                                            "type": "integer",
                                                            "description": "Transmit delay.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "peer": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "A.B.C.D, peer router ID."
                                                        },
                                                        "authentication": {
                                                            "type": "string",
                                                            "description": "Authentication mode.   \nnone:Disable authentication.   \nah:Authentication Header.   \nesp:Encapsulating Security Payload.   \narea:Use the routing area's authentication configuration.",
                                                            "enum": [
                                                                "none",
                                                                "ah",
                                                                "esp",
                                                                "area"
                                                            ]
                                                        },
                                                        "key-rollover-interval": {
                                                            "type": "integer",
                                                            "description": "Key roll-over interval.",
                                                            "maximum": 216000,
                                                            "minimum": 300
                                                        },
                                                        "ipsec-auth-alg": {
                                                            "type": "string",
                                                            "description": "Authentication algorithm.   \nmd5:MD5.   \nsha1:SHA1.   \nsha256:SHA256.   \nsha384:SHA384.   \nsha512:SHA512.",
                                                            "enum": [
                                                                "md5",
                                                                "sha1",
                                                                "sha256",
                                                                "sha384",
                                                                "sha512"
                                                            ]
                                                        },
                                                        "ipsec-enc-alg": {
                                                            "type": "string",
                                                            "description": "Encryption algorithm.   \nnull:No encryption.   \ndes:DES.   \n3des:3DES.   \naes128:AES128.   \naes192:AES192.   \naes256:AES256.",
                                                            "enum": [
                                                                "null",
                                                                "des",
                                                                "3des",
                                                                "aes128",
                                                                "aes192",
                                                                "aes256"
                                                            ]
                                                        },
                                                        "ipsec-keys": {
                                                            "description": "IPsec authentication and encryption keys.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "spi": {
                                                                        "type": "integer",
                                                                        "description": "Security Parameters Index.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 256
                                                                    },
                                                                    "auth-key": {
                                                                        "type": "string",
                                                                        "format": "password",
                                                                        "description": "Authentication key."
                                                                    },
                                                                    "enc-key": {
                                                                        "type": "string",
                                                                        "format": "password",
                                                                        "description": "Encryption key."
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ospf6-interface": {
                                    "description": "OSPF6 interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface entry name.",
                                                "maxLength": 35
                                            },
                                            "area-id": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "A.B.C.D, in IPv4 address format."
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Configuration interface name.",
                                                "maxLength": 15
                                            },
                                            "retransmit-interval": {
                                                "type": "integer",
                                                "description": "Retransmit interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "transmit-delay": {
                                                "type": "integer",
                                                "description": "Transmit delay.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "Cost of the interface, value range from 0 to 65535, 0 means auto-cost.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "priority": {
                                                "type": "integer",
                                                "description": "priority",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "dead-interval": {
                                                "type": "integer",
                                                "description": "Dead interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "hello-interval": {
                                                "type": "integer",
                                                "description": "Hello interval.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable OSPF6 routing on this interface.   \ndisable:Disable OSPF6 routing.   \nenable:Enable OSPF6 routing.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "network-type": {
                                                "type": "string",
                                                "description": "Network type.   \nbroadcast:broadcast   \npoint-to-point:point-to-point   \nnon-broadcast:non-broadcast   \npoint-to-multipoint:point-to-multipoint   \npoint-to-multipoint-non-broadcast:point-to-multipoint and non-broadcast.",
                                                "enum": [
                                                    "broadcast",
                                                    "point-to-point",
                                                    "non-broadcast",
                                                    "point-to-multipoint",
                                                    "point-to-multipoint-non-broadcast"
                                                ]
                                            },
                                            "bfd": {
                                                "type": "string",
                                                "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nglobal:Use global configuration of Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD) on this interface.   \ndisable:Disable Bidirectional Forwarding Detection (BFD) on this interface.",
                                                "enum": [
                                                    "global",
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "mtu": {
                                                "type": "integer",
                                                "description": "MTU for OSPFv3 packets.",
                                                "maximum": 65535,
                                                "minimum": 576
                                            },
                                            "mtu-ignore": {
                                                "type": "string",
                                                "description": "Enable\/disable ignoring MTU field in DBD packets.   \nenable:Ignore MTU field in DBD packets.   \ndisable:Do not ignore MTU field in DBD packets.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "authentication": {
                                                "type": "string",
                                                "description": "Authentication mode.   \nnone:Disable authentication.   \nah:Authentication Header.   \nesp:Encapsulating Security Payload.   \narea:Use the routing area's authentication configuration.",
                                                "enum": [
                                                    "none",
                                                    "ah",
                                                    "esp",
                                                    "area"
                                                ]
                                            },
                                            "key-rollover-interval": {
                                                "type": "integer",
                                                "description": "Key roll-over interval.",
                                                "maximum": 216000,
                                                "minimum": 300
                                            },
                                            "ipsec-auth-alg": {
                                                "type": "string",
                                                "description": "Authentication algorithm.   \nmd5:MD5.   \nsha1:SHA1.   \nsha256:SHA256.   \nsha384:SHA384.   \nsha512:SHA512.",
                                                "enum": [
                                                    "md5",
                                                    "sha1",
                                                    "sha256",
                                                    "sha384",
                                                    "sha512"
                                                ]
                                            },
                                            "ipsec-enc-alg": {
                                                "type": "string",
                                                "description": "Encryption algorithm.   \nnull:No encryption.   \ndes:DES.   \n3des:3DES.   \naes128:AES128.   \naes192:AES192.   \naes256:AES256.",
                                                "enum": [
                                                    "null",
                                                    "des",
                                                    "3des",
                                                    "aes128",
                                                    "aes192",
                                                    "aes256"
                                                ]
                                            },
                                            "ipsec-keys": {
                                                "description": "IPsec authentication and encryption keys.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "spi": {
                                                            "type": "integer",
                                                            "description": "Security Parameters Index.",
                                                            "maximum": 4294967295,
                                                            "minimum": 256
                                                        },
                                                        "auth-key": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Authentication key."
                                                        },
                                                        "enc-key": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Encryption key."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "neighbor": {
                                                "description": "OSPFv3 neighbors are used when OSPFv3 runs on non-broadcast media",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "ip6": {
                                                            "type": "string",
                                                            "format": "ipv6",
                                                            "description": "IPv6 link local address of the neighbor."
                                                        },
                                                        "poll-interval": {
                                                            "type": "integer",
                                                            "description": "Poll interval time in seconds.",
                                                            "maximum": 65535,
                                                            "minimum": 1
                                                        },
                                                        "cost": {
                                                            "type": "integer",
                                                            "description": "Cost of the interface, value range from 0 to 65535, 0 means auto-cost.",
                                                            "maximum": 65535,
                                                            "minimum": 0
                                                        },
                                                        "priority": {
                                                            "type": "integer",
                                                            "description": "priority",
                                                            "maximum": 255,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "Redistribute configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Redistribute name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Redistribute metric setting.",
                                                "maximum": 16777214,
                                                "minimum": 0
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            },
                                            "metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \n1:Type 1.   \n2:Type 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "passive-interface": {
                                    "description": "Passive interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Passive interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "summary-address": {
                                    "description": "IPv6 address summary configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Summary address entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix."
                                            },
                                            "advertise": {
                                                "type": "string",
                                                "description": "Enable\/disable advertise status.   \ndisable:disable   \nenable:enable",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "tag": {
                                                "type": "integer",
                                                "description": "Tag value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/ospf6"
                ]
            }
        },
        "\/router\/policy\/{seq-num}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number(1-65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "input-device": {
                                    "description": "Incoming interface name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "input-device-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negation of input device match.   \nenable:Enable negation of input device match.   \ndisable:Disable negation of input device match.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "src": {
                                    "description": "Source IP and mask (x.x.x.x\/x).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subnet": {
                                                "type": "string",
                                                "description": "IP and mask.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "srcaddr": {
                                    "description": "Source address name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address\/group name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "src-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negating source address match.   \nenable:Enable source address negation.   \ndisable:Disable source address negation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "description": "Destination IP and mask (x.x.x.x\/x).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subnet": {
                                                "type": "string",
                                                "description": "IP and mask.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dstaddr": {
                                    "description": "Destination address name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address\/group name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dst-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negating destination address match.   \nenable:Enable destination address negation.   \ndisable:Disable destination address negation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Action of the policy route.   \ndeny:Do not search policy route table.   \npermit:Use this policy route for forwarding.",
                                    "enum": [
                                        "deny",
                                        "permit"
                                    ]
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Protocol number (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "start-port": {
                                    "type": "integer",
                                    "description": "Start destination port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "end-port": {
                                    "type": "integer",
                                    "description": "End destination port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "start-source-port": {
                                    "type": "integer",
                                    "description": "Start source port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "end-source-port": {
                                    "type": "integer",
                                    "description": "End source port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address of the gateway."
                                },
                                "output-device": {
                                    "type": "string",
                                    "description": "Outgoing interface name.",
                                    "maxLength": 35
                                },
                                "tos": {
                                    "type": "string",
                                    "description": "Type of service bit pattern."
                                },
                                "tos-mask": {
                                    "type": "string",
                                    "description": "Type of service evaluated bits."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this policy route.   \nenable:Enable this policy route.   \ndisable:Disable this policy route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "internet-service-id": {
                                    "description": "Destination Internet Service ID.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Destination Internet Service ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "internet-service-custom": {
                                    "description": "Custom Destination Internet Service name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Custom Destination Internet Service name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/policy"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number(1-65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "input-device": {
                                    "description": "Incoming interface name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "input-device-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negation of input device match.   \nenable:Enable negation of input device match.   \ndisable:Disable negation of input device match.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "src": {
                                    "description": "Source IP and mask (x.x.x.x\/x).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subnet": {
                                                "type": "string",
                                                "description": "IP and mask.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "srcaddr": {
                                    "description": "Source address name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address\/group name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "src-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negating source address match.   \nenable:Enable source address negation.   \ndisable:Disable source address negation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "description": "Destination IP and mask (x.x.x.x\/x).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subnet": {
                                                "type": "string",
                                                "description": "IP and mask.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dstaddr": {
                                    "description": "Destination address name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address\/group name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dst-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negating destination address match.   \nenable:Enable destination address negation.   \ndisable:Disable destination address negation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Action of the policy route.   \ndeny:Do not search policy route table.   \npermit:Use this policy route for forwarding.",
                                    "enum": [
                                        "deny",
                                        "permit"
                                    ]
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Protocol number (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "start-port": {
                                    "type": "integer",
                                    "description": "Start destination port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "end-port": {
                                    "type": "integer",
                                    "description": "End destination port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "start-source-port": {
                                    "type": "integer",
                                    "description": "Start source port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "end-source-port": {
                                    "type": "integer",
                                    "description": "End source port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address of the gateway."
                                },
                                "output-device": {
                                    "type": "string",
                                    "description": "Outgoing interface name.",
                                    "maxLength": 35
                                },
                                "tos": {
                                    "type": "string",
                                    "description": "Type of service bit pattern."
                                },
                                "tos-mask": {
                                    "type": "string",
                                    "description": "Type of service evaluated bits."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this policy route.   \nenable:Enable this policy route.   \ndisable:Disable this policy route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "internet-service-id": {
                                    "description": "Destination Internet Service ID.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Destination Internet Service ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "internet-service-custom": {
                                    "description": "Custom Destination Internet Service name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Custom Destination Internet Service name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/policy"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/policy"
                ]
            }
        },
        "\/router\/policy": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number(1-65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "input-device": {
                                    "description": "Incoming interface name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "input-device-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negation of input device match.   \nenable:Enable negation of input device match.   \ndisable:Disable negation of input device match.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "src": {
                                    "description": "Source IP and mask (x.x.x.x\/x).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subnet": {
                                                "type": "string",
                                                "description": "IP and mask.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "srcaddr": {
                                    "description": "Source address name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address\/group name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "src-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negating source address match.   \nenable:Enable source address negation.   \ndisable:Disable source address negation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "description": "Destination IP and mask (x.x.x.x\/x).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subnet": {
                                                "type": "string",
                                                "description": "IP and mask.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dstaddr": {
                                    "description": "Destination address name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address\/group name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dst-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negating destination address match.   \nenable:Enable destination address negation.   \ndisable:Disable destination address negation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Action of the policy route.   \ndeny:Do not search policy route table.   \npermit:Use this policy route for forwarding.",
                                    "enum": [
                                        "deny",
                                        "permit"
                                    ]
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Protocol number (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "start-port": {
                                    "type": "integer",
                                    "description": "Start destination port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "end-port": {
                                    "type": "integer",
                                    "description": "End destination port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "start-source-port": {
                                    "type": "integer",
                                    "description": "Start source port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "end-source-port": {
                                    "type": "integer",
                                    "description": "End source port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address of the gateway."
                                },
                                "output-device": {
                                    "type": "string",
                                    "description": "Outgoing interface name.",
                                    "maxLength": 35
                                },
                                "tos": {
                                    "type": "string",
                                    "description": "Type of service bit pattern."
                                },
                                "tos-mask": {
                                    "type": "string",
                                    "description": "Type of service evaluated bits."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this policy route.   \nenable:Enable this policy route.   \ndisable:Disable this policy route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "internet-service-id": {
                                    "description": "Destination Internet Service ID.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Destination Internet Service ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "internet-service-custom": {
                                    "description": "Custom Destination Internet Service name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Custom Destination Internet Service name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/policy"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number(1-65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "input-device": {
                                    "description": "Incoming interface name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "input-device-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negation of input device match.   \nenable:Enable negation of input device match.   \ndisable:Disable negation of input device match.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "src": {
                                    "description": "Source IP and mask (x.x.x.x\/x).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subnet": {
                                                "type": "string",
                                                "description": "IP and mask.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "srcaddr": {
                                    "description": "Source address name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address\/group name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "src-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negating source address match.   \nenable:Enable source address negation.   \ndisable:Disable source address negation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "description": "Destination IP and mask (x.x.x.x\/x).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subnet": {
                                                "type": "string",
                                                "description": "IP and mask.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dstaddr": {
                                    "description": "Destination address name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address\/group name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dst-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negating destination address match.   \nenable:Enable destination address negation.   \ndisable:Disable destination address negation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Action of the policy route.   \ndeny:Do not search policy route table.   \npermit:Use this policy route for forwarding.",
                                    "enum": [
                                        "deny",
                                        "permit"
                                    ]
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Protocol number (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "start-port": {
                                    "type": "integer",
                                    "description": "Start destination port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "end-port": {
                                    "type": "integer",
                                    "description": "End destination port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "start-source-port": {
                                    "type": "integer",
                                    "description": "Start source port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "end-source-port": {
                                    "type": "integer",
                                    "description": "End source port number (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address of the gateway."
                                },
                                "output-device": {
                                    "type": "string",
                                    "description": "Outgoing interface name.",
                                    "maxLength": 35
                                },
                                "tos": {
                                    "type": "string",
                                    "description": "Type of service bit pattern."
                                },
                                "tos-mask": {
                                    "type": "string",
                                    "description": "Type of service evaluated bits."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this policy route.   \nenable:Enable this policy route.   \ndisable:Disable this policy route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "internet-service-id": {
                                    "description": "Destination Internet Service ID.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Destination Internet Service ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "internet-service-custom": {
                                    "description": "Custom Destination Internet Service name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Custom Destination Internet Service name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/policy"
                ]
            }
        },
        "\/router\/policy6\/{seq-num}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number(1-65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "input-device": {
                                    "description": "Incoming interface name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "src": {
                                    "type": "string",
                                    "description": "Source IPv6 prefix."
                                },
                                "dst": {
                                    "type": "string",
                                    "description": "Destination IPv6 prefix."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Protocol number (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "start-port": {
                                    "type": "integer",
                                    "description": "Start destination port number (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "end-port": {
                                    "type": "integer",
                                    "description": "End destination port number (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the gateway."
                                },
                                "output-device": {
                                    "type": "string",
                                    "description": "Outgoing interface name.",
                                    "maxLength": 35
                                },
                                "tos": {
                                    "type": "string",
                                    "description": "Type of service bit pattern."
                                },
                                "tos-mask": {
                                    "type": "string",
                                    "description": "Type of service evaluated bits."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this policy route.   \nenable:Enable this policy route.   \ndisable:Disable this policy route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/policy6"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number(1-65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "input-device": {
                                    "description": "Incoming interface name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "src": {
                                    "type": "string",
                                    "description": "Source IPv6 prefix."
                                },
                                "dst": {
                                    "type": "string",
                                    "description": "Destination IPv6 prefix."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Protocol number (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "start-port": {
                                    "type": "integer",
                                    "description": "Start destination port number (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "end-port": {
                                    "type": "integer",
                                    "description": "End destination port number (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the gateway."
                                },
                                "output-device": {
                                    "type": "string",
                                    "description": "Outgoing interface name.",
                                    "maxLength": 35
                                },
                                "tos": {
                                    "type": "string",
                                    "description": "Type of service bit pattern."
                                },
                                "tos-mask": {
                                    "type": "string",
                                    "description": "Type of service evaluated bits."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this policy route.   \nenable:Enable this policy route.   \ndisable:Disable this policy route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/policy6"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/policy6"
                ]
            }
        },
        "\/router\/policy6": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number(1-65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "input-device": {
                                    "description": "Incoming interface name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "src": {
                                    "type": "string",
                                    "description": "Source IPv6 prefix."
                                },
                                "dst": {
                                    "type": "string",
                                    "description": "Destination IPv6 prefix."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Protocol number (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "start-port": {
                                    "type": "integer",
                                    "description": "Start destination port number (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "end-port": {
                                    "type": "integer",
                                    "description": "End destination port number (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the gateway."
                                },
                                "output-device": {
                                    "type": "string",
                                    "description": "Outgoing interface name.",
                                    "maxLength": 35
                                },
                                "tos": {
                                    "type": "string",
                                    "description": "Type of service bit pattern."
                                },
                                "tos-mask": {
                                    "type": "string",
                                    "description": "Type of service evaluated bits."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this policy route.   \nenable:Enable this policy route.   \ndisable:Disable this policy route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/policy6"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number(1-65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "input-device": {
                                    "description": "Incoming interface name.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "src": {
                                    "type": "string",
                                    "description": "Source IPv6 prefix."
                                },
                                "dst": {
                                    "type": "string",
                                    "description": "Destination IPv6 prefix."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Protocol number (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "start-port": {
                                    "type": "integer",
                                    "description": "Start destination port number (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "end-port": {
                                    "type": "integer",
                                    "description": "End destination port number (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the gateway."
                                },
                                "output-device": {
                                    "type": "string",
                                    "description": "Outgoing interface name.",
                                    "maxLength": 35
                                },
                                "tos": {
                                    "type": "string",
                                    "description": "Type of service bit pattern."
                                },
                                "tos-mask": {
                                    "type": "string",
                                    "description": "Type of service evaluated bits."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this policy route.   \nenable:Enable this policy route.   \ndisable:Disable this policy route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/policy6"
                ]
            }
        },
        "\/router\/prefix-list\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "IPv4 prefix list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Allow or permit packets that match this rule.   \ndeny:Deny packets that match this rule.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "description": "IPv4 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "ge": {
                                                "type": "integer",
                                                "description": "Minimum prefix length to be matched (0 - 32).",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "le": {
                                                "type": "integer",
                                                "description": "Maximum prefix length to be matched (0 - 32).",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 2048
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/prefix-list"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "IPv4 prefix list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Allow or permit packets that match this rule.   \ndeny:Deny packets that match this rule.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "description": "IPv4 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "ge": {
                                                "type": "integer",
                                                "description": "Minimum prefix length to be matched (0 - 32).",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "le": {
                                                "type": "integer",
                                                "description": "Maximum prefix length to be matched (0 - 32).",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 2048
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/prefix-list"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/prefix-list"
                ]
            }
        },
        "\/router\/prefix-list": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "IPv4 prefix list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Allow or permit packets that match this rule.   \ndeny:Deny packets that match this rule.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "description": "IPv4 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "ge": {
                                                "type": "integer",
                                                "description": "Minimum prefix length to be matched (0 - 32).",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "le": {
                                                "type": "integer",
                                                "description": "Maximum prefix length to be matched (0 - 32).",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 2048
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/prefix-list"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "IPv4 prefix list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny this IP address and netmask prefix.   \npermit:Allow or permit packets that match this rule.   \ndeny:Deny packets that match this rule.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "description": "IPv4 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "ge": {
                                                "type": "integer",
                                                "description": "Minimum prefix length to be matched (0 - 32).",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "le": {
                                                "type": "integer",
                                                "description": "Maximum prefix length to be matched (0 - 32).",
                                                "maximum": 32,
                                                "minimum": 0
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 2048
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/prefix-list"
                ]
            }
        },
        "\/router\/prefix-list6\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "IPv6 prefix list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny packets that match this rule.   \npermit:Allow or permit packets that match this rule.   \ndeny:Deny packets that match this rule.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "ge": {
                                                "type": "integer",
                                                "description": "Minimum prefix length to be matched (0 - 128).",
                                                "maximum": 128,
                                                "minimum": 0
                                            },
                                            "le": {
                                                "type": "integer",
                                                "description": "Maximum prefix length to be matched (0 - 128).",
                                                "maximum": 128,
                                                "minimum": 0
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/prefix-list6"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "IPv6 prefix list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny packets that match this rule.   \npermit:Allow or permit packets that match this rule.   \ndeny:Deny packets that match this rule.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "ge": {
                                                "type": "integer",
                                                "description": "Minimum prefix length to be matched (0 - 128).",
                                                "maximum": 128,
                                                "minimum": 0
                                            },
                                            "le": {
                                                "type": "integer",
                                                "description": "Maximum prefix length to be matched (0 - 128).",
                                                "maximum": 128,
                                                "minimum": 0
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/prefix-list6"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/prefix-list6"
                ]
            }
        },
        "\/router\/prefix-list6": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "IPv6 prefix list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny packets that match this rule.   \npermit:Allow or permit packets that match this rule.   \ndeny:Deny packets that match this rule.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "ge": {
                                                "type": "integer",
                                                "description": "Minimum prefix length to be matched (0 - 128).",
                                                "maximum": 128,
                                                "minimum": 0
                                            },
                                            "le": {
                                                "type": "integer",
                                                "description": "Maximum prefix length to be matched (0 - 128).",
                                                "maximum": 128,
                                                "minimum": 0
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/prefix-list6"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "IPv6 prefix list rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Permit or deny packets that match this rule.   \npermit:Allow or permit packets that match this rule.   \ndeny:Deny packets that match this rule.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "description": "IPv6 prefix to define regular filter criteria, such as \"any\" or subnets."
                                            },
                                            "ge": {
                                                "type": "integer",
                                                "description": "Minimum prefix length to be matched (0 - 128).",
                                                "maximum": 128,
                                                "minimum": 0
                                            },
                                            "le": {
                                                "type": "integer",
                                                "description": "Maximum prefix length to be matched (0 - 128).",
                                                "maximum": 128,
                                                "minimum": 0
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/prefix-list6"
                ]
            }
        },
        "\/router\/rip": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "default-information-originate": {
                                    "type": "string",
                                    "description": "Enable\/disable generation of default route.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "default-metric": {
                                    "type": "integer",
                                    "description": "Default metric.",
                                    "maximum": 16,
                                    "minimum": 1
                                },
                                "max-out-metric": {
                                    "type": "integer",
                                    "description": "Maximum metric allowed to output(0 means 'not set').",
                                    "maximum": 15,
                                    "minimum": 0
                                },
                                "recv-buffer-size": {
                                    "type": "integer",
                                    "description": "Receiving buffer size.",
                                    "maximum": 2147483647,
                                    "minimum": 8129
                                },
                                "distance": {
                                    "description": "distance",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Distance ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Distance prefix."
                                            },
                                            "distance": {
                                                "type": "integer",
                                                "description": "Distance (1 - 255).",
                                                "maximum": 255,
                                                "minimum": 1
                                            },
                                            "access-list": {
                                                "type": "string",
                                                "description": "Access list for route destination.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "distribute-list": {
                                    "description": "Distribute list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Distribute list ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "direction": {
                                                "type": "string",
                                                "description": "Distribute list direction.   \nin:Filter incoming packets.   \nout:Filter outgoing packets.",
                                                "enum": [
                                                    "in",
                                                    "out"
                                                ]
                                            },
                                            "listname": {
                                                "type": "string",
                                                "description": "Distribute access\/prefix list name.",
                                                "maxLength": 35
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Distribute list interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor": {
                                    "description": "neighbor",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Neighbor entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "IP address."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "network": {
                                    "description": "network",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Network entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Network prefix."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "offset-list": {
                                    "description": "Offset list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Offset-list ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "direction": {
                                                "type": "string",
                                                "description": "Offset list direction.   \nin:Filter incoming packets.   \nout:Filter outgoing packets.",
                                                "enum": [
                                                    "in",
                                                    "out"
                                                ]
                                            },
                                            "access-list": {
                                                "type": "string",
                                                "description": "Access list name.",
                                                "maxLength": 35
                                            },
                                            "offset": {
                                                "type": "integer",
                                                "description": "offset",
                                                "maximum": 16,
                                                "minimum": 1
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "passive-interface": {
                                    "description": "Passive interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Passive interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "Redistribute configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Redistribute name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Redistribute metric setting.",
                                                "maximum": 16,
                                                "minimum": 1
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "update-timer": {
                                    "type": "integer",
                                    "description": "Update timer in seconds.",
                                    "maximum": 2147483647,
                                    "minimum": 1
                                },
                                "timeout-timer": {
                                    "type": "integer",
                                    "description": "Timeout timer in seconds.",
                                    "maximum": 2147483647,
                                    "minimum": 5
                                },
                                "garbage-timer": {
                                    "type": "integer",
                                    "description": "Garbage timer in seconds.",
                                    "maximum": 2147483647,
                                    "minimum": 5
                                },
                                "version": {
                                    "type": "string",
                                    "description": "RIP version.   \n1:Version 1.   \n2:Version 2.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "interface": {
                                    "description": "RIP interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 35
                                            },
                                            "auth-keychain": {
                                                "type": "string",
                                                "description": "Authentication key-chain name.",
                                                "maxLength": 35
                                            },
                                            "auth-mode": {
                                                "type": "string",
                                                "description": "Authentication mode.   \nnone:None.   \ntext:Text.   \nmd5:MD5.",
                                                "enum": [
                                                    "none",
                                                    "text",
                                                    "md5"
                                                ]
                                            },
                                            "auth-string": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Authentication string\/password."
                                            },
                                            "receive-version": {
                                                "type": "string",
                                                "description": "Receive version.   \n1:Version 1.   \n2:Version 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            },
                                            "send-version": {
                                                "type": "string",
                                                "description": "Send version.   \n1:Version 1.   \n2:Version 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            },
                                            "send-version2-broadcast": {
                                                "type": "string",
                                                "description": "Enable\/disable broadcast version 1 compatible packets.   \ndisable:Disable broadcasting.   \nenable:Enable broadcasting.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "split-horizon-status": {
                                                "type": "string",
                                                "description": "Enable\/disable split horizon.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "split-horizon": {
                                                "type": "string",
                                                "description": "Enable\/disable split horizon.   \npoisoned:Poisoned.   \nregular:Regular.",
                                                "enum": [
                                                    "poisoned",
                                                    "regular"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "flags",
                                                "maximum": 255,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/rip"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "default-information-originate": {
                                    "type": "string",
                                    "description": "Enable\/disable generation of default route.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "default-metric": {
                                    "type": "integer",
                                    "description": "Default metric.",
                                    "maximum": 16,
                                    "minimum": 1
                                },
                                "max-out-metric": {
                                    "type": "integer",
                                    "description": "Maximum metric allowed to output(0 means 'not set').",
                                    "maximum": 15,
                                    "minimum": 0
                                },
                                "recv-buffer-size": {
                                    "type": "integer",
                                    "description": "Receiving buffer size.",
                                    "maximum": 2147483647,
                                    "minimum": 8129
                                },
                                "distance": {
                                    "description": "distance",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Distance ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Distance prefix."
                                            },
                                            "distance": {
                                                "type": "integer",
                                                "description": "Distance (1 - 255).",
                                                "maximum": 255,
                                                "minimum": 1
                                            },
                                            "access-list": {
                                                "type": "string",
                                                "description": "Access list for route destination.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "distribute-list": {
                                    "description": "Distribute list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Distribute list ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "direction": {
                                                "type": "string",
                                                "description": "Distribute list direction.   \nin:Filter incoming packets.   \nout:Filter outgoing packets.",
                                                "enum": [
                                                    "in",
                                                    "out"
                                                ]
                                            },
                                            "listname": {
                                                "type": "string",
                                                "description": "Distribute access\/prefix list name.",
                                                "maxLength": 35
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Distribute list interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor": {
                                    "description": "neighbor",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Neighbor entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "IP address."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "network": {
                                    "description": "network",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Network entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Network prefix."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "offset-list": {
                                    "description": "Offset list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Offset-list ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "direction": {
                                                "type": "string",
                                                "description": "Offset list direction.   \nin:Filter incoming packets.   \nout:Filter outgoing packets.",
                                                "enum": [
                                                    "in",
                                                    "out"
                                                ]
                                            },
                                            "access-list": {
                                                "type": "string",
                                                "description": "Access list name.",
                                                "maxLength": 35
                                            },
                                            "offset": {
                                                "type": "integer",
                                                "description": "offset",
                                                "maximum": 16,
                                                "minimum": 1
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "passive-interface": {
                                    "description": "Passive interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Passive interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "Redistribute configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Redistribute name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Redistribute metric setting.",
                                                "maximum": 16,
                                                "minimum": 1
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "update-timer": {
                                    "type": "integer",
                                    "description": "Update timer in seconds.",
                                    "maximum": 2147483647,
                                    "minimum": 1
                                },
                                "timeout-timer": {
                                    "type": "integer",
                                    "description": "Timeout timer in seconds.",
                                    "maximum": 2147483647,
                                    "minimum": 5
                                },
                                "garbage-timer": {
                                    "type": "integer",
                                    "description": "Garbage timer in seconds.",
                                    "maximum": 2147483647,
                                    "minimum": 5
                                },
                                "version": {
                                    "type": "string",
                                    "description": "RIP version.   \n1:Version 1.   \n2:Version 2.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "interface": {
                                    "description": "RIP interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 35
                                            },
                                            "auth-keychain": {
                                                "type": "string",
                                                "description": "Authentication key-chain name.",
                                                "maxLength": 35
                                            },
                                            "auth-mode": {
                                                "type": "string",
                                                "description": "Authentication mode.   \nnone:None.   \ntext:Text.   \nmd5:MD5.",
                                                "enum": [
                                                    "none",
                                                    "text",
                                                    "md5"
                                                ]
                                            },
                                            "auth-string": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Authentication string\/password."
                                            },
                                            "receive-version": {
                                                "type": "string",
                                                "description": "Receive version.   \n1:Version 1.   \n2:Version 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            },
                                            "send-version": {
                                                "type": "string",
                                                "description": "Send version.   \n1:Version 1.   \n2:Version 2.",
                                                "enum": [
                                                    "1",
                                                    "2"
                                                ]
                                            },
                                            "send-version2-broadcast": {
                                                "type": "string",
                                                "description": "Enable\/disable broadcast version 1 compatible packets.   \ndisable:Disable broadcasting.   \nenable:Enable broadcasting.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "split-horizon-status": {
                                                "type": "string",
                                                "description": "Enable\/disable split horizon.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "split-horizon": {
                                                "type": "string",
                                                "description": "Enable\/disable split horizon.   \npoisoned:Poisoned.   \nregular:Regular.",
                                                "enum": [
                                                    "poisoned",
                                                    "regular"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "flags",
                                                "maximum": 255,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/rip"
                ]
            }
        },
        "\/router\/ripng": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "default-information-originate": {
                                    "type": "string",
                                    "description": "Enable\/disable generation of default route.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "default-metric": {
                                    "type": "integer",
                                    "description": "Default metric.",
                                    "maximum": 16,
                                    "minimum": 1
                                },
                                "max-out-metric": {
                                    "type": "integer",
                                    "description": "Maximum metric allowed to output(0 means 'not set').",
                                    "maximum": 15,
                                    "minimum": 0
                                },
                                "distance": {
                                    "description": "distance",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Distance ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "distance": {
                                                "type": "integer",
                                                "description": "Distance (1 - 255).",
                                                "maximum": 255,
                                                "minimum": 1
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Distance prefix6."
                                            },
                                            "access-list6": {
                                                "type": "string",
                                                "description": "Access list for route destination.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "distribute-list": {
                                    "description": "Distribute list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Distribute list ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "direction": {
                                                "type": "string",
                                                "description": "Distribute list direction.   \nin:Filter incoming packets.   \nout:Filter outgoing packets.",
                                                "enum": [
                                                    "in",
                                                    "out"
                                                ]
                                            },
                                            "listname": {
                                                "type": "string",
                                                "description": "Distribute access\/prefix list name.",
                                                "maxLength": 35
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Distribute list interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor": {
                                    "description": "neighbor",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Neighbor entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "ip6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 link-local address."
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "network": {
                                    "description": "Network.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Network entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Network IPv6 link-local prefix."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "aggregate-address": {
                                    "description": "Aggregate address.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Aggregate address entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Aggregate address prefix."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "offset-list": {
                                    "description": "Offset list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Offset-list ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "direction": {
                                                "type": "string",
                                                "description": "Offset list direction.   \nin:Filter incoming packets.   \nout:Filter outgoing packets.",
                                                "enum": [
                                                    "in",
                                                    "out"
                                                ]
                                            },
                                            "access-list6": {
                                                "type": "string",
                                                "description": "IPv6 access list name.",
                                                "maxLength": 35
                                            },
                                            "offset": {
                                                "type": "integer",
                                                "description": "offset",
                                                "maximum": 16,
                                                "minimum": 1
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "passive-interface": {
                                    "description": "Passive interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Passive interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "Redistribute configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Redistribute name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Redistribute metric setting.",
                                                "maximum": 16,
                                                "minimum": 1
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "update-timer": {
                                    "type": "integer",
                                    "description": "Update timer.",
                                    "maximum": 2147483647,
                                    "minimum": 5
                                },
                                "timeout-timer": {
                                    "type": "integer",
                                    "description": "Timeout timer.",
                                    "maximum": 2147483647,
                                    "minimum": 5
                                },
                                "garbage-timer": {
                                    "type": "integer",
                                    "description": "Garbage timer.",
                                    "maximum": 2147483647,
                                    "minimum": 5
                                },
                                "interface": {
                                    "description": "RIPng interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 35
                                            },
                                            "split-horizon-status": {
                                                "type": "string",
                                                "description": "Enable\/disable split horizon.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "split-horizon": {
                                                "type": "string",
                                                "description": "Enable\/disable split horizon.   \npoisoned:Poisoned.   \nregular:Regular.",
                                                "enum": [
                                                    "poisoned",
                                                    "regular"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 255,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/ripng"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "default-information-originate": {
                                    "type": "string",
                                    "description": "Enable\/disable generation of default route.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "default-metric": {
                                    "type": "integer",
                                    "description": "Default metric.",
                                    "maximum": 16,
                                    "minimum": 1
                                },
                                "max-out-metric": {
                                    "type": "integer",
                                    "description": "Maximum metric allowed to output(0 means 'not set').",
                                    "maximum": 15,
                                    "minimum": 0
                                },
                                "distance": {
                                    "description": "distance",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Distance ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "distance": {
                                                "type": "integer",
                                                "description": "Distance (1 - 255).",
                                                "maximum": 255,
                                                "minimum": 1
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Distance prefix6."
                                            },
                                            "access-list6": {
                                                "type": "string",
                                                "description": "Access list for route destination.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "distribute-list": {
                                    "description": "Distribute list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Distribute list ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "direction": {
                                                "type": "string",
                                                "description": "Distribute list direction.   \nin:Filter incoming packets.   \nout:Filter outgoing packets.",
                                                "enum": [
                                                    "in",
                                                    "out"
                                                ]
                                            },
                                            "listname": {
                                                "type": "string",
                                                "description": "Distribute access\/prefix list name.",
                                                "maxLength": 35
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Distribute list interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "neighbor": {
                                    "description": "neighbor",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Neighbor entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "ip6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 link-local address."
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "network": {
                                    "description": "Network.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Network entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Network IPv6 link-local prefix."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "aggregate-address": {
                                    "description": "Aggregate address.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Aggregate address entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "prefix6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Aggregate address prefix."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "offset-list": {
                                    "description": "Offset list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Offset-list ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "direction": {
                                                "type": "string",
                                                "description": "Offset list direction.   \nin:Filter incoming packets.   \nout:Filter outgoing packets.",
                                                "enum": [
                                                    "in",
                                                    "out"
                                                ]
                                            },
                                            "access-list6": {
                                                "type": "string",
                                                "description": "IPv6 access list name.",
                                                "maxLength": 35
                                            },
                                            "offset": {
                                                "type": "integer",
                                                "description": "offset",
                                                "maximum": 16,
                                                "minimum": 1
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "passive-interface": {
                                    "description": "Passive interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Passive interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "redistribute": {
                                    "description": "Redistribute configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Redistribute name.",
                                                "maxLength": 35
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "status   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "metric": {
                                                "type": "integer",
                                                "description": "Redistribute metric setting.",
                                                "maximum": 16,
                                                "minimum": 1
                                            },
                                            "routemap": {
                                                "type": "string",
                                                "description": "Route map name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "update-timer": {
                                    "type": "integer",
                                    "description": "Update timer.",
                                    "maximum": 2147483647,
                                    "minimum": 5
                                },
                                "timeout-timer": {
                                    "type": "integer",
                                    "description": "Timeout timer.",
                                    "maximum": 2147483647,
                                    "minimum": 5
                                },
                                "garbage-timer": {
                                    "type": "integer",
                                    "description": "Garbage timer.",
                                    "maximum": 2147483647,
                                    "minimum": 5
                                },
                                "interface": {
                                    "description": "RIPng interface configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 35
                                            },
                                            "split-horizon-status": {
                                                "type": "string",
                                                "description": "Enable\/disable split horizon.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "split-horizon": {
                                                "type": "string",
                                                "description": "Enable\/disable split horizon.   \npoisoned:Poisoned.   \nregular:Regular.",
                                                "enum": [
                                                    "poisoned",
                                                    "regular"
                                                ]
                                            },
                                            "flags": {
                                                "type": "integer",
                                                "description": "Flags.",
                                                "maximum": 255,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/ripng"
                ]
            }
        },
        "\/router\/route-map\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action.   \npermit:Permit.   \ndeny:Deny.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "match-as-path": {
                                                "type": "string",
                                                "description": "Match BGP AS path list.",
                                                "maxLength": 35
                                            },
                                            "match-community": {
                                                "type": "string",
                                                "description": "Match BGP community list.",
                                                "maxLength": 35
                                            },
                                            "match-community-exact": {
                                                "type": "string",
                                                "description": "Enable\/disable exact matching of communities.   \nenable:Enable exact matching of communities.   \ndisable:Disable exact matching of communities.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "match-origin": {
                                                "type": "string",
                                                "description": "Match BGP origin code.   \nnone:None.   \negp:Remote EGP.   \nigp:Local IGP.   \nincomplete:Unknown heritage.",
                                                "enum": [
                                                    "none",
                                                    "egp",
                                                    "igp",
                                                    "incomplete"
                                                ]
                                            },
                                            "match-interface": {
                                                "type": "string",
                                                "description": "Match interface configuration.",
                                                "maxLength": 15
                                            },
                                            "match-ip-address": {
                                                "type": "string",
                                                "description": "Match IP address permitted by access-list or prefix-list.",
                                                "maxLength": 35
                                            },
                                            "match-ip6-address": {
                                                "type": "string",
                                                "description": "Match IPv6 address permitted by access-list6 or prefix-list6.",
                                                "maxLength": 35
                                            },
                                            "match-ip-nexthop": {
                                                "type": "string",
                                                "description": "Match next hop IP address passed by access-list or prefix-list.",
                                                "maxLength": 35
                                            },
                                            "match-ip6-nexthop": {
                                                "type": "string",
                                                "description": "Match next hop IPv6 address passed by access-list6 or prefix-list6.",
                                                "maxLength": 35
                                            },
                                            "match-metric": {
                                                "type": "integer",
                                                "description": "Match metric for redistribute routes.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "match-route-type": {
                                                "type": "string",
                                                "description": "Match route type.   \n1:External type 1.   \n2:External type 2.   \nnone:No type specified.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "none"
                                                ]
                                            },
                                            "match-tag": {
                                                "type": "integer",
                                                "description": "Match tag.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "match-vrf": {
                                                "type": "integer",
                                                "description": "Match VRF ID.",
                                                "maximum": 31,
                                                "minimum": 0
                                            },
                                            "set-aggregator-as": {
                                                "type": "integer",
                                                "description": "BGP aggregator AS.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-aggregator-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "BGP aggregator IP."
                                            },
                                            "set-aspath-action": {
                                                "type": "string",
                                                "description": "Specify preferred action of set-aspath.   \nprepend:Prepend.   \nreplace:Replace.",
                                                "enum": [
                                                    "prepend",
                                                    "replace"
                                                ]
                                            },
                                            "set-aspath": {
                                                "description": "Prepend BGP AS path attribute.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "as": {
                                                            "type": "string",
                                                            "description": "AS number (0 - 42949672). NOTE: Use quotes for repeating numbers, e.g.: \"1 1 2\"\n",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-atomic-aggregate": {
                                                "type": "string",
                                                "description": "Enable\/disable BGP atomic aggregate attribute.   \nenable:Enable BGP atomic aggregate attribute.   \ndisable:Disable BGP atomic aggregate attribute.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "set-community-delete": {
                                                "type": "string",
                                                "description": "Delete communities matching community list.",
                                                "maxLength": 35
                                            },
                                            "set-community": {
                                                "description": "BGP community attribute.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "Attribute: AA|AA:NN|internet|local-AS|no-advertise|no-export.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-community-additive": {
                                                "type": "string",
                                                "description": "Enable\/disable adding set-community to existing community.   \nenable:Enable adding set-community to existing community.   \ndisable:Disable adding set-community to existing community.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "set-dampening-reachability-half-life": {
                                                "type": "integer",
                                                "description": "Reachability half-life time for the penalty (1 - 45 min, 0 = unset).",
                                                "maximum": 45,
                                                "minimum": 0
                                            },
                                            "set-dampening-reuse": {
                                                "type": "integer",
                                                "description": "Value to start reusing a route (1 - 20000, 0 = unset).",
                                                "maximum": 20000,
                                                "minimum": 0
                                            },
                                            "set-dampening-suppress": {
                                                "type": "integer",
                                                "description": "Value to start suppressing a route (1 - 20000, 0 = unset).",
                                                "maximum": 20000,
                                                "minimum": 0
                                            },
                                            "set-dampening-max-suppress": {
                                                "type": "integer",
                                                "description": "Maximum duration to suppress a route (1 - 255 min, 0 = unset).",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "set-dampening-unreachability-half-life": {
                                                "type": "integer",
                                                "description": "Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)",
                                                "maximum": 45,
                                                "minimum": 0
                                            },
                                            "set-extcommunity-rt": {
                                                "description": "Route Target extended community.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "AA:NN.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-extcommunity-soo": {
                                                "description": "Site-of-Origin extended community.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "AA:NN",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-ip-nexthop": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "IP address of next hop."
                                            },
                                            "set-ip6-nexthop": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 global address of next hop."
                                            },
                                            "set-ip6-nexthop-local": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 local address of next hop."
                                            },
                                            "set-local-preference": {
                                                "type": "integer",
                                                "description": "BGP local preference path attribute.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-metric": {
                                                "type": "integer",
                                                "description": "Metric value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \n1:External type 1.   \n2:External type 2.   \nnone:No type specified.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "none"
                                                ]
                                            },
                                            "set-originator-id": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "BGP originator ID attribute."
                                            },
                                            "set-origin": {
                                                "type": "string",
                                                "description": "BGP origin code.   \nnone:None.   \negp:Remote EGP.   \nigp:Local IGP.   \nincomplete:Unknown heritage.",
                                                "enum": [
                                                    "none",
                                                    "egp",
                                                    "igp",
                                                    "incomplete"
                                                ]
                                            },
                                            "set-tag": {
                                                "type": "integer",
                                                "description": "Tag value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-weight": {
                                                "type": "integer",
                                                "description": "BGP weight for routing table.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-flags": {
                                                "type": "integer",
                                                "description": "BGP flags value (0 - 65535)",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "match-flags": {
                                                "type": "integer",
                                                "description": "BGP flag value to match (0 - 65535)",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "set-route-tag": {
                                                "type": "integer",
                                                "description": "Route tag for routing table.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/route-map"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action.   \npermit:Permit.   \ndeny:Deny.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "match-as-path": {
                                                "type": "string",
                                                "description": "Match BGP AS path list.",
                                                "maxLength": 35
                                            },
                                            "match-community": {
                                                "type": "string",
                                                "description": "Match BGP community list.",
                                                "maxLength": 35
                                            },
                                            "match-community-exact": {
                                                "type": "string",
                                                "description": "Enable\/disable exact matching of communities.   \nenable:Enable exact matching of communities.   \ndisable:Disable exact matching of communities.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "match-origin": {
                                                "type": "string",
                                                "description": "Match BGP origin code.   \nnone:None.   \negp:Remote EGP.   \nigp:Local IGP.   \nincomplete:Unknown heritage.",
                                                "enum": [
                                                    "none",
                                                    "egp",
                                                    "igp",
                                                    "incomplete"
                                                ]
                                            },
                                            "match-interface": {
                                                "type": "string",
                                                "description": "Match interface configuration.",
                                                "maxLength": 15
                                            },
                                            "match-ip-address": {
                                                "type": "string",
                                                "description": "Match IP address permitted by access-list or prefix-list.",
                                                "maxLength": 35
                                            },
                                            "match-ip6-address": {
                                                "type": "string",
                                                "description": "Match IPv6 address permitted by access-list6 or prefix-list6.",
                                                "maxLength": 35
                                            },
                                            "match-ip-nexthop": {
                                                "type": "string",
                                                "description": "Match next hop IP address passed by access-list or prefix-list.",
                                                "maxLength": 35
                                            },
                                            "match-ip6-nexthop": {
                                                "type": "string",
                                                "description": "Match next hop IPv6 address passed by access-list6 or prefix-list6.",
                                                "maxLength": 35
                                            },
                                            "match-metric": {
                                                "type": "integer",
                                                "description": "Match metric for redistribute routes.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "match-route-type": {
                                                "type": "string",
                                                "description": "Match route type.   \n1:External type 1.   \n2:External type 2.   \nnone:No type specified.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "none"
                                                ]
                                            },
                                            "match-tag": {
                                                "type": "integer",
                                                "description": "Match tag.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "match-vrf": {
                                                "type": "integer",
                                                "description": "Match VRF ID.",
                                                "maximum": 31,
                                                "minimum": 0
                                            },
                                            "set-aggregator-as": {
                                                "type": "integer",
                                                "description": "BGP aggregator AS.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-aggregator-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "BGP aggregator IP."
                                            },
                                            "set-aspath-action": {
                                                "type": "string",
                                                "description": "Specify preferred action of set-aspath.   \nprepend:Prepend.   \nreplace:Replace.",
                                                "enum": [
                                                    "prepend",
                                                    "replace"
                                                ]
                                            },
                                            "set-aspath": {
                                                "description": "Prepend BGP AS path attribute.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "as": {
                                                            "type": "string",
                                                            "description": "AS number (0 - 42949672). NOTE: Use quotes for repeating numbers, e.g.: \"1 1 2\"\n",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-atomic-aggregate": {
                                                "type": "string",
                                                "description": "Enable\/disable BGP atomic aggregate attribute.   \nenable:Enable BGP atomic aggregate attribute.   \ndisable:Disable BGP atomic aggregate attribute.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "set-community-delete": {
                                                "type": "string",
                                                "description": "Delete communities matching community list.",
                                                "maxLength": 35
                                            },
                                            "set-community": {
                                                "description": "BGP community attribute.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "Attribute: AA|AA:NN|internet|local-AS|no-advertise|no-export.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-community-additive": {
                                                "type": "string",
                                                "description": "Enable\/disable adding set-community to existing community.   \nenable:Enable adding set-community to existing community.   \ndisable:Disable adding set-community to existing community.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "set-dampening-reachability-half-life": {
                                                "type": "integer",
                                                "description": "Reachability half-life time for the penalty (1 - 45 min, 0 = unset).",
                                                "maximum": 45,
                                                "minimum": 0
                                            },
                                            "set-dampening-reuse": {
                                                "type": "integer",
                                                "description": "Value to start reusing a route (1 - 20000, 0 = unset).",
                                                "maximum": 20000,
                                                "minimum": 0
                                            },
                                            "set-dampening-suppress": {
                                                "type": "integer",
                                                "description": "Value to start suppressing a route (1 - 20000, 0 = unset).",
                                                "maximum": 20000,
                                                "minimum": 0
                                            },
                                            "set-dampening-max-suppress": {
                                                "type": "integer",
                                                "description": "Maximum duration to suppress a route (1 - 255 min, 0 = unset).",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "set-dampening-unreachability-half-life": {
                                                "type": "integer",
                                                "description": "Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)",
                                                "maximum": 45,
                                                "minimum": 0
                                            },
                                            "set-extcommunity-rt": {
                                                "description": "Route Target extended community.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "AA:NN.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-extcommunity-soo": {
                                                "description": "Site-of-Origin extended community.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "AA:NN",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-ip-nexthop": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "IP address of next hop."
                                            },
                                            "set-ip6-nexthop": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 global address of next hop."
                                            },
                                            "set-ip6-nexthop-local": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 local address of next hop."
                                            },
                                            "set-local-preference": {
                                                "type": "integer",
                                                "description": "BGP local preference path attribute.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-metric": {
                                                "type": "integer",
                                                "description": "Metric value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \n1:External type 1.   \n2:External type 2.   \nnone:No type specified.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "none"
                                                ]
                                            },
                                            "set-originator-id": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "BGP originator ID attribute."
                                            },
                                            "set-origin": {
                                                "type": "string",
                                                "description": "BGP origin code.   \nnone:None.   \negp:Remote EGP.   \nigp:Local IGP.   \nincomplete:Unknown heritage.",
                                                "enum": [
                                                    "none",
                                                    "egp",
                                                    "igp",
                                                    "incomplete"
                                                ]
                                            },
                                            "set-tag": {
                                                "type": "integer",
                                                "description": "Tag value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-weight": {
                                                "type": "integer",
                                                "description": "BGP weight for routing table.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-flags": {
                                                "type": "integer",
                                                "description": "BGP flags value (0 - 65535)",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "match-flags": {
                                                "type": "integer",
                                                "description": "BGP flag value to match (0 - 65535)",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "set-route-tag": {
                                                "type": "integer",
                                                "description": "Route tag for routing table.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/route-map"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/route-map"
                ]
            }
        },
        "\/router\/route-map": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action.   \npermit:Permit.   \ndeny:Deny.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "match-as-path": {
                                                "type": "string",
                                                "description": "Match BGP AS path list.",
                                                "maxLength": 35
                                            },
                                            "match-community": {
                                                "type": "string",
                                                "description": "Match BGP community list.",
                                                "maxLength": 35
                                            },
                                            "match-community-exact": {
                                                "type": "string",
                                                "description": "Enable\/disable exact matching of communities.   \nenable:Enable exact matching of communities.   \ndisable:Disable exact matching of communities.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "match-origin": {
                                                "type": "string",
                                                "description": "Match BGP origin code.   \nnone:None.   \negp:Remote EGP.   \nigp:Local IGP.   \nincomplete:Unknown heritage.",
                                                "enum": [
                                                    "none",
                                                    "egp",
                                                    "igp",
                                                    "incomplete"
                                                ]
                                            },
                                            "match-interface": {
                                                "type": "string",
                                                "description": "Match interface configuration.",
                                                "maxLength": 15
                                            },
                                            "match-ip-address": {
                                                "type": "string",
                                                "description": "Match IP address permitted by access-list or prefix-list.",
                                                "maxLength": 35
                                            },
                                            "match-ip6-address": {
                                                "type": "string",
                                                "description": "Match IPv6 address permitted by access-list6 or prefix-list6.",
                                                "maxLength": 35
                                            },
                                            "match-ip-nexthop": {
                                                "type": "string",
                                                "description": "Match next hop IP address passed by access-list or prefix-list.",
                                                "maxLength": 35
                                            },
                                            "match-ip6-nexthop": {
                                                "type": "string",
                                                "description": "Match next hop IPv6 address passed by access-list6 or prefix-list6.",
                                                "maxLength": 35
                                            },
                                            "match-metric": {
                                                "type": "integer",
                                                "description": "Match metric for redistribute routes.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "match-route-type": {
                                                "type": "string",
                                                "description": "Match route type.   \n1:External type 1.   \n2:External type 2.   \nnone:No type specified.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "none"
                                                ]
                                            },
                                            "match-tag": {
                                                "type": "integer",
                                                "description": "Match tag.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "match-vrf": {
                                                "type": "integer",
                                                "description": "Match VRF ID.",
                                                "maximum": 31,
                                                "minimum": 0
                                            },
                                            "set-aggregator-as": {
                                                "type": "integer",
                                                "description": "BGP aggregator AS.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-aggregator-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "BGP aggregator IP."
                                            },
                                            "set-aspath-action": {
                                                "type": "string",
                                                "description": "Specify preferred action of set-aspath.   \nprepend:Prepend.   \nreplace:Replace.",
                                                "enum": [
                                                    "prepend",
                                                    "replace"
                                                ]
                                            },
                                            "set-aspath": {
                                                "description": "Prepend BGP AS path attribute.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "as": {
                                                            "type": "string",
                                                            "description": "AS number (0 - 42949672). NOTE: Use quotes for repeating numbers, e.g.: \"1 1 2\"\n",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-atomic-aggregate": {
                                                "type": "string",
                                                "description": "Enable\/disable BGP atomic aggregate attribute.   \nenable:Enable BGP atomic aggregate attribute.   \ndisable:Disable BGP atomic aggregate attribute.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "set-community-delete": {
                                                "type": "string",
                                                "description": "Delete communities matching community list.",
                                                "maxLength": 35
                                            },
                                            "set-community": {
                                                "description": "BGP community attribute.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "Attribute: AA|AA:NN|internet|local-AS|no-advertise|no-export.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-community-additive": {
                                                "type": "string",
                                                "description": "Enable\/disable adding set-community to existing community.   \nenable:Enable adding set-community to existing community.   \ndisable:Disable adding set-community to existing community.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "set-dampening-reachability-half-life": {
                                                "type": "integer",
                                                "description": "Reachability half-life time for the penalty (1 - 45 min, 0 = unset).",
                                                "maximum": 45,
                                                "minimum": 0
                                            },
                                            "set-dampening-reuse": {
                                                "type": "integer",
                                                "description": "Value to start reusing a route (1 - 20000, 0 = unset).",
                                                "maximum": 20000,
                                                "minimum": 0
                                            },
                                            "set-dampening-suppress": {
                                                "type": "integer",
                                                "description": "Value to start suppressing a route (1 - 20000, 0 = unset).",
                                                "maximum": 20000,
                                                "minimum": 0
                                            },
                                            "set-dampening-max-suppress": {
                                                "type": "integer",
                                                "description": "Maximum duration to suppress a route (1 - 255 min, 0 = unset).",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "set-dampening-unreachability-half-life": {
                                                "type": "integer",
                                                "description": "Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)",
                                                "maximum": 45,
                                                "minimum": 0
                                            },
                                            "set-extcommunity-rt": {
                                                "description": "Route Target extended community.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "AA:NN.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-extcommunity-soo": {
                                                "description": "Site-of-Origin extended community.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "AA:NN",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-ip-nexthop": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "IP address of next hop."
                                            },
                                            "set-ip6-nexthop": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 global address of next hop."
                                            },
                                            "set-ip6-nexthop-local": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 local address of next hop."
                                            },
                                            "set-local-preference": {
                                                "type": "integer",
                                                "description": "BGP local preference path attribute.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-metric": {
                                                "type": "integer",
                                                "description": "Metric value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \n1:External type 1.   \n2:External type 2.   \nnone:No type specified.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "none"
                                                ]
                                            },
                                            "set-originator-id": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "BGP originator ID attribute."
                                            },
                                            "set-origin": {
                                                "type": "string",
                                                "description": "BGP origin code.   \nnone:None.   \negp:Remote EGP.   \nigp:Local IGP.   \nincomplete:Unknown heritage.",
                                                "enum": [
                                                    "none",
                                                    "egp",
                                                    "igp",
                                                    "incomplete"
                                                ]
                                            },
                                            "set-tag": {
                                                "type": "integer",
                                                "description": "Tag value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-weight": {
                                                "type": "integer",
                                                "description": "BGP weight for routing table.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-flags": {
                                                "type": "integer",
                                                "description": "BGP flags value (0 - 65535)",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "match-flags": {
                                                "type": "integer",
                                                "description": "BGP flag value to match (0 - 65535)",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "set-route-tag": {
                                                "type": "integer",
                                                "description": "Route tag for routing table.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/route-map"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action.   \npermit:Permit.   \ndeny:Deny.",
                                                "enum": [
                                                    "permit",
                                                    "deny"
                                                ]
                                            },
                                            "match-as-path": {
                                                "type": "string",
                                                "description": "Match BGP AS path list.",
                                                "maxLength": 35
                                            },
                                            "match-community": {
                                                "type": "string",
                                                "description": "Match BGP community list.",
                                                "maxLength": 35
                                            },
                                            "match-community-exact": {
                                                "type": "string",
                                                "description": "Enable\/disable exact matching of communities.   \nenable:Enable exact matching of communities.   \ndisable:Disable exact matching of communities.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "match-origin": {
                                                "type": "string",
                                                "description": "Match BGP origin code.   \nnone:None.   \negp:Remote EGP.   \nigp:Local IGP.   \nincomplete:Unknown heritage.",
                                                "enum": [
                                                    "none",
                                                    "egp",
                                                    "igp",
                                                    "incomplete"
                                                ]
                                            },
                                            "match-interface": {
                                                "type": "string",
                                                "description": "Match interface configuration.",
                                                "maxLength": 15
                                            },
                                            "match-ip-address": {
                                                "type": "string",
                                                "description": "Match IP address permitted by access-list or prefix-list.",
                                                "maxLength": 35
                                            },
                                            "match-ip6-address": {
                                                "type": "string",
                                                "description": "Match IPv6 address permitted by access-list6 or prefix-list6.",
                                                "maxLength": 35
                                            },
                                            "match-ip-nexthop": {
                                                "type": "string",
                                                "description": "Match next hop IP address passed by access-list or prefix-list.",
                                                "maxLength": 35
                                            },
                                            "match-ip6-nexthop": {
                                                "type": "string",
                                                "description": "Match next hop IPv6 address passed by access-list6 or prefix-list6.",
                                                "maxLength": 35
                                            },
                                            "match-metric": {
                                                "type": "integer",
                                                "description": "Match metric for redistribute routes.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "match-route-type": {
                                                "type": "string",
                                                "description": "Match route type.   \n1:External type 1.   \n2:External type 2.   \nnone:No type specified.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "none"
                                                ]
                                            },
                                            "match-tag": {
                                                "type": "integer",
                                                "description": "Match tag.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "match-vrf": {
                                                "type": "integer",
                                                "description": "Match VRF ID.",
                                                "maximum": 31,
                                                "minimum": 0
                                            },
                                            "set-aggregator-as": {
                                                "type": "integer",
                                                "description": "BGP aggregator AS.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-aggregator-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "BGP aggregator IP."
                                            },
                                            "set-aspath-action": {
                                                "type": "string",
                                                "description": "Specify preferred action of set-aspath.   \nprepend:Prepend.   \nreplace:Replace.",
                                                "enum": [
                                                    "prepend",
                                                    "replace"
                                                ]
                                            },
                                            "set-aspath": {
                                                "description": "Prepend BGP AS path attribute.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "as": {
                                                            "type": "string",
                                                            "description": "AS number (0 - 42949672). NOTE: Use quotes for repeating numbers, e.g.: \"1 1 2\"\n",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-atomic-aggregate": {
                                                "type": "string",
                                                "description": "Enable\/disable BGP atomic aggregate attribute.   \nenable:Enable BGP atomic aggregate attribute.   \ndisable:Disable BGP atomic aggregate attribute.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "set-community-delete": {
                                                "type": "string",
                                                "description": "Delete communities matching community list.",
                                                "maxLength": 35
                                            },
                                            "set-community": {
                                                "description": "BGP community attribute.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "Attribute: AA|AA:NN|internet|local-AS|no-advertise|no-export.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-community-additive": {
                                                "type": "string",
                                                "description": "Enable\/disable adding set-community to existing community.   \nenable:Enable adding set-community to existing community.   \ndisable:Disable adding set-community to existing community.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "set-dampening-reachability-half-life": {
                                                "type": "integer",
                                                "description": "Reachability half-life time for the penalty (1 - 45 min, 0 = unset).",
                                                "maximum": 45,
                                                "minimum": 0
                                            },
                                            "set-dampening-reuse": {
                                                "type": "integer",
                                                "description": "Value to start reusing a route (1 - 20000, 0 = unset).",
                                                "maximum": 20000,
                                                "minimum": 0
                                            },
                                            "set-dampening-suppress": {
                                                "type": "integer",
                                                "description": "Value to start suppressing a route (1 - 20000, 0 = unset).",
                                                "maximum": 20000,
                                                "minimum": 0
                                            },
                                            "set-dampening-max-suppress": {
                                                "type": "integer",
                                                "description": "Maximum duration to suppress a route (1 - 255 min, 0 = unset).",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "set-dampening-unreachability-half-life": {
                                                "type": "integer",
                                                "description": "Unreachability Half-life time for the penalty (1 - 45 min, 0 = unset)",
                                                "maximum": 45,
                                                "minimum": 0
                                            },
                                            "set-extcommunity-rt": {
                                                "description": "Route Target extended community.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "AA:NN.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-extcommunity-soo": {
                                                "description": "Site-of-Origin extended community.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "community": {
                                                            "type": "string",
                                                            "description": "AA:NN",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "set-ip-nexthop": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "IP address of next hop."
                                            },
                                            "set-ip6-nexthop": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 global address of next hop."
                                            },
                                            "set-ip6-nexthop-local": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 local address of next hop."
                                            },
                                            "set-local-preference": {
                                                "type": "integer",
                                                "description": "BGP local preference path attribute.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-metric": {
                                                "type": "integer",
                                                "description": "Metric value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-metric-type": {
                                                "type": "string",
                                                "description": "Metric type.   \n1:External type 1.   \n2:External type 2.   \nnone:No type specified.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "none"
                                                ]
                                            },
                                            "set-originator-id": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "BGP originator ID attribute."
                                            },
                                            "set-origin": {
                                                "type": "string",
                                                "description": "BGP origin code.   \nnone:None.   \negp:Remote EGP.   \nigp:Local IGP.   \nincomplete:Unknown heritage.",
                                                "enum": [
                                                    "none",
                                                    "egp",
                                                    "igp",
                                                    "incomplete"
                                                ]
                                            },
                                            "set-tag": {
                                                "type": "integer",
                                                "description": "Tag value.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-weight": {
                                                "type": "integer",
                                                "description": "BGP weight for routing table.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "set-flags": {
                                                "type": "integer",
                                                "description": "BGP flags value (0 - 65535)",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "match-flags": {
                                                "type": "integer",
                                                "description": "BGP flag value to match (0 - 65535)",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "set-route-tag": {
                                                "type": "integer",
                                                "description": "Route tag for routing table.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/route-map"
                ]
            }
        },
        "\/router\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "show-filter": {
                                    "type": "string",
                                    "description": "Prefix-list as filter for showing routes.",
                                    "maxLength": 35
                                },
                                "hostname": {
                                    "type": "string",
                                    "description": "Hostname for this virtual domain router.",
                                    "maxLength": 14
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "show-filter": {
                                    "type": "string",
                                    "description": "Prefix-list as filter for showing routes.",
                                    "maxLength": 35
                                },
                                "hostname": {
                                    "type": "string",
                                    "description": "Hostname for this virtual domain router.",
                                    "maxLength": 14
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/setting"
                ]
            }
        },
        "\/router\/static\/{seq-num}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this static route.   \nenable:Enable static route.   \ndisable:Disable static route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Destination IP and mask for this route."
                                },
                                "src": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source prefix for this route."
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Gateway IP for this route."
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "weight": {
                                    "type": "integer",
                                    "description": "Administrative weight (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Administrative priority (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Gateway out interface or tunnel.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "blackhole": {
                                    "type": "string",
                                    "description": "Enable\/disable black hole.   \nenable:Enable black hole.   \ndisable:Disable black hole.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dynamic-gateway": {
                                    "type": "string",
                                    "description": "Enable use of dynamic gateway retrieved from a DHCP or PPP server.   \nenable:Enable dynamic gateway.   \ndisable:Disable dynamic gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable egress through SD-WAN.   \nenable:Enable SD-WAN access.   \ndisable:Disable SD-WAN access.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dstaddr": {
                                    "type": "string",
                                    "description": "Name of firewall address or address group.",
                                    "maxLength": 79
                                },
                                "internet-service": {
                                    "type": "integer",
                                    "description": "Application ID in the Internet service database.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "internet-service-custom": {
                                    "type": "string",
                                    "description": "Application name in the Internet service custom database.",
                                    "maxLength": 64
                                },
                                "link-monitor-exempt": {
                                    "type": "string",
                                    "description": "Enable\/disable withdrawal of this static route when link monitor or health check is down.   \nenable:Keep this static route when link monitor or health check is down.   \ndisable:Withdraw this static route when link monitor or health check is down. (default)",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "vrf": {
                                    "type": "integer",
                                    "description": "Virtual Routing Forwarding ID.",
                                    "maximum": 31,
                                    "minimum": 0
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Bidirectional Forwarding Detection (BFD).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/static"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this static route.   \nenable:Enable static route.   \ndisable:Disable static route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Destination IP and mask for this route."
                                },
                                "src": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source prefix for this route."
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Gateway IP for this route."
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "weight": {
                                    "type": "integer",
                                    "description": "Administrative weight (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Administrative priority (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Gateway out interface or tunnel.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "blackhole": {
                                    "type": "string",
                                    "description": "Enable\/disable black hole.   \nenable:Enable black hole.   \ndisable:Disable black hole.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dynamic-gateway": {
                                    "type": "string",
                                    "description": "Enable use of dynamic gateway retrieved from a DHCP or PPP server.   \nenable:Enable dynamic gateway.   \ndisable:Disable dynamic gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable egress through SD-WAN.   \nenable:Enable SD-WAN access.   \ndisable:Disable SD-WAN access.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dstaddr": {
                                    "type": "string",
                                    "description": "Name of firewall address or address group.",
                                    "maxLength": 79
                                },
                                "internet-service": {
                                    "type": "integer",
                                    "description": "Application ID in the Internet service database.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "internet-service-custom": {
                                    "type": "string",
                                    "description": "Application name in the Internet service custom database.",
                                    "maxLength": 64
                                },
                                "link-monitor-exempt": {
                                    "type": "string",
                                    "description": "Enable\/disable withdrawal of this static route when link monitor or health check is down.   \nenable:Keep this static route when link monitor or health check is down.   \ndisable:Withdraw this static route when link monitor or health check is down. (default)",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "vrf": {
                                    "type": "integer",
                                    "description": "Virtual Routing Forwarding ID.",
                                    "maximum": 31,
                                    "minimum": 0
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Bidirectional Forwarding Detection (BFD).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/static"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/static"
                ]
            }
        },
        "\/router\/static": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this static route.   \nenable:Enable static route.   \ndisable:Disable static route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Destination IP and mask for this route."
                                },
                                "src": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source prefix for this route."
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Gateway IP for this route."
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "weight": {
                                    "type": "integer",
                                    "description": "Administrative weight (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Administrative priority (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Gateway out interface or tunnel.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "blackhole": {
                                    "type": "string",
                                    "description": "Enable\/disable black hole.   \nenable:Enable black hole.   \ndisable:Disable black hole.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dynamic-gateway": {
                                    "type": "string",
                                    "description": "Enable use of dynamic gateway retrieved from a DHCP or PPP server.   \nenable:Enable dynamic gateway.   \ndisable:Disable dynamic gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable egress through SD-WAN.   \nenable:Enable SD-WAN access.   \ndisable:Disable SD-WAN access.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dstaddr": {
                                    "type": "string",
                                    "description": "Name of firewall address or address group.",
                                    "maxLength": 79
                                },
                                "internet-service": {
                                    "type": "integer",
                                    "description": "Application ID in the Internet service database.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "internet-service-custom": {
                                    "type": "string",
                                    "description": "Application name in the Internet service custom database.",
                                    "maxLength": 64
                                },
                                "link-monitor-exempt": {
                                    "type": "string",
                                    "description": "Enable\/disable withdrawal of this static route when link monitor or health check is down.   \nenable:Keep this static route when link monitor or health check is down.   \ndisable:Withdraw this static route when link monitor or health check is down. (default)",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "vrf": {
                                    "type": "integer",
                                    "description": "Virtual Routing Forwarding ID.",
                                    "maximum": 31,
                                    "minimum": 0
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Bidirectional Forwarding Detection (BFD).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/static"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this static route.   \nenable:Enable static route.   \ndisable:Disable static route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Destination IP and mask for this route."
                                },
                                "src": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source prefix for this route."
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Gateway IP for this route."
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "weight": {
                                    "type": "integer",
                                    "description": "Administrative weight (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Administrative priority (0 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Gateway out interface or tunnel.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "blackhole": {
                                    "type": "string",
                                    "description": "Enable\/disable black hole.   \nenable:Enable black hole.   \ndisable:Disable black hole.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dynamic-gateway": {
                                    "type": "string",
                                    "description": "Enable use of dynamic gateway retrieved from a DHCP or PPP server.   \nenable:Enable dynamic gateway.   \ndisable:Disable dynamic gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable egress through SD-WAN.   \nenable:Enable SD-WAN access.   \ndisable:Disable SD-WAN access.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dstaddr": {
                                    "type": "string",
                                    "description": "Name of firewall address or address group.",
                                    "maxLength": 79
                                },
                                "internet-service": {
                                    "type": "integer",
                                    "description": "Application ID in the Internet service database.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "internet-service-custom": {
                                    "type": "string",
                                    "description": "Application name in the Internet service custom database.",
                                    "maxLength": 64
                                },
                                "link-monitor-exempt": {
                                    "type": "string",
                                    "description": "Enable\/disable withdrawal of this static route when link monitor or health check is down.   \nenable:Keep this static route when link monitor or health check is down.   \ndisable:Withdraw this static route when link monitor or health check is down. (default)",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "vrf": {
                                    "type": "integer",
                                    "description": "Virtual Routing Forwarding ID.",
                                    "maximum": 31,
                                    "minimum": 0
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Bidirectional Forwarding Detection (BFD).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/static"
                ]
            }
        },
        "\/router\/static6\/{seq-num}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this static route.   \nenable:Enable static route.   \ndisable:Disable static route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "type": "string",
                                    "description": "Destination IPv6 prefix."
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the gateway."
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Gateway out interface or tunnel.",
                                    "maxLength": 35
                                },
                                "devindex": {
                                    "type": "integer",
                                    "description": "Device index (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Administrative priority (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "blackhole": {
                                    "type": "string",
                                    "description": "Enable\/disable black hole.   \nenable:Enable black hole.   \ndisable:Disable black hole.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable egress through the SD-WAN.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "link-monitor-exempt": {
                                    "type": "string",
                                    "description": "Enable\/disable withdrawal of this static route when link monitor or health check is down.   \nenable:Keep this static route when link monitor or health check is down.   \ndisable:Withdraw this static route when link monitor or health check is down. (default)",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Bidirectional Forwarding Detection (BFD).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/static6"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this static route.   \nenable:Enable static route.   \ndisable:Disable static route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "type": "string",
                                    "description": "Destination IPv6 prefix."
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the gateway."
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Gateway out interface or tunnel.",
                                    "maxLength": 35
                                },
                                "devindex": {
                                    "type": "integer",
                                    "description": "Device index (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Administrative priority (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "blackhole": {
                                    "type": "string",
                                    "description": "Enable\/disable black hole.   \nenable:Enable black hole.   \ndisable:Disable black hole.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable egress through the SD-WAN.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "link-monitor-exempt": {
                                    "type": "string",
                                    "description": "Enable\/disable withdrawal of this static route when link monitor or health check is down.   \nenable:Keep this static route when link monitor or health check is down.   \ndisable:Withdraw this static route when link monitor or health check is down. (default)",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Bidirectional Forwarding Detection (BFD).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "router\/static6"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "seq-num",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/static6"
                ]
            }
        },
        "\/router\/static6": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this static route.   \nenable:Enable static route.   \ndisable:Disable static route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "type": "string",
                                    "description": "Destination IPv6 prefix."
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the gateway."
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Gateway out interface or tunnel.",
                                    "maxLength": 35
                                },
                                "devindex": {
                                    "type": "integer",
                                    "description": "Device index (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Administrative priority (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "blackhole": {
                                    "type": "string",
                                    "description": "Enable\/disable black hole.   \nenable:Enable black hole.   \ndisable:Disable black hole.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable egress through the SD-WAN.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "link-monitor-exempt": {
                                    "type": "string",
                                    "description": "Enable\/disable withdrawal of this static route when link monitor or health check is down.   \nenable:Keep this static route when link monitor or health check is down.   \ndisable:Withdraw this static route when link monitor or health check is down. (default)",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Bidirectional Forwarding Detection (BFD).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "router\/static6"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "seq-num": {
                                    "type": "integer",
                                    "description": "Sequence number.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this static route.   \nenable:Enable static route.   \ndisable:Disable static route.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dst": {
                                    "type": "string",
                                    "description": "Destination IPv6 prefix."
                                },
                                "gateway": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the gateway."
                                },
                                "device": {
                                    "type": "string",
                                    "description": "Gateway out interface or tunnel.",
                                    "maxLength": 35
                                },
                                "devindex": {
                                    "type": "integer",
                                    "description": "Device index (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Administrative distance (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Administrative priority (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Optional comments.",
                                    "maxLength": 255
                                },
                                "blackhole": {
                                    "type": "string",
                                    "description": "Enable\/disable black hole.   \nenable:Enable black hole.   \ndisable:Disable black hole.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable egress through the SD-WAN.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "link-monitor-exempt": {
                                    "type": "string",
                                    "description": "Enable\/disable withdrawal of this static route when link monitor or health check is down.   \nenable:Keep this static route when link monitor or health check is down.   \ndisable:Withdraw this static route when link monitor or health check is down. (default)",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bfd": {
                                    "type": "string",
                                    "description": "Enable\/disable Bidirectional Forwarding Detection (BFD).   \nenable:Enable Bidirectional Forwarding Detection (BFD).   \ndisable:Disable Bidirectional Forwarding Detection (BFD).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "router\/static6"
                ]
            }
        }
    }
}