{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS CMDB"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/cmdb",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "tags": [
        {
            "name": "user\/adgrp",
            "description": "Configure FSSO groups."
        },
        {
            "name": "user\/domain-controller",
            "description": "Configure domain controller entries."
        },
        {
            "name": "user\/exchange",
            "description": "Configure MS Exchange server entries."
        },
        {
            "name": "user\/fortitoken",
            "description": "Configure FortiToken."
        },
        {
            "name": "user\/fsso",
            "description": "Configure Fortinet Single Sign On (FSSO) agents."
        },
        {
            "name": "user\/fsso-polling",
            "description": "Configure FSSO active directory servers for polling mode."
        },
        {
            "name": "user\/group",
            "description": "Configure user groups."
        },
        {
            "name": "user\/krb-keytab",
            "description": "Configure Kerberos keytab entries."
        },
        {
            "name": "user\/ldap",
            "description": "Configure LDAP server entries."
        },
        {
            "name": "user\/local",
            "description": "Configure local users."
        },
        {
            "name": "user\/nac-policy",
            "description": "Configure NAC policy matching pattern to identify matching NAC devices."
        },
        {
            "name": "user\/password-policy",
            "description": "Configure user password policy."
        },
        {
            "name": "user\/peer",
            "description": "Configure peer users."
        },
        {
            "name": "user\/peergrp",
            "description": "Configure peer groups."
        },
        {
            "name": "user\/pop3",
            "description": "POP3 server entry configuration."
        },
        {
            "name": "user\/quarantine",
            "description": "Configure quarantine support."
        },
        {
            "name": "user\/radius",
            "description": "Configure RADIUS server entries."
        },
        {
            "name": "user\/saml",
            "description": "SAML server entry configuration."
        },
        {
            "name": "user\/security-exempt-list",
            "description": "Configure security exemption list."
        },
        {
            "name": "user\/setting",
            "description": "Configure user authentication setting."
        },
        {
            "name": "user\/tacacs+",
            "description": "Configure TACACS+ server entries."
        }
    ],
    "paths": {
        "\/user\/adgrp\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 511
                                },
                                "server-name": {
                                    "type": "string",
                                    "description": "FSSO agent name.",
                                    "maxLength": 35
                                },
                                "connector-source": {
                                    "type": "string",
                                    "description": "FSSO connector source.",
                                    "maxLength": 35
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Group ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/adgrp"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 511
                                },
                                "server-name": {
                                    "type": "string",
                                    "description": "FSSO agent name.",
                                    "maxLength": 35
                                },
                                "connector-source": {
                                    "type": "string",
                                    "description": "FSSO connector source.",
                                    "maxLength": 35
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Group ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/adgrp"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/adgrp"
                ]
            }
        },
        "\/user\/adgrp": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 511
                                },
                                "server-name": {
                                    "type": "string",
                                    "description": "FSSO agent name.",
                                    "maxLength": 35
                                },
                                "connector-source": {
                                    "type": "string",
                                    "description": "FSSO connector source.",
                                    "maxLength": 35
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Group ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/adgrp"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 511
                                },
                                "server-name": {
                                    "type": "string",
                                    "description": "FSSO agent name.",
                                    "maxLength": 35
                                },
                                "connector-source": {
                                    "type": "string",
                                    "description": "FSSO connector source.",
                                    "maxLength": 35
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Group ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/adgrp"
                ]
            }
        },
        "\/user\/domain-controller\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Domain controller entry name.",
                                    "maxLength": 35
                                },
                                "ip-address": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Domain controller IP address."
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to be used for communication with the domain controller (default = 445).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "extra-server": {
                                    "description": "extra servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Server ID.",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "ip-address": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Domain controller IP address."
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Port to be used for communication with the domain controller (default = 445).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "domain-name": {
                                    "type": "string",
                                    "description": "Domain DNS name.",
                                    "maxLength": 255
                                },
                                "ldap-server": {
                                    "description": "LDAP server name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "LDAP server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/domain-controller"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Domain controller entry name.",
                                    "maxLength": 35
                                },
                                "ip-address": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Domain controller IP address."
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to be used for communication with the domain controller (default = 445).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "extra-server": {
                                    "description": "extra servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Server ID.",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "ip-address": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Domain controller IP address."
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Port to be used for communication with the domain controller (default = 445).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "domain-name": {
                                    "type": "string",
                                    "description": "Domain DNS name.",
                                    "maxLength": 255
                                },
                                "ldap-server": {
                                    "description": "LDAP server name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "LDAP server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/domain-controller"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/domain-controller"
                ]
            }
        },
        "\/user\/domain-controller": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Domain controller entry name.",
                                    "maxLength": 35
                                },
                                "ip-address": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Domain controller IP address."
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to be used for communication with the domain controller (default = 445).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "extra-server": {
                                    "description": "extra servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Server ID.",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "ip-address": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Domain controller IP address."
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Port to be used for communication with the domain controller (default = 445).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "domain-name": {
                                    "type": "string",
                                    "description": "Domain DNS name.",
                                    "maxLength": 255
                                },
                                "ldap-server": {
                                    "description": "LDAP server name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "LDAP server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/domain-controller"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Domain controller entry name.",
                                    "maxLength": 35
                                },
                                "ip-address": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Domain controller IP address."
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to be used for communication with the domain controller (default = 445).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "extra-server": {
                                    "description": "extra servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Server ID.",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "ip-address": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Domain controller IP address."
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Port to be used for communication with the domain controller (default = 445).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "domain-name": {
                                    "type": "string",
                                    "description": "Domain DNS name.",
                                    "maxLength": 255
                                },
                                "ldap-server": {
                                    "description": "LDAP server name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "LDAP server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/domain-controller"
                ]
            }
        },
        "\/user\/exchange\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "MS Exchange server entry name.",
                                    "maxLength": 35
                                },
                                "server-name": {
                                    "type": "string",
                                    "description": "MS Exchange server hostname.",
                                    "maxLength": 63
                                },
                                "domain-name": {
                                    "type": "string",
                                    "description": "MS Exchange server fully qualified domain name.",
                                    "maxLength": 79
                                },
                                "username": {
                                    "type": "string",
                                    "description": "User name used to sign in to the server. Must have proper permissions for service.",
                                    "maxLength": 64
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for the specified username."
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Server IPv4 address."
                                },
                                "connect-protocol": {
                                    "type": "string",
                                    "description": "Connection protocol used to connect to MS Exchange service.   \nrpc-over-tcp:Connect using RPC-over-TCP. Use for MS Exchange 2010 and earlier versions. Supported in MS Exchange 2013.   \nrpc-over-http:Connect using RPC-over-HTTP. Use for MS Exchange 2016 and later versions. Supported in MS Exchange 2013.   \nrpc-over-https:Connect using RPC-over-HTTPS. Use for MS Exchange 2016 and later versions. Supported in MS Exchange 2013.",
                                    "enum": [
                                        "rpc-over-tcp",
                                        "rpc-over-http",
                                        "rpc-over-https"
                                    ]
                                },
                                "auth-type": {
                                    "type": "string",
                                    "description": "Authentication security type used for the RPC protocol layer.   \nspnego:Negotiate authentication.   \nntlm:NTLM authentication.   \nkerberos:Kerberos authentication.",
                                    "enum": [
                                        "spnego",
                                        "ntlm",
                                        "kerberos"
                                    ]
                                },
                                "auth-level": {
                                    "type": "string",
                                    "description": "Authentication security level used for the RPC protocol layer.   \nconnect:RPC authentication level 'connect'.   \ncall:RPC authentication level 'call'.   \npacket:RPC authentication level 'packet'.   \nintegrity:RPC authentication level 'integrity'.   \nprivacy:RPC authentication level 'privacy'.",
                                    "enum": [
                                        "connect",
                                        "call",
                                        "packet",
                                        "integrity",
                                        "privacy"
                                    ]
                                },
                                "http-auth-type": {
                                    "type": "string",
                                    "description": "Authentication security type used for the HTTP transport.   \nbasic:Basic HTTP authentication.   \nntlm:NTLM HTTP authentication.",
                                    "enum": [
                                        "basic",
                                        "ntlm"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum SSL\/TLS protocol version for HTTPS transport (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "auto-discover-kdc": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic discovery of KDC IP addresses.   \nenable:Enable automatic discovery of KDC IP addresses.   \ndisable:Disable automatic discovery of KDC IP addresses.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "kdc-ip": {
                                    "description": "KDC IPv4 addresses for Kerberos authentication.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ipv4": {
                                                "type": "string",
                                                "description": "KDC IPv4 addresses for Kerberos authentication.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/exchange"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "MS Exchange server entry name.",
                                    "maxLength": 35
                                },
                                "server-name": {
                                    "type": "string",
                                    "description": "MS Exchange server hostname.",
                                    "maxLength": 63
                                },
                                "domain-name": {
                                    "type": "string",
                                    "description": "MS Exchange server fully qualified domain name.",
                                    "maxLength": 79
                                },
                                "username": {
                                    "type": "string",
                                    "description": "User name used to sign in to the server. Must have proper permissions for service.",
                                    "maxLength": 64
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for the specified username."
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Server IPv4 address."
                                },
                                "connect-protocol": {
                                    "type": "string",
                                    "description": "Connection protocol used to connect to MS Exchange service.   \nrpc-over-tcp:Connect using RPC-over-TCP. Use for MS Exchange 2010 and earlier versions. Supported in MS Exchange 2013.   \nrpc-over-http:Connect using RPC-over-HTTP. Use for MS Exchange 2016 and later versions. Supported in MS Exchange 2013.   \nrpc-over-https:Connect using RPC-over-HTTPS. Use for MS Exchange 2016 and later versions. Supported in MS Exchange 2013.",
                                    "enum": [
                                        "rpc-over-tcp",
                                        "rpc-over-http",
                                        "rpc-over-https"
                                    ]
                                },
                                "auth-type": {
                                    "type": "string",
                                    "description": "Authentication security type used for the RPC protocol layer.   \nspnego:Negotiate authentication.   \nntlm:NTLM authentication.   \nkerberos:Kerberos authentication.",
                                    "enum": [
                                        "spnego",
                                        "ntlm",
                                        "kerberos"
                                    ]
                                },
                                "auth-level": {
                                    "type": "string",
                                    "description": "Authentication security level used for the RPC protocol layer.   \nconnect:RPC authentication level 'connect'.   \ncall:RPC authentication level 'call'.   \npacket:RPC authentication level 'packet'.   \nintegrity:RPC authentication level 'integrity'.   \nprivacy:RPC authentication level 'privacy'.",
                                    "enum": [
                                        "connect",
                                        "call",
                                        "packet",
                                        "integrity",
                                        "privacy"
                                    ]
                                },
                                "http-auth-type": {
                                    "type": "string",
                                    "description": "Authentication security type used for the HTTP transport.   \nbasic:Basic HTTP authentication.   \nntlm:NTLM HTTP authentication.",
                                    "enum": [
                                        "basic",
                                        "ntlm"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum SSL\/TLS protocol version for HTTPS transport (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "auto-discover-kdc": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic discovery of KDC IP addresses.   \nenable:Enable automatic discovery of KDC IP addresses.   \ndisable:Disable automatic discovery of KDC IP addresses.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "kdc-ip": {
                                    "description": "KDC IPv4 addresses for Kerberos authentication.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ipv4": {
                                                "type": "string",
                                                "description": "KDC IPv4 addresses for Kerberos authentication.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/exchange"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/exchange"
                ]
            }
        },
        "\/user\/exchange": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "MS Exchange server entry name.",
                                    "maxLength": 35
                                },
                                "server-name": {
                                    "type": "string",
                                    "description": "MS Exchange server hostname.",
                                    "maxLength": 63
                                },
                                "domain-name": {
                                    "type": "string",
                                    "description": "MS Exchange server fully qualified domain name.",
                                    "maxLength": 79
                                },
                                "username": {
                                    "type": "string",
                                    "description": "User name used to sign in to the server. Must have proper permissions for service.",
                                    "maxLength": 64
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for the specified username."
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Server IPv4 address."
                                },
                                "connect-protocol": {
                                    "type": "string",
                                    "description": "Connection protocol used to connect to MS Exchange service.   \nrpc-over-tcp:Connect using RPC-over-TCP. Use for MS Exchange 2010 and earlier versions. Supported in MS Exchange 2013.   \nrpc-over-http:Connect using RPC-over-HTTP. Use for MS Exchange 2016 and later versions. Supported in MS Exchange 2013.   \nrpc-over-https:Connect using RPC-over-HTTPS. Use for MS Exchange 2016 and later versions. Supported in MS Exchange 2013.",
                                    "enum": [
                                        "rpc-over-tcp",
                                        "rpc-over-http",
                                        "rpc-over-https"
                                    ]
                                },
                                "auth-type": {
                                    "type": "string",
                                    "description": "Authentication security type used for the RPC protocol layer.   \nspnego:Negotiate authentication.   \nntlm:NTLM authentication.   \nkerberos:Kerberos authentication.",
                                    "enum": [
                                        "spnego",
                                        "ntlm",
                                        "kerberos"
                                    ]
                                },
                                "auth-level": {
                                    "type": "string",
                                    "description": "Authentication security level used for the RPC protocol layer.   \nconnect:RPC authentication level 'connect'.   \ncall:RPC authentication level 'call'.   \npacket:RPC authentication level 'packet'.   \nintegrity:RPC authentication level 'integrity'.   \nprivacy:RPC authentication level 'privacy'.",
                                    "enum": [
                                        "connect",
                                        "call",
                                        "packet",
                                        "integrity",
                                        "privacy"
                                    ]
                                },
                                "http-auth-type": {
                                    "type": "string",
                                    "description": "Authentication security type used for the HTTP transport.   \nbasic:Basic HTTP authentication.   \nntlm:NTLM HTTP authentication.",
                                    "enum": [
                                        "basic",
                                        "ntlm"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum SSL\/TLS protocol version for HTTPS transport (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "auto-discover-kdc": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic discovery of KDC IP addresses.   \nenable:Enable automatic discovery of KDC IP addresses.   \ndisable:Disable automatic discovery of KDC IP addresses.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "kdc-ip": {
                                    "description": "KDC IPv4 addresses for Kerberos authentication.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ipv4": {
                                                "type": "string",
                                                "description": "KDC IPv4 addresses for Kerberos authentication.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/exchange"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "MS Exchange server entry name.",
                                    "maxLength": 35
                                },
                                "server-name": {
                                    "type": "string",
                                    "description": "MS Exchange server hostname.",
                                    "maxLength": 63
                                },
                                "domain-name": {
                                    "type": "string",
                                    "description": "MS Exchange server fully qualified domain name.",
                                    "maxLength": 79
                                },
                                "username": {
                                    "type": "string",
                                    "description": "User name used to sign in to the server. Must have proper permissions for service.",
                                    "maxLength": 64
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for the specified username."
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Server IPv4 address."
                                },
                                "connect-protocol": {
                                    "type": "string",
                                    "description": "Connection protocol used to connect to MS Exchange service.   \nrpc-over-tcp:Connect using RPC-over-TCP. Use for MS Exchange 2010 and earlier versions. Supported in MS Exchange 2013.   \nrpc-over-http:Connect using RPC-over-HTTP. Use for MS Exchange 2016 and later versions. Supported in MS Exchange 2013.   \nrpc-over-https:Connect using RPC-over-HTTPS. Use for MS Exchange 2016 and later versions. Supported in MS Exchange 2013.",
                                    "enum": [
                                        "rpc-over-tcp",
                                        "rpc-over-http",
                                        "rpc-over-https"
                                    ]
                                },
                                "auth-type": {
                                    "type": "string",
                                    "description": "Authentication security type used for the RPC protocol layer.   \nspnego:Negotiate authentication.   \nntlm:NTLM authentication.   \nkerberos:Kerberos authentication.",
                                    "enum": [
                                        "spnego",
                                        "ntlm",
                                        "kerberos"
                                    ]
                                },
                                "auth-level": {
                                    "type": "string",
                                    "description": "Authentication security level used for the RPC protocol layer.   \nconnect:RPC authentication level 'connect'.   \ncall:RPC authentication level 'call'.   \npacket:RPC authentication level 'packet'.   \nintegrity:RPC authentication level 'integrity'.   \nprivacy:RPC authentication level 'privacy'.",
                                    "enum": [
                                        "connect",
                                        "call",
                                        "packet",
                                        "integrity",
                                        "privacy"
                                    ]
                                },
                                "http-auth-type": {
                                    "type": "string",
                                    "description": "Authentication security type used for the HTTP transport.   \nbasic:Basic HTTP authentication.   \nntlm:NTLM HTTP authentication.",
                                    "enum": [
                                        "basic",
                                        "ntlm"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum SSL\/TLS protocol version for HTTPS transport (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "auto-discover-kdc": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic discovery of KDC IP addresses.   \nenable:Enable automatic discovery of KDC IP addresses.   \ndisable:Disable automatic discovery of KDC IP addresses.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "kdc-ip": {
                                    "description": "KDC IPv4 addresses for Kerberos authentication.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ipv4": {
                                                "type": "string",
                                                "description": "KDC IPv4 addresses for Kerberos authentication.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/exchange"
                ]
            }
        },
        "\/user\/fortitoken\/{serial-number}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "serial-number": {
                                    "type": "string",
                                    "description": "Serial number.",
                                    "maxLength": 16
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Status   \nactive:Activate FortiToken.   \nlock:Lock FortiToken.",
                                    "enum": [
                                        "active",
                                        "lock"
                                    ]
                                },
                                "seed": {
                                    "type": "string",
                                    "description": "Token seed.",
                                    "maxLength": 200
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "license": {
                                    "type": "string",
                                    "description": "Mobile token license.",
                                    "maxLength": 31
                                },
                                "activation-code": {
                                    "type": "string",
                                    "description": "Mobile token user activation-code.",
                                    "maxLength": 32
                                },
                                "activation-expire": {
                                    "type": "integer",
                                    "description": "Mobile token user activation-code expire time.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "reg-id": {
                                    "type": "string",
                                    "description": "Device Reg ID.",
                                    "maxLength": 256
                                },
                                "os-ver": {
                                    "type": "string",
                                    "description": "Device Mobile Version.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serial-number",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/fortitoken"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "serial-number": {
                                    "type": "string",
                                    "description": "Serial number.",
                                    "maxLength": 16
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Status   \nactive:Activate FortiToken.   \nlock:Lock FortiToken.",
                                    "enum": [
                                        "active",
                                        "lock"
                                    ]
                                },
                                "seed": {
                                    "type": "string",
                                    "description": "Token seed.",
                                    "maxLength": 200
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "license": {
                                    "type": "string",
                                    "description": "Mobile token license.",
                                    "maxLength": 31
                                },
                                "activation-code": {
                                    "type": "string",
                                    "description": "Mobile token user activation-code.",
                                    "maxLength": 32
                                },
                                "activation-expire": {
                                    "type": "integer",
                                    "description": "Mobile token user activation-code expire time.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "reg-id": {
                                    "type": "string",
                                    "description": "Device Reg ID.",
                                    "maxLength": 256
                                },
                                "os-ver": {
                                    "type": "string",
                                    "description": "Device Mobile Version.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "serial-number",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/fortitoken"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "serial-number",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/fortitoken"
                ]
            }
        },
        "\/user\/fortitoken": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "serial-number": {
                                    "type": "string",
                                    "description": "Serial number.",
                                    "maxLength": 16
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Status   \nactive:Activate FortiToken.   \nlock:Lock FortiToken.",
                                    "enum": [
                                        "active",
                                        "lock"
                                    ]
                                },
                                "seed": {
                                    "type": "string",
                                    "description": "Token seed.",
                                    "maxLength": 200
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "license": {
                                    "type": "string",
                                    "description": "Mobile token license.",
                                    "maxLength": 31
                                },
                                "activation-code": {
                                    "type": "string",
                                    "description": "Mobile token user activation-code.",
                                    "maxLength": 32
                                },
                                "activation-expire": {
                                    "type": "integer",
                                    "description": "Mobile token user activation-code expire time.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "reg-id": {
                                    "type": "string",
                                    "description": "Device Reg ID.",
                                    "maxLength": 256
                                },
                                "os-ver": {
                                    "type": "string",
                                    "description": "Device Mobile Version.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/fortitoken"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "serial-number": {
                                    "type": "string",
                                    "description": "Serial number.",
                                    "maxLength": 16
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Status   \nactive:Activate FortiToken.   \nlock:Lock FortiToken.",
                                    "enum": [
                                        "active",
                                        "lock"
                                    ]
                                },
                                "seed": {
                                    "type": "string",
                                    "description": "Token seed.",
                                    "maxLength": 200
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "license": {
                                    "type": "string",
                                    "description": "Mobile token license.",
                                    "maxLength": 31
                                },
                                "activation-code": {
                                    "type": "string",
                                    "description": "Mobile token user activation-code.",
                                    "maxLength": 32
                                },
                                "activation-expire": {
                                    "type": "integer",
                                    "description": "Mobile token user activation-code expire time.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "reg-id": {
                                    "type": "string",
                                    "description": "Device Reg ID.",
                                    "maxLength": 256
                                },
                                "os-ver": {
                                    "type": "string",
                                    "description": "Device Mobile Version.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/fortitoken"
                ]
            }
        },
        "\/user\/fsso\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Server type.   \ndefault:All other unspecified types of servers.   \nfortinac:FortiNAC server.",
                                    "enum": [
                                        "default",
                                        "fortinac"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the first FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port of the first FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the first FSSO collector agent."
                                },
                                "server2": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the second FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port2": {
                                    "type": "integer",
                                    "description": "Port of the second FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password2": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the second FSSO collector agent."
                                },
                                "server3": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the third FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port3": {
                                    "type": "integer",
                                    "description": "Port of the third FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password3": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the third FSSO collector agent."
                                },
                                "server4": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the fourth FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port4": {
                                    "type": "integer",
                                    "description": "Port of the fourth FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password4": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the fourth FSSO collector agent."
                                },
                                "server5": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the fifth FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port5": {
                                    "type": "integer",
                                    "description": "Port of the fifth FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password5": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the fifth FSSO collector agent."
                                },
                                "logon-timeout": {
                                    "type": "integer",
                                    "description": "Interval in minutes to keep logons after FSSO server down.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "LDAP server to get group information.",
                                    "maxLength": 35
                                },
                                "group-poll-interval": {
                                    "type": "integer",
                                    "description": "Interval in minutes within to fetch groups from FSSO server, or unset to disable.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-poll": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic fetching of groups from LDAP server.   \nenable:Enable automatic fetching of groups from LDAP server.   \ndisable:Disable automatic fetching of groups from LDAP server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ldap-poll-interval": {
                                    "type": "integer",
                                    "description": "Interval in minutes within to fetch groups from LDAP server.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-poll-filter": {
                                    "type": "string",
                                    "description": "Filter used to fetch groups.",
                                    "maxLength": 2047
                                },
                                "user-info-server": {
                                    "type": "string",
                                    "description": "LDAP server to get user information.",
                                    "maxLength": 35
                                },
                                "ssl": {
                                    "type": "string",
                                    "description": "Enable\/disable use of SSL.   \nenable:Enable use of SSL.   \ndisable:Disable use of SSL.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ssl-trusted-cert": {
                                    "type": "string",
                                    "description": "Trusted server certificate or CA certificate.",
                                    "maxLength": 79
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP for communications to FSSO agent."
                                },
                                "source-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 source for communications to FSSO agent."
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/fsso"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Server type.   \ndefault:All other unspecified types of servers.   \nfortinac:FortiNAC server.",
                                    "enum": [
                                        "default",
                                        "fortinac"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the first FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port of the first FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the first FSSO collector agent."
                                },
                                "server2": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the second FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port2": {
                                    "type": "integer",
                                    "description": "Port of the second FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password2": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the second FSSO collector agent."
                                },
                                "server3": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the third FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port3": {
                                    "type": "integer",
                                    "description": "Port of the third FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password3": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the third FSSO collector agent."
                                },
                                "server4": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the fourth FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port4": {
                                    "type": "integer",
                                    "description": "Port of the fourth FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password4": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the fourth FSSO collector agent."
                                },
                                "server5": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the fifth FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port5": {
                                    "type": "integer",
                                    "description": "Port of the fifth FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password5": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the fifth FSSO collector agent."
                                },
                                "logon-timeout": {
                                    "type": "integer",
                                    "description": "Interval in minutes to keep logons after FSSO server down.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "LDAP server to get group information.",
                                    "maxLength": 35
                                },
                                "group-poll-interval": {
                                    "type": "integer",
                                    "description": "Interval in minutes within to fetch groups from FSSO server, or unset to disable.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-poll": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic fetching of groups from LDAP server.   \nenable:Enable automatic fetching of groups from LDAP server.   \ndisable:Disable automatic fetching of groups from LDAP server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ldap-poll-interval": {
                                    "type": "integer",
                                    "description": "Interval in minutes within to fetch groups from LDAP server.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-poll-filter": {
                                    "type": "string",
                                    "description": "Filter used to fetch groups.",
                                    "maxLength": 2047
                                },
                                "user-info-server": {
                                    "type": "string",
                                    "description": "LDAP server to get user information.",
                                    "maxLength": 35
                                },
                                "ssl": {
                                    "type": "string",
                                    "description": "Enable\/disable use of SSL.   \nenable:Enable use of SSL.   \ndisable:Disable use of SSL.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ssl-trusted-cert": {
                                    "type": "string",
                                    "description": "Trusted server certificate or CA certificate.",
                                    "maxLength": 79
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP for communications to FSSO agent."
                                },
                                "source-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 source for communications to FSSO agent."
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/fsso"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/fsso"
                ]
            }
        },
        "\/user\/fsso": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Server type.   \ndefault:All other unspecified types of servers.   \nfortinac:FortiNAC server.",
                                    "enum": [
                                        "default",
                                        "fortinac"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the first FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port of the first FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the first FSSO collector agent."
                                },
                                "server2": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the second FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port2": {
                                    "type": "integer",
                                    "description": "Port of the second FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password2": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the second FSSO collector agent."
                                },
                                "server3": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the third FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port3": {
                                    "type": "integer",
                                    "description": "Port of the third FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password3": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the third FSSO collector agent."
                                },
                                "server4": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the fourth FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port4": {
                                    "type": "integer",
                                    "description": "Port of the fourth FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password4": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the fourth FSSO collector agent."
                                },
                                "server5": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the fifth FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port5": {
                                    "type": "integer",
                                    "description": "Port of the fifth FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password5": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the fifth FSSO collector agent."
                                },
                                "logon-timeout": {
                                    "type": "integer",
                                    "description": "Interval in minutes to keep logons after FSSO server down.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "LDAP server to get group information.",
                                    "maxLength": 35
                                },
                                "group-poll-interval": {
                                    "type": "integer",
                                    "description": "Interval in minutes within to fetch groups from FSSO server, or unset to disable.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-poll": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic fetching of groups from LDAP server.   \nenable:Enable automatic fetching of groups from LDAP server.   \ndisable:Disable automatic fetching of groups from LDAP server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ldap-poll-interval": {
                                    "type": "integer",
                                    "description": "Interval in minutes within to fetch groups from LDAP server.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-poll-filter": {
                                    "type": "string",
                                    "description": "Filter used to fetch groups.",
                                    "maxLength": 2047
                                },
                                "user-info-server": {
                                    "type": "string",
                                    "description": "LDAP server to get user information.",
                                    "maxLength": 35
                                },
                                "ssl": {
                                    "type": "string",
                                    "description": "Enable\/disable use of SSL.   \nenable:Enable use of SSL.   \ndisable:Disable use of SSL.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ssl-trusted-cert": {
                                    "type": "string",
                                    "description": "Trusted server certificate or CA certificate.",
                                    "maxLength": 79
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP for communications to FSSO agent."
                                },
                                "source-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 source for communications to FSSO agent."
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/fsso"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Server type.   \ndefault:All other unspecified types of servers.   \nfortinac:FortiNAC server.",
                                    "enum": [
                                        "default",
                                        "fortinac"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the first FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port of the first FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the first FSSO collector agent."
                                },
                                "server2": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the second FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port2": {
                                    "type": "integer",
                                    "description": "Port of the second FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password2": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the second FSSO collector agent."
                                },
                                "server3": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the third FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port3": {
                                    "type": "integer",
                                    "description": "Port of the third FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password3": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the third FSSO collector agent."
                                },
                                "server4": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the fourth FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port4": {
                                    "type": "integer",
                                    "description": "Port of the fourth FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password4": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the fourth FSSO collector agent."
                                },
                                "server5": {
                                    "type": "string",
                                    "description": "Domain name or IP address of the fifth FSSO collector agent.",
                                    "maxLength": 63
                                },
                                "port5": {
                                    "type": "integer",
                                    "description": "Port of the fifth FSSO collector agent.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password5": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password of the fifth FSSO collector agent."
                                },
                                "logon-timeout": {
                                    "type": "integer",
                                    "description": "Interval in minutes to keep logons after FSSO server down.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "LDAP server to get group information.",
                                    "maxLength": 35
                                },
                                "group-poll-interval": {
                                    "type": "integer",
                                    "description": "Interval in minutes within to fetch groups from FSSO server, or unset to disable.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-poll": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic fetching of groups from LDAP server.   \nenable:Enable automatic fetching of groups from LDAP server.   \ndisable:Disable automatic fetching of groups from LDAP server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ldap-poll-interval": {
                                    "type": "integer",
                                    "description": "Interval in minutes within to fetch groups from LDAP server.",
                                    "maximum": 2880,
                                    "minimum": 1
                                },
                                "ldap-poll-filter": {
                                    "type": "string",
                                    "description": "Filter used to fetch groups.",
                                    "maxLength": 2047
                                },
                                "user-info-server": {
                                    "type": "string",
                                    "description": "LDAP server to get user information.",
                                    "maxLength": 35
                                },
                                "ssl": {
                                    "type": "string",
                                    "description": "Enable\/disable use of SSL.   \nenable:Enable use of SSL.   \ndisable:Disable use of SSL.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ssl-trusted-cert": {
                                    "type": "string",
                                    "description": "Trusted server certificate or CA certificate.",
                                    "maxLength": 79
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP for communications to FSSO agent."
                                },
                                "source-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 source for communications to FSSO agent."
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/fsso"
                ]
            }
        },
        "\/user\/fsso-polling\/{id}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Active Directory server ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable polling for the status of this Active Directory server.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Host name or IP address of the Active Directory server.",
                                    "maxLength": 63
                                },
                                "default-domain": {
                                    "type": "string",
                                    "description": "Default domain managed by this Active Directory server.",
                                    "maxLength": 35
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to communicate with this Active Directory server.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "user": {
                                    "type": "string",
                                    "description": "User name required to log into this Active Directory server.",
                                    "maxLength": 35
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password required to log into this Active Directory server"
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "LDAP server name used in LDAP connection strings.",
                                    "maxLength": 35
                                },
                                "logon-history": {
                                    "type": "integer",
                                    "description": "Number of hours of logon history to keep, 0 means keep all history.",
                                    "maximum": 48,
                                    "minimum": 0
                                },
                                "polling-frequency": {
                                    "type": "integer",
                                    "description": "Polling frequency (every 1 to 30 seconds).",
                                    "maximum": 30,
                                    "minimum": 1
                                },
                                "adgrp": {
                                    "description": "LDAP Group Info.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "smbv1": {
                                    "type": "string",
                                    "description": "Enable\/disable support of SMBv1 for Samba.   \nenable:Enable support of SMBv1 for Samba.   \ndisable:Disable support of SMBv1 for Samba.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smb-ntlmv1-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable support of NTLMv1 for Samba authentication.   \nenable:Enable support of NTLMv1 for Samba authentication.   \ndisable:Disable support of NTLMv1 for Samba authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/fsso-polling"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Active Directory server ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable polling for the status of this Active Directory server.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Host name or IP address of the Active Directory server.",
                                    "maxLength": 63
                                },
                                "default-domain": {
                                    "type": "string",
                                    "description": "Default domain managed by this Active Directory server.",
                                    "maxLength": 35
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to communicate with this Active Directory server.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "user": {
                                    "type": "string",
                                    "description": "User name required to log into this Active Directory server.",
                                    "maxLength": 35
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password required to log into this Active Directory server"
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "LDAP server name used in LDAP connection strings.",
                                    "maxLength": 35
                                },
                                "logon-history": {
                                    "type": "integer",
                                    "description": "Number of hours of logon history to keep, 0 means keep all history.",
                                    "maximum": 48,
                                    "minimum": 0
                                },
                                "polling-frequency": {
                                    "type": "integer",
                                    "description": "Polling frequency (every 1 to 30 seconds).",
                                    "maximum": 30,
                                    "minimum": 1
                                },
                                "adgrp": {
                                    "description": "LDAP Group Info.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "smbv1": {
                                    "type": "string",
                                    "description": "Enable\/disable support of SMBv1 for Samba.   \nenable:Enable support of SMBv1 for Samba.   \ndisable:Disable support of SMBv1 for Samba.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smb-ntlmv1-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable support of NTLMv1 for Samba authentication.   \nenable:Enable support of NTLMv1 for Samba authentication.   \ndisable:Disable support of NTLMv1 for Samba authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/fsso-polling"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/fsso-polling"
                ]
            }
        },
        "\/user\/fsso-polling": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Active Directory server ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable polling for the status of this Active Directory server.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Host name or IP address of the Active Directory server.",
                                    "maxLength": 63
                                },
                                "default-domain": {
                                    "type": "string",
                                    "description": "Default domain managed by this Active Directory server.",
                                    "maxLength": 35
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to communicate with this Active Directory server.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "user": {
                                    "type": "string",
                                    "description": "User name required to log into this Active Directory server.",
                                    "maxLength": 35
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password required to log into this Active Directory server"
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "LDAP server name used in LDAP connection strings.",
                                    "maxLength": 35
                                },
                                "logon-history": {
                                    "type": "integer",
                                    "description": "Number of hours of logon history to keep, 0 means keep all history.",
                                    "maximum": 48,
                                    "minimum": 0
                                },
                                "polling-frequency": {
                                    "type": "integer",
                                    "description": "Polling frequency (every 1 to 30 seconds).",
                                    "maximum": 30,
                                    "minimum": 1
                                },
                                "adgrp": {
                                    "description": "LDAP Group Info.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "smbv1": {
                                    "type": "string",
                                    "description": "Enable\/disable support of SMBv1 for Samba.   \nenable:Enable support of SMBv1 for Samba.   \ndisable:Disable support of SMBv1 for Samba.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smb-ntlmv1-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable support of NTLMv1 for Samba authentication.   \nenable:Enable support of NTLMv1 for Samba authentication.   \ndisable:Disable support of NTLMv1 for Samba authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/fsso-polling"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Active Directory server ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable polling for the status of this Active Directory server.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Host name or IP address of the Active Directory server.",
                                    "maxLength": 63
                                },
                                "default-domain": {
                                    "type": "string",
                                    "description": "Default domain managed by this Active Directory server.",
                                    "maxLength": 35
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to communicate with this Active Directory server.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "user": {
                                    "type": "string",
                                    "description": "User name required to log into this Active Directory server.",
                                    "maxLength": 35
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password required to log into this Active Directory server"
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "LDAP server name used in LDAP connection strings.",
                                    "maxLength": 35
                                },
                                "logon-history": {
                                    "type": "integer",
                                    "description": "Number of hours of logon history to keep, 0 means keep all history.",
                                    "maximum": 48,
                                    "minimum": 0
                                },
                                "polling-frequency": {
                                    "type": "integer",
                                    "description": "Polling frequency (every 1 to 30 seconds).",
                                    "maximum": 30,
                                    "minimum": 1
                                },
                                "adgrp": {
                                    "description": "LDAP Group Info.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "smbv1": {
                                    "type": "string",
                                    "description": "Enable\/disable support of SMBv1 for Samba.   \nenable:Enable support of SMBv1 for Samba.   \ndisable:Disable support of SMBv1 for Samba.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smb-ntlmv1-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable support of NTLMv1 for Samba authentication.   \nenable:Enable support of NTLMv1 for Samba authentication.   \ndisable:Disable support of NTLMv1 for Samba authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/fsso-polling"
                ]
            }
        },
        "\/user\/group\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Group name.",
                                    "maxLength": 35
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Group ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "group-type": {
                                    "type": "string",
                                    "description": "Set the group to be for firewall authentication, FSSO, RSSO, or guest users.   \nfirewall:Firewall.   \nfsso-service:Fortinet Single Sign-On Service.   \nrsso:RADIUS based Single Sign-On Service.   \nguest:Guest.",
                                    "enum": [
                                        "firewall",
                                        "fsso-service",
                                        "rsso",
                                        "guest"
                                    ]
                                },
                                "authtimeout": {
                                    "type": "integer",
                                    "description": "Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.",
                                    "maximum": 43200,
                                    "minimum": 0
                                },
                                "auth-concurrent-override": {
                                    "type": "string",
                                    "description": "Enable\/disable overriding the global number of concurrent authentication sessions for this user group.   \nenable:Enable auth-concurrent-override.   \ndisable:Disable auth-concurrent-override.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-concurrent-value": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent authenticated connections per user (0 - 100).",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "http-digest-realm": {
                                    "type": "string",
                                    "description": "Realm attribute for MD5-digest authentication.",
                                    "maxLength": 35
                                },
                                "sso-attribute-value": {
                                    "type": "string",
                                    "description": "Name of the RADIUS user group that this local user group represents.",
                                    "maxLength": 511
                                },
                                "member": {
                                    "description": "Names of users, peers, LDAP severs, or RADIUS servers to add to the user group.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Group member name.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": 3000
                                },
                                "match": {
                                    "description": "Group matches.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "server-name": {
                                                "type": "string",
                                                "description": "Name of remote auth server.",
                                                "maxLength": 35
                                            },
                                            "group-name": {
                                                "type": "string",
                                                "description": "Name of matching user or group on remote authentication server.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "user-id": {
                                    "type": "string",
                                    "description": "Guest user ID type.   \nemail:Email address.   \nauto-generate:Automatically generate.   \nspecify:Specify.",
                                    "enum": [
                                        "email",
                                        "auto-generate",
                                        "specify"
                                    ]
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Guest user password type.   \nauto-generate:Automatically generate.   \nspecify:Specify.   \ndisable:Disable.",
                                    "enum": [
                                        "auto-generate",
                                        "specify",
                                        "disable"
                                    ]
                                },
                                "user-name": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user name entry.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "sponsor": {
                                    "type": "string",
                                    "description": "Set the action for the sponsor guest user field.   \noptional:Optional.   \nmandatory:Mandatory.   \ndisabled:Disabled.",
                                    "enum": [
                                        "optional",
                                        "mandatory",
                                        "disabled"
                                    ]
                                },
                                "company": {
                                    "type": "string",
                                    "description": "Set the action for the company guest user field.   \noptional:Optional.   \nmandatory:Mandatory.   \ndisabled:Disabled.",
                                    "enum": [
                                        "optional",
                                        "mandatory",
                                        "disabled"
                                    ]
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user email address field.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "mobile-phone": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user mobile phone number field.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "sms-server": {
                                    "type": "string",
                                    "description": "Send SMS through FortiGuard or other external server.   \nfortiguard:Send SMS by FortiGuard.   \ncustom:Send SMS by custom server.",
                                    "enum": [
                                        "fortiguard",
                                        "custom"
                                    ]
                                },
                                "sms-custom-server": {
                                    "type": "string",
                                    "description": "SMS server.",
                                    "maxLength": 35
                                },
                                "expire-type": {
                                    "type": "string",
                                    "description": "Determine when the expiration countdown begins.   \nimmediately:Immediately.   \nfirst-successful-login:First successful login.",
                                    "enum": [
                                        "immediately",
                                        "first-successful-login"
                                    ]
                                },
                                "expire": {
                                    "type": "integer",
                                    "description": "Time in seconds before guest user accounts expire. (1 - 31536000 sec)",
                                    "maximum": 31536000,
                                    "minimum": 1
                                },
                                "max-accounts": {
                                    "type": "integer",
                                    "description": "Maximum number of guest accounts that can be created for this group (0 means unlimited).",
                                    "maximum": 500,
                                    "minimum": 0
                                },
                                "multiple-guest-add": {
                                    "type": "string",
                                    "description": "Enable\/disable addition of multiple guests.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "guest": {
                                    "description": "Guest User.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Guest ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "user-id": {
                                                "type": "string",
                                                "description": "Guest ID.",
                                                "maxLength": 64
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Guest name.",
                                                "maxLength": 64
                                            },
                                            "password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Guest password."
                                            },
                                            "mobile-phone": {
                                                "type": "string",
                                                "description": "Mobile phone.",
                                                "maxLength": 35
                                            },
                                            "sponsor": {
                                                "type": "string",
                                                "description": "Set the action for the sponsor guest user field.",
                                                "maxLength": 35
                                            },
                                            "company": {
                                                "type": "string",
                                                "description": "Set the action for the company guest user field.",
                                                "maxLength": 35
                                            },
                                            "email": {
                                                "type": "string",
                                                "description": "Email.",
                                                "maxLength": 64
                                            },
                                            "expiration": {
                                                "type": "string",
                                                "description": "Expire time."
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "Comment.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": 500
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/group"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Group name.",
                                    "maxLength": 35
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Group ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "group-type": {
                                    "type": "string",
                                    "description": "Set the group to be for firewall authentication, FSSO, RSSO, or guest users.   \nfirewall:Firewall.   \nfsso-service:Fortinet Single Sign-On Service.   \nrsso:RADIUS based Single Sign-On Service.   \nguest:Guest.",
                                    "enum": [
                                        "firewall",
                                        "fsso-service",
                                        "rsso",
                                        "guest"
                                    ]
                                },
                                "authtimeout": {
                                    "type": "integer",
                                    "description": "Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.",
                                    "maximum": 43200,
                                    "minimum": 0
                                },
                                "auth-concurrent-override": {
                                    "type": "string",
                                    "description": "Enable\/disable overriding the global number of concurrent authentication sessions for this user group.   \nenable:Enable auth-concurrent-override.   \ndisable:Disable auth-concurrent-override.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-concurrent-value": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent authenticated connections per user (0 - 100).",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "http-digest-realm": {
                                    "type": "string",
                                    "description": "Realm attribute for MD5-digest authentication.",
                                    "maxLength": 35
                                },
                                "sso-attribute-value": {
                                    "type": "string",
                                    "description": "Name of the RADIUS user group that this local user group represents.",
                                    "maxLength": 511
                                },
                                "member": {
                                    "description": "Names of users, peers, LDAP severs, or RADIUS servers to add to the user group.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Group member name.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": 3000
                                },
                                "match": {
                                    "description": "Group matches.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "server-name": {
                                                "type": "string",
                                                "description": "Name of remote auth server.",
                                                "maxLength": 35
                                            },
                                            "group-name": {
                                                "type": "string",
                                                "description": "Name of matching user or group on remote authentication server.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "user-id": {
                                    "type": "string",
                                    "description": "Guest user ID type.   \nemail:Email address.   \nauto-generate:Automatically generate.   \nspecify:Specify.",
                                    "enum": [
                                        "email",
                                        "auto-generate",
                                        "specify"
                                    ]
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Guest user password type.   \nauto-generate:Automatically generate.   \nspecify:Specify.   \ndisable:Disable.",
                                    "enum": [
                                        "auto-generate",
                                        "specify",
                                        "disable"
                                    ]
                                },
                                "user-name": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user name entry.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "sponsor": {
                                    "type": "string",
                                    "description": "Set the action for the sponsor guest user field.   \noptional:Optional.   \nmandatory:Mandatory.   \ndisabled:Disabled.",
                                    "enum": [
                                        "optional",
                                        "mandatory",
                                        "disabled"
                                    ]
                                },
                                "company": {
                                    "type": "string",
                                    "description": "Set the action for the company guest user field.   \noptional:Optional.   \nmandatory:Mandatory.   \ndisabled:Disabled.",
                                    "enum": [
                                        "optional",
                                        "mandatory",
                                        "disabled"
                                    ]
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user email address field.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "mobile-phone": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user mobile phone number field.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "sms-server": {
                                    "type": "string",
                                    "description": "Send SMS through FortiGuard or other external server.   \nfortiguard:Send SMS by FortiGuard.   \ncustom:Send SMS by custom server.",
                                    "enum": [
                                        "fortiguard",
                                        "custom"
                                    ]
                                },
                                "sms-custom-server": {
                                    "type": "string",
                                    "description": "SMS server.",
                                    "maxLength": 35
                                },
                                "expire-type": {
                                    "type": "string",
                                    "description": "Determine when the expiration countdown begins.   \nimmediately:Immediately.   \nfirst-successful-login:First successful login.",
                                    "enum": [
                                        "immediately",
                                        "first-successful-login"
                                    ]
                                },
                                "expire": {
                                    "type": "integer",
                                    "description": "Time in seconds before guest user accounts expire. (1 - 31536000 sec)",
                                    "maximum": 31536000,
                                    "minimum": 1
                                },
                                "max-accounts": {
                                    "type": "integer",
                                    "description": "Maximum number of guest accounts that can be created for this group (0 means unlimited).",
                                    "maximum": 500,
                                    "minimum": 0
                                },
                                "multiple-guest-add": {
                                    "type": "string",
                                    "description": "Enable\/disable addition of multiple guests.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "guest": {
                                    "description": "Guest User.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Guest ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "user-id": {
                                                "type": "string",
                                                "description": "Guest ID.",
                                                "maxLength": 64
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Guest name.",
                                                "maxLength": 64
                                            },
                                            "password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Guest password."
                                            },
                                            "mobile-phone": {
                                                "type": "string",
                                                "description": "Mobile phone.",
                                                "maxLength": 35
                                            },
                                            "sponsor": {
                                                "type": "string",
                                                "description": "Set the action for the sponsor guest user field.",
                                                "maxLength": 35
                                            },
                                            "company": {
                                                "type": "string",
                                                "description": "Set the action for the company guest user field.",
                                                "maxLength": 35
                                            },
                                            "email": {
                                                "type": "string",
                                                "description": "Email.",
                                                "maxLength": 64
                                            },
                                            "expiration": {
                                                "type": "string",
                                                "description": "Expire time."
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "Comment.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": 500
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/group"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/group"
                ]
            }
        },
        "\/user\/group": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Group name.",
                                    "maxLength": 35
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Group ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "group-type": {
                                    "type": "string",
                                    "description": "Set the group to be for firewall authentication, FSSO, RSSO, or guest users.   \nfirewall:Firewall.   \nfsso-service:Fortinet Single Sign-On Service.   \nrsso:RADIUS based Single Sign-On Service.   \nguest:Guest.",
                                    "enum": [
                                        "firewall",
                                        "fsso-service",
                                        "rsso",
                                        "guest"
                                    ]
                                },
                                "authtimeout": {
                                    "type": "integer",
                                    "description": "Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.",
                                    "maximum": 43200,
                                    "minimum": 0
                                },
                                "auth-concurrent-override": {
                                    "type": "string",
                                    "description": "Enable\/disable overriding the global number of concurrent authentication sessions for this user group.   \nenable:Enable auth-concurrent-override.   \ndisable:Disable auth-concurrent-override.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-concurrent-value": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent authenticated connections per user (0 - 100).",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "http-digest-realm": {
                                    "type": "string",
                                    "description": "Realm attribute for MD5-digest authentication.",
                                    "maxLength": 35
                                },
                                "sso-attribute-value": {
                                    "type": "string",
                                    "description": "Name of the RADIUS user group that this local user group represents.",
                                    "maxLength": 511
                                },
                                "member": {
                                    "description": "Names of users, peers, LDAP severs, or RADIUS servers to add to the user group.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Group member name.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": 3000
                                },
                                "match": {
                                    "description": "Group matches.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "server-name": {
                                                "type": "string",
                                                "description": "Name of remote auth server.",
                                                "maxLength": 35
                                            },
                                            "group-name": {
                                                "type": "string",
                                                "description": "Name of matching user or group on remote authentication server.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "user-id": {
                                    "type": "string",
                                    "description": "Guest user ID type.   \nemail:Email address.   \nauto-generate:Automatically generate.   \nspecify:Specify.",
                                    "enum": [
                                        "email",
                                        "auto-generate",
                                        "specify"
                                    ]
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Guest user password type.   \nauto-generate:Automatically generate.   \nspecify:Specify.   \ndisable:Disable.",
                                    "enum": [
                                        "auto-generate",
                                        "specify",
                                        "disable"
                                    ]
                                },
                                "user-name": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user name entry.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "sponsor": {
                                    "type": "string",
                                    "description": "Set the action for the sponsor guest user field.   \noptional:Optional.   \nmandatory:Mandatory.   \ndisabled:Disabled.",
                                    "enum": [
                                        "optional",
                                        "mandatory",
                                        "disabled"
                                    ]
                                },
                                "company": {
                                    "type": "string",
                                    "description": "Set the action for the company guest user field.   \noptional:Optional.   \nmandatory:Mandatory.   \ndisabled:Disabled.",
                                    "enum": [
                                        "optional",
                                        "mandatory",
                                        "disabled"
                                    ]
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user email address field.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "mobile-phone": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user mobile phone number field.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "sms-server": {
                                    "type": "string",
                                    "description": "Send SMS through FortiGuard or other external server.   \nfortiguard:Send SMS by FortiGuard.   \ncustom:Send SMS by custom server.",
                                    "enum": [
                                        "fortiguard",
                                        "custom"
                                    ]
                                },
                                "sms-custom-server": {
                                    "type": "string",
                                    "description": "SMS server.",
                                    "maxLength": 35
                                },
                                "expire-type": {
                                    "type": "string",
                                    "description": "Determine when the expiration countdown begins.   \nimmediately:Immediately.   \nfirst-successful-login:First successful login.",
                                    "enum": [
                                        "immediately",
                                        "first-successful-login"
                                    ]
                                },
                                "expire": {
                                    "type": "integer",
                                    "description": "Time in seconds before guest user accounts expire. (1 - 31536000 sec)",
                                    "maximum": 31536000,
                                    "minimum": 1
                                },
                                "max-accounts": {
                                    "type": "integer",
                                    "description": "Maximum number of guest accounts that can be created for this group (0 means unlimited).",
                                    "maximum": 500,
                                    "minimum": 0
                                },
                                "multiple-guest-add": {
                                    "type": "string",
                                    "description": "Enable\/disable addition of multiple guests.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "guest": {
                                    "description": "Guest User.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Guest ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "user-id": {
                                                "type": "string",
                                                "description": "Guest ID.",
                                                "maxLength": 64
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Guest name.",
                                                "maxLength": 64
                                            },
                                            "password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Guest password."
                                            },
                                            "mobile-phone": {
                                                "type": "string",
                                                "description": "Mobile phone.",
                                                "maxLength": 35
                                            },
                                            "sponsor": {
                                                "type": "string",
                                                "description": "Set the action for the sponsor guest user field.",
                                                "maxLength": 35
                                            },
                                            "company": {
                                                "type": "string",
                                                "description": "Set the action for the company guest user field.",
                                                "maxLength": 35
                                            },
                                            "email": {
                                                "type": "string",
                                                "description": "Email.",
                                                "maxLength": 64
                                            },
                                            "expiration": {
                                                "type": "string",
                                                "description": "Expire time."
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "Comment.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": 500
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/group"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Group name.",
                                    "maxLength": 35
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Group ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "group-type": {
                                    "type": "string",
                                    "description": "Set the group to be for firewall authentication, FSSO, RSSO, or guest users.   \nfirewall:Firewall.   \nfsso-service:Fortinet Single Sign-On Service.   \nrsso:RADIUS based Single Sign-On Service.   \nguest:Guest.",
                                    "enum": [
                                        "firewall",
                                        "fsso-service",
                                        "rsso",
                                        "guest"
                                    ]
                                },
                                "authtimeout": {
                                    "type": "integer",
                                    "description": "Authentication timeout in minutes for this user group. 0 to use the global user setting auth-timeout.",
                                    "maximum": 43200,
                                    "minimum": 0
                                },
                                "auth-concurrent-override": {
                                    "type": "string",
                                    "description": "Enable\/disable overriding the global number of concurrent authentication sessions for this user group.   \nenable:Enable auth-concurrent-override.   \ndisable:Disable auth-concurrent-override.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-concurrent-value": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent authenticated connections per user (0 - 100).",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "http-digest-realm": {
                                    "type": "string",
                                    "description": "Realm attribute for MD5-digest authentication.",
                                    "maxLength": 35
                                },
                                "sso-attribute-value": {
                                    "type": "string",
                                    "description": "Name of the RADIUS user group that this local user group represents.",
                                    "maxLength": 511
                                },
                                "member": {
                                    "description": "Names of users, peers, LDAP severs, or RADIUS servers to add to the user group.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Group member name.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": 3000
                                },
                                "match": {
                                    "description": "Group matches.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "server-name": {
                                                "type": "string",
                                                "description": "Name of remote auth server.",
                                                "maxLength": 35
                                            },
                                            "group-name": {
                                                "type": "string",
                                                "description": "Name of matching user or group on remote authentication server.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "user-id": {
                                    "type": "string",
                                    "description": "Guest user ID type.   \nemail:Email address.   \nauto-generate:Automatically generate.   \nspecify:Specify.",
                                    "enum": [
                                        "email",
                                        "auto-generate",
                                        "specify"
                                    ]
                                },
                                "password": {
                                    "type": "string",
                                    "description": "Guest user password type.   \nauto-generate:Automatically generate.   \nspecify:Specify.   \ndisable:Disable.",
                                    "enum": [
                                        "auto-generate",
                                        "specify",
                                        "disable"
                                    ]
                                },
                                "user-name": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user name entry.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "sponsor": {
                                    "type": "string",
                                    "description": "Set the action for the sponsor guest user field.   \noptional:Optional.   \nmandatory:Mandatory.   \ndisabled:Disabled.",
                                    "enum": [
                                        "optional",
                                        "mandatory",
                                        "disabled"
                                    ]
                                },
                                "company": {
                                    "type": "string",
                                    "description": "Set the action for the company guest user field.   \noptional:Optional.   \nmandatory:Mandatory.   \ndisabled:Disabled.",
                                    "enum": [
                                        "optional",
                                        "mandatory",
                                        "disabled"
                                    ]
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user email address field.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "mobile-phone": {
                                    "type": "string",
                                    "description": "Enable\/disable the guest user mobile phone number field.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "sms-server": {
                                    "type": "string",
                                    "description": "Send SMS through FortiGuard or other external server.   \nfortiguard:Send SMS by FortiGuard.   \ncustom:Send SMS by custom server.",
                                    "enum": [
                                        "fortiguard",
                                        "custom"
                                    ]
                                },
                                "sms-custom-server": {
                                    "type": "string",
                                    "description": "SMS server.",
                                    "maxLength": 35
                                },
                                "expire-type": {
                                    "type": "string",
                                    "description": "Determine when the expiration countdown begins.   \nimmediately:Immediately.   \nfirst-successful-login:First successful login.",
                                    "enum": [
                                        "immediately",
                                        "first-successful-login"
                                    ]
                                },
                                "expire": {
                                    "type": "integer",
                                    "description": "Time in seconds before guest user accounts expire. (1 - 31536000 sec)",
                                    "maximum": 31536000,
                                    "minimum": 1
                                },
                                "max-accounts": {
                                    "type": "integer",
                                    "description": "Maximum number of guest accounts that can be created for this group (0 means unlimited).",
                                    "maximum": 500,
                                    "minimum": 0
                                },
                                "multiple-guest-add": {
                                    "type": "string",
                                    "description": "Enable\/disable addition of multiple guests.   \ndisable:Enable setting.   \nenable:Disable setting.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "guest": {
                                    "description": "Guest User.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Guest ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "user-id": {
                                                "type": "string",
                                                "description": "Guest ID.",
                                                "maxLength": 64
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Guest name.",
                                                "maxLength": 64
                                            },
                                            "password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Guest password."
                                            },
                                            "mobile-phone": {
                                                "type": "string",
                                                "description": "Mobile phone.",
                                                "maxLength": 35
                                            },
                                            "sponsor": {
                                                "type": "string",
                                                "description": "Set the action for the sponsor guest user field.",
                                                "maxLength": 35
                                            },
                                            "company": {
                                                "type": "string",
                                                "description": "Set the action for the company guest user field.",
                                                "maxLength": 35
                                            },
                                            "email": {
                                                "type": "string",
                                                "description": "Email.",
                                                "maxLength": 64
                                            },
                                            "expiration": {
                                                "type": "string",
                                                "description": "Expire time."
                                            },
                                            "comment": {
                                                "type": "string",
                                                "description": "Comment.",
                                                "maxLength": 255
                                            }
                                        }
                                    },
                                    "maxItems": 500
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/group"
                ]
            }
        },
        "\/user\/krb-keytab\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Kerberos keytab entry name.",
                                    "maxLength": 35
                                },
                                "pac-data": {
                                    "type": "string",
                                    "description": "Enable\/disable parsing PAC data in the ticket.   \nenable:Enable parsing PAC data in the ticket.   \ndisable:Disable parsing PAC data in the ticket.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "principal": {
                                    "type": "string",
                                    "description": "Kerberos service principal, e.g. HTTP\/fgt.example.com@EXAMPLE.COM.",
                                    "maxLength": 511
                                },
                                "ldap-server": {
                                    "description": "LDAP server name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "LDAP server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "keytab": {
                                    "type": "string",
                                    "description": "base64 coded keytab file containing a pre-shared key.",
                                    "maxLength": 8191
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/krb-keytab"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Kerberos keytab entry name.",
                                    "maxLength": 35
                                },
                                "pac-data": {
                                    "type": "string",
                                    "description": "Enable\/disable parsing PAC data in the ticket.   \nenable:Enable parsing PAC data in the ticket.   \ndisable:Disable parsing PAC data in the ticket.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "principal": {
                                    "type": "string",
                                    "description": "Kerberos service principal, e.g. HTTP\/fgt.example.com@EXAMPLE.COM.",
                                    "maxLength": 511
                                },
                                "ldap-server": {
                                    "description": "LDAP server name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "LDAP server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "keytab": {
                                    "type": "string",
                                    "description": "base64 coded keytab file containing a pre-shared key.",
                                    "maxLength": 8191
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/krb-keytab"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/krb-keytab"
                ]
            }
        },
        "\/user\/krb-keytab": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Kerberos keytab entry name.",
                                    "maxLength": 35
                                },
                                "pac-data": {
                                    "type": "string",
                                    "description": "Enable\/disable parsing PAC data in the ticket.   \nenable:Enable parsing PAC data in the ticket.   \ndisable:Disable parsing PAC data in the ticket.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "principal": {
                                    "type": "string",
                                    "description": "Kerberos service principal, e.g. HTTP\/fgt.example.com@EXAMPLE.COM.",
                                    "maxLength": 511
                                },
                                "ldap-server": {
                                    "description": "LDAP server name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "LDAP server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "keytab": {
                                    "type": "string",
                                    "description": "base64 coded keytab file containing a pre-shared key.",
                                    "maxLength": 8191
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/krb-keytab"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Kerberos keytab entry name.",
                                    "maxLength": 35
                                },
                                "pac-data": {
                                    "type": "string",
                                    "description": "Enable\/disable parsing PAC data in the ticket.   \nenable:Enable parsing PAC data in the ticket.   \ndisable:Disable parsing PAC data in the ticket.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "principal": {
                                    "type": "string",
                                    "description": "Kerberos service principal, e.g. HTTP\/fgt.example.com@EXAMPLE.COM.",
                                    "maxLength": 511
                                },
                                "ldap-server": {
                                    "description": "LDAP server name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "LDAP server name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "keytab": {
                                    "type": "string",
                                    "description": "base64 coded keytab file containing a pre-shared key.",
                                    "maxLength": 8191
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/krb-keytab"
                ]
            }
        },
        "\/user\/ldap\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "LDAP server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "Secondary LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "Tertiary LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "server-identity-check": {
                                    "type": "string",
                                    "description": "Enable\/disable LDAP server identity check (verify server domain name\/IP address against the server certificate).   \nenable:Enable server identity check.   \ndisable:Disable server identity check.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP for communications to LDAP server."
                                },
                                "cnid": {
                                    "type": "string",
                                    "description": "Common name identifier for the LDAP server. The common name identifier for most LDAP servers is \"cn\".",
                                    "maxLength": 20
                                },
                                "dn": {
                                    "type": "string",
                                    "description": "Distinguished name used to look up entries on the LDAP server.",
                                    "maxLength": 511
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Authentication type for LDAP searches.   \nsimple:Simple password authentication without search.   \nanonymous:Bind using anonymous user search.   \nregular:Bind using username\/password and then search.",
                                    "enum": [
                                        "simple",
                                        "anonymous",
                                        "regular"
                                    ]
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication.   \ndisable:disable two-factor authentication.   \nfortitoken-cloud:FortiToken Cloud Service.",
                                    "enum": [
                                        "disable",
                                        "fortitoken-cloud"
                                    ]
                                },
                                "two-factor-authentication": {
                                    "type": "string",
                                    "description": "Authentication method by FortiToken Cloud.   \nfortitoken:FortiToken authentication.   \nemail:Email one time password.   \nsms:SMS one time password.",
                                    "enum": [
                                        "fortitoken",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-notification": {
                                    "type": "string",
                                    "description": "Notification method for user activation by FortiToken Cloud.   \nemail:Email notification for activation code.   \nsms:SMS notification for activation code.",
                                    "enum": [
                                        "email",
                                        "sms"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "Username (full DN) for initial binding.",
                                    "maxLength": 511
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for initial binding."
                                },
                                "group-member-check": {
                                    "type": "string",
                                    "description": "Group member checking methods.   \nuser-attr:User attribute checking.   \ngroup-object:Group object checking.   \nposix-group-object:POSIX group object checking.",
                                    "enum": [
                                        "user-attr",
                                        "group-object",
                                        "posix-group-object"
                                    ]
                                },
                                "group-search-base": {
                                    "type": "string",
                                    "description": "Search base used for group searching.",
                                    "maxLength": 511
                                },
                                "group-object-filter": {
                                    "type": "string",
                                    "description": "Filter used for group searching.",
                                    "maxLength": 2047
                                },
                                "group-filter": {
                                    "type": "string",
                                    "description": "Filter used for group matching.",
                                    "maxLength": 2047
                                },
                                "secure": {
                                    "type": "string",
                                    "description": "Port to be used for authentication.   \ndisable:No SSL.   \nstarttls:Use StartTLS.   \nldaps:Use LDAPS.",
                                    "enum": [
                                        "disable",
                                        "starttls",
                                        "ldaps"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "ca-cert": {
                                    "type": "string",
                                    "description": "CA certificate name.",
                                    "maxLength": 79
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to be used for communication with the LDAP server (default = 389).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password-expiry-warning": {
                                    "type": "string",
                                    "description": "Enable\/disable password expiry warnings.   \nenable:Enable password expiry warnings.   \ndisable:Disable password expiry warnings.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable online password renewal.   \nenable:Enable online password renewal.   \ndisable:Disable online password renewal.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "member-attr": {
                                    "type": "string",
                                    "description": "Name of attribute from which to get group membership.",
                                    "maxLength": 63
                                },
                                "account-key-processing": {
                                    "type": "string",
                                    "description": "Account key processing operation, either keep or strip domain string of UPN in the token.   \nsame:Same as UPN.   \nstrip:Strip domain string from UPN.",
                                    "enum": [
                                        "same",
                                        "strip"
                                    ]
                                },
                                "account-key-filter": {
                                    "type": "string",
                                    "description": "Account key filter, using the UPN as the search filter.",
                                    "maxLength": 2047
                                },
                                "search-type": {
                                    "type": "string",
                                    "description": "Search type.   \nrecursive:Recursively retrieve the user-group chain information of a user in a particular Microsoft AD domain.",
                                    "enum": [
                                        "recursive"
                                    ]
                                },
                                "obtain-user-info": {
                                    "type": "string",
                                    "description": "Enable\/disable obtaining of user information.   \nenable:Enable obtaining of user information.   \ndisable:Disable obtaining of user information.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-info-exchange-server": {
                                    "type": "string",
                                    "description": "MS Exchange server from which to fetch user information.",
                                    "maxLength": 35
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/ldap"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "LDAP server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "Secondary LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "Tertiary LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "server-identity-check": {
                                    "type": "string",
                                    "description": "Enable\/disable LDAP server identity check (verify server domain name\/IP address against the server certificate).   \nenable:Enable server identity check.   \ndisable:Disable server identity check.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP for communications to LDAP server."
                                },
                                "cnid": {
                                    "type": "string",
                                    "description": "Common name identifier for the LDAP server. The common name identifier for most LDAP servers is \"cn\".",
                                    "maxLength": 20
                                },
                                "dn": {
                                    "type": "string",
                                    "description": "Distinguished name used to look up entries on the LDAP server.",
                                    "maxLength": 511
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Authentication type for LDAP searches.   \nsimple:Simple password authentication without search.   \nanonymous:Bind using anonymous user search.   \nregular:Bind using username\/password and then search.",
                                    "enum": [
                                        "simple",
                                        "anonymous",
                                        "regular"
                                    ]
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication.   \ndisable:disable two-factor authentication.   \nfortitoken-cloud:FortiToken Cloud Service.",
                                    "enum": [
                                        "disable",
                                        "fortitoken-cloud"
                                    ]
                                },
                                "two-factor-authentication": {
                                    "type": "string",
                                    "description": "Authentication method by FortiToken Cloud.   \nfortitoken:FortiToken authentication.   \nemail:Email one time password.   \nsms:SMS one time password.",
                                    "enum": [
                                        "fortitoken",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-notification": {
                                    "type": "string",
                                    "description": "Notification method for user activation by FortiToken Cloud.   \nemail:Email notification for activation code.   \nsms:SMS notification for activation code.",
                                    "enum": [
                                        "email",
                                        "sms"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "Username (full DN) for initial binding.",
                                    "maxLength": 511
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for initial binding."
                                },
                                "group-member-check": {
                                    "type": "string",
                                    "description": "Group member checking methods.   \nuser-attr:User attribute checking.   \ngroup-object:Group object checking.   \nposix-group-object:POSIX group object checking.",
                                    "enum": [
                                        "user-attr",
                                        "group-object",
                                        "posix-group-object"
                                    ]
                                },
                                "group-search-base": {
                                    "type": "string",
                                    "description": "Search base used for group searching.",
                                    "maxLength": 511
                                },
                                "group-object-filter": {
                                    "type": "string",
                                    "description": "Filter used for group searching.",
                                    "maxLength": 2047
                                },
                                "group-filter": {
                                    "type": "string",
                                    "description": "Filter used for group matching.",
                                    "maxLength": 2047
                                },
                                "secure": {
                                    "type": "string",
                                    "description": "Port to be used for authentication.   \ndisable:No SSL.   \nstarttls:Use StartTLS.   \nldaps:Use LDAPS.",
                                    "enum": [
                                        "disable",
                                        "starttls",
                                        "ldaps"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "ca-cert": {
                                    "type": "string",
                                    "description": "CA certificate name.",
                                    "maxLength": 79
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to be used for communication with the LDAP server (default = 389).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password-expiry-warning": {
                                    "type": "string",
                                    "description": "Enable\/disable password expiry warnings.   \nenable:Enable password expiry warnings.   \ndisable:Disable password expiry warnings.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable online password renewal.   \nenable:Enable online password renewal.   \ndisable:Disable online password renewal.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "member-attr": {
                                    "type": "string",
                                    "description": "Name of attribute from which to get group membership.",
                                    "maxLength": 63
                                },
                                "account-key-processing": {
                                    "type": "string",
                                    "description": "Account key processing operation, either keep or strip domain string of UPN in the token.   \nsame:Same as UPN.   \nstrip:Strip domain string from UPN.",
                                    "enum": [
                                        "same",
                                        "strip"
                                    ]
                                },
                                "account-key-filter": {
                                    "type": "string",
                                    "description": "Account key filter, using the UPN as the search filter.",
                                    "maxLength": 2047
                                },
                                "search-type": {
                                    "type": "string",
                                    "description": "Search type.   \nrecursive:Recursively retrieve the user-group chain information of a user in a particular Microsoft AD domain.",
                                    "enum": [
                                        "recursive"
                                    ]
                                },
                                "obtain-user-info": {
                                    "type": "string",
                                    "description": "Enable\/disable obtaining of user information.   \nenable:Enable obtaining of user information.   \ndisable:Disable obtaining of user information.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-info-exchange-server": {
                                    "type": "string",
                                    "description": "MS Exchange server from which to fetch user information.",
                                    "maxLength": 35
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/ldap"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/ldap"
                ]
            }
        },
        "\/user\/ldap": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "LDAP server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "Secondary LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "Tertiary LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "server-identity-check": {
                                    "type": "string",
                                    "description": "Enable\/disable LDAP server identity check (verify server domain name\/IP address against the server certificate).   \nenable:Enable server identity check.   \ndisable:Disable server identity check.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP for communications to LDAP server."
                                },
                                "cnid": {
                                    "type": "string",
                                    "description": "Common name identifier for the LDAP server. The common name identifier for most LDAP servers is \"cn\".",
                                    "maxLength": 20
                                },
                                "dn": {
                                    "type": "string",
                                    "description": "Distinguished name used to look up entries on the LDAP server.",
                                    "maxLength": 511
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Authentication type for LDAP searches.   \nsimple:Simple password authentication without search.   \nanonymous:Bind using anonymous user search.   \nregular:Bind using username\/password and then search.",
                                    "enum": [
                                        "simple",
                                        "anonymous",
                                        "regular"
                                    ]
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication.   \ndisable:disable two-factor authentication.   \nfortitoken-cloud:FortiToken Cloud Service.",
                                    "enum": [
                                        "disable",
                                        "fortitoken-cloud"
                                    ]
                                },
                                "two-factor-authentication": {
                                    "type": "string",
                                    "description": "Authentication method by FortiToken Cloud.   \nfortitoken:FortiToken authentication.   \nemail:Email one time password.   \nsms:SMS one time password.",
                                    "enum": [
                                        "fortitoken",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-notification": {
                                    "type": "string",
                                    "description": "Notification method for user activation by FortiToken Cloud.   \nemail:Email notification for activation code.   \nsms:SMS notification for activation code.",
                                    "enum": [
                                        "email",
                                        "sms"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "Username (full DN) for initial binding.",
                                    "maxLength": 511
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for initial binding."
                                },
                                "group-member-check": {
                                    "type": "string",
                                    "description": "Group member checking methods.   \nuser-attr:User attribute checking.   \ngroup-object:Group object checking.   \nposix-group-object:POSIX group object checking.",
                                    "enum": [
                                        "user-attr",
                                        "group-object",
                                        "posix-group-object"
                                    ]
                                },
                                "group-search-base": {
                                    "type": "string",
                                    "description": "Search base used for group searching.",
                                    "maxLength": 511
                                },
                                "group-object-filter": {
                                    "type": "string",
                                    "description": "Filter used for group searching.",
                                    "maxLength": 2047
                                },
                                "group-filter": {
                                    "type": "string",
                                    "description": "Filter used for group matching.",
                                    "maxLength": 2047
                                },
                                "secure": {
                                    "type": "string",
                                    "description": "Port to be used for authentication.   \ndisable:No SSL.   \nstarttls:Use StartTLS.   \nldaps:Use LDAPS.",
                                    "enum": [
                                        "disable",
                                        "starttls",
                                        "ldaps"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "ca-cert": {
                                    "type": "string",
                                    "description": "CA certificate name.",
                                    "maxLength": 79
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to be used for communication with the LDAP server (default = 389).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password-expiry-warning": {
                                    "type": "string",
                                    "description": "Enable\/disable password expiry warnings.   \nenable:Enable password expiry warnings.   \ndisable:Disable password expiry warnings.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable online password renewal.   \nenable:Enable online password renewal.   \ndisable:Disable online password renewal.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "member-attr": {
                                    "type": "string",
                                    "description": "Name of attribute from which to get group membership.",
                                    "maxLength": 63
                                },
                                "account-key-processing": {
                                    "type": "string",
                                    "description": "Account key processing operation, either keep or strip domain string of UPN in the token.   \nsame:Same as UPN.   \nstrip:Strip domain string from UPN.",
                                    "enum": [
                                        "same",
                                        "strip"
                                    ]
                                },
                                "account-key-filter": {
                                    "type": "string",
                                    "description": "Account key filter, using the UPN as the search filter.",
                                    "maxLength": 2047
                                },
                                "search-type": {
                                    "type": "string",
                                    "description": "Search type.   \nrecursive:Recursively retrieve the user-group chain information of a user in a particular Microsoft AD domain.",
                                    "enum": [
                                        "recursive"
                                    ]
                                },
                                "obtain-user-info": {
                                    "type": "string",
                                    "description": "Enable\/disable obtaining of user information.   \nenable:Enable obtaining of user information.   \ndisable:Disable obtaining of user information.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-info-exchange-server": {
                                    "type": "string",
                                    "description": "MS Exchange server from which to fetch user information.",
                                    "maxLength": 35
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/ldap"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "LDAP server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "Secondary LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "Tertiary LDAP server CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "server-identity-check": {
                                    "type": "string",
                                    "description": "Enable\/disable LDAP server identity check (verify server domain name\/IP address against the server certificate).   \nenable:Enable server identity check.   \ndisable:Disable server identity check.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP for communications to LDAP server."
                                },
                                "cnid": {
                                    "type": "string",
                                    "description": "Common name identifier for the LDAP server. The common name identifier for most LDAP servers is \"cn\".",
                                    "maxLength": 20
                                },
                                "dn": {
                                    "type": "string",
                                    "description": "Distinguished name used to look up entries on the LDAP server.",
                                    "maxLength": 511
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Authentication type for LDAP searches.   \nsimple:Simple password authentication without search.   \nanonymous:Bind using anonymous user search.   \nregular:Bind using username\/password and then search.",
                                    "enum": [
                                        "simple",
                                        "anonymous",
                                        "regular"
                                    ]
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication.   \ndisable:disable two-factor authentication.   \nfortitoken-cloud:FortiToken Cloud Service.",
                                    "enum": [
                                        "disable",
                                        "fortitoken-cloud"
                                    ]
                                },
                                "two-factor-authentication": {
                                    "type": "string",
                                    "description": "Authentication method by FortiToken Cloud.   \nfortitoken:FortiToken authentication.   \nemail:Email one time password.   \nsms:SMS one time password.",
                                    "enum": [
                                        "fortitoken",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-notification": {
                                    "type": "string",
                                    "description": "Notification method for user activation by FortiToken Cloud.   \nemail:Email notification for activation code.   \nsms:SMS notification for activation code.",
                                    "enum": [
                                        "email",
                                        "sms"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "Username (full DN) for initial binding.",
                                    "maxLength": 511
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for initial binding."
                                },
                                "group-member-check": {
                                    "type": "string",
                                    "description": "Group member checking methods.   \nuser-attr:User attribute checking.   \ngroup-object:Group object checking.   \nposix-group-object:POSIX group object checking.",
                                    "enum": [
                                        "user-attr",
                                        "group-object",
                                        "posix-group-object"
                                    ]
                                },
                                "group-search-base": {
                                    "type": "string",
                                    "description": "Search base used for group searching.",
                                    "maxLength": 511
                                },
                                "group-object-filter": {
                                    "type": "string",
                                    "description": "Filter used for group searching.",
                                    "maxLength": 2047
                                },
                                "group-filter": {
                                    "type": "string",
                                    "description": "Filter used for group matching.",
                                    "maxLength": 2047
                                },
                                "secure": {
                                    "type": "string",
                                    "description": "Port to be used for authentication.   \ndisable:No SSL.   \nstarttls:Use StartTLS.   \nldaps:Use LDAPS.",
                                    "enum": [
                                        "disable",
                                        "starttls",
                                        "ldaps"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "ca-cert": {
                                    "type": "string",
                                    "description": "CA certificate name.",
                                    "maxLength": 79
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port to be used for communication with the LDAP server (default = 389).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "password-expiry-warning": {
                                    "type": "string",
                                    "description": "Enable\/disable password expiry warnings.   \nenable:Enable password expiry warnings.   \ndisable:Disable password expiry warnings.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable online password renewal.   \nenable:Enable online password renewal.   \ndisable:Disable online password renewal.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "member-attr": {
                                    "type": "string",
                                    "description": "Name of attribute from which to get group membership.",
                                    "maxLength": 63
                                },
                                "account-key-processing": {
                                    "type": "string",
                                    "description": "Account key processing operation, either keep or strip domain string of UPN in the token.   \nsame:Same as UPN.   \nstrip:Strip domain string from UPN.",
                                    "enum": [
                                        "same",
                                        "strip"
                                    ]
                                },
                                "account-key-filter": {
                                    "type": "string",
                                    "description": "Account key filter, using the UPN as the search filter.",
                                    "maxLength": 2047
                                },
                                "search-type": {
                                    "type": "string",
                                    "description": "Search type.   \nrecursive:Recursively retrieve the user-group chain information of a user in a particular Microsoft AD domain.",
                                    "enum": [
                                        "recursive"
                                    ]
                                },
                                "obtain-user-info": {
                                    "type": "string",
                                    "description": "Enable\/disable obtaining of user information.   \nenable:Enable obtaining of user information.   \ndisable:Disable obtaining of user information.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-info-exchange-server": {
                                    "type": "string",
                                    "description": "MS Exchange server from which to fetch user information.",
                                    "maxLength": 35
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/ldap"
                ]
            }
        },
        "\/user\/local\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User name.",
                                    "maxLength": 64
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "User ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the local user to authenticate with the FortiGate unit.   \nenable:Enable user.   \ndisable:Disable user.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Authentication method.   \npassword:Password authentication.   \nradius:RADIUS server authentication.   \ntacacs+:TACACS+ server authentication.   \nldap:LDAP server authentication.",
                                    "enum": [
                                        "password",
                                        "radius",
                                        "tacacs+",
                                        "ldap"
                                    ]
                                },
                                "passwd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "User's password."
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "Name of LDAP server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "radius-server": {
                                    "type": "string",
                                    "description": "Name of RADIUS server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "tacacs+-server": {
                                    "type": "string",
                                    "description": "Name of TACACS+ server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication.   \ndisable:disable   \nfortitoken:FortiToken   \nfortitoken-cloud:FortiToken Cloud Service.   \nemail:Email authentication code.   \nsms:SMS authentication code.",
                                    "enum": [
                                        "disable",
                                        "fortitoken",
                                        "fortitoken-cloud",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-authentication": {
                                    "type": "string",
                                    "description": "Authentication method by FortiToken Cloud.   \nfortitoken:FortiToken authentication.   \nemail:Email one time password.   \nsms:SMS one time password.",
                                    "enum": [
                                        "fortitoken",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-notification": {
                                    "type": "string",
                                    "description": "Notification method for user activation by FortiToken Cloud.   \nemail:Email notification for activation code.   \nsms:SMS notification for activation code.",
                                    "enum": [
                                        "email",
                                        "sms"
                                    ]
                                },
                                "fortitoken": {
                                    "type": "string",
                                    "description": "Two-factor recipient's FortiToken serial number.",
                                    "maxLength": 16
                                },
                                "email-to": {
                                    "type": "string",
                                    "description": "Two-factor recipient's email address.",
                                    "maxLength": 63
                                },
                                "sms-server": {
                                    "type": "string",
                                    "description": "Send SMS through FortiGuard or other external server.   \nfortiguard:Send SMS by FortiGuard.   \ncustom:Send SMS by custom server.",
                                    "enum": [
                                        "fortiguard",
                                        "custom"
                                    ]
                                },
                                "sms-custom-server": {
                                    "type": "string",
                                    "description": "Two-factor recipient's SMS server.",
                                    "maxLength": 35
                                },
                                "sms-phone": {
                                    "type": "string",
                                    "description": "Two-factor recipient's mobile phone number.",
                                    "maxLength": 15
                                },
                                "passwd-policy": {
                                    "type": "string",
                                    "description": "Password policy to apply to this user, as defined in config user password-policy.",
                                    "maxLength": 35
                                },
                                "passwd-time": {
                                    "type": "string",
                                    "description": "Time of the last password update."
                                },
                                "authtimeout": {
                                    "type": "integer",
                                    "description": "Time in minutes before the authentication timeout for a user is reached.",
                                    "maximum": 1440,
                                    "minimum": 0
                                },
                                "workstation": {
                                    "type": "string",
                                    "description": "Name of the remote user workstation, if you want to limit the user to authenticate only from a particular workstation.",
                                    "maxLength": 35
                                },
                                "auth-concurrent-override": {
                                    "type": "string",
                                    "description": "Enable\/disable overriding the policy-auth-concurrent under config system global.   \nenable:Enable auth-concurrent-override.   \ndisable:Disable auth-concurrent-override.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-concurrent-value": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent logins permitted from the same user.",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "username-sensitivity": {
                                    "type": "string",
                                    "description": "Enable\/disable case and accent sensitivity when performing username matching (accents are stripped and case is ignored when disabled).   \ndisable:Ignore case and accents. Username at prompt not required to match case or accents.   \nenable:Do not ignore case and accents. Username at prompt must be an exact match.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/local"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User name.",
                                    "maxLength": 64
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "User ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the local user to authenticate with the FortiGate unit.   \nenable:Enable user.   \ndisable:Disable user.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Authentication method.   \npassword:Password authentication.   \nradius:RADIUS server authentication.   \ntacacs+:TACACS+ server authentication.   \nldap:LDAP server authentication.",
                                    "enum": [
                                        "password",
                                        "radius",
                                        "tacacs+",
                                        "ldap"
                                    ]
                                },
                                "passwd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "User's password."
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "Name of LDAP server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "radius-server": {
                                    "type": "string",
                                    "description": "Name of RADIUS server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "tacacs+-server": {
                                    "type": "string",
                                    "description": "Name of TACACS+ server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication.   \ndisable:disable   \nfortitoken:FortiToken   \nfortitoken-cloud:FortiToken Cloud Service.   \nemail:Email authentication code.   \nsms:SMS authentication code.",
                                    "enum": [
                                        "disable",
                                        "fortitoken",
                                        "fortitoken-cloud",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-authentication": {
                                    "type": "string",
                                    "description": "Authentication method by FortiToken Cloud.   \nfortitoken:FortiToken authentication.   \nemail:Email one time password.   \nsms:SMS one time password.",
                                    "enum": [
                                        "fortitoken",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-notification": {
                                    "type": "string",
                                    "description": "Notification method for user activation by FortiToken Cloud.   \nemail:Email notification for activation code.   \nsms:SMS notification for activation code.",
                                    "enum": [
                                        "email",
                                        "sms"
                                    ]
                                },
                                "fortitoken": {
                                    "type": "string",
                                    "description": "Two-factor recipient's FortiToken serial number.",
                                    "maxLength": 16
                                },
                                "email-to": {
                                    "type": "string",
                                    "description": "Two-factor recipient's email address.",
                                    "maxLength": 63
                                },
                                "sms-server": {
                                    "type": "string",
                                    "description": "Send SMS through FortiGuard or other external server.   \nfortiguard:Send SMS by FortiGuard.   \ncustom:Send SMS by custom server.",
                                    "enum": [
                                        "fortiguard",
                                        "custom"
                                    ]
                                },
                                "sms-custom-server": {
                                    "type": "string",
                                    "description": "Two-factor recipient's SMS server.",
                                    "maxLength": 35
                                },
                                "sms-phone": {
                                    "type": "string",
                                    "description": "Two-factor recipient's mobile phone number.",
                                    "maxLength": 15
                                },
                                "passwd-policy": {
                                    "type": "string",
                                    "description": "Password policy to apply to this user, as defined in config user password-policy.",
                                    "maxLength": 35
                                },
                                "passwd-time": {
                                    "type": "string",
                                    "description": "Time of the last password update."
                                },
                                "authtimeout": {
                                    "type": "integer",
                                    "description": "Time in minutes before the authentication timeout for a user is reached.",
                                    "maximum": 1440,
                                    "minimum": 0
                                },
                                "workstation": {
                                    "type": "string",
                                    "description": "Name of the remote user workstation, if you want to limit the user to authenticate only from a particular workstation.",
                                    "maxLength": 35
                                },
                                "auth-concurrent-override": {
                                    "type": "string",
                                    "description": "Enable\/disable overriding the policy-auth-concurrent under config system global.   \nenable:Enable auth-concurrent-override.   \ndisable:Disable auth-concurrent-override.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-concurrent-value": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent logins permitted from the same user.",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "username-sensitivity": {
                                    "type": "string",
                                    "description": "Enable\/disable case and accent sensitivity when performing username matching (accents are stripped and case is ignored when disabled).   \ndisable:Ignore case and accents. Username at prompt not required to match case or accents.   \nenable:Do not ignore case and accents. Username at prompt must be an exact match.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/local"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/local"
                ]
            }
        },
        "\/user\/local": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User name.",
                                    "maxLength": 64
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "User ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the local user to authenticate with the FortiGate unit.   \nenable:Enable user.   \ndisable:Disable user.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Authentication method.   \npassword:Password authentication.   \nradius:RADIUS server authentication.   \ntacacs+:TACACS+ server authentication.   \nldap:LDAP server authentication.",
                                    "enum": [
                                        "password",
                                        "radius",
                                        "tacacs+",
                                        "ldap"
                                    ]
                                },
                                "passwd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "User's password."
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "Name of LDAP server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "radius-server": {
                                    "type": "string",
                                    "description": "Name of RADIUS server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "tacacs+-server": {
                                    "type": "string",
                                    "description": "Name of TACACS+ server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication.   \ndisable:disable   \nfortitoken:FortiToken   \nfortitoken-cloud:FortiToken Cloud Service.   \nemail:Email authentication code.   \nsms:SMS authentication code.",
                                    "enum": [
                                        "disable",
                                        "fortitoken",
                                        "fortitoken-cloud",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-authentication": {
                                    "type": "string",
                                    "description": "Authentication method by FortiToken Cloud.   \nfortitoken:FortiToken authentication.   \nemail:Email one time password.   \nsms:SMS one time password.",
                                    "enum": [
                                        "fortitoken",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-notification": {
                                    "type": "string",
                                    "description": "Notification method for user activation by FortiToken Cloud.   \nemail:Email notification for activation code.   \nsms:SMS notification for activation code.",
                                    "enum": [
                                        "email",
                                        "sms"
                                    ]
                                },
                                "fortitoken": {
                                    "type": "string",
                                    "description": "Two-factor recipient's FortiToken serial number.",
                                    "maxLength": 16
                                },
                                "email-to": {
                                    "type": "string",
                                    "description": "Two-factor recipient's email address.",
                                    "maxLength": 63
                                },
                                "sms-server": {
                                    "type": "string",
                                    "description": "Send SMS through FortiGuard or other external server.   \nfortiguard:Send SMS by FortiGuard.   \ncustom:Send SMS by custom server.",
                                    "enum": [
                                        "fortiguard",
                                        "custom"
                                    ]
                                },
                                "sms-custom-server": {
                                    "type": "string",
                                    "description": "Two-factor recipient's SMS server.",
                                    "maxLength": 35
                                },
                                "sms-phone": {
                                    "type": "string",
                                    "description": "Two-factor recipient's mobile phone number.",
                                    "maxLength": 15
                                },
                                "passwd-policy": {
                                    "type": "string",
                                    "description": "Password policy to apply to this user, as defined in config user password-policy.",
                                    "maxLength": 35
                                },
                                "passwd-time": {
                                    "type": "string",
                                    "description": "Time of the last password update."
                                },
                                "authtimeout": {
                                    "type": "integer",
                                    "description": "Time in minutes before the authentication timeout for a user is reached.",
                                    "maximum": 1440,
                                    "minimum": 0
                                },
                                "workstation": {
                                    "type": "string",
                                    "description": "Name of the remote user workstation, if you want to limit the user to authenticate only from a particular workstation.",
                                    "maxLength": 35
                                },
                                "auth-concurrent-override": {
                                    "type": "string",
                                    "description": "Enable\/disable overriding the policy-auth-concurrent under config system global.   \nenable:Enable auth-concurrent-override.   \ndisable:Disable auth-concurrent-override.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-concurrent-value": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent logins permitted from the same user.",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "username-sensitivity": {
                                    "type": "string",
                                    "description": "Enable\/disable case and accent sensitivity when performing username matching (accents are stripped and case is ignored when disabled).   \ndisable:Ignore case and accents. Username at prompt not required to match case or accents.   \nenable:Do not ignore case and accents. Username at prompt must be an exact match.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/local"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User name.",
                                    "maxLength": 64
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "User ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the local user to authenticate with the FortiGate unit.   \nenable:Enable user.   \ndisable:Disable user.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Authentication method.   \npassword:Password authentication.   \nradius:RADIUS server authentication.   \ntacacs+:TACACS+ server authentication.   \nldap:LDAP server authentication.",
                                    "enum": [
                                        "password",
                                        "radius",
                                        "tacacs+",
                                        "ldap"
                                    ]
                                },
                                "passwd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "User's password."
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "Name of LDAP server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "radius-server": {
                                    "type": "string",
                                    "description": "Name of RADIUS server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "tacacs+-server": {
                                    "type": "string",
                                    "description": "Name of TACACS+ server with which the user must authenticate.",
                                    "maxLength": 35
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication.   \ndisable:disable   \nfortitoken:FortiToken   \nfortitoken-cloud:FortiToken Cloud Service.   \nemail:Email authentication code.   \nsms:SMS authentication code.",
                                    "enum": [
                                        "disable",
                                        "fortitoken",
                                        "fortitoken-cloud",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-authentication": {
                                    "type": "string",
                                    "description": "Authentication method by FortiToken Cloud.   \nfortitoken:FortiToken authentication.   \nemail:Email one time password.   \nsms:SMS one time password.",
                                    "enum": [
                                        "fortitoken",
                                        "email",
                                        "sms"
                                    ]
                                },
                                "two-factor-notification": {
                                    "type": "string",
                                    "description": "Notification method for user activation by FortiToken Cloud.   \nemail:Email notification for activation code.   \nsms:SMS notification for activation code.",
                                    "enum": [
                                        "email",
                                        "sms"
                                    ]
                                },
                                "fortitoken": {
                                    "type": "string",
                                    "description": "Two-factor recipient's FortiToken serial number.",
                                    "maxLength": 16
                                },
                                "email-to": {
                                    "type": "string",
                                    "description": "Two-factor recipient's email address.",
                                    "maxLength": 63
                                },
                                "sms-server": {
                                    "type": "string",
                                    "description": "Send SMS through FortiGuard or other external server.   \nfortiguard:Send SMS by FortiGuard.   \ncustom:Send SMS by custom server.",
                                    "enum": [
                                        "fortiguard",
                                        "custom"
                                    ]
                                },
                                "sms-custom-server": {
                                    "type": "string",
                                    "description": "Two-factor recipient's SMS server.",
                                    "maxLength": 35
                                },
                                "sms-phone": {
                                    "type": "string",
                                    "description": "Two-factor recipient's mobile phone number.",
                                    "maxLength": 15
                                },
                                "passwd-policy": {
                                    "type": "string",
                                    "description": "Password policy to apply to this user, as defined in config user password-policy.",
                                    "maxLength": 35
                                },
                                "passwd-time": {
                                    "type": "string",
                                    "description": "Time of the last password update."
                                },
                                "authtimeout": {
                                    "type": "integer",
                                    "description": "Time in minutes before the authentication timeout for a user is reached.",
                                    "maximum": 1440,
                                    "minimum": 0
                                },
                                "workstation": {
                                    "type": "string",
                                    "description": "Name of the remote user workstation, if you want to limit the user to authenticate only from a particular workstation.",
                                    "maxLength": 35
                                },
                                "auth-concurrent-override": {
                                    "type": "string",
                                    "description": "Enable\/disable overriding the policy-auth-concurrent under config system global.   \nenable:Enable auth-concurrent-override.   \ndisable:Disable auth-concurrent-override.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-concurrent-value": {
                                    "type": "integer",
                                    "description": "Maximum number of concurrent logins permitted from the same user.",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "username-sensitivity": {
                                    "type": "string",
                                    "description": "Enable\/disable case and accent sensitivity when performing username matching (accents are stripped and case is ignored when disabled).   \ndisable:Ignore case and accents. Username at prompt not required to match case or accents.   \nenable:Do not ignore case and accents. Username at prompt must be an exact match.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/local"
                ]
            }
        },
        "\/user\/nac-policy\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "NAC policy name.",
                                    "maxLength": 63
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description for the NAC policy matching pattern.",
                                    "maxLength": 63
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category of NAC policy.   \ndevice:Device category.   \nfirewall-user:Firewall user category.   \nems-tag:EMS Tag category.",
                                    "enum": [
                                        "device",
                                        "firewall-user",
                                        "ems-tag"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable NAC policy.   \nenable:Enable NAC policy.   \ndisable:Disable NAC policy.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac": {
                                    "type": "string",
                                    "description": "NAC policy matching MAC address.",
                                    "maxLength": 17
                                },
                                "hw-vendor": {
                                    "type": "string",
                                    "description": "NAC policy matching hardware vendor.",
                                    "maxLength": 15
                                },
                                "type": {
                                    "type": "string",
                                    "description": "NAC policy matching type.",
                                    "maxLength": 15
                                },
                                "family": {
                                    "type": "string",
                                    "description": "NAC policy matching family.",
                                    "maxLength": 31
                                },
                                "os": {
                                    "type": "string",
                                    "description": "NAC policy matching operating system.",
                                    "maxLength": 31
                                },
                                "hw-version": {
                                    "type": "string",
                                    "description": "NAC policy matching hardware version.",
                                    "maxLength": 15
                                },
                                "sw-version": {
                                    "type": "string",
                                    "description": "NAC policy matching software version.",
                                    "maxLength": 15
                                },
                                "host": {
                                    "type": "string",
                                    "description": "NAC policy matching host.",
                                    "maxLength": 64
                                },
                                "user": {
                                    "type": "string",
                                    "description": "NAC policy matching user.",
                                    "maxLength": 64
                                },
                                "src": {
                                    "type": "string",
                                    "description": "NAC policy matching source.",
                                    "maxLength": 15
                                },
                                "user-group": {
                                    "type": "string",
                                    "description": "NAC policy matching user group.",
                                    "maxLength": 35
                                },
                                "ems-tag": {
                                    "type": "string",
                                    "description": "NAC policy matching EMS tag.",
                                    "maxLength": 79
                                },
                                "switch-fortilink": {
                                    "type": "string",
                                    "description": "FortiLink interface for which this NAC policy belongs to.",
                                    "maxLength": 15
                                },
                                "switch-scope": {
                                    "description": "List of managed FortiSwitches on which NAC policy can be applied.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "switch-id": {
                                                "type": "string",
                                                "description": "Managed FortiSwitch name from available options.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "switch-auto-auth": {
                                    "type": "string",
                                    "description": "NAC device auto authorization when discovered and nac-policy matched.   \nglobal:Follows global auto-auth configuration under nac-settings.   \ndisable:Disable NAC device auto authorization.   \nenable:Enable NAC device auto authorization.",
                                    "enum": [
                                        "global",
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "switch-port-policy": {
                                    "type": "string",
                                    "description": "switch-port-policy to be applied on the matched NAC policy.",
                                    "maxLength": 63
                                },
                                "switch-mac-policy": {
                                    "type": "string",
                                    "description": "switch-mac-policy to be applied on the matched NAC policy.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/nac-policy"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "NAC policy name.",
                                    "maxLength": 63
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description for the NAC policy matching pattern.",
                                    "maxLength": 63
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category of NAC policy.   \ndevice:Device category.   \nfirewall-user:Firewall user category.   \nems-tag:EMS Tag category.",
                                    "enum": [
                                        "device",
                                        "firewall-user",
                                        "ems-tag"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable NAC policy.   \nenable:Enable NAC policy.   \ndisable:Disable NAC policy.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac": {
                                    "type": "string",
                                    "description": "NAC policy matching MAC address.",
                                    "maxLength": 17
                                },
                                "hw-vendor": {
                                    "type": "string",
                                    "description": "NAC policy matching hardware vendor.",
                                    "maxLength": 15
                                },
                                "type": {
                                    "type": "string",
                                    "description": "NAC policy matching type.",
                                    "maxLength": 15
                                },
                                "family": {
                                    "type": "string",
                                    "description": "NAC policy matching family.",
                                    "maxLength": 31
                                },
                                "os": {
                                    "type": "string",
                                    "description": "NAC policy matching operating system.",
                                    "maxLength": 31
                                },
                                "hw-version": {
                                    "type": "string",
                                    "description": "NAC policy matching hardware version.",
                                    "maxLength": 15
                                },
                                "sw-version": {
                                    "type": "string",
                                    "description": "NAC policy matching software version.",
                                    "maxLength": 15
                                },
                                "host": {
                                    "type": "string",
                                    "description": "NAC policy matching host.",
                                    "maxLength": 64
                                },
                                "user": {
                                    "type": "string",
                                    "description": "NAC policy matching user.",
                                    "maxLength": 64
                                },
                                "src": {
                                    "type": "string",
                                    "description": "NAC policy matching source.",
                                    "maxLength": 15
                                },
                                "user-group": {
                                    "type": "string",
                                    "description": "NAC policy matching user group.",
                                    "maxLength": 35
                                },
                                "ems-tag": {
                                    "type": "string",
                                    "description": "NAC policy matching EMS tag.",
                                    "maxLength": 79
                                },
                                "switch-fortilink": {
                                    "type": "string",
                                    "description": "FortiLink interface for which this NAC policy belongs to.",
                                    "maxLength": 15
                                },
                                "switch-scope": {
                                    "description": "List of managed FortiSwitches on which NAC policy can be applied.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "switch-id": {
                                                "type": "string",
                                                "description": "Managed FortiSwitch name from available options.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "switch-auto-auth": {
                                    "type": "string",
                                    "description": "NAC device auto authorization when discovered and nac-policy matched.   \nglobal:Follows global auto-auth configuration under nac-settings.   \ndisable:Disable NAC device auto authorization.   \nenable:Enable NAC device auto authorization.",
                                    "enum": [
                                        "global",
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "switch-port-policy": {
                                    "type": "string",
                                    "description": "switch-port-policy to be applied on the matched NAC policy.",
                                    "maxLength": 63
                                },
                                "switch-mac-policy": {
                                    "type": "string",
                                    "description": "switch-mac-policy to be applied on the matched NAC policy.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/nac-policy"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/nac-policy"
                ]
            }
        },
        "\/user\/nac-policy": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "NAC policy name.",
                                    "maxLength": 63
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description for the NAC policy matching pattern.",
                                    "maxLength": 63
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category of NAC policy.   \ndevice:Device category.   \nfirewall-user:Firewall user category.   \nems-tag:EMS Tag category.",
                                    "enum": [
                                        "device",
                                        "firewall-user",
                                        "ems-tag"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable NAC policy.   \nenable:Enable NAC policy.   \ndisable:Disable NAC policy.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac": {
                                    "type": "string",
                                    "description": "NAC policy matching MAC address.",
                                    "maxLength": 17
                                },
                                "hw-vendor": {
                                    "type": "string",
                                    "description": "NAC policy matching hardware vendor.",
                                    "maxLength": 15
                                },
                                "type": {
                                    "type": "string",
                                    "description": "NAC policy matching type.",
                                    "maxLength": 15
                                },
                                "family": {
                                    "type": "string",
                                    "description": "NAC policy matching family.",
                                    "maxLength": 31
                                },
                                "os": {
                                    "type": "string",
                                    "description": "NAC policy matching operating system.",
                                    "maxLength": 31
                                },
                                "hw-version": {
                                    "type": "string",
                                    "description": "NAC policy matching hardware version.",
                                    "maxLength": 15
                                },
                                "sw-version": {
                                    "type": "string",
                                    "description": "NAC policy matching software version.",
                                    "maxLength": 15
                                },
                                "host": {
                                    "type": "string",
                                    "description": "NAC policy matching host.",
                                    "maxLength": 64
                                },
                                "user": {
                                    "type": "string",
                                    "description": "NAC policy matching user.",
                                    "maxLength": 64
                                },
                                "src": {
                                    "type": "string",
                                    "description": "NAC policy matching source.",
                                    "maxLength": 15
                                },
                                "user-group": {
                                    "type": "string",
                                    "description": "NAC policy matching user group.",
                                    "maxLength": 35
                                },
                                "ems-tag": {
                                    "type": "string",
                                    "description": "NAC policy matching EMS tag.",
                                    "maxLength": 79
                                },
                                "switch-fortilink": {
                                    "type": "string",
                                    "description": "FortiLink interface for which this NAC policy belongs to.",
                                    "maxLength": 15
                                },
                                "switch-scope": {
                                    "description": "List of managed FortiSwitches on which NAC policy can be applied.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "switch-id": {
                                                "type": "string",
                                                "description": "Managed FortiSwitch name from available options.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "switch-auto-auth": {
                                    "type": "string",
                                    "description": "NAC device auto authorization when discovered and nac-policy matched.   \nglobal:Follows global auto-auth configuration under nac-settings.   \ndisable:Disable NAC device auto authorization.   \nenable:Enable NAC device auto authorization.",
                                    "enum": [
                                        "global",
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "switch-port-policy": {
                                    "type": "string",
                                    "description": "switch-port-policy to be applied on the matched NAC policy.",
                                    "maxLength": 63
                                },
                                "switch-mac-policy": {
                                    "type": "string",
                                    "description": "switch-mac-policy to be applied on the matched NAC policy.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/nac-policy"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "NAC policy name.",
                                    "maxLength": 63
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description for the NAC policy matching pattern.",
                                    "maxLength": 63
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category of NAC policy.   \ndevice:Device category.   \nfirewall-user:Firewall user category.   \nems-tag:EMS Tag category.",
                                    "enum": [
                                        "device",
                                        "firewall-user",
                                        "ems-tag"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable NAC policy.   \nenable:Enable NAC policy.   \ndisable:Disable NAC policy.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac": {
                                    "type": "string",
                                    "description": "NAC policy matching MAC address.",
                                    "maxLength": 17
                                },
                                "hw-vendor": {
                                    "type": "string",
                                    "description": "NAC policy matching hardware vendor.",
                                    "maxLength": 15
                                },
                                "type": {
                                    "type": "string",
                                    "description": "NAC policy matching type.",
                                    "maxLength": 15
                                },
                                "family": {
                                    "type": "string",
                                    "description": "NAC policy matching family.",
                                    "maxLength": 31
                                },
                                "os": {
                                    "type": "string",
                                    "description": "NAC policy matching operating system.",
                                    "maxLength": 31
                                },
                                "hw-version": {
                                    "type": "string",
                                    "description": "NAC policy matching hardware version.",
                                    "maxLength": 15
                                },
                                "sw-version": {
                                    "type": "string",
                                    "description": "NAC policy matching software version.",
                                    "maxLength": 15
                                },
                                "host": {
                                    "type": "string",
                                    "description": "NAC policy matching host.",
                                    "maxLength": 64
                                },
                                "user": {
                                    "type": "string",
                                    "description": "NAC policy matching user.",
                                    "maxLength": 64
                                },
                                "src": {
                                    "type": "string",
                                    "description": "NAC policy matching source.",
                                    "maxLength": 15
                                },
                                "user-group": {
                                    "type": "string",
                                    "description": "NAC policy matching user group.",
                                    "maxLength": 35
                                },
                                "ems-tag": {
                                    "type": "string",
                                    "description": "NAC policy matching EMS tag.",
                                    "maxLength": 79
                                },
                                "switch-fortilink": {
                                    "type": "string",
                                    "description": "FortiLink interface for which this NAC policy belongs to.",
                                    "maxLength": 15
                                },
                                "switch-scope": {
                                    "description": "List of managed FortiSwitches on which NAC policy can be applied.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "switch-id": {
                                                "type": "string",
                                                "description": "Managed FortiSwitch name from available options.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "switch-auto-auth": {
                                    "type": "string",
                                    "description": "NAC device auto authorization when discovered and nac-policy matched.   \nglobal:Follows global auto-auth configuration under nac-settings.   \ndisable:Disable NAC device auto authorization.   \nenable:Enable NAC device auto authorization.",
                                    "enum": [
                                        "global",
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "switch-port-policy": {
                                    "type": "string",
                                    "description": "switch-port-policy to be applied on the matched NAC policy.",
                                    "maxLength": 63
                                },
                                "switch-mac-policy": {
                                    "type": "string",
                                    "description": "switch-mac-policy to be applied on the matched NAC policy.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/nac-policy"
                ]
            }
        },
        "\/user\/password-policy\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Password policy name.",
                                    "maxLength": 35
                                },
                                "expire-days": {
                                    "type": "integer",
                                    "description": "Time in days before the user's password expires.",
                                    "maximum": 999,
                                    "minimum": 0
                                },
                                "warn-days": {
                                    "type": "integer",
                                    "description": "Time in days before a password expiration warning message is displayed to the user upon login.",
                                    "maximum": 30,
                                    "minimum": 0
                                },
                                "expired-password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable renewal of a password that already is expired.   \nenable:Enable renewal of a password that already is expired.   \ndisable:Disable renewal of a password that already is expired.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/password-policy"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Password policy name.",
                                    "maxLength": 35
                                },
                                "expire-days": {
                                    "type": "integer",
                                    "description": "Time in days before the user's password expires.",
                                    "maximum": 999,
                                    "minimum": 0
                                },
                                "warn-days": {
                                    "type": "integer",
                                    "description": "Time in days before a password expiration warning message is displayed to the user upon login.",
                                    "maximum": 30,
                                    "minimum": 0
                                },
                                "expired-password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable renewal of a password that already is expired.   \nenable:Enable renewal of a password that already is expired.   \ndisable:Disable renewal of a password that already is expired.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/password-policy"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/password-policy"
                ]
            }
        },
        "\/user\/password-policy": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Password policy name.",
                                    "maxLength": 35
                                },
                                "expire-days": {
                                    "type": "integer",
                                    "description": "Time in days before the user's password expires.",
                                    "maximum": 999,
                                    "minimum": 0
                                },
                                "warn-days": {
                                    "type": "integer",
                                    "description": "Time in days before a password expiration warning message is displayed to the user upon login.",
                                    "maximum": 30,
                                    "minimum": 0
                                },
                                "expired-password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable renewal of a password that already is expired.   \nenable:Enable renewal of a password that already is expired.   \ndisable:Disable renewal of a password that already is expired.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/password-policy"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Password policy name.",
                                    "maxLength": 35
                                },
                                "expire-days": {
                                    "type": "integer",
                                    "description": "Time in days before the user's password expires.",
                                    "maximum": 999,
                                    "minimum": 0
                                },
                                "warn-days": {
                                    "type": "integer",
                                    "description": "Time in days before a password expiration warning message is displayed to the user upon login.",
                                    "maximum": 30,
                                    "minimum": 0
                                },
                                "expired-password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable renewal of a password that already is expired.   \nenable:Enable renewal of a password that already is expired.   \ndisable:Disable renewal of a password that already is expired.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/password-policy"
                ]
            }
        },
        "\/user\/peer\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Peer name.",
                                    "maxLength": 35
                                },
                                "mandatory-ca-verify": {
                                    "type": "string",
                                    "description": "Determine what happens to the peer if the CA certificate is not installed. Disable to automatically consider the peer certificate as valid.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ca": {
                                    "type": "string",
                                    "description": "Name of the CA certificate.",
                                    "maxLength": 127
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Peer certificate name constraints.",
                                    "maxLength": 255
                                },
                                "cn": {
                                    "type": "string",
                                    "description": "Peer certificate common name.",
                                    "maxLength": 255
                                },
                                "cn-type": {
                                    "type": "string",
                                    "description": "Peer certificate common name type.   \nstring:Normal string.   \nemail:Email address.   \nFQDN:Fully Qualified Domain Name.   \nipv4:IPv4 address.   \nipv6:IPv6 address.",
                                    "enum": [
                                        "string",
                                        "email",
                                        "FQDN",
                                        "ipv4",
                                        "ipv6"
                                    ]
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "Name of an LDAP server defined under the user ldap command. Performs client access rights check.",
                                    "maxLength": 35
                                },
                                "ldap-username": {
                                    "type": "string",
                                    "description": "Username for LDAP server bind.",
                                    "maxLength": 35
                                },
                                "ldap-password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for LDAP server bind."
                                },
                                "ldap-mode": {
                                    "type": "string",
                                    "description": "Mode for LDAP peer authentication.   \npassword:Username\/password.   \nprincipal-name:Principal name.",
                                    "enum": [
                                        "password",
                                        "principal-name"
                                    ]
                                },
                                "ocsp-override-server": {
                                    "type": "string",
                                    "description": "Online Certificate Status Protocol (OCSP) server for certificate retrieval.",
                                    "maxLength": 35
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication, applying certificate and password-based authentication.   \nenable:Enable 2-factor authentication.   \ndisable:Disable 2-factor authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "passwd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Peer's password used for two-factor authentication."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/peer"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Peer name.",
                                    "maxLength": 35
                                },
                                "mandatory-ca-verify": {
                                    "type": "string",
                                    "description": "Determine what happens to the peer if the CA certificate is not installed. Disable to automatically consider the peer certificate as valid.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ca": {
                                    "type": "string",
                                    "description": "Name of the CA certificate.",
                                    "maxLength": 127
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Peer certificate name constraints.",
                                    "maxLength": 255
                                },
                                "cn": {
                                    "type": "string",
                                    "description": "Peer certificate common name.",
                                    "maxLength": 255
                                },
                                "cn-type": {
                                    "type": "string",
                                    "description": "Peer certificate common name type.   \nstring:Normal string.   \nemail:Email address.   \nFQDN:Fully Qualified Domain Name.   \nipv4:IPv4 address.   \nipv6:IPv6 address.",
                                    "enum": [
                                        "string",
                                        "email",
                                        "FQDN",
                                        "ipv4",
                                        "ipv6"
                                    ]
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "Name of an LDAP server defined under the user ldap command. Performs client access rights check.",
                                    "maxLength": 35
                                },
                                "ldap-username": {
                                    "type": "string",
                                    "description": "Username for LDAP server bind.",
                                    "maxLength": 35
                                },
                                "ldap-password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for LDAP server bind."
                                },
                                "ldap-mode": {
                                    "type": "string",
                                    "description": "Mode for LDAP peer authentication.   \npassword:Username\/password.   \nprincipal-name:Principal name.",
                                    "enum": [
                                        "password",
                                        "principal-name"
                                    ]
                                },
                                "ocsp-override-server": {
                                    "type": "string",
                                    "description": "Online Certificate Status Protocol (OCSP) server for certificate retrieval.",
                                    "maxLength": 35
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication, applying certificate and password-based authentication.   \nenable:Enable 2-factor authentication.   \ndisable:Disable 2-factor authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "passwd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Peer's password used for two-factor authentication."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/peer"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/peer"
                ]
            }
        },
        "\/user\/peer": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Peer name.",
                                    "maxLength": 35
                                },
                                "mandatory-ca-verify": {
                                    "type": "string",
                                    "description": "Determine what happens to the peer if the CA certificate is not installed. Disable to automatically consider the peer certificate as valid.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ca": {
                                    "type": "string",
                                    "description": "Name of the CA certificate.",
                                    "maxLength": 127
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Peer certificate name constraints.",
                                    "maxLength": 255
                                },
                                "cn": {
                                    "type": "string",
                                    "description": "Peer certificate common name.",
                                    "maxLength": 255
                                },
                                "cn-type": {
                                    "type": "string",
                                    "description": "Peer certificate common name type.   \nstring:Normal string.   \nemail:Email address.   \nFQDN:Fully Qualified Domain Name.   \nipv4:IPv4 address.   \nipv6:IPv6 address.",
                                    "enum": [
                                        "string",
                                        "email",
                                        "FQDN",
                                        "ipv4",
                                        "ipv6"
                                    ]
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "Name of an LDAP server defined under the user ldap command. Performs client access rights check.",
                                    "maxLength": 35
                                },
                                "ldap-username": {
                                    "type": "string",
                                    "description": "Username for LDAP server bind.",
                                    "maxLength": 35
                                },
                                "ldap-password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for LDAP server bind."
                                },
                                "ldap-mode": {
                                    "type": "string",
                                    "description": "Mode for LDAP peer authentication.   \npassword:Username\/password.   \nprincipal-name:Principal name.",
                                    "enum": [
                                        "password",
                                        "principal-name"
                                    ]
                                },
                                "ocsp-override-server": {
                                    "type": "string",
                                    "description": "Online Certificate Status Protocol (OCSP) server for certificate retrieval.",
                                    "maxLength": 35
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication, applying certificate and password-based authentication.   \nenable:Enable 2-factor authentication.   \ndisable:Disable 2-factor authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "passwd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Peer's password used for two-factor authentication."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/peer"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Peer name.",
                                    "maxLength": 35
                                },
                                "mandatory-ca-verify": {
                                    "type": "string",
                                    "description": "Determine what happens to the peer if the CA certificate is not installed. Disable to automatically consider the peer certificate as valid.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ca": {
                                    "type": "string",
                                    "description": "Name of the CA certificate.",
                                    "maxLength": 127
                                },
                                "subject": {
                                    "type": "string",
                                    "description": "Peer certificate name constraints.",
                                    "maxLength": 255
                                },
                                "cn": {
                                    "type": "string",
                                    "description": "Peer certificate common name.",
                                    "maxLength": 255
                                },
                                "cn-type": {
                                    "type": "string",
                                    "description": "Peer certificate common name type.   \nstring:Normal string.   \nemail:Email address.   \nFQDN:Fully Qualified Domain Name.   \nipv4:IPv4 address.   \nipv6:IPv6 address.",
                                    "enum": [
                                        "string",
                                        "email",
                                        "FQDN",
                                        "ipv4",
                                        "ipv6"
                                    ]
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "Name of an LDAP server defined under the user ldap command. Performs client access rights check.",
                                    "maxLength": 35
                                },
                                "ldap-username": {
                                    "type": "string",
                                    "description": "Username for LDAP server bind.",
                                    "maxLength": 35
                                },
                                "ldap-password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password for LDAP server bind."
                                },
                                "ldap-mode": {
                                    "type": "string",
                                    "description": "Mode for LDAP peer authentication.   \npassword:Username\/password.   \nprincipal-name:Principal name.",
                                    "enum": [
                                        "password",
                                        "principal-name"
                                    ]
                                },
                                "ocsp-override-server": {
                                    "type": "string",
                                    "description": "Online Certificate Status Protocol (OCSP) server for certificate retrieval.",
                                    "maxLength": 35
                                },
                                "two-factor": {
                                    "type": "string",
                                    "description": "Enable\/disable two-factor authentication, applying certificate and password-based authentication.   \nenable:Enable 2-factor authentication.   \ndisable:Disable 2-factor authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "passwd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Peer's password used for two-factor authentication."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/peer"
                ]
            }
        },
        "\/user\/peergrp\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Peer group name.",
                                    "maxLength": 35
                                },
                                "member": {
                                    "description": "Peer group members.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Peer group member name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": 50000
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/peergrp"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Peer group name.",
                                    "maxLength": 35
                                },
                                "member": {
                                    "description": "Peer group members.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Peer group member name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": 50000
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/peergrp"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/peergrp"
                ]
            }
        },
        "\/user\/peergrp": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Peer group name.",
                                    "maxLength": 35
                                },
                                "member": {
                                    "description": "Peer group members.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Peer group member name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": 50000
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/peergrp"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Peer group name.",
                                    "maxLength": 35
                                },
                                "member": {
                                    "description": "Peer group members.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Peer group member name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": 50000
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/peergrp"
                ]
            }
        },
        "\/user\/pop3\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "POP3 server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} server domain name or IP.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "POP3 service port number.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "secure": {
                                    "type": "string",
                                    "description": "SSL connection.   \nnone:None.   \nstarttls:Use StartTLS.   \npop3s:Use POP3 over SSL.",
                                    "enum": [
                                        "none",
                                        "starttls",
                                        "pop3s"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/pop3"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "POP3 server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} server domain name or IP.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "POP3 service port number.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "secure": {
                                    "type": "string",
                                    "description": "SSL connection.   \nnone:None.   \nstarttls:Use StartTLS.   \npop3s:Use POP3 over SSL.",
                                    "enum": [
                                        "none",
                                        "starttls",
                                        "pop3s"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/pop3"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/pop3"
                ]
            }
        },
        "\/user\/pop3": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "POP3 server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} server domain name or IP.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "POP3 service port number.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "secure": {
                                    "type": "string",
                                    "description": "SSL connection.   \nnone:None.   \nstarttls:Use StartTLS.   \npop3s:Use POP3 over SSL.",
                                    "enum": [
                                        "none",
                                        "starttls",
                                        "pop3s"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/pop3"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "POP3 server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} server domain name or IP.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "POP3 service port number.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "secure": {
                                    "type": "string",
                                    "description": "SSL connection.   \nnone:None.   \nstarttls:Use StartTLS.   \npop3s:Use POP3 over SSL.",
                                    "enum": [
                                        "none",
                                        "starttls",
                                        "pop3s"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/pop3"
                ]
            }
        },
        "\/user\/quarantine": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "quarantine": {
                                    "type": "string",
                                    "description": "Enable\/disable quarantine.   \nenable:Enable quarantine.   \ndisable:Disable quarantine.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "traffic-policy": {
                                    "type": "string",
                                    "description": "Traffic policy for quarantined MACs.",
                                    "maxLength": 63
                                },
                                "firewall-groups": {
                                    "type": "string",
                                    "description": "Firewall address group which includes all quarantine MAC address.",
                                    "maxLength": 79
                                },
                                "targets": {
                                    "description": "Quarantine entry to hold multiple MACs.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "entry": {
                                                "type": "string",
                                                "description": "Quarantine entry name.",
                                                "maxLength": 63
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description for the quarantine entry.",
                                                "maxLength": 63
                                            },
                                            "macs": {
                                                "description": "Quarantine MACs.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "mac": {
                                                            "type": "string",
                                                            "format": "mac-address",
                                                            "description": "Quarantine MAC."
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "description": "Description for the quarantine MAC.",
                                                            "maxLength": 63
                                                        },
                                                        "drop": {
                                                            "type": "string",
                                                            "description": "Enable\/Disable dropping of quarantined device traffic   \ndisable:Sends quarantined device traffic to FortiGate.   \nenable:Blocks quarantined device traffic to FortiGate.",
                                                            "enum": [
                                                                "disable",
                                                                "enable"
                                                            ]
                                                        },
                                                        "parent": {
                                                            "type": "string",
                                                            "description": "Parent entry name.",
                                                            "maxLength": 63
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/quarantine"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: wifi",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "quarantine": {
                                    "type": "string",
                                    "description": "Enable\/disable quarantine.   \nenable:Enable quarantine.   \ndisable:Disable quarantine.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "traffic-policy": {
                                    "type": "string",
                                    "description": "Traffic policy for quarantined MACs.",
                                    "maxLength": 63
                                },
                                "firewall-groups": {
                                    "type": "string",
                                    "description": "Firewall address group which includes all quarantine MAC address.",
                                    "maxLength": 79
                                },
                                "targets": {
                                    "description": "Quarantine entry to hold multiple MACs.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "entry": {
                                                "type": "string",
                                                "description": "Quarantine entry name.",
                                                "maxLength": 63
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description for the quarantine entry.",
                                                "maxLength": 63
                                            },
                                            "macs": {
                                                "description": "Quarantine MACs.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "mac": {
                                                            "type": "string",
                                                            "format": "mac-address",
                                                            "description": "Quarantine MAC."
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "description": "Description for the quarantine MAC.",
                                                            "maxLength": 63
                                                        },
                                                        "drop": {
                                                            "type": "string",
                                                            "description": "Enable\/Disable dropping of quarantined device traffic   \ndisable:Sends quarantined device traffic to FortiGate.   \nenable:Blocks quarantined device traffic to FortiGate.",
                                                            "enum": [
                                                                "disable",
                                                                "enable"
                                                            ]
                                                        },
                                                        "parent": {
                                                            "type": "string",
                                                            "description": "Parent entry name.",
                                                            "maxLength": 63
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/quarantine"
                ]
            }
        },
        "\/user\/radius\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "RADIUS server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Primary RADIUS server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Pre-shared secret key used to access the primary RADIUS server."
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} secondary RADIUS CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "secondary-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Secret key to access the secondary server."
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} tertiary RADIUS CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "tertiary-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Secret key to access the tertiary server."
                                },
                                "timeout": {
                                    "type": "integer",
                                    "description": "Time in seconds between re-sending authentication requests.",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "all-usergroup": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically including this RADIUS server in all user groups.   \ndisable:Do not automatically include this server in a user group.   \nenable:Include this RADIUS server in every user group.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "use-management-vdom": {
                                    "type": "string",
                                    "description": "Enable\/disable using management VDOM to send requests.   \nenable:Send requests using the management VDOM.   \ndisable:Send requests using the current VDOM.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nas-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address used to communicate with the RADIUS server and used as NAS-IP-Address and Called-Station-ID attributes."
                                },
                                "acct-interim-interval": {
                                    "type": "integer",
                                    "description": "Time in seconds between each accounting interim update message.",
                                    "maximum": 86400,
                                    "minimum": 60
                                },
                                "radius-coa": {
                                    "type": "string",
                                    "description": "Enable to allow a mechanism to change the attributes of an authentication, authorization, and accounting session after it is authenticated.   \nenable:Enable RADIUS CoA.   \ndisable:Disable RADIUS CoA.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "radius-port": {
                                    "type": "integer",
                                    "description": "RADIUS service port number.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "h3c-compatibility": {
                                    "type": "string",
                                    "description": "Enable\/disable compatibility with the H3C, a mechanism that performs security checking for authentication.   \nenable:Enable H3C compatibility.   \ndisable:Disable H3C compatibility.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-type": {
                                    "type": "string",
                                    "description": "Authentication methods\/protocols permitted for this RADIUS server.   \nauto:Use PAP, MSCHAP_v2, and CHAP (in that order).   \nms_chap_v2:Microsoft Challenge Handshake Authentication Protocol version 2.   \nms_chap:Microsoft Challenge Handshake Authentication Protocol.   \nchap:Challenge Handshake Authentication Protocol.   \npap:Password Authentication Protocol.",
                                    "enum": [
                                        "auto",
                                        "ms_chap_v2",
                                        "ms_chap",
                                        "chap",
                                        "pap"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address for communications to the RADIUS server.",
                                    "maxLength": 63
                                },
                                "username-case-sensitive": {
                                    "type": "string",
                                    "description": "Enable\/disable case sensitive user names.   \nenable:Enable username case-sensitive.   \ndisable:Disable username case-sensitive.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-override-attr-type": {
                                    "type": "string",
                                    "description": "RADIUS attribute type to override user group information.   \nfilter-Id:Filter-Id   \nclass:Class",
                                    "enum": [
                                        "filter-Id",
                                        "class"
                                    ]
                                },
                                "class": {
                                    "description": "Class attribute name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Class name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable password renewal.   \nenable:Enable password renewal.   \ndisable:Disable password renewal.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "password-encoding": {
                                    "type": "string",
                                    "description": "Password encoding.   \nauto:Use original password encoding.   \nISO-8859-1:Use ISO-8859-1 password encoding.",
                                    "enum": [
                                        "auto",
                                        "ISO-8859-1"
                                    ]
                                },
                                "acct-all-servers": {
                                    "type": "string",
                                    "description": "Enable\/disable sending of accounting messages to all configured servers (default = disable).   \nenable:Send accounting messages to all configured servers.   \ndisable:Send accounting message only to servers that are confirmed to be reachable.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "switch-controller-acct-fast-framedip-detect": {
                                    "type": "integer",
                                    "description": "Switch controller accounting message Framed-IP detection from DHCP snooping (seconds, default=2).",
                                    "maximum": 600,
                                    "minimum": 2
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                },
                                "switch-controller-service-type": {
                                    "type": "string",
                                    "description": "RADIUS service type.   \nlogin:User should be connected to a host.   \nframed:User use Framed Protocol.   \ncallback-login:User disconnected and called back.   \ncallback-framed:User disconnected and called back, then a Framed Protocol.   \noutbound:User granted access to outgoing devices.   \nadministrative:User granted access to the administrative unsigned interface.   \nnas-prompt:User provided a command prompt on the NAS.   \nauthenticate-only:Authentication requested, and no auth info needs to be returned.   \ncallback-nas-prompt:User disconnected and called back, then provided a command prompt.   \ncall-check:Used by the NAS in an Access-Request packet, Access-Accept to answer the call.   \ncallback-administrative:User disconnected and called back, granted access to the admin unsigned interface.",
                                    "enum": [
                                        "login",
                                        "framed",
                                        "callback-login",
                                        "callback-framed",
                                        "outbound",
                                        "administrative",
                                        "nas-prompt",
                                        "authenticate-only",
                                        "callback-nas-prompt",
                                        "call-check",
                                        "callback-administrative"
                                    ]
                                },
                                "rsso": {
                                    "type": "string",
                                    "description": "Enable\/disable RADIUS based single sign on feature.   \nenable:Enable RADIUS based single sign on feature.   \ndisable:Disable RADIUS based single sign on feature.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-radius-server-port": {
                                    "type": "integer",
                                    "description": "UDP port to listen on for RADIUS Start and Stop records.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "rsso-radius-response": {
                                    "type": "string",
                                    "description": "Enable\/disable sending RADIUS response packets after receiving Start and Stop records.   \nenable:Enable sending RADIUS response packets.   \ndisable:Disable sending RADIUS response packets.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-validate-request-secret": {
                                    "type": "string",
                                    "description": "Enable\/disable validating the RADIUS request shared secret in the Start or End record.   \nenable:Enable validating RADIUS request shared secret.   \ndisable:Disable validating RADIUS request shared secret.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "RADIUS secret used by the RADIUS accounting server."
                                },
                                "rsso-endpoint-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attributes used to extract the user end point identifer from the RADIUS Start record.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "rsso-endpoint-block-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attributes used to block a user.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "sso-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attribute that contains the profile group name to be extracted from the RADIUS Start record.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "sso-attribute-key": {
                                    "type": "string",
                                    "description": "Key prefix for SSO group value in the SSO attribute.",
                                    "maxLength": 35
                                },
                                "sso-attribute-value-override": {
                                    "type": "string",
                                    "description": "Enable\/disable override old attribute value with new value for the same endpoint.   \nenable:Enable override old attribute value with new value for the same endpoint.   \ndisable:Disable override old attribute value with new value for the same endpoint.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-context-timeout": {
                                    "type": "integer",
                                    "description": "Time in seconds before the logged out user is removed from the \"user context list\" of logged on users.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rsso-log-period": {
                                    "type": "integer",
                                    "description": "Time interval in seconds that group event log messages will be generated for dynamic profile events.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rsso-log-flags": {
                                    "type": "string",
                                    "description": "Events to log.   \nprotocol-error:Enable this log type.   \nprofile-missing:Enable this log type.   \naccounting-stop-missed:Enable this log type.   \naccounting-event:Enable this log type.   \nendpoint-block:Enable this log type.   \nradiusd-other:Enable this log type.   \nnone:Disable all logging.",
                                    "enum": [
                                        "protocol-error",
                                        "profile-missing",
                                        "accounting-stop-missed",
                                        "accounting-event",
                                        "endpoint-block",
                                        "radiusd-other",
                                        "none"
                                    ]
                                },
                                "rsso-flush-ip-session": {
                                    "type": "string",
                                    "description": "Enable\/disable flushing user IP sessions on RADIUS accounting Stop messages.   \nenable:Enable flush user IP sessions on RADIUS accounting stop.   \ndisable:Disable flush user IP sessions on RADIUS accounting stop.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-ep-one-ip-only": {
                                    "type": "string",
                                    "description": "Enable\/disable the replacement of old IP addresses with new ones for the same endpoint on RADIUS accounting Start messages.   \nenable:Enable replacement of old IP address with new IP address for the same endpoint on RADIUS accounting start.   \ndisable:Disable replacement of old IP address with new IP address for the same endpoint on RADIUS accounting start.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "accounting-server": {
                                    "description": "Additional accounting servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID (0 - 4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "server": {
                                                "type": "string",
                                                "description": "{<name_str|ip_str>} Server CN domain name or IP.",
                                                "maxLength": 63
                                            },
                                            "secret": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Secret key."
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "RADIUS accounting port number.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "source-ip": {
                                                "type": "string",
                                                "description": "Source IP address for communications to the RADIUS server.",
                                                "maxLength": 63
                                            },
                                            "interface-select-method": {
                                                "type": "string",
                                                "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                                "enum": [
                                                    "auto",
                                                    "sdwan",
                                                    "specify"
                                                ]
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Specify outgoing interface to reach server.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": 4
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/radius"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "RADIUS server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Primary RADIUS server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Pre-shared secret key used to access the primary RADIUS server."
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} secondary RADIUS CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "secondary-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Secret key to access the secondary server."
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} tertiary RADIUS CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "tertiary-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Secret key to access the tertiary server."
                                },
                                "timeout": {
                                    "type": "integer",
                                    "description": "Time in seconds between re-sending authentication requests.",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "all-usergroup": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically including this RADIUS server in all user groups.   \ndisable:Do not automatically include this server in a user group.   \nenable:Include this RADIUS server in every user group.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "use-management-vdom": {
                                    "type": "string",
                                    "description": "Enable\/disable using management VDOM to send requests.   \nenable:Send requests using the management VDOM.   \ndisable:Send requests using the current VDOM.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nas-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address used to communicate with the RADIUS server and used as NAS-IP-Address and Called-Station-ID attributes."
                                },
                                "acct-interim-interval": {
                                    "type": "integer",
                                    "description": "Time in seconds between each accounting interim update message.",
                                    "maximum": 86400,
                                    "minimum": 60
                                },
                                "radius-coa": {
                                    "type": "string",
                                    "description": "Enable to allow a mechanism to change the attributes of an authentication, authorization, and accounting session after it is authenticated.   \nenable:Enable RADIUS CoA.   \ndisable:Disable RADIUS CoA.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "radius-port": {
                                    "type": "integer",
                                    "description": "RADIUS service port number.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "h3c-compatibility": {
                                    "type": "string",
                                    "description": "Enable\/disable compatibility with the H3C, a mechanism that performs security checking for authentication.   \nenable:Enable H3C compatibility.   \ndisable:Disable H3C compatibility.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-type": {
                                    "type": "string",
                                    "description": "Authentication methods\/protocols permitted for this RADIUS server.   \nauto:Use PAP, MSCHAP_v2, and CHAP (in that order).   \nms_chap_v2:Microsoft Challenge Handshake Authentication Protocol version 2.   \nms_chap:Microsoft Challenge Handshake Authentication Protocol.   \nchap:Challenge Handshake Authentication Protocol.   \npap:Password Authentication Protocol.",
                                    "enum": [
                                        "auto",
                                        "ms_chap_v2",
                                        "ms_chap",
                                        "chap",
                                        "pap"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address for communications to the RADIUS server.",
                                    "maxLength": 63
                                },
                                "username-case-sensitive": {
                                    "type": "string",
                                    "description": "Enable\/disable case sensitive user names.   \nenable:Enable username case-sensitive.   \ndisable:Disable username case-sensitive.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-override-attr-type": {
                                    "type": "string",
                                    "description": "RADIUS attribute type to override user group information.   \nfilter-Id:Filter-Id   \nclass:Class",
                                    "enum": [
                                        "filter-Id",
                                        "class"
                                    ]
                                },
                                "class": {
                                    "description": "Class attribute name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Class name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable password renewal.   \nenable:Enable password renewal.   \ndisable:Disable password renewal.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "password-encoding": {
                                    "type": "string",
                                    "description": "Password encoding.   \nauto:Use original password encoding.   \nISO-8859-1:Use ISO-8859-1 password encoding.",
                                    "enum": [
                                        "auto",
                                        "ISO-8859-1"
                                    ]
                                },
                                "acct-all-servers": {
                                    "type": "string",
                                    "description": "Enable\/disable sending of accounting messages to all configured servers (default = disable).   \nenable:Send accounting messages to all configured servers.   \ndisable:Send accounting message only to servers that are confirmed to be reachable.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "switch-controller-acct-fast-framedip-detect": {
                                    "type": "integer",
                                    "description": "Switch controller accounting message Framed-IP detection from DHCP snooping (seconds, default=2).",
                                    "maximum": 600,
                                    "minimum": 2
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                },
                                "switch-controller-service-type": {
                                    "type": "string",
                                    "description": "RADIUS service type.   \nlogin:User should be connected to a host.   \nframed:User use Framed Protocol.   \ncallback-login:User disconnected and called back.   \ncallback-framed:User disconnected and called back, then a Framed Protocol.   \noutbound:User granted access to outgoing devices.   \nadministrative:User granted access to the administrative unsigned interface.   \nnas-prompt:User provided a command prompt on the NAS.   \nauthenticate-only:Authentication requested, and no auth info needs to be returned.   \ncallback-nas-prompt:User disconnected and called back, then provided a command prompt.   \ncall-check:Used by the NAS in an Access-Request packet, Access-Accept to answer the call.   \ncallback-administrative:User disconnected and called back, granted access to the admin unsigned interface.",
                                    "enum": [
                                        "login",
                                        "framed",
                                        "callback-login",
                                        "callback-framed",
                                        "outbound",
                                        "administrative",
                                        "nas-prompt",
                                        "authenticate-only",
                                        "callback-nas-prompt",
                                        "call-check",
                                        "callback-administrative"
                                    ]
                                },
                                "rsso": {
                                    "type": "string",
                                    "description": "Enable\/disable RADIUS based single sign on feature.   \nenable:Enable RADIUS based single sign on feature.   \ndisable:Disable RADIUS based single sign on feature.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-radius-server-port": {
                                    "type": "integer",
                                    "description": "UDP port to listen on for RADIUS Start and Stop records.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "rsso-radius-response": {
                                    "type": "string",
                                    "description": "Enable\/disable sending RADIUS response packets after receiving Start and Stop records.   \nenable:Enable sending RADIUS response packets.   \ndisable:Disable sending RADIUS response packets.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-validate-request-secret": {
                                    "type": "string",
                                    "description": "Enable\/disable validating the RADIUS request shared secret in the Start or End record.   \nenable:Enable validating RADIUS request shared secret.   \ndisable:Disable validating RADIUS request shared secret.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "RADIUS secret used by the RADIUS accounting server."
                                },
                                "rsso-endpoint-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attributes used to extract the user end point identifer from the RADIUS Start record.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "rsso-endpoint-block-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attributes used to block a user.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "sso-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attribute that contains the profile group name to be extracted from the RADIUS Start record.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "sso-attribute-key": {
                                    "type": "string",
                                    "description": "Key prefix for SSO group value in the SSO attribute.",
                                    "maxLength": 35
                                },
                                "sso-attribute-value-override": {
                                    "type": "string",
                                    "description": "Enable\/disable override old attribute value with new value for the same endpoint.   \nenable:Enable override old attribute value with new value for the same endpoint.   \ndisable:Disable override old attribute value with new value for the same endpoint.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-context-timeout": {
                                    "type": "integer",
                                    "description": "Time in seconds before the logged out user is removed from the \"user context list\" of logged on users.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rsso-log-period": {
                                    "type": "integer",
                                    "description": "Time interval in seconds that group event log messages will be generated for dynamic profile events.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rsso-log-flags": {
                                    "type": "string",
                                    "description": "Events to log.   \nprotocol-error:Enable this log type.   \nprofile-missing:Enable this log type.   \naccounting-stop-missed:Enable this log type.   \naccounting-event:Enable this log type.   \nendpoint-block:Enable this log type.   \nradiusd-other:Enable this log type.   \nnone:Disable all logging.",
                                    "enum": [
                                        "protocol-error",
                                        "profile-missing",
                                        "accounting-stop-missed",
                                        "accounting-event",
                                        "endpoint-block",
                                        "radiusd-other",
                                        "none"
                                    ]
                                },
                                "rsso-flush-ip-session": {
                                    "type": "string",
                                    "description": "Enable\/disable flushing user IP sessions on RADIUS accounting Stop messages.   \nenable:Enable flush user IP sessions on RADIUS accounting stop.   \ndisable:Disable flush user IP sessions on RADIUS accounting stop.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-ep-one-ip-only": {
                                    "type": "string",
                                    "description": "Enable\/disable the replacement of old IP addresses with new ones for the same endpoint on RADIUS accounting Start messages.   \nenable:Enable replacement of old IP address with new IP address for the same endpoint on RADIUS accounting start.   \ndisable:Disable replacement of old IP address with new IP address for the same endpoint on RADIUS accounting start.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "accounting-server": {
                                    "description": "Additional accounting servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID (0 - 4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "server": {
                                                "type": "string",
                                                "description": "{<name_str|ip_str>} Server CN domain name or IP.",
                                                "maxLength": 63
                                            },
                                            "secret": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Secret key."
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "RADIUS accounting port number.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "source-ip": {
                                                "type": "string",
                                                "description": "Source IP address for communications to the RADIUS server.",
                                                "maxLength": 63
                                            },
                                            "interface-select-method": {
                                                "type": "string",
                                                "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                                "enum": [
                                                    "auto",
                                                    "sdwan",
                                                    "specify"
                                                ]
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Specify outgoing interface to reach server.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": 4
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/radius"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/radius"
                ]
            }
        },
        "\/user\/radius": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "RADIUS server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Primary RADIUS server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Pre-shared secret key used to access the primary RADIUS server."
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} secondary RADIUS CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "secondary-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Secret key to access the secondary server."
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} tertiary RADIUS CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "tertiary-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Secret key to access the tertiary server."
                                },
                                "timeout": {
                                    "type": "integer",
                                    "description": "Time in seconds between re-sending authentication requests.",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "all-usergroup": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically including this RADIUS server in all user groups.   \ndisable:Do not automatically include this server in a user group.   \nenable:Include this RADIUS server in every user group.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "use-management-vdom": {
                                    "type": "string",
                                    "description": "Enable\/disable using management VDOM to send requests.   \nenable:Send requests using the management VDOM.   \ndisable:Send requests using the current VDOM.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nas-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address used to communicate with the RADIUS server and used as NAS-IP-Address and Called-Station-ID attributes."
                                },
                                "acct-interim-interval": {
                                    "type": "integer",
                                    "description": "Time in seconds between each accounting interim update message.",
                                    "maximum": 86400,
                                    "minimum": 60
                                },
                                "radius-coa": {
                                    "type": "string",
                                    "description": "Enable to allow a mechanism to change the attributes of an authentication, authorization, and accounting session after it is authenticated.   \nenable:Enable RADIUS CoA.   \ndisable:Disable RADIUS CoA.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "radius-port": {
                                    "type": "integer",
                                    "description": "RADIUS service port number.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "h3c-compatibility": {
                                    "type": "string",
                                    "description": "Enable\/disable compatibility with the H3C, a mechanism that performs security checking for authentication.   \nenable:Enable H3C compatibility.   \ndisable:Disable H3C compatibility.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-type": {
                                    "type": "string",
                                    "description": "Authentication methods\/protocols permitted for this RADIUS server.   \nauto:Use PAP, MSCHAP_v2, and CHAP (in that order).   \nms_chap_v2:Microsoft Challenge Handshake Authentication Protocol version 2.   \nms_chap:Microsoft Challenge Handshake Authentication Protocol.   \nchap:Challenge Handshake Authentication Protocol.   \npap:Password Authentication Protocol.",
                                    "enum": [
                                        "auto",
                                        "ms_chap_v2",
                                        "ms_chap",
                                        "chap",
                                        "pap"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address for communications to the RADIUS server.",
                                    "maxLength": 63
                                },
                                "username-case-sensitive": {
                                    "type": "string",
                                    "description": "Enable\/disable case sensitive user names.   \nenable:Enable username case-sensitive.   \ndisable:Disable username case-sensitive.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-override-attr-type": {
                                    "type": "string",
                                    "description": "RADIUS attribute type to override user group information.   \nfilter-Id:Filter-Id   \nclass:Class",
                                    "enum": [
                                        "filter-Id",
                                        "class"
                                    ]
                                },
                                "class": {
                                    "description": "Class attribute name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Class name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable password renewal.   \nenable:Enable password renewal.   \ndisable:Disable password renewal.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "password-encoding": {
                                    "type": "string",
                                    "description": "Password encoding.   \nauto:Use original password encoding.   \nISO-8859-1:Use ISO-8859-1 password encoding.",
                                    "enum": [
                                        "auto",
                                        "ISO-8859-1"
                                    ]
                                },
                                "acct-all-servers": {
                                    "type": "string",
                                    "description": "Enable\/disable sending of accounting messages to all configured servers (default = disable).   \nenable:Send accounting messages to all configured servers.   \ndisable:Send accounting message only to servers that are confirmed to be reachable.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "switch-controller-acct-fast-framedip-detect": {
                                    "type": "integer",
                                    "description": "Switch controller accounting message Framed-IP detection from DHCP snooping (seconds, default=2).",
                                    "maximum": 600,
                                    "minimum": 2
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                },
                                "switch-controller-service-type": {
                                    "type": "string",
                                    "description": "RADIUS service type.   \nlogin:User should be connected to a host.   \nframed:User use Framed Protocol.   \ncallback-login:User disconnected and called back.   \ncallback-framed:User disconnected and called back, then a Framed Protocol.   \noutbound:User granted access to outgoing devices.   \nadministrative:User granted access to the administrative unsigned interface.   \nnas-prompt:User provided a command prompt on the NAS.   \nauthenticate-only:Authentication requested, and no auth info needs to be returned.   \ncallback-nas-prompt:User disconnected and called back, then provided a command prompt.   \ncall-check:Used by the NAS in an Access-Request packet, Access-Accept to answer the call.   \ncallback-administrative:User disconnected and called back, granted access to the admin unsigned interface.",
                                    "enum": [
                                        "login",
                                        "framed",
                                        "callback-login",
                                        "callback-framed",
                                        "outbound",
                                        "administrative",
                                        "nas-prompt",
                                        "authenticate-only",
                                        "callback-nas-prompt",
                                        "call-check",
                                        "callback-administrative"
                                    ]
                                },
                                "rsso": {
                                    "type": "string",
                                    "description": "Enable\/disable RADIUS based single sign on feature.   \nenable:Enable RADIUS based single sign on feature.   \ndisable:Disable RADIUS based single sign on feature.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-radius-server-port": {
                                    "type": "integer",
                                    "description": "UDP port to listen on for RADIUS Start and Stop records.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "rsso-radius-response": {
                                    "type": "string",
                                    "description": "Enable\/disable sending RADIUS response packets after receiving Start and Stop records.   \nenable:Enable sending RADIUS response packets.   \ndisable:Disable sending RADIUS response packets.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-validate-request-secret": {
                                    "type": "string",
                                    "description": "Enable\/disable validating the RADIUS request shared secret in the Start or End record.   \nenable:Enable validating RADIUS request shared secret.   \ndisable:Disable validating RADIUS request shared secret.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "RADIUS secret used by the RADIUS accounting server."
                                },
                                "rsso-endpoint-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attributes used to extract the user end point identifer from the RADIUS Start record.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "rsso-endpoint-block-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attributes used to block a user.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "sso-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attribute that contains the profile group name to be extracted from the RADIUS Start record.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "sso-attribute-key": {
                                    "type": "string",
                                    "description": "Key prefix for SSO group value in the SSO attribute.",
                                    "maxLength": 35
                                },
                                "sso-attribute-value-override": {
                                    "type": "string",
                                    "description": "Enable\/disable override old attribute value with new value for the same endpoint.   \nenable:Enable override old attribute value with new value for the same endpoint.   \ndisable:Disable override old attribute value with new value for the same endpoint.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-context-timeout": {
                                    "type": "integer",
                                    "description": "Time in seconds before the logged out user is removed from the \"user context list\" of logged on users.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rsso-log-period": {
                                    "type": "integer",
                                    "description": "Time interval in seconds that group event log messages will be generated for dynamic profile events.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rsso-log-flags": {
                                    "type": "string",
                                    "description": "Events to log.   \nprotocol-error:Enable this log type.   \nprofile-missing:Enable this log type.   \naccounting-stop-missed:Enable this log type.   \naccounting-event:Enable this log type.   \nendpoint-block:Enable this log type.   \nradiusd-other:Enable this log type.   \nnone:Disable all logging.",
                                    "enum": [
                                        "protocol-error",
                                        "profile-missing",
                                        "accounting-stop-missed",
                                        "accounting-event",
                                        "endpoint-block",
                                        "radiusd-other",
                                        "none"
                                    ]
                                },
                                "rsso-flush-ip-session": {
                                    "type": "string",
                                    "description": "Enable\/disable flushing user IP sessions on RADIUS accounting Stop messages.   \nenable:Enable flush user IP sessions on RADIUS accounting stop.   \ndisable:Disable flush user IP sessions on RADIUS accounting stop.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-ep-one-ip-only": {
                                    "type": "string",
                                    "description": "Enable\/disable the replacement of old IP addresses with new ones for the same endpoint on RADIUS accounting Start messages.   \nenable:Enable replacement of old IP address with new IP address for the same endpoint on RADIUS accounting start.   \ndisable:Disable replacement of old IP address with new IP address for the same endpoint on RADIUS accounting start.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "accounting-server": {
                                    "description": "Additional accounting servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID (0 - 4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "server": {
                                                "type": "string",
                                                "description": "{<name_str|ip_str>} Server CN domain name or IP.",
                                                "maxLength": 63
                                            },
                                            "secret": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Secret key."
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "RADIUS accounting port number.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "source-ip": {
                                                "type": "string",
                                                "description": "Source IP address for communications to the RADIUS server.",
                                                "maxLength": 63
                                            },
                                            "interface-select-method": {
                                                "type": "string",
                                                "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                                "enum": [
                                                    "auto",
                                                    "sdwan",
                                                    "specify"
                                                ]
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Specify outgoing interface to reach server.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": 4
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/radius"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "RADIUS server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Primary RADIUS server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Pre-shared secret key used to access the primary RADIUS server."
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} secondary RADIUS CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "secondary-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Secret key to access the secondary server."
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "{<name_str|ip_str>} tertiary RADIUS CN domain name or IP.",
                                    "maxLength": 63
                                },
                                "tertiary-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Secret key to access the tertiary server."
                                },
                                "timeout": {
                                    "type": "integer",
                                    "description": "Time in seconds between re-sending authentication requests.",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "all-usergroup": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically including this RADIUS server in all user groups.   \ndisable:Do not automatically include this server in a user group.   \nenable:Include this RADIUS server in every user group.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "use-management-vdom": {
                                    "type": "string",
                                    "description": "Enable\/disable using management VDOM to send requests.   \nenable:Send requests using the management VDOM.   \ndisable:Send requests using the current VDOM.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nas-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address used to communicate with the RADIUS server and used as NAS-IP-Address and Called-Station-ID attributes."
                                },
                                "acct-interim-interval": {
                                    "type": "integer",
                                    "description": "Time in seconds between each accounting interim update message.",
                                    "maximum": 86400,
                                    "minimum": 60
                                },
                                "radius-coa": {
                                    "type": "string",
                                    "description": "Enable to allow a mechanism to change the attributes of an authentication, authorization, and accounting session after it is authenticated.   \nenable:Enable RADIUS CoA.   \ndisable:Disable RADIUS CoA.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "radius-port": {
                                    "type": "integer",
                                    "description": "RADIUS service port number.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "h3c-compatibility": {
                                    "type": "string",
                                    "description": "Enable\/disable compatibility with the H3C, a mechanism that performs security checking for authentication.   \nenable:Enable H3C compatibility.   \ndisable:Disable H3C compatibility.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-type": {
                                    "type": "string",
                                    "description": "Authentication methods\/protocols permitted for this RADIUS server.   \nauto:Use PAP, MSCHAP_v2, and CHAP (in that order).   \nms_chap_v2:Microsoft Challenge Handshake Authentication Protocol version 2.   \nms_chap:Microsoft Challenge Handshake Authentication Protocol.   \nchap:Challenge Handshake Authentication Protocol.   \npap:Password Authentication Protocol.",
                                    "enum": [
                                        "auto",
                                        "ms_chap_v2",
                                        "ms_chap",
                                        "chap",
                                        "pap"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address for communications to the RADIUS server.",
                                    "maxLength": 63
                                },
                                "username-case-sensitive": {
                                    "type": "string",
                                    "description": "Enable\/disable case sensitive user names.   \nenable:Enable username case-sensitive.   \ndisable:Disable username case-sensitive.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-override-attr-type": {
                                    "type": "string",
                                    "description": "RADIUS attribute type to override user group information.   \nfilter-Id:Filter-Id   \nclass:Class",
                                    "enum": [
                                        "filter-Id",
                                        "class"
                                    ]
                                },
                                "class": {
                                    "description": "Class attribute name(s).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Class name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "password-renewal": {
                                    "type": "string",
                                    "description": "Enable\/disable password renewal.   \nenable:Enable password renewal.   \ndisable:Disable password renewal.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "password-encoding": {
                                    "type": "string",
                                    "description": "Password encoding.   \nauto:Use original password encoding.   \nISO-8859-1:Use ISO-8859-1 password encoding.",
                                    "enum": [
                                        "auto",
                                        "ISO-8859-1"
                                    ]
                                },
                                "acct-all-servers": {
                                    "type": "string",
                                    "description": "Enable\/disable sending of accounting messages to all configured servers (default = disable).   \nenable:Send accounting messages to all configured servers.   \ndisable:Send accounting message only to servers that are confirmed to be reachable.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "switch-controller-acct-fast-framedip-detect": {
                                    "type": "integer",
                                    "description": "Switch controller accounting message Framed-IP detection from DHCP snooping (seconds, default=2).",
                                    "maximum": 600,
                                    "minimum": 2
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                },
                                "switch-controller-service-type": {
                                    "type": "string",
                                    "description": "RADIUS service type.   \nlogin:User should be connected to a host.   \nframed:User use Framed Protocol.   \ncallback-login:User disconnected and called back.   \ncallback-framed:User disconnected and called back, then a Framed Protocol.   \noutbound:User granted access to outgoing devices.   \nadministrative:User granted access to the administrative unsigned interface.   \nnas-prompt:User provided a command prompt on the NAS.   \nauthenticate-only:Authentication requested, and no auth info needs to be returned.   \ncallback-nas-prompt:User disconnected and called back, then provided a command prompt.   \ncall-check:Used by the NAS in an Access-Request packet, Access-Accept to answer the call.   \ncallback-administrative:User disconnected and called back, granted access to the admin unsigned interface.",
                                    "enum": [
                                        "login",
                                        "framed",
                                        "callback-login",
                                        "callback-framed",
                                        "outbound",
                                        "administrative",
                                        "nas-prompt",
                                        "authenticate-only",
                                        "callback-nas-prompt",
                                        "call-check",
                                        "callback-administrative"
                                    ]
                                },
                                "rsso": {
                                    "type": "string",
                                    "description": "Enable\/disable RADIUS based single sign on feature.   \nenable:Enable RADIUS based single sign on feature.   \ndisable:Disable RADIUS based single sign on feature.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-radius-server-port": {
                                    "type": "integer",
                                    "description": "UDP port to listen on for RADIUS Start and Stop records.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "rsso-radius-response": {
                                    "type": "string",
                                    "description": "Enable\/disable sending RADIUS response packets after receiving Start and Stop records.   \nenable:Enable sending RADIUS response packets.   \ndisable:Disable sending RADIUS response packets.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-validate-request-secret": {
                                    "type": "string",
                                    "description": "Enable\/disable validating the RADIUS request shared secret in the Start or End record.   \nenable:Enable validating RADIUS request shared secret.   \ndisable:Disable validating RADIUS request shared secret.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-secret": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "RADIUS secret used by the RADIUS accounting server."
                                },
                                "rsso-endpoint-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attributes used to extract the user end point identifer from the RADIUS Start record.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "rsso-endpoint-block-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attributes used to block a user.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "sso-attribute": {
                                    "type": "string",
                                    "description": "RADIUS attribute that contains the profile group name to be extracted from the RADIUS Start record.   \nUser-Name:Use this attribute.   \nNAS-IP-Address:Use this attribute.   \nFramed-IP-Address:Use this attribute.   \nFramed-IP-Netmask:Use this attribute.   \nFilter-Id:Use this attribute.   \nLogin-IP-Host:Use this attribute.   \nReply-Message:Use this attribute.   \nCallback-Number:Use this attribute.   \nCallback-Id:Use this attribute.   \nFramed-Route:Use this attribute.   \nFramed-IPX-Network:Use this attribute.   \nClass:Use this attribute.   \nCalled-Station-Id:Use this attribute.   \nCalling-Station-Id:Use this attribute.   \nNAS-Identifier:Use this attribute.   \nProxy-State:Use this attribute.   \nLogin-LAT-Service:Use this attribute.   \nLogin-LAT-Node:Use this attribute.   \nLogin-LAT-Group:Use this attribute.   \nFramed-AppleTalk-Zone:Use this attribute.   \nAcct-Session-Id:Use this attribute.   \nAcct-Multi-Session-Id:Use this attribute.",
                                    "enum": [
                                        "User-Name",
                                        "NAS-IP-Address",
                                        "Framed-IP-Address",
                                        "Framed-IP-Netmask",
                                        "Filter-Id",
                                        "Login-IP-Host",
                                        "Reply-Message",
                                        "Callback-Number",
                                        "Callback-Id",
                                        "Framed-Route",
                                        "Framed-IPX-Network",
                                        "Class",
                                        "Called-Station-Id",
                                        "Calling-Station-Id",
                                        "NAS-Identifier",
                                        "Proxy-State",
                                        "Login-LAT-Service",
                                        "Login-LAT-Node",
                                        "Login-LAT-Group",
                                        "Framed-AppleTalk-Zone",
                                        "Acct-Session-Id",
                                        "Acct-Multi-Session-Id"
                                    ]
                                },
                                "sso-attribute-key": {
                                    "type": "string",
                                    "description": "Key prefix for SSO group value in the SSO attribute.",
                                    "maxLength": 35
                                },
                                "sso-attribute-value-override": {
                                    "type": "string",
                                    "description": "Enable\/disable override old attribute value with new value for the same endpoint.   \nenable:Enable override old attribute value with new value for the same endpoint.   \ndisable:Disable override old attribute value with new value for the same endpoint.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-context-timeout": {
                                    "type": "integer",
                                    "description": "Time in seconds before the logged out user is removed from the \"user context list\" of logged on users.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rsso-log-period": {
                                    "type": "integer",
                                    "description": "Time interval in seconds that group event log messages will be generated for dynamic profile events.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rsso-log-flags": {
                                    "type": "string",
                                    "description": "Events to log.   \nprotocol-error:Enable this log type.   \nprofile-missing:Enable this log type.   \naccounting-stop-missed:Enable this log type.   \naccounting-event:Enable this log type.   \nendpoint-block:Enable this log type.   \nradiusd-other:Enable this log type.   \nnone:Disable all logging.",
                                    "enum": [
                                        "protocol-error",
                                        "profile-missing",
                                        "accounting-stop-missed",
                                        "accounting-event",
                                        "endpoint-block",
                                        "radiusd-other",
                                        "none"
                                    ]
                                },
                                "rsso-flush-ip-session": {
                                    "type": "string",
                                    "description": "Enable\/disable flushing user IP sessions on RADIUS accounting Stop messages.   \nenable:Enable flush user IP sessions on RADIUS accounting stop.   \ndisable:Disable flush user IP sessions on RADIUS accounting stop.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rsso-ep-one-ip-only": {
                                    "type": "string",
                                    "description": "Enable\/disable the replacement of old IP addresses with new ones for the same endpoint on RADIUS accounting Start messages.   \nenable:Enable replacement of old IP address with new IP address for the same endpoint on RADIUS accounting start.   \ndisable:Disable replacement of old IP address with new IP address for the same endpoint on RADIUS accounting start.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "accounting-server": {
                                    "description": "Additional accounting servers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID (0 - 4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "server": {
                                                "type": "string",
                                                "description": "{<name_str|ip_str>} Server CN domain name or IP.",
                                                "maxLength": 63
                                            },
                                            "secret": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Secret key."
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "RADIUS accounting port number.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "source-ip": {
                                                "type": "string",
                                                "description": "Source IP address for communications to the RADIUS server.",
                                                "maxLength": 63
                                            },
                                            "interface-select-method": {
                                                "type": "string",
                                                "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                                "enum": [
                                                    "auto",
                                                    "sdwan",
                                                    "specify"
                                                ]
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Specify outgoing interface to reach server.",
                                                "maxLength": 15
                                            }
                                        }
                                    },
                                    "maxItems": 4
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/radius"
                ]
            }
        },
        "\/user\/saml\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "SAML server entry name.",
                                    "maxLength": 35
                                },
                                "cert": {
                                    "type": "string",
                                    "description": "Certificate to sign SAML messages.",
                                    "maxLength": 35
                                },
                                "entity-id": {
                                    "type": "string",
                                    "description": "SP entity ID.",
                                    "maxLength": 255
                                },
                                "single-sign-on-url": {
                                    "type": "string",
                                    "description": "SP single sign-on URL.",
                                    "maxLength": 255
                                },
                                "single-logout-url": {
                                    "type": "string",
                                    "description": "SP single logout URL.",
                                    "maxLength": 255
                                },
                                "idp-entity-id": {
                                    "type": "string",
                                    "description": "IDP entity ID.",
                                    "maxLength": 255
                                },
                                "idp-single-sign-on-url": {
                                    "type": "string",
                                    "description": "IDP single sign-on URL.",
                                    "maxLength": 255
                                },
                                "idp-single-logout-url": {
                                    "type": "string",
                                    "description": "IDP single logout url.",
                                    "maxLength": 255
                                },
                                "idp-cert": {
                                    "type": "string",
                                    "description": "IDP Certificate name.",
                                    "maxLength": 35
                                },
                                "user-name": {
                                    "type": "string",
                                    "description": "User name in assertion statement.",
                                    "maxLength": 255
                                },
                                "group-name": {
                                    "type": "string",
                                    "description": "Group name in assertion statement.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/saml"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "SAML server entry name.",
                                    "maxLength": 35
                                },
                                "cert": {
                                    "type": "string",
                                    "description": "Certificate to sign SAML messages.",
                                    "maxLength": 35
                                },
                                "entity-id": {
                                    "type": "string",
                                    "description": "SP entity ID.",
                                    "maxLength": 255
                                },
                                "single-sign-on-url": {
                                    "type": "string",
                                    "description": "SP single sign-on URL.",
                                    "maxLength": 255
                                },
                                "single-logout-url": {
                                    "type": "string",
                                    "description": "SP single logout URL.",
                                    "maxLength": 255
                                },
                                "idp-entity-id": {
                                    "type": "string",
                                    "description": "IDP entity ID.",
                                    "maxLength": 255
                                },
                                "idp-single-sign-on-url": {
                                    "type": "string",
                                    "description": "IDP single sign-on URL.",
                                    "maxLength": 255
                                },
                                "idp-single-logout-url": {
                                    "type": "string",
                                    "description": "IDP single logout url.",
                                    "maxLength": 255
                                },
                                "idp-cert": {
                                    "type": "string",
                                    "description": "IDP Certificate name.",
                                    "maxLength": 35
                                },
                                "user-name": {
                                    "type": "string",
                                    "description": "User name in assertion statement.",
                                    "maxLength": 255
                                },
                                "group-name": {
                                    "type": "string",
                                    "description": "Group name in assertion statement.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/saml"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/saml"
                ]
            }
        },
        "\/user\/saml": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "SAML server entry name.",
                                    "maxLength": 35
                                },
                                "cert": {
                                    "type": "string",
                                    "description": "Certificate to sign SAML messages.",
                                    "maxLength": 35
                                },
                                "entity-id": {
                                    "type": "string",
                                    "description": "SP entity ID.",
                                    "maxLength": 255
                                },
                                "single-sign-on-url": {
                                    "type": "string",
                                    "description": "SP single sign-on URL.",
                                    "maxLength": 255
                                },
                                "single-logout-url": {
                                    "type": "string",
                                    "description": "SP single logout URL.",
                                    "maxLength": 255
                                },
                                "idp-entity-id": {
                                    "type": "string",
                                    "description": "IDP entity ID.",
                                    "maxLength": 255
                                },
                                "idp-single-sign-on-url": {
                                    "type": "string",
                                    "description": "IDP single sign-on URL.",
                                    "maxLength": 255
                                },
                                "idp-single-logout-url": {
                                    "type": "string",
                                    "description": "IDP single logout url.",
                                    "maxLength": 255
                                },
                                "idp-cert": {
                                    "type": "string",
                                    "description": "IDP Certificate name.",
                                    "maxLength": 35
                                },
                                "user-name": {
                                    "type": "string",
                                    "description": "User name in assertion statement.",
                                    "maxLength": 255
                                },
                                "group-name": {
                                    "type": "string",
                                    "description": "Group name in assertion statement.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/saml"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "SAML server entry name.",
                                    "maxLength": 35
                                },
                                "cert": {
                                    "type": "string",
                                    "description": "Certificate to sign SAML messages.",
                                    "maxLength": 35
                                },
                                "entity-id": {
                                    "type": "string",
                                    "description": "SP entity ID.",
                                    "maxLength": 255
                                },
                                "single-sign-on-url": {
                                    "type": "string",
                                    "description": "SP single sign-on URL.",
                                    "maxLength": 255
                                },
                                "single-logout-url": {
                                    "type": "string",
                                    "description": "SP single logout URL.",
                                    "maxLength": 255
                                },
                                "idp-entity-id": {
                                    "type": "string",
                                    "description": "IDP entity ID.",
                                    "maxLength": 255
                                },
                                "idp-single-sign-on-url": {
                                    "type": "string",
                                    "description": "IDP single sign-on URL.",
                                    "maxLength": 255
                                },
                                "idp-single-logout-url": {
                                    "type": "string",
                                    "description": "IDP single logout url.",
                                    "maxLength": 255
                                },
                                "idp-cert": {
                                    "type": "string",
                                    "description": "IDP Certificate name.",
                                    "maxLength": 35
                                },
                                "user-name": {
                                    "type": "string",
                                    "description": "User name in assertion statement.",
                                    "maxLength": 255
                                },
                                "group-name": {
                                    "type": "string",
                                    "description": "Group name in assertion statement.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/saml"
                ]
            }
        },
        "\/user\/security-exempt-list\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the exempt list.",
                                    "maxLength": 35
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Configure rules for exempting users from captive portal authentication.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "srcaddr": {
                                                "description": "Source addresses or address groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address or group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "dstaddr": {
                                                "description": "Destination addresses or address groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address or group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "service": {
                                                "description": "Destination services.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Service name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/security-exempt-list"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the exempt list.",
                                    "maxLength": 35
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Configure rules for exempting users from captive portal authentication.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "srcaddr": {
                                                "description": "Source addresses or address groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address or group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "dstaddr": {
                                                "description": "Destination addresses or address groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address or group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "service": {
                                                "description": "Destination services.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Service name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/security-exempt-list"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/security-exempt-list"
                ]
            }
        },
        "\/user\/security-exempt-list": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the exempt list.",
                                    "maxLength": 35
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Configure rules for exempting users from captive portal authentication.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "srcaddr": {
                                                "description": "Source addresses or address groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address or group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "dstaddr": {
                                                "description": "Destination addresses or address groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address or group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "service": {
                                                "description": "Destination services.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Service name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/security-exempt-list"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the exempt list.",
                                    "maxLength": 35
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description.",
                                    "maxLength": 127
                                },
                                "rule": {
                                    "description": "Configure rules for exempting users from captive portal authentication.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "srcaddr": {
                                                "description": "Source addresses or address groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address or group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "dstaddr": {
                                                "description": "Destination addresses or address groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address or group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "service": {
                                                "description": "Destination services.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Service name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/security-exempt-list"
                ]
            }
        },
        "\/user\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "auth-type": {
                                    "type": "string",
                                    "description": "Supported firewall policy authentication protocols\/methods.   \nhttp:Allow HTTP authentication.   \nhttps:Allow HTTPS authentication.   \nftp:Allow FTP authentication.   \ntelnet:Allow TELNET authentication.",
                                    "enum": [
                                        "http",
                                        "https",
                                        "ftp",
                                        "telnet"
                                    ]
                                },
                                "auth-cert": {
                                    "type": "string",
                                    "description": "HTTPS server certificate for policy authentication.",
                                    "maxLength": 35
                                },
                                "auth-ca-cert": {
                                    "type": "string",
                                    "description": "HTTPS CA certificate for policy authentication.",
                                    "maxLength": 35
                                },
                                "auth-secure-http": {
                                    "type": "string",
                                    "description": "Enable\/disable redirecting HTTP user authentication to more secure HTTPS.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-http-basic": {
                                    "type": "string",
                                    "description": "Enable\/disable use of HTTP basic authentication for identity-based firewall policies.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-ssl-allow-renegotiation": {
                                    "type": "string",
                                    "description": "Allow\/forbid SSL re-negotiation for HTTPS authentication.   \nenable:Allow SSL re-negotiation.   \ndisable:Forbid SSL re-negotiation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-src-mac": {
                                    "type": "string",
                                    "description": "Enable\/disable source MAC for user identity.   \nenable:Enable source MAC for user identity.   \ndisable:Disable source MAC for user identity.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-on-demand": {
                                    "type": "string",
                                    "description": "Always\/implicitly trigger firewall authentication on demand.   \nalways:Always trigger firewall authentication on demand.   \nimplicitly:Implicitly trigger firewall authentication on demand.",
                                    "enum": [
                                        "always",
                                        "implicitly"
                                    ]
                                },
                                "auth-timeout": {
                                    "type": "integer",
                                    "description": "Time in minutes before the firewall user authentication timeout requires the user to re-authenticate.",
                                    "maximum": 1440,
                                    "minimum": 1
                                },
                                "auth-timeout-type": {
                                    "type": "string",
                                    "description": "Control if authenticated users have to login again after a hard timeout, after an idle timeout, or after a session timeout.   \nidle-timeout:Idle timeout.   \nhard-timeout:Hard timeout.   \nnew-session:New session timeout.",
                                    "enum": [
                                        "idle-timeout",
                                        "hard-timeout",
                                        "new-session"
                                    ]
                                },
                                "auth-portal-timeout": {
                                    "type": "integer",
                                    "description": "Time in minutes before captive portal user have to re-authenticate (1 - 30 min, default 3 min).",
                                    "maximum": 30,
                                    "minimum": 1
                                },
                                "radius-ses-timeout-act": {
                                    "type": "string",
                                    "description": "Set the RADIUS session timeout to a hard timeout or to ignore RADIUS server session timeouts.   \nhard-timeout:Use session timeout from RADIUS as hard-timeout.   \nignore-timeout:Ignore session timeout from RADIUS.",
                                    "enum": [
                                        "hard-timeout",
                                        "ignore-timeout"
                                    ]
                                },
                                "auth-blackout-time": {
                                    "type": "integer",
                                    "description": "Time in seconds an IP address is denied access after failing to authenticate five times within one minute.",
                                    "maximum": 3600,
                                    "minimum": 0
                                },
                                "auth-invalid-max": {
                                    "type": "integer",
                                    "description": "Maximum number of failed authentication attempts before the user is blocked.",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "auth-lockout-threshold": {
                                    "type": "integer",
                                    "description": "Maximum number of failed login attempts before login lockout is triggered.",
                                    "maximum": 10,
                                    "minimum": 1
                                },
                                "auth-lockout-duration": {
                                    "type": "integer",
                                    "description": "Lockout period in seconds after too many login failures.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "per-policy-disclaimer": {
                                    "type": "string",
                                    "description": "Enable\/disable per policy disclaimer.   \nenable:Enable per policy disclaimer.   \ndisable:Disable per policy disclaimer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-ports": {
                                    "description": "Set up non-standard ports for authentication with HTTP, HTTPS, FTP, and TELNET.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Service type.   \nhttp:HTTP service.   \nhttps:HTTPS service.   \nftp:FTP service.   \ntelnet:TELNET service.",
                                                "enum": [
                                                    "http",
                                                    "https",
                                                    "ftp",
                                                    "telnet"
                                                ]
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Non-standard port for firewall user authentication.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "auth-ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "auth-type": {
                                    "type": "string",
                                    "description": "Supported firewall policy authentication protocols\/methods.   \nhttp:Allow HTTP authentication.   \nhttps:Allow HTTPS authentication.   \nftp:Allow FTP authentication.   \ntelnet:Allow TELNET authentication.",
                                    "enum": [
                                        "http",
                                        "https",
                                        "ftp",
                                        "telnet"
                                    ]
                                },
                                "auth-cert": {
                                    "type": "string",
                                    "description": "HTTPS server certificate for policy authentication.",
                                    "maxLength": 35
                                },
                                "auth-ca-cert": {
                                    "type": "string",
                                    "description": "HTTPS CA certificate for policy authentication.",
                                    "maxLength": 35
                                },
                                "auth-secure-http": {
                                    "type": "string",
                                    "description": "Enable\/disable redirecting HTTP user authentication to more secure HTTPS.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-http-basic": {
                                    "type": "string",
                                    "description": "Enable\/disable use of HTTP basic authentication for identity-based firewall policies.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-ssl-allow-renegotiation": {
                                    "type": "string",
                                    "description": "Allow\/forbid SSL re-negotiation for HTTPS authentication.   \nenable:Allow SSL re-negotiation.   \ndisable:Forbid SSL re-negotiation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-src-mac": {
                                    "type": "string",
                                    "description": "Enable\/disable source MAC for user identity.   \nenable:Enable source MAC for user identity.   \ndisable:Disable source MAC for user identity.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-on-demand": {
                                    "type": "string",
                                    "description": "Always\/implicitly trigger firewall authentication on demand.   \nalways:Always trigger firewall authentication on demand.   \nimplicitly:Implicitly trigger firewall authentication on demand.",
                                    "enum": [
                                        "always",
                                        "implicitly"
                                    ]
                                },
                                "auth-timeout": {
                                    "type": "integer",
                                    "description": "Time in minutes before the firewall user authentication timeout requires the user to re-authenticate.",
                                    "maximum": 1440,
                                    "minimum": 1
                                },
                                "auth-timeout-type": {
                                    "type": "string",
                                    "description": "Control if authenticated users have to login again after a hard timeout, after an idle timeout, or after a session timeout.   \nidle-timeout:Idle timeout.   \nhard-timeout:Hard timeout.   \nnew-session:New session timeout.",
                                    "enum": [
                                        "idle-timeout",
                                        "hard-timeout",
                                        "new-session"
                                    ]
                                },
                                "auth-portal-timeout": {
                                    "type": "integer",
                                    "description": "Time in minutes before captive portal user have to re-authenticate (1 - 30 min, default 3 min).",
                                    "maximum": 30,
                                    "minimum": 1
                                },
                                "radius-ses-timeout-act": {
                                    "type": "string",
                                    "description": "Set the RADIUS session timeout to a hard timeout or to ignore RADIUS server session timeouts.   \nhard-timeout:Use session timeout from RADIUS as hard-timeout.   \nignore-timeout:Ignore session timeout from RADIUS.",
                                    "enum": [
                                        "hard-timeout",
                                        "ignore-timeout"
                                    ]
                                },
                                "auth-blackout-time": {
                                    "type": "integer",
                                    "description": "Time in seconds an IP address is denied access after failing to authenticate five times within one minute.",
                                    "maximum": 3600,
                                    "minimum": 0
                                },
                                "auth-invalid-max": {
                                    "type": "integer",
                                    "description": "Maximum number of failed authentication attempts before the user is blocked.",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "auth-lockout-threshold": {
                                    "type": "integer",
                                    "description": "Maximum number of failed login attempts before login lockout is triggered.",
                                    "maximum": 10,
                                    "minimum": 1
                                },
                                "auth-lockout-duration": {
                                    "type": "integer",
                                    "description": "Lockout period in seconds after too many login failures.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "per-policy-disclaimer": {
                                    "type": "string",
                                    "description": "Enable\/disable per policy disclaimer.   \nenable:Enable per policy disclaimer.   \ndisable:Disable per policy disclaimer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auth-ports": {
                                    "description": "Set up non-standard ports for authentication with HTTP, HTTPS, FTP, and TELNET.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Service type.   \nhttp:HTTP service.   \nhttps:HTTPS service.   \nftp:FTP service.   \ntelnet:TELNET service.",
                                                "enum": [
                                                    "http",
                                                    "https",
                                                    "ftp",
                                                    "telnet"
                                                ]
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Non-standard port for firewall user authentication.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "auth-ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/setting"
                ]
            }
        },
        "\/user\/tacacs+\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "TACACS+ server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Primary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "Secondary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "Tertiary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port number of the TACACS+ server.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the primary server."
                                },
                                "secondary-key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the secondary server."
                                },
                                "tertiary-key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the tertiary server."
                                },
                                "authen-type": {
                                    "type": "string",
                                    "description": "Allowed authentication protocols\/methods.   \nmschap:MSCHAP.   \nchap:CHAP.   \npap:PAP.   \nascii:ASCII.   \nauto:Use PAP, MSCHAP, and CHAP (in that order).",
                                    "enum": [
                                        "mschap",
                                        "chap",
                                        "pap",
                                        "ascii",
                                        "auto"
                                    ]
                                },
                                "authorization": {
                                    "type": "string",
                                    "description": "Enable\/disable TACACS+ authorization.   \nenable:Enable TACACS+ authorization.   \ndisable:Disable TACACS+ authorization.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "source IP for communications to TACACS+ server.",
                                    "maxLength": 63
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/tacacs+"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "TACACS+ server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Primary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "Secondary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "Tertiary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port number of the TACACS+ server.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the primary server."
                                },
                                "secondary-key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the secondary server."
                                },
                                "tertiary-key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the tertiary server."
                                },
                                "authen-type": {
                                    "type": "string",
                                    "description": "Allowed authentication protocols\/methods.   \nmschap:MSCHAP.   \nchap:CHAP.   \npap:PAP.   \nascii:ASCII.   \nauto:Use PAP, MSCHAP, and CHAP (in that order).",
                                    "enum": [
                                        "mschap",
                                        "chap",
                                        "pap",
                                        "ascii",
                                        "auto"
                                    ]
                                },
                                "authorization": {
                                    "type": "string",
                                    "description": "Enable\/disable TACACS+ authorization.   \nenable:Enable TACACS+ authorization.   \ndisable:Disable TACACS+ authorization.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "source IP for communications to TACACS+ server.",
                                    "maxLength": 63
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "user\/tacacs+"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/tacacs+"
                ]
            }
        },
        "\/user\/tacacs+": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "TACACS+ server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Primary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "Secondary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "Tertiary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port number of the TACACS+ server.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the primary server."
                                },
                                "secondary-key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the secondary server."
                                },
                                "tertiary-key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the tertiary server."
                                },
                                "authen-type": {
                                    "type": "string",
                                    "description": "Allowed authentication protocols\/methods.   \nmschap:MSCHAP.   \nchap:CHAP.   \npap:PAP.   \nascii:ASCII.   \nauto:Use PAP, MSCHAP, and CHAP (in that order).",
                                    "enum": [
                                        "mschap",
                                        "chap",
                                        "pap",
                                        "ascii",
                                        "auto"
                                    ]
                                },
                                "authorization": {
                                    "type": "string",
                                    "description": "Enable\/disable TACACS+ authorization.   \nenable:Enable TACACS+ authorization.   \ndisable:Disable TACACS+ authorization.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "source IP for communications to TACACS+ server.",
                                    "maxLength": 63
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "user\/tacacs+"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: authgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "TACACS+ server entry name.",
                                    "maxLength": 35
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Primary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "secondary-server": {
                                    "type": "string",
                                    "description": "Secondary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "tertiary-server": {
                                    "type": "string",
                                    "description": "Tertiary TACACS+ server CN domain name or IP address.",
                                    "maxLength": 63
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port number of the TACACS+ server.",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the primary server."
                                },
                                "secondary-key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the secondary server."
                                },
                                "tertiary-key": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Key to access the tertiary server."
                                },
                                "authen-type": {
                                    "type": "string",
                                    "description": "Allowed authentication protocols\/methods.   \nmschap:MSCHAP.   \nchap:CHAP.   \npap:PAP.   \nascii:ASCII.   \nauto:Use PAP, MSCHAP, and CHAP (in that order).",
                                    "enum": [
                                        "mschap",
                                        "chap",
                                        "pap",
                                        "ascii",
                                        "auto"
                                    ]
                                },
                                "authorization": {
                                    "type": "string",
                                    "description": "Enable\/disable TACACS+ authorization.   \nenable:Enable TACACS+ authorization.   \ndisable:Disable TACACS+ authorization.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "source IP for communications to TACACS+ server.",
                                    "maxLength": 63
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "user\/tacacs+"
                ]
            }
        }
    }
}