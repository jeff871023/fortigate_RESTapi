{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS CMDB"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/cmdb",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "tags": [
        {
            "name": "ips\/custom",
            "description": "Configure IPS custom signature."
        },
        {
            "name": "ips\/decoder",
            "description": "Configure IPS decoder."
        },
        {
            "name": "ips\/global",
            "description": "Configure IPS global parameter."
        },
        {
            "name": "ips\/rule",
            "description": "Configure IPS rules."
        },
        {
            "name": "ips\/rule-settings",
            "description": "Configure IPS rule setting."
        },
        {
            "name": "ips\/sensor",
            "description": "Configure IPS sensor."
        },
        {
            "name": "ips\/settings",
            "description": "Configure IPS VDOM parameter."
        },
        {
            "name": "ips\/view-map",
            "description": "configure ips view-map"
        }
    ],
    "paths": {
        "\/ips\/custom\/{tag}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Signature tag.",
                                    "maxLength": 63
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "Custom signature enclosed in single quotes.",
                                    "maxLength": 4095
                                },
                                "rule-id": {
                                    "type": "integer",
                                    "description": "Signature ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "severity": {
                                    "type": "string",
                                    "description": "Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity."
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Protect client or server traffic."
                                },
                                "os": {
                                    "type": "string",
                                    "description": "Operating system(s) that the signature protects. Blank for all operating systems."
                                },
                                "application": {
                                    "type": "string",
                                    "description": "Applications to be protected. Blank for all applications."
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Protocol(s) that the signature scans. Blank for all protocols."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this signature.   \ndisable:Disable status.   \nenable:Enable status.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log-packet": {
                                    "type": "string",
                                    "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Default action (pass or block) for this signature.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/custom"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Signature tag.",
                                    "maxLength": 63
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "Custom signature enclosed in single quotes.",
                                    "maxLength": 4095
                                },
                                "rule-id": {
                                    "type": "integer",
                                    "description": "Signature ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "severity": {
                                    "type": "string",
                                    "description": "Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity."
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Protect client or server traffic."
                                },
                                "os": {
                                    "type": "string",
                                    "description": "Operating system(s) that the signature protects. Blank for all operating systems."
                                },
                                "application": {
                                    "type": "string",
                                    "description": "Applications to be protected. Blank for all applications."
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Protocol(s) that the signature scans. Blank for all protocols."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this signature.   \ndisable:Disable status.   \nenable:Enable status.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log-packet": {
                                    "type": "string",
                                    "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Default action (pass or block) for this signature.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/custom"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/custom"
                ]
            }
        },
        "\/ips\/custom": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Signature tag.",
                                    "maxLength": 63
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "Custom signature enclosed in single quotes.",
                                    "maxLength": 4095
                                },
                                "rule-id": {
                                    "type": "integer",
                                    "description": "Signature ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "severity": {
                                    "type": "string",
                                    "description": "Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity."
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Protect client or server traffic."
                                },
                                "os": {
                                    "type": "string",
                                    "description": "Operating system(s) that the signature protects. Blank for all operating systems."
                                },
                                "application": {
                                    "type": "string",
                                    "description": "Applications to be protected. Blank for all applications."
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Protocol(s) that the signature scans. Blank for all protocols."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this signature.   \ndisable:Disable status.   \nenable:Enable status.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log-packet": {
                                    "type": "string",
                                    "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Default action (pass or block) for this signature.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/custom"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Signature tag.",
                                    "maxLength": 63
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "Custom signature enclosed in single quotes.",
                                    "maxLength": 4095
                                },
                                "rule-id": {
                                    "type": "integer",
                                    "description": "Signature ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "severity": {
                                    "type": "string",
                                    "description": "Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity."
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Protect client or server traffic."
                                },
                                "os": {
                                    "type": "string",
                                    "description": "Operating system(s) that the signature protects. Blank for all operating systems."
                                },
                                "application": {
                                    "type": "string",
                                    "description": "Applications to be protected. Blank for all applications."
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Protocol(s) that the signature scans. Blank for all protocols."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this signature.   \ndisable:Disable status.   \nenable:Enable status.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log-packet": {
                                    "type": "string",
                                    "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Default action (pass or block) for this signature.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ips\/custom"
                ]
            }
        },
        "\/ips\/decoder\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Decoder name.",
                                    "maxLength": 63
                                },
                                "parameter": {
                                    "description": "IPS group parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Parameter name.",
                                                "maxLength": 31
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "Parameter value.",
                                                "maxLength": 199
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/decoder"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Decoder name.",
                                    "maxLength": 63
                                },
                                "parameter": {
                                    "description": "IPS group parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Parameter name.",
                                                "maxLength": 31
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "Parameter value.",
                                                "maxLength": 199
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/decoder"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/decoder"
                ]
            }
        },
        "\/ips\/decoder": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Decoder name.",
                                    "maxLength": 63
                                },
                                "parameter": {
                                    "description": "IPS group parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Parameter name.",
                                                "maxLength": 31
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "Parameter value.",
                                                "maxLength": 199
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/decoder"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Decoder name.",
                                    "maxLength": 63
                                },
                                "parameter": {
                                    "description": "IPS group parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Parameter name.",
                                                "maxLength": 31
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "Parameter value.",
                                                "maxLength": 199
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ips\/decoder"
                ]
            }
        },
        "\/ips\/global": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "fail-open": {
                                    "type": "string",
                                    "description": "Enable to allow traffic if the IPS process crashes. Default is disable and IPS traffic is blocked when the IPS process crashes.   \nenable:Enable IPS fail open.   \ndisable:Disable IPS fail open.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "database": {
                                    "type": "string",
                                    "description": "Regular or extended IPS database. Regular protects against the latest common and in-the-wild attacks. Extended includes protection from legacy attacks.   \nregular:IPS regular database package.   \nextended:IPS extended database package.",
                                    "enum": [
                                        "regular",
                                        "extended"
                                    ]
                                },
                                "traffic-submit": {
                                    "type": "string",
                                    "description": "Enable\/disable submitting attack data found by this FortiGate to FortiGuard.   \nenable:Enable traffic submit.   \ndisable:Disable traffic submit.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly-mode": {
                                    "type": "string",
                                    "description": "Global blocking mode for rate-based anomalies.   \nperiodical:After an anomaly is detected, allow the number of packets per second according to the anomaly configuration.   \ncontinuous:Block packets once an anomaly is detected. Overrides individual anomaly settings.",
                                    "enum": [
                                        "periodical",
                                        "continuous"
                                    ]
                                },
                                "session-limit-mode": {
                                    "type": "string",
                                    "description": "Method of counting concurrent sessions used by session limit anomalies. Choose between greater accuracy (accurate) or improved performance (heuristics).   \naccurate:Accurately count concurrent sessions, demands more resources.   \nheuristic:Use heuristics to estimate the number of concurrent sessions. Acceptable in most cases.",
                                    "enum": [
                                        "accurate",
                                        "heuristic"
                                    ]
                                },
                                "socket-size": {
                                    "type": "integer",
                                    "description": "IPS socket buffer size. Max and default value depend on available memory. Can be changed to tune performance.",
                                    "maximum": 128,
                                    "minimum": 0
                                },
                                "engine-count": {
                                    "type": "integer",
                                    "description": "Number of IPS engines running. If set to the default value of 0, FortiOS sets the number to optimize performance depending on the number of CPU cores.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "sync-session-ttl": {
                                    "type": "string",
                                    "description": "Enable\/disable use of kernel session TTL for IPS sessions.   \nenable:Enable use of kernel session TTL for IPS sessions.   \ndisable:Disable use of kernel session TTL for IPS sessions.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "np-accel-mode": {
                                    "type": "string",
                                    "description": "Acceleration mode for IPS processing by NPx processors.   \nnone:NPx acceleration disabled.   \nbasic:NPx acceleration enabled.",
                                    "enum": [
                                        "none",
                                        "basic"
                                    ]
                                },
                                "cp-accel-mode": {
                                    "type": "string",
                                    "description": "IPS Pattern matching acceleration\/offloading to CPx processors.   \nnone:CPx acceleration\/offloading disabled.   \nbasic:Offload basic pattern matching to CPx processors.   \nadvanced:Offload more types of pattern matching resulting in higher throughput than basic mode. Requires two CP8s or one CP9.",
                                    "enum": [
                                        "none",
                                        "basic",
                                        "advanced"
                                    ]
                                },
                                "deep-app-insp-timeout": {
                                    "type": "integer",
                                    "description": "Timeout for Deep application inspection (1 - 2147483647 sec., 0 = use recommended setting).",
                                    "maximum": 2147483647,
                                    "minimum": 0
                                },
                                "deep-app-insp-db-limit": {
                                    "type": "integer",
                                    "description": "Limit on number of entries in deep application inspection database (1 - 2147483647, 0 = use recommended setting)",
                                    "maximum": 2147483647,
                                    "minimum": 0
                                },
                                "exclude-signatures": {
                                    "type": "string",
                                    "description": "Excluded signatures.   \nnone:No signatures excluded.   \nindustrial:Exclude industrial signatures.",
                                    "enum": [
                                        "none",
                                        "industrial"
                                    ]
                                },
                                "packet-log-queue-depth": {
                                    "type": "integer",
                                    "description": "Packet\/pcap log queue depth per IPS engine.",
                                    "maximum": 4096,
                                    "minimum": 128
                                },
                                "ngfw-max-scan-range": {
                                    "type": "integer",
                                    "description": "NGFW policy-mode app detection threshold.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "tls-active-probe": {
                                    "description": "TLS active probe configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "interface-select-method": {
                                                "type": "string",
                                                "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                                "enum": [
                                                    "auto",
                                                    "sdwan",
                                                    "specify"
                                                ]
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Specify outgoing interface to reach server.",
                                                "maxLength": 15
                                            },
                                            "vdom": {
                                                "type": "string",
                                                "description": "Virtual domain name for TLS active probe.",
                                                "maxLength": 31
                                            },
                                            "source-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Source IP address used for TLS active probe."
                                            },
                                            "source-ip6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Source IPv6 address used for TLS active probe."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/global"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "fail-open": {
                                    "type": "string",
                                    "description": "Enable to allow traffic if the IPS process crashes. Default is disable and IPS traffic is blocked when the IPS process crashes.   \nenable:Enable IPS fail open.   \ndisable:Disable IPS fail open.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "database": {
                                    "type": "string",
                                    "description": "Regular or extended IPS database. Regular protects against the latest common and in-the-wild attacks. Extended includes protection from legacy attacks.   \nregular:IPS regular database package.   \nextended:IPS extended database package.",
                                    "enum": [
                                        "regular",
                                        "extended"
                                    ]
                                },
                                "traffic-submit": {
                                    "type": "string",
                                    "description": "Enable\/disable submitting attack data found by this FortiGate to FortiGuard.   \nenable:Enable traffic submit.   \ndisable:Disable traffic submit.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly-mode": {
                                    "type": "string",
                                    "description": "Global blocking mode for rate-based anomalies.   \nperiodical:After an anomaly is detected, allow the number of packets per second according to the anomaly configuration.   \ncontinuous:Block packets once an anomaly is detected. Overrides individual anomaly settings.",
                                    "enum": [
                                        "periodical",
                                        "continuous"
                                    ]
                                },
                                "session-limit-mode": {
                                    "type": "string",
                                    "description": "Method of counting concurrent sessions used by session limit anomalies. Choose between greater accuracy (accurate) or improved performance (heuristics).   \naccurate:Accurately count concurrent sessions, demands more resources.   \nheuristic:Use heuristics to estimate the number of concurrent sessions. Acceptable in most cases.",
                                    "enum": [
                                        "accurate",
                                        "heuristic"
                                    ]
                                },
                                "socket-size": {
                                    "type": "integer",
                                    "description": "IPS socket buffer size. Max and default value depend on available memory. Can be changed to tune performance.",
                                    "maximum": 128,
                                    "minimum": 0
                                },
                                "engine-count": {
                                    "type": "integer",
                                    "description": "Number of IPS engines running. If set to the default value of 0, FortiOS sets the number to optimize performance depending on the number of CPU cores.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "sync-session-ttl": {
                                    "type": "string",
                                    "description": "Enable\/disable use of kernel session TTL for IPS sessions.   \nenable:Enable use of kernel session TTL for IPS sessions.   \ndisable:Disable use of kernel session TTL for IPS sessions.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "np-accel-mode": {
                                    "type": "string",
                                    "description": "Acceleration mode for IPS processing by NPx processors.   \nnone:NPx acceleration disabled.   \nbasic:NPx acceleration enabled.",
                                    "enum": [
                                        "none",
                                        "basic"
                                    ]
                                },
                                "cp-accel-mode": {
                                    "type": "string",
                                    "description": "IPS Pattern matching acceleration\/offloading to CPx processors.   \nnone:CPx acceleration\/offloading disabled.   \nbasic:Offload basic pattern matching to CPx processors.   \nadvanced:Offload more types of pattern matching resulting in higher throughput than basic mode. Requires two CP8s or one CP9.",
                                    "enum": [
                                        "none",
                                        "basic",
                                        "advanced"
                                    ]
                                },
                                "deep-app-insp-timeout": {
                                    "type": "integer",
                                    "description": "Timeout for Deep application inspection (1 - 2147483647 sec., 0 = use recommended setting).",
                                    "maximum": 2147483647,
                                    "minimum": 0
                                },
                                "deep-app-insp-db-limit": {
                                    "type": "integer",
                                    "description": "Limit on number of entries in deep application inspection database (1 - 2147483647, 0 = use recommended setting)",
                                    "maximum": 2147483647,
                                    "minimum": 0
                                },
                                "exclude-signatures": {
                                    "type": "string",
                                    "description": "Excluded signatures.   \nnone:No signatures excluded.   \nindustrial:Exclude industrial signatures.",
                                    "enum": [
                                        "none",
                                        "industrial"
                                    ]
                                },
                                "packet-log-queue-depth": {
                                    "type": "integer",
                                    "description": "Packet\/pcap log queue depth per IPS engine.",
                                    "maximum": 4096,
                                    "minimum": 128
                                },
                                "ngfw-max-scan-range": {
                                    "type": "integer",
                                    "description": "NGFW policy-mode app detection threshold.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "tls-active-probe": {
                                    "description": "TLS active probe configuration.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "interface-select-method": {
                                                "type": "string",
                                                "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                                "enum": [
                                                    "auto",
                                                    "sdwan",
                                                    "specify"
                                                ]
                                            },
                                            "interface": {
                                                "type": "string",
                                                "description": "Specify outgoing interface to reach server.",
                                                "maxLength": 15
                                            },
                                            "vdom": {
                                                "type": "string",
                                                "description": "Virtual domain name for TLS active probe.",
                                                "maxLength": 31
                                            },
                                            "source-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Source IP address used for TLS active probe."
                                            },
                                            "source-ip6": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Source IPv6 address used for TLS active probe."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ips\/global"
                ]
            }
        },
        "\/ips\/rule\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Rule name.",
                                    "maxLength": 63
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable status.   \ndisable:Disable status.   \nenable:Enable status.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log-packet": {
                                    "type": "string",
                                    "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Action.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "group": {
                                    "type": "string",
                                    "description": "Group.",
                                    "maxLength": 63
                                },
                                "severity": {
                                    "type": "string",
                                    "description": "Severity."
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Vulnerable location."
                                },
                                "os": {
                                    "type": "string",
                                    "description": "Vulnerable operation systems."
                                },
                                "application": {
                                    "type": "string",
                                    "description": "Vulnerable applications."
                                },
                                "service": {
                                    "type": "string",
                                    "description": "Vulnerable service."
                                },
                                "rule-id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rev": {
                                    "type": "integer",
                                    "description": "Revision.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "date": {
                                    "type": "integer",
                                    "description": "Date.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "metadata": {
                                    "description": "Meta data.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "metaid": {
                                                "type": "integer",
                                                "description": "Meta ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "valueid": {
                                                "type": "integer",
                                                "description": "Value ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/rule"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Rule name.",
                                    "maxLength": 63
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable status.   \ndisable:Disable status.   \nenable:Enable status.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log-packet": {
                                    "type": "string",
                                    "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Action.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "group": {
                                    "type": "string",
                                    "description": "Group.",
                                    "maxLength": 63
                                },
                                "severity": {
                                    "type": "string",
                                    "description": "Severity."
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Vulnerable location."
                                },
                                "os": {
                                    "type": "string",
                                    "description": "Vulnerable operation systems."
                                },
                                "application": {
                                    "type": "string",
                                    "description": "Vulnerable applications."
                                },
                                "service": {
                                    "type": "string",
                                    "description": "Vulnerable service."
                                },
                                "rule-id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rev": {
                                    "type": "integer",
                                    "description": "Revision.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "date": {
                                    "type": "integer",
                                    "description": "Date.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "metadata": {
                                    "description": "Meta data.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "metaid": {
                                                "type": "integer",
                                                "description": "Meta ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "valueid": {
                                                "type": "integer",
                                                "description": "Value ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/rule"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/rule"
                ]
            }
        },
        "\/ips\/rule": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Rule name.",
                                    "maxLength": 63
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable status.   \ndisable:Disable status.   \nenable:Enable status.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log-packet": {
                                    "type": "string",
                                    "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Action.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "group": {
                                    "type": "string",
                                    "description": "Group.",
                                    "maxLength": 63
                                },
                                "severity": {
                                    "type": "string",
                                    "description": "Severity."
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Vulnerable location."
                                },
                                "os": {
                                    "type": "string",
                                    "description": "Vulnerable operation systems."
                                },
                                "application": {
                                    "type": "string",
                                    "description": "Vulnerable applications."
                                },
                                "service": {
                                    "type": "string",
                                    "description": "Vulnerable service."
                                },
                                "rule-id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rev": {
                                    "type": "integer",
                                    "description": "Revision.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "date": {
                                    "type": "integer",
                                    "description": "Date.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "metadata": {
                                    "description": "Meta data.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "metaid": {
                                                "type": "integer",
                                                "description": "Meta ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "valueid": {
                                                "type": "integer",
                                                "description": "Value ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/rule"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Rule name.",
                                    "maxLength": 63
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable status.   \ndisable:Disable status.   \nenable:Enable status.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "log-packet": {
                                    "type": "string",
                                    "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Action.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "group": {
                                    "type": "string",
                                    "description": "Group.",
                                    "maxLength": 63
                                },
                                "severity": {
                                    "type": "string",
                                    "description": "Severity."
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Vulnerable location."
                                },
                                "os": {
                                    "type": "string",
                                    "description": "Vulnerable operation systems."
                                },
                                "application": {
                                    "type": "string",
                                    "description": "Vulnerable applications."
                                },
                                "service": {
                                    "type": "string",
                                    "description": "Vulnerable service."
                                },
                                "rule-id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "rev": {
                                    "type": "integer",
                                    "description": "Revision.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "date": {
                                    "type": "integer",
                                    "description": "Date.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "metadata": {
                                    "description": "Meta data.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "metaid": {
                                                "type": "integer",
                                                "description": "Meta ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "valueid": {
                                                "type": "integer",
                                                "description": "Value ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ips\/rule"
                ]
            }
        },
        "\/ips\/rule-settings\/{id}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/rule-settings"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/rule-settings"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/rule-settings"
                ]
            }
        },
        "\/ips\/rule-settings": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/rule-settings"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ips\/rule-settings"
                ]
            }
        },
        "\/ips\/sensor\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Sensor name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "block-malicious-url": {
                                    "type": "string",
                                    "description": "Enable\/disable malicious URL blocking.   \ndisable:Disable malicious URL blocking.   \nenable:Enable malicious URL blocking.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "scan-botnet-connections": {
                                    "type": "string",
                                    "description": "Block or monitor connections to Botnet servers, or disable Botnet scanning.   \ndisable:Do not scan connections to botnet servers.   \nblock:Block connections to botnet servers.   \nmonitor:Log connections to botnet servers.",
                                    "enum": [
                                        "disable",
                                        "block",
                                        "monitor"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "entries": {
                                    "description": "IPS sensor filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID in IPS database (0 - 4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "rule": {
                                                "description": "Identifies the predefined or custom IPS signatures to add to the sensor.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Rule IPS.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "Protect client or server traffic."
                                            },
                                            "severity": {
                                                "type": "string",
                                                "description": "Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity."
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "description": "Protocols to be examined. set protocol ? lists available protocols. all includes all protocols. other includes all unlisted protocols."
                                            },
                                            "os": {
                                                "type": "string",
                                                "description": "Operating systems to be protected.  all includes all operating systems. other includes all unlisted operating systems."
                                            },
                                            "application": {
                                                "type": "string",
                                                "description": "Applications to be protected. set application ? lists available applications. all includes all applications. other includes all unlisted applications."
                                            },
                                            "cve": {
                                                "description": "List of CVE IDs of the signatures to add to the sensor",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "cve-entry": {
                                                            "type": "string",
                                                            "description": "CVE IDs or CVE wildcards.",
                                                            "maxLength": 19
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status of the signatures included in filter. default enables the filter and only use filters with default status of enable. Filters with default status of disable will not be used.   \ndisable:Disable status of selected rules.   \nenable:Enable status of selected rules.   \ndefault:Default.",
                                                "enum": [
                                                    "disable",
                                                    "enable",
                                                    "default"
                                                ]
                                            },
                                            "log": {
                                                "type": "string",
                                                "description": "Enable\/disable logging of signatures included in filter.   \ndisable:Disable logging of selected rules.   \nenable:Enable logging of selected rules.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-packet": {
                                                "type": "string",
                                                "description": "Enable\/disable packet logging. Enable to save the packet that triggers the filter. You can download the packets in pcap format for diagnostic use.   \ndisable:Disable packet logging of selected rules.   \nenable:Enable packet logging of selected rules.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-attack-context": {
                                                "type": "string",
                                                "description": "Enable\/disable logging of attack context: URL buffer, header buffer, body buffer, packet buffer.   \ndisable:Disable logging of detailed attack context.   \nenable:Enable logging of detailed attack context.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action taken with traffic in which signatures are detected.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.   \nreset:Reset sessions for matching traffic.   \ndefault:Pass or drop matching traffic, depending on the default action of the signature.",
                                                "enum": [
                                                    "pass",
                                                    "block",
                                                    "reset",
                                                    "default"
                                                ]
                                            },
                                            "rate-count": {
                                                "type": "integer",
                                                "description": "Count of the rate.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rate-duration": {
                                                "type": "integer",
                                                "description": "Duration (sec) of the rate.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "rate-mode": {
                                                "type": "string",
                                                "description": "Rate limit mode.   \nperiodical:Allow configured number of packets every rate-duration.   \ncontinuous:Block packets once the rate is reached.",
                                                "enum": [
                                                    "periodical",
                                                    "continuous"
                                                ]
                                            },
                                            "rate-track": {
                                                "type": "string",
                                                "description": "Track the packet protocol field.   \nnone:none   \nsrc-ip:Source IP.   \ndest-ip:Destination IP.   \ndhcp-client-mac:DHCP client.   \ndns-domain:DNS domain.",
                                                "enum": [
                                                    "none",
                                                    "src-ip",
                                                    "dest-ip",
                                                    "dhcp-client-mac",
                                                    "dns-domain"
                                                ]
                                            },
                                            "exempt-ip": {
                                                "description": "Traffic from selected source or destination IP addresses is exempt from this signature.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Exempt IP ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "src-ip": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Source IP address and netmask."
                                                        },
                                                        "dst-ip": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Destination IP address and netmask."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "quarantine": {
                                                "type": "string",
                                                "description": "Quarantine method.   \nnone:Quarantine is disabled.   \nattacker:Block all traffic sent from attacker's IP address. The attacker's IP address is also added to the banned user list. The target's address is not affected.",
                                                "enum": [
                                                    "none",
                                                    "attacker"
                                                ]
                                            },
                                            "quarantine-expiry": {
                                                "type": "string",
                                                "description": "Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker."
                                            },
                                            "quarantine-log": {
                                                "type": "string",
                                                "description": "Enable\/disable quarantine logging.   \ndisable:Disable quarantine logging.   \nenable:Enable quarantine logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/sensor"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Sensor name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "block-malicious-url": {
                                    "type": "string",
                                    "description": "Enable\/disable malicious URL blocking.   \ndisable:Disable malicious URL blocking.   \nenable:Enable malicious URL blocking.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "scan-botnet-connections": {
                                    "type": "string",
                                    "description": "Block or monitor connections to Botnet servers, or disable Botnet scanning.   \ndisable:Do not scan connections to botnet servers.   \nblock:Block connections to botnet servers.   \nmonitor:Log connections to botnet servers.",
                                    "enum": [
                                        "disable",
                                        "block",
                                        "monitor"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "entries": {
                                    "description": "IPS sensor filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID in IPS database (0 - 4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "rule": {
                                                "description": "Identifies the predefined or custom IPS signatures to add to the sensor.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Rule IPS.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "Protect client or server traffic."
                                            },
                                            "severity": {
                                                "type": "string",
                                                "description": "Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity."
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "description": "Protocols to be examined. set protocol ? lists available protocols. all includes all protocols. other includes all unlisted protocols."
                                            },
                                            "os": {
                                                "type": "string",
                                                "description": "Operating systems to be protected.  all includes all operating systems. other includes all unlisted operating systems."
                                            },
                                            "application": {
                                                "type": "string",
                                                "description": "Applications to be protected. set application ? lists available applications. all includes all applications. other includes all unlisted applications."
                                            },
                                            "cve": {
                                                "description": "List of CVE IDs of the signatures to add to the sensor",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "cve-entry": {
                                                            "type": "string",
                                                            "description": "CVE IDs or CVE wildcards.",
                                                            "maxLength": 19
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status of the signatures included in filter. default enables the filter and only use filters with default status of enable. Filters with default status of disable will not be used.   \ndisable:Disable status of selected rules.   \nenable:Enable status of selected rules.   \ndefault:Default.",
                                                "enum": [
                                                    "disable",
                                                    "enable",
                                                    "default"
                                                ]
                                            },
                                            "log": {
                                                "type": "string",
                                                "description": "Enable\/disable logging of signatures included in filter.   \ndisable:Disable logging of selected rules.   \nenable:Enable logging of selected rules.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-packet": {
                                                "type": "string",
                                                "description": "Enable\/disable packet logging. Enable to save the packet that triggers the filter. You can download the packets in pcap format for diagnostic use.   \ndisable:Disable packet logging of selected rules.   \nenable:Enable packet logging of selected rules.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-attack-context": {
                                                "type": "string",
                                                "description": "Enable\/disable logging of attack context: URL buffer, header buffer, body buffer, packet buffer.   \ndisable:Disable logging of detailed attack context.   \nenable:Enable logging of detailed attack context.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action taken with traffic in which signatures are detected.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.   \nreset:Reset sessions for matching traffic.   \ndefault:Pass or drop matching traffic, depending on the default action of the signature.",
                                                "enum": [
                                                    "pass",
                                                    "block",
                                                    "reset",
                                                    "default"
                                                ]
                                            },
                                            "rate-count": {
                                                "type": "integer",
                                                "description": "Count of the rate.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rate-duration": {
                                                "type": "integer",
                                                "description": "Duration (sec) of the rate.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "rate-mode": {
                                                "type": "string",
                                                "description": "Rate limit mode.   \nperiodical:Allow configured number of packets every rate-duration.   \ncontinuous:Block packets once the rate is reached.",
                                                "enum": [
                                                    "periodical",
                                                    "continuous"
                                                ]
                                            },
                                            "rate-track": {
                                                "type": "string",
                                                "description": "Track the packet protocol field.   \nnone:none   \nsrc-ip:Source IP.   \ndest-ip:Destination IP.   \ndhcp-client-mac:DHCP client.   \ndns-domain:DNS domain.",
                                                "enum": [
                                                    "none",
                                                    "src-ip",
                                                    "dest-ip",
                                                    "dhcp-client-mac",
                                                    "dns-domain"
                                                ]
                                            },
                                            "exempt-ip": {
                                                "description": "Traffic from selected source or destination IP addresses is exempt from this signature.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Exempt IP ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "src-ip": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Source IP address and netmask."
                                                        },
                                                        "dst-ip": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Destination IP address and netmask."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "quarantine": {
                                                "type": "string",
                                                "description": "Quarantine method.   \nnone:Quarantine is disabled.   \nattacker:Block all traffic sent from attacker's IP address. The attacker's IP address is also added to the banned user list. The target's address is not affected.",
                                                "enum": [
                                                    "none",
                                                    "attacker"
                                                ]
                                            },
                                            "quarantine-expiry": {
                                                "type": "string",
                                                "description": "Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker."
                                            },
                                            "quarantine-log": {
                                                "type": "string",
                                                "description": "Enable\/disable quarantine logging.   \ndisable:Disable quarantine logging.   \nenable:Enable quarantine logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/sensor"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/sensor"
                ]
            }
        },
        "\/ips\/sensor": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Sensor name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "block-malicious-url": {
                                    "type": "string",
                                    "description": "Enable\/disable malicious URL blocking.   \ndisable:Disable malicious URL blocking.   \nenable:Enable malicious URL blocking.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "scan-botnet-connections": {
                                    "type": "string",
                                    "description": "Block or monitor connections to Botnet servers, or disable Botnet scanning.   \ndisable:Do not scan connections to botnet servers.   \nblock:Block connections to botnet servers.   \nmonitor:Log connections to botnet servers.",
                                    "enum": [
                                        "disable",
                                        "block",
                                        "monitor"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "entries": {
                                    "description": "IPS sensor filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID in IPS database (0 - 4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "rule": {
                                                "description": "Identifies the predefined or custom IPS signatures to add to the sensor.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Rule IPS.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "Protect client or server traffic."
                                            },
                                            "severity": {
                                                "type": "string",
                                                "description": "Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity."
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "description": "Protocols to be examined. set protocol ? lists available protocols. all includes all protocols. other includes all unlisted protocols."
                                            },
                                            "os": {
                                                "type": "string",
                                                "description": "Operating systems to be protected.  all includes all operating systems. other includes all unlisted operating systems."
                                            },
                                            "application": {
                                                "type": "string",
                                                "description": "Applications to be protected. set application ? lists available applications. all includes all applications. other includes all unlisted applications."
                                            },
                                            "cve": {
                                                "description": "List of CVE IDs of the signatures to add to the sensor",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "cve-entry": {
                                                            "type": "string",
                                                            "description": "CVE IDs or CVE wildcards.",
                                                            "maxLength": 19
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status of the signatures included in filter. default enables the filter and only use filters with default status of enable. Filters with default status of disable will not be used.   \ndisable:Disable status of selected rules.   \nenable:Enable status of selected rules.   \ndefault:Default.",
                                                "enum": [
                                                    "disable",
                                                    "enable",
                                                    "default"
                                                ]
                                            },
                                            "log": {
                                                "type": "string",
                                                "description": "Enable\/disable logging of signatures included in filter.   \ndisable:Disable logging of selected rules.   \nenable:Enable logging of selected rules.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-packet": {
                                                "type": "string",
                                                "description": "Enable\/disable packet logging. Enable to save the packet that triggers the filter. You can download the packets in pcap format for diagnostic use.   \ndisable:Disable packet logging of selected rules.   \nenable:Enable packet logging of selected rules.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-attack-context": {
                                                "type": "string",
                                                "description": "Enable\/disable logging of attack context: URL buffer, header buffer, body buffer, packet buffer.   \ndisable:Disable logging of detailed attack context.   \nenable:Enable logging of detailed attack context.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action taken with traffic in which signatures are detected.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.   \nreset:Reset sessions for matching traffic.   \ndefault:Pass or drop matching traffic, depending on the default action of the signature.",
                                                "enum": [
                                                    "pass",
                                                    "block",
                                                    "reset",
                                                    "default"
                                                ]
                                            },
                                            "rate-count": {
                                                "type": "integer",
                                                "description": "Count of the rate.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rate-duration": {
                                                "type": "integer",
                                                "description": "Duration (sec) of the rate.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "rate-mode": {
                                                "type": "string",
                                                "description": "Rate limit mode.   \nperiodical:Allow configured number of packets every rate-duration.   \ncontinuous:Block packets once the rate is reached.",
                                                "enum": [
                                                    "periodical",
                                                    "continuous"
                                                ]
                                            },
                                            "rate-track": {
                                                "type": "string",
                                                "description": "Track the packet protocol field.   \nnone:none   \nsrc-ip:Source IP.   \ndest-ip:Destination IP.   \ndhcp-client-mac:DHCP client.   \ndns-domain:DNS domain.",
                                                "enum": [
                                                    "none",
                                                    "src-ip",
                                                    "dest-ip",
                                                    "dhcp-client-mac",
                                                    "dns-domain"
                                                ]
                                            },
                                            "exempt-ip": {
                                                "description": "Traffic from selected source or destination IP addresses is exempt from this signature.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Exempt IP ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "src-ip": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Source IP address and netmask."
                                                        },
                                                        "dst-ip": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Destination IP address and netmask."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "quarantine": {
                                                "type": "string",
                                                "description": "Quarantine method.   \nnone:Quarantine is disabled.   \nattacker:Block all traffic sent from attacker's IP address. The attacker's IP address is also added to the banned user list. The target's address is not affected.",
                                                "enum": [
                                                    "none",
                                                    "attacker"
                                                ]
                                            },
                                            "quarantine-expiry": {
                                                "type": "string",
                                                "description": "Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker."
                                            },
                                            "quarantine-log": {
                                                "type": "string",
                                                "description": "Enable\/disable quarantine logging.   \ndisable:Disable quarantine logging.   \nenable:Enable quarantine logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/sensor"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Sensor name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "block-malicious-url": {
                                    "type": "string",
                                    "description": "Enable\/disable malicious URL blocking.   \ndisable:Disable malicious URL blocking.   \nenable:Enable malicious URL blocking.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "scan-botnet-connections": {
                                    "type": "string",
                                    "description": "Block or monitor connections to Botnet servers, or disable Botnet scanning.   \ndisable:Do not scan connections to botnet servers.   \nblock:Block connections to botnet servers.   \nmonitor:Log connections to botnet servers.",
                                    "enum": [
                                        "disable",
                                        "block",
                                        "monitor"
                                    ]
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "entries": {
                                    "description": "IPS sensor filter.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Rule ID in IPS database (0 - 4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "rule": {
                                                "description": "Identifies the predefined or custom IPS signatures to add to the sensor.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Rule IPS.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "location": {
                                                "type": "string",
                                                "description": "Protect client or server traffic."
                                            },
                                            "severity": {
                                                "type": "string",
                                                "description": "Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity."
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "description": "Protocols to be examined. set protocol ? lists available protocols. all includes all protocols. other includes all unlisted protocols."
                                            },
                                            "os": {
                                                "type": "string",
                                                "description": "Operating systems to be protected.  all includes all operating systems. other includes all unlisted operating systems."
                                            },
                                            "application": {
                                                "type": "string",
                                                "description": "Applications to be protected. set application ? lists available applications. all includes all applications. other includes all unlisted applications."
                                            },
                                            "cve": {
                                                "description": "List of CVE IDs of the signatures to add to the sensor",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "cve-entry": {
                                                            "type": "string",
                                                            "description": "CVE IDs or CVE wildcards.",
                                                            "maxLength": 19
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Status of the signatures included in filter. default enables the filter and only use filters with default status of enable. Filters with default status of disable will not be used.   \ndisable:Disable status of selected rules.   \nenable:Enable status of selected rules.   \ndefault:Default.",
                                                "enum": [
                                                    "disable",
                                                    "enable",
                                                    "default"
                                                ]
                                            },
                                            "log": {
                                                "type": "string",
                                                "description": "Enable\/disable logging of signatures included in filter.   \ndisable:Disable logging of selected rules.   \nenable:Enable logging of selected rules.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-packet": {
                                                "type": "string",
                                                "description": "Enable\/disable packet logging. Enable to save the packet that triggers the filter. You can download the packets in pcap format for diagnostic use.   \ndisable:Disable packet logging of selected rules.   \nenable:Enable packet logging of selected rules.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-attack-context": {
                                                "type": "string",
                                                "description": "Enable\/disable logging of attack context: URL buffer, header buffer, body buffer, packet buffer.   \ndisable:Disable logging of detailed attack context.   \nenable:Enable logging of detailed attack context.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action taken with traffic in which signatures are detected.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.   \nreset:Reset sessions for matching traffic.   \ndefault:Pass or drop matching traffic, depending on the default action of the signature.",
                                                "enum": [
                                                    "pass",
                                                    "block",
                                                    "reset",
                                                    "default"
                                                ]
                                            },
                                            "rate-count": {
                                                "type": "integer",
                                                "description": "Count of the rate.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rate-duration": {
                                                "type": "integer",
                                                "description": "Duration (sec) of the rate.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "rate-mode": {
                                                "type": "string",
                                                "description": "Rate limit mode.   \nperiodical:Allow configured number of packets every rate-duration.   \ncontinuous:Block packets once the rate is reached.",
                                                "enum": [
                                                    "periodical",
                                                    "continuous"
                                                ]
                                            },
                                            "rate-track": {
                                                "type": "string",
                                                "description": "Track the packet protocol field.   \nnone:none   \nsrc-ip:Source IP.   \ndest-ip:Destination IP.   \ndhcp-client-mac:DHCP client.   \ndns-domain:DNS domain.",
                                                "enum": [
                                                    "none",
                                                    "src-ip",
                                                    "dest-ip",
                                                    "dhcp-client-mac",
                                                    "dns-domain"
                                                ]
                                            },
                                            "exempt-ip": {
                                                "description": "Traffic from selected source or destination IP addresses is exempt from this signature.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Exempt IP ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "src-ip": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Source IP address and netmask."
                                                        },
                                                        "dst-ip": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "Destination IP address and netmask."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "quarantine": {
                                                "type": "string",
                                                "description": "Quarantine method.   \nnone:Quarantine is disabled.   \nattacker:Block all traffic sent from attacker's IP address. The attacker's IP address is also added to the banned user list. The target's address is not affected.",
                                                "enum": [
                                                    "none",
                                                    "attacker"
                                                ]
                                            },
                                            "quarantine-expiry": {
                                                "type": "string",
                                                "description": "Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker."
                                            },
                                            "quarantine-log": {
                                                "type": "string",
                                                "description": "Enable\/disable quarantine logging.   \ndisable:Disable quarantine logging.   \nenable:Enable quarantine logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ips\/sensor"
                ]
            }
        },
        "\/ips\/settings": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "packet-log-history": {
                                    "type": "integer",
                                    "description": "Number of packets to capture before and including the one in which the IPS signature is detected (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "packet-log-post-attack": {
                                    "type": "integer",
                                    "description": "Number of packets to log after the IPS signature is detected (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "packet-log-memory": {
                                    "type": "integer",
                                    "description": "Maximum memory can be used by packet log (64 - 8192 kB).",
                                    "maximum": 8192,
                                    "minimum": 64
                                },
                                "ips-packet-quota": {
                                    "type": "integer",
                                    "description": "Maximum amount of disk space in MB for logged packets when logging to disk. Range depends on disk size.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/settings"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "packet-log-history": {
                                    "type": "integer",
                                    "description": "Number of packets to capture before and including the one in which the IPS signature is detected (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "packet-log-post-attack": {
                                    "type": "integer",
                                    "description": "Number of packets to log after the IPS signature is detected (0 - 255).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "packet-log-memory": {
                                    "type": "integer",
                                    "description": "Maximum memory can be used by packet log (64 - 8192 kB).",
                                    "maximum": 8192,
                                    "minimum": 64
                                },
                                "ips-packet-quota": {
                                    "type": "integer",
                                    "description": "Maximum amount of disk space in MB for logged packets when logging to disk. Range depends on disk size.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ips\/settings"
                ]
            }
        },
        "\/ips\/view-map\/{id}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "View ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "vdom-id": {
                                    "type": "integer",
                                    "description": "VDOM ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "policy-id": {
                                    "type": "integer",
                                    "description": "Policy ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "id-policy-id": {
                                    "type": "integer",
                                    "description": "ID-based policy ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "which": {
                                    "type": "string",
                                    "description": "Policy.   \nfirewall:Firewall policy.   \ninterface:Interface policy.   \ninterface6:Interface policy6.   \nsniffer:Sniffer policy.   \nsniffer6:Sniffer policy6.   \nexplicit:explicit proxy policy.",
                                    "enum": [
                                        "firewall",
                                        "interface",
                                        "interface6",
                                        "sniffer",
                                        "sniffer6",
                                        "explicit"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/view-map"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "View ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "vdom-id": {
                                    "type": "integer",
                                    "description": "VDOM ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "policy-id": {
                                    "type": "integer",
                                    "description": "Policy ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "id-policy-id": {
                                    "type": "integer",
                                    "description": "ID-based policy ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "which": {
                                    "type": "string",
                                    "description": "Policy.   \nfirewall:Firewall policy.   \ninterface:Interface policy.   \ninterface6:Interface policy6.   \nsniffer:Sniffer policy.   \nsniffer6:Sniffer policy6.   \nexplicit:explicit proxy policy.",
                                    "enum": [
                                        "firewall",
                                        "interface",
                                        "interface6",
                                        "sniffer",
                                        "sniffer6",
                                        "explicit"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "ips\/view-map"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/view-map"
                ]
            }
        },
        "\/ips\/view-map": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "View ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "vdom-id": {
                                    "type": "integer",
                                    "description": "VDOM ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "policy-id": {
                                    "type": "integer",
                                    "description": "Policy ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "id-policy-id": {
                                    "type": "integer",
                                    "description": "ID-based policy ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "which": {
                                    "type": "string",
                                    "description": "Policy.   \nfirewall:Firewall policy.   \ninterface:Interface policy.   \ninterface6:Interface policy6.   \nsniffer:Sniffer policy.   \nsniffer6:Sniffer policy6.   \nexplicit:explicit proxy policy.",
                                    "enum": [
                                        "firewall",
                                        "interface",
                                        "interface6",
                                        "sniffer",
                                        "sniffer6",
                                        "explicit"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ips\/view-map"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "View ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "vdom-id": {
                                    "type": "integer",
                                    "description": "VDOM ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "policy-id": {
                                    "type": "integer",
                                    "description": "Policy ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "id-policy-id": {
                                    "type": "integer",
                                    "description": "ID-based policy ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "which": {
                                    "type": "string",
                                    "description": "Policy.   \nfirewall:Firewall policy.   \ninterface:Interface policy.   \ninterface6:Interface policy6.   \nsniffer:Sniffer policy.   \nsniffer6:Sniffer policy6.   \nexplicit:explicit proxy policy.",
                                    "enum": [
                                        "firewall",
                                        "interface",
                                        "interface6",
                                        "sniffer",
                                        "sniffer6",
                                        "explicit"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "ips\/view-map"
                ]
            }
        }
    }
}