{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS CMDB"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/cmdb",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "tags": [
        {
            "name": "application\/custom",
            "description": "Configure custom application signatures."
        },
        {
            "name": "application\/group",
            "description": "Configure firewall application groups."
        },
        {
            "name": "application\/list",
            "description": "Configure application control lists."
        },
        {
            "name": "application\/name",
            "description": "Configure application signatures."
        },
        {
            "name": "application\/rule-settings",
            "description": "Configure application rule settings."
        }
    ],
    "paths": {
        "\/application\/custom\/{tag}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Signature tag.",
                                    "maxLength": 63
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Custom application category ID (use ? to view available options).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "The text that makes up the actual custom application signature.",
                                    "maxLength": 4095
                                },
                                "category": {
                                    "type": "integer",
                                    "description": "Custom application category ID (use ? to view available options).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Custom application signature protocol."
                                },
                                "technology": {
                                    "type": "string",
                                    "description": "Custom application signature technology."
                                },
                                "behavior": {
                                    "type": "string",
                                    "description": "Custom application signature behavior."
                                },
                                "vendor": {
                                    "type": "string",
                                    "description": "Custom application signature vendor."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "application\/custom"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Signature tag.",
                                    "maxLength": 63
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Custom application category ID (use ? to view available options).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "The text that makes up the actual custom application signature.",
                                    "maxLength": 4095
                                },
                                "category": {
                                    "type": "integer",
                                    "description": "Custom application category ID (use ? to view available options).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Custom application signature protocol."
                                },
                                "technology": {
                                    "type": "string",
                                    "description": "Custom application signature technology."
                                },
                                "behavior": {
                                    "type": "string",
                                    "description": "Custom application signature behavior."
                                },
                                "vendor": {
                                    "type": "string",
                                    "description": "Custom application signature vendor."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "application\/custom"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "application\/custom"
                ]
            }
        },
        "\/application\/custom": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Signature tag.",
                                    "maxLength": 63
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Custom application category ID (use ? to view available options).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "The text that makes up the actual custom application signature.",
                                    "maxLength": 4095
                                },
                                "category": {
                                    "type": "integer",
                                    "description": "Custom application category ID (use ? to view available options).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Custom application signature protocol."
                                },
                                "technology": {
                                    "type": "string",
                                    "description": "Custom application signature technology."
                                },
                                "behavior": {
                                    "type": "string",
                                    "description": "Custom application signature behavior."
                                },
                                "vendor": {
                                    "type": "string",
                                    "description": "Custom application signature vendor."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "application\/custom"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "tag": {
                                    "type": "string",
                                    "description": "Signature tag.",
                                    "maxLength": 63
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Custom application category ID (use ? to view available options).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                },
                                "signature": {
                                    "type": "string",
                                    "description": "The text that makes up the actual custom application signature.",
                                    "maxLength": 4095
                                },
                                "category": {
                                    "type": "integer",
                                    "description": "Custom application category ID (use ? to view available options).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Custom application signature protocol."
                                },
                                "technology": {
                                    "type": "string",
                                    "description": "Custom application signature technology."
                                },
                                "behavior": {
                                    "type": "string",
                                    "description": "Custom application signature behavior."
                                },
                                "vendor": {
                                    "type": "string",
                                    "description": "Custom application signature vendor."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "application\/custom"
                ]
            }
        },
        "\/application\/group\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Application group name.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment",
                                    "maxLength": 255
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Application group type.   \napplication:Application ID.   \ncategory:Application category ID.",
                                    "enum": [
                                        "application",
                                        "category"
                                    ]
                                },
                                "application": {
                                    "description": "Application ID list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Application IDs.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "category": {
                                    "description": "Application category ID list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Category IDs.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "application\/group"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Application group name.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment",
                                    "maxLength": 255
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Application group type.   \napplication:Application ID.   \ncategory:Application category ID.",
                                    "enum": [
                                        "application",
                                        "category"
                                    ]
                                },
                                "application": {
                                    "description": "Application ID list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Application IDs.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "category": {
                                    "description": "Application category ID list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Category IDs.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "application\/group"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "application\/group"
                ]
            }
        },
        "\/application\/group": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Application group name.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment",
                                    "maxLength": 255
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Application group type.   \napplication:Application ID.   \ncategory:Application category ID.",
                                    "enum": [
                                        "application",
                                        "category"
                                    ]
                                },
                                "application": {
                                    "description": "Application ID list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Application IDs.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "category": {
                                    "description": "Application category ID list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Category IDs.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "application\/group"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Application group name.",
                                    "maxLength": 63
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment",
                                    "maxLength": 255
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Application group type.   \napplication:Application ID.   \ncategory:Application category ID.",
                                    "enum": [
                                        "application",
                                        "category"
                                    ]
                                },
                                "application": {
                                    "description": "Application ID list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Application IDs.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "category": {
                                    "description": "Application category ID list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Category IDs.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "application\/group"
                ]
            }
        },
        "\/application\/list\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "List name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "comments",
                                    "maxLength": 255
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "other-application-action": {
                                    "type": "string",
                                    "description": "Action for other applications.   \npass:Allow sessions matching an application in this application list.   \nblock:Block sessions matching an application in this application list.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "app-replacemsg": {
                                    "type": "string",
                                    "description": "Enable\/disable replacement messages for blocked applications.   \ndisable:Disable replacement messages for blocked applications.   \nenable:Enable replacement messages for blocked applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "other-application-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging for other applications.   \ndisable:Disable logging for other applications.   \nenable:Enable logging for other applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "enforce-default-app-port": {
                                    "type": "string",
                                    "description": "Enable\/disable default application port enforcement for allowed applications.   \ndisable:Disable default application port enforcement.   \nenable:Enable default application port enforcement.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "force-inclusion-ssl-di-sigs": {
                                    "type": "string",
                                    "description": "Enable\/disable forced inclusion of SSL deep inspection signatures.   \ndisable:Disable forced inclusion of signatures which normally require SSL deep inspection.   \nenable:Enable forced inclusion of signatures which normally require SSL deep inspection.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "unknown-application-action": {
                                    "type": "string",
                                    "description": "Pass or block traffic from unknown applications.   \npass:Pass or allow unknown applications.   \nblock:Drop or block unknown applications.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "unknown-application-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging for unknown applications.   \ndisable:Disable logging for unknown applications.   \nenable:Enable logging for unknown applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "p2p-black-list": {
                                    "type": "string",
                                    "description": "P2P applications to be black listed.   \nskype:Skype.   \nedonkey:Edonkey.   \nbittorrent:Bit torrent.",
                                    "enum": [
                                        "skype",
                                        "edonkey",
                                        "bittorrent"
                                    ]
                                },
                                "deep-app-inspection": {
                                    "type": "string",
                                    "description": "Enable\/disable deep application inspection.   \ndisable:Disable deep application inspection.   \nenable:Enable deep application inspection.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Basic application protocol signatures allowed by default.   \nallow-dns:Allow DNS.   \nallow-icmp:Allow ICMP.   \nallow-http:Allow generic HTTP web browsing.   \nallow-ssl:Allow generic SSL communication.   \nallow-quic:Allow QUIC.",
                                    "enum": [
                                        "allow-dns",
                                        "allow-icmp",
                                        "allow-http",
                                        "allow-ssl",
                                        "allow-quic"
                                    ]
                                },
                                "entries": {
                                    "description": "Application list entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "risk": {
                                                "description": "Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "level": {
                                                            "type": "integer",
                                                            "description": "Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "category": {
                                                "description": "Category ID list.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Application category ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "application": {
                                                "description": "ID of allowed applications.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Application IDs.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "protocols": {
                                                "type": "string",
                                                "description": "Application protocol filter."
                                            },
                                            "vendor": {
                                                "type": "string",
                                                "description": "Application vendor filter."
                                            },
                                            "technology": {
                                                "type": "string",
                                                "description": "Application technology filter."
                                            },
                                            "behavior": {
                                                "type": "string",
                                                "description": "Application behavior filter."
                                            },
                                            "popularity": {
                                                "type": "string",
                                                "description": "Application popularity filter (1 - 5, from least to most popular).   \n1:Popularity level 1.   \n2:Popularity level 2.   \n3:Popularity level 3.   \n4:Popularity level 4.   \n5:Popularity level 5.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "3",
                                                    "4",
                                                    "5"
                                                ]
                                            },
                                            "exclusion": {
                                                "description": "ID of excluded applications.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Excluded application IDs.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "parameters": {
                                                "description": "Application parameters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Parameter tuple ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "members": {
                                                            "description": "Parameter tuple members.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Parameter.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "Parameter name.",
                                                                        "maxLength": 31
                                                                    },
                                                                    "value": {
                                                                        "type": "string",
                                                                        "description": "Parameter value.",
                                                                        "maxLength": 199
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Pass or block traffic, or reset connection for traffic from this application.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.   \nreset:Reset sessions for matching traffic.",
                                                "enum": [
                                                    "pass",
                                                    "block",
                                                    "reset"
                                                ]
                                            },
                                            "log": {
                                                "type": "string",
                                                "description": "Enable\/disable logging for this application list.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-packet": {
                                                "type": "string",
                                                "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-count": {
                                                "type": "integer",
                                                "description": "Count of the rate.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rate-duration": {
                                                "type": "integer",
                                                "description": "Duration (sec) of the rate.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "rate-mode": {
                                                "type": "string",
                                                "description": "Rate limit mode.   \nperiodical:Allow configured number of packets every rate-duration.   \ncontinuous:Block packets once the rate is reached.",
                                                "enum": [
                                                    "periodical",
                                                    "continuous"
                                                ]
                                            },
                                            "rate-track": {
                                                "type": "string",
                                                "description": "Track the packet protocol field.   \nnone:none   \nsrc-ip:Source IP.   \ndest-ip:Destination IP.   \ndhcp-client-mac:DHCP client.   \ndns-domain:DNS domain.",
                                                "enum": [
                                                    "none",
                                                    "src-ip",
                                                    "dest-ip",
                                                    "dhcp-client-mac",
                                                    "dns-domain"
                                                ]
                                            },
                                            "session-ttl": {
                                                "type": "integer",
                                                "description": "Session TTL (0 = default).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "shaper": {
                                                "type": "string",
                                                "description": "Traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "shaper-reverse": {
                                                "type": "string",
                                                "description": "Reverse traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "per-ip-shaper": {
                                                "type": "string",
                                                "description": "Per-IP traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "quarantine": {
                                                "type": "string",
                                                "description": "Quarantine method.   \nnone:Quarantine is disabled.   \nattacker:Block all traffic sent from attacker's IP address. The attacker's IP address is also added to the banned user list. The target's address is not affected.",
                                                "enum": [
                                                    "none",
                                                    "attacker"
                                                ]
                                            },
                                            "quarantine-expiry": {
                                                "type": "string",
                                                "description": "Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker."
                                            },
                                            "quarantine-log": {
                                                "type": "string",
                                                "description": "Enable\/disable quarantine logging.   \ndisable:Disable quarantine logging.   \nenable:Enable quarantine logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "control-default-network-services": {
                                    "type": "string",
                                    "description": "Enable\/disable enforcement of protocols over selected ports.   \ndisable:Disable protocol enforcement over selected ports.   \nenable:Enable protocol enforcement over selected ports.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "default-network-services": {
                                    "description": "Default network service entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Port number.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "services": {
                                                "type": "string",
                                                "description": "Network protocols.   \nhttp:HTTP.   \nssh:SSH.   \ntelnet:TELNET.   \nftp:FTP.   \ndns:DNS.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nsnmp:SNMP.   \nnntp:NNTP.   \nhttps:HTTPS.",
                                                "enum": [
                                                    "http",
                                                    "ssh",
                                                    "telnet",
                                                    "ftp",
                                                    "dns",
                                                    "smtp",
                                                    "pop3",
                                                    "imap",
                                                    "snmp",
                                                    "nntp",
                                                    "https"
                                                ]
                                            },
                                            "violation-action": {
                                                "type": "string",
                                                "description": "Action for protocols not white listed under selected port.   \npass:Allow protocols not white listed under selected port.   \nmonitor:Monitor protocols not white listed under selected port.   \nblock:Block protocols not white listed under selected port.",
                                                "enum": [
                                                    "pass",
                                                    "monitor",
                                                    "block"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "application\/list"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "List name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "comments",
                                    "maxLength": 255
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "other-application-action": {
                                    "type": "string",
                                    "description": "Action for other applications.   \npass:Allow sessions matching an application in this application list.   \nblock:Block sessions matching an application in this application list.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "app-replacemsg": {
                                    "type": "string",
                                    "description": "Enable\/disable replacement messages for blocked applications.   \ndisable:Disable replacement messages for blocked applications.   \nenable:Enable replacement messages for blocked applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "other-application-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging for other applications.   \ndisable:Disable logging for other applications.   \nenable:Enable logging for other applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "enforce-default-app-port": {
                                    "type": "string",
                                    "description": "Enable\/disable default application port enforcement for allowed applications.   \ndisable:Disable default application port enforcement.   \nenable:Enable default application port enforcement.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "force-inclusion-ssl-di-sigs": {
                                    "type": "string",
                                    "description": "Enable\/disable forced inclusion of SSL deep inspection signatures.   \ndisable:Disable forced inclusion of signatures which normally require SSL deep inspection.   \nenable:Enable forced inclusion of signatures which normally require SSL deep inspection.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "unknown-application-action": {
                                    "type": "string",
                                    "description": "Pass or block traffic from unknown applications.   \npass:Pass or allow unknown applications.   \nblock:Drop or block unknown applications.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "unknown-application-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging for unknown applications.   \ndisable:Disable logging for unknown applications.   \nenable:Enable logging for unknown applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "p2p-black-list": {
                                    "type": "string",
                                    "description": "P2P applications to be black listed.   \nskype:Skype.   \nedonkey:Edonkey.   \nbittorrent:Bit torrent.",
                                    "enum": [
                                        "skype",
                                        "edonkey",
                                        "bittorrent"
                                    ]
                                },
                                "deep-app-inspection": {
                                    "type": "string",
                                    "description": "Enable\/disable deep application inspection.   \ndisable:Disable deep application inspection.   \nenable:Enable deep application inspection.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Basic application protocol signatures allowed by default.   \nallow-dns:Allow DNS.   \nallow-icmp:Allow ICMP.   \nallow-http:Allow generic HTTP web browsing.   \nallow-ssl:Allow generic SSL communication.   \nallow-quic:Allow QUIC.",
                                    "enum": [
                                        "allow-dns",
                                        "allow-icmp",
                                        "allow-http",
                                        "allow-ssl",
                                        "allow-quic"
                                    ]
                                },
                                "entries": {
                                    "description": "Application list entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "risk": {
                                                "description": "Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "level": {
                                                            "type": "integer",
                                                            "description": "Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "category": {
                                                "description": "Category ID list.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Application category ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "application": {
                                                "description": "ID of allowed applications.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Application IDs.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "protocols": {
                                                "type": "string",
                                                "description": "Application protocol filter."
                                            },
                                            "vendor": {
                                                "type": "string",
                                                "description": "Application vendor filter."
                                            },
                                            "technology": {
                                                "type": "string",
                                                "description": "Application technology filter."
                                            },
                                            "behavior": {
                                                "type": "string",
                                                "description": "Application behavior filter."
                                            },
                                            "popularity": {
                                                "type": "string",
                                                "description": "Application popularity filter (1 - 5, from least to most popular).   \n1:Popularity level 1.   \n2:Popularity level 2.   \n3:Popularity level 3.   \n4:Popularity level 4.   \n5:Popularity level 5.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "3",
                                                    "4",
                                                    "5"
                                                ]
                                            },
                                            "exclusion": {
                                                "description": "ID of excluded applications.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Excluded application IDs.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "parameters": {
                                                "description": "Application parameters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Parameter tuple ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "members": {
                                                            "description": "Parameter tuple members.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Parameter.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "Parameter name.",
                                                                        "maxLength": 31
                                                                    },
                                                                    "value": {
                                                                        "type": "string",
                                                                        "description": "Parameter value.",
                                                                        "maxLength": 199
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Pass or block traffic, or reset connection for traffic from this application.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.   \nreset:Reset sessions for matching traffic.",
                                                "enum": [
                                                    "pass",
                                                    "block",
                                                    "reset"
                                                ]
                                            },
                                            "log": {
                                                "type": "string",
                                                "description": "Enable\/disable logging for this application list.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-packet": {
                                                "type": "string",
                                                "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-count": {
                                                "type": "integer",
                                                "description": "Count of the rate.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rate-duration": {
                                                "type": "integer",
                                                "description": "Duration (sec) of the rate.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "rate-mode": {
                                                "type": "string",
                                                "description": "Rate limit mode.   \nperiodical:Allow configured number of packets every rate-duration.   \ncontinuous:Block packets once the rate is reached.",
                                                "enum": [
                                                    "periodical",
                                                    "continuous"
                                                ]
                                            },
                                            "rate-track": {
                                                "type": "string",
                                                "description": "Track the packet protocol field.   \nnone:none   \nsrc-ip:Source IP.   \ndest-ip:Destination IP.   \ndhcp-client-mac:DHCP client.   \ndns-domain:DNS domain.",
                                                "enum": [
                                                    "none",
                                                    "src-ip",
                                                    "dest-ip",
                                                    "dhcp-client-mac",
                                                    "dns-domain"
                                                ]
                                            },
                                            "session-ttl": {
                                                "type": "integer",
                                                "description": "Session TTL (0 = default).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "shaper": {
                                                "type": "string",
                                                "description": "Traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "shaper-reverse": {
                                                "type": "string",
                                                "description": "Reverse traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "per-ip-shaper": {
                                                "type": "string",
                                                "description": "Per-IP traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "quarantine": {
                                                "type": "string",
                                                "description": "Quarantine method.   \nnone:Quarantine is disabled.   \nattacker:Block all traffic sent from attacker's IP address. The attacker's IP address is also added to the banned user list. The target's address is not affected.",
                                                "enum": [
                                                    "none",
                                                    "attacker"
                                                ]
                                            },
                                            "quarantine-expiry": {
                                                "type": "string",
                                                "description": "Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker."
                                            },
                                            "quarantine-log": {
                                                "type": "string",
                                                "description": "Enable\/disable quarantine logging.   \ndisable:Disable quarantine logging.   \nenable:Enable quarantine logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "control-default-network-services": {
                                    "type": "string",
                                    "description": "Enable\/disable enforcement of protocols over selected ports.   \ndisable:Disable protocol enforcement over selected ports.   \nenable:Enable protocol enforcement over selected ports.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "default-network-services": {
                                    "description": "Default network service entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Port number.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "services": {
                                                "type": "string",
                                                "description": "Network protocols.   \nhttp:HTTP.   \nssh:SSH.   \ntelnet:TELNET.   \nftp:FTP.   \ndns:DNS.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nsnmp:SNMP.   \nnntp:NNTP.   \nhttps:HTTPS.",
                                                "enum": [
                                                    "http",
                                                    "ssh",
                                                    "telnet",
                                                    "ftp",
                                                    "dns",
                                                    "smtp",
                                                    "pop3",
                                                    "imap",
                                                    "snmp",
                                                    "nntp",
                                                    "https"
                                                ]
                                            },
                                            "violation-action": {
                                                "type": "string",
                                                "description": "Action for protocols not white listed under selected port.   \npass:Allow protocols not white listed under selected port.   \nmonitor:Monitor protocols not white listed under selected port.   \nblock:Block protocols not white listed under selected port.",
                                                "enum": [
                                                    "pass",
                                                    "monitor",
                                                    "block"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "application\/list"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "application\/list"
                ]
            }
        },
        "\/application\/list": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "List name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "comments",
                                    "maxLength": 255
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "other-application-action": {
                                    "type": "string",
                                    "description": "Action for other applications.   \npass:Allow sessions matching an application in this application list.   \nblock:Block sessions matching an application in this application list.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "app-replacemsg": {
                                    "type": "string",
                                    "description": "Enable\/disable replacement messages for blocked applications.   \ndisable:Disable replacement messages for blocked applications.   \nenable:Enable replacement messages for blocked applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "other-application-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging for other applications.   \ndisable:Disable logging for other applications.   \nenable:Enable logging for other applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "enforce-default-app-port": {
                                    "type": "string",
                                    "description": "Enable\/disable default application port enforcement for allowed applications.   \ndisable:Disable default application port enforcement.   \nenable:Enable default application port enforcement.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "force-inclusion-ssl-di-sigs": {
                                    "type": "string",
                                    "description": "Enable\/disable forced inclusion of SSL deep inspection signatures.   \ndisable:Disable forced inclusion of signatures which normally require SSL deep inspection.   \nenable:Enable forced inclusion of signatures which normally require SSL deep inspection.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "unknown-application-action": {
                                    "type": "string",
                                    "description": "Pass or block traffic from unknown applications.   \npass:Pass or allow unknown applications.   \nblock:Drop or block unknown applications.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "unknown-application-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging for unknown applications.   \ndisable:Disable logging for unknown applications.   \nenable:Enable logging for unknown applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "p2p-black-list": {
                                    "type": "string",
                                    "description": "P2P applications to be black listed.   \nskype:Skype.   \nedonkey:Edonkey.   \nbittorrent:Bit torrent.",
                                    "enum": [
                                        "skype",
                                        "edonkey",
                                        "bittorrent"
                                    ]
                                },
                                "deep-app-inspection": {
                                    "type": "string",
                                    "description": "Enable\/disable deep application inspection.   \ndisable:Disable deep application inspection.   \nenable:Enable deep application inspection.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Basic application protocol signatures allowed by default.   \nallow-dns:Allow DNS.   \nallow-icmp:Allow ICMP.   \nallow-http:Allow generic HTTP web browsing.   \nallow-ssl:Allow generic SSL communication.   \nallow-quic:Allow QUIC.",
                                    "enum": [
                                        "allow-dns",
                                        "allow-icmp",
                                        "allow-http",
                                        "allow-ssl",
                                        "allow-quic"
                                    ]
                                },
                                "entries": {
                                    "description": "Application list entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "risk": {
                                                "description": "Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "level": {
                                                            "type": "integer",
                                                            "description": "Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "category": {
                                                "description": "Category ID list.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Application category ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "application": {
                                                "description": "ID of allowed applications.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Application IDs.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "protocols": {
                                                "type": "string",
                                                "description": "Application protocol filter."
                                            },
                                            "vendor": {
                                                "type": "string",
                                                "description": "Application vendor filter."
                                            },
                                            "technology": {
                                                "type": "string",
                                                "description": "Application technology filter."
                                            },
                                            "behavior": {
                                                "type": "string",
                                                "description": "Application behavior filter."
                                            },
                                            "popularity": {
                                                "type": "string",
                                                "description": "Application popularity filter (1 - 5, from least to most popular).   \n1:Popularity level 1.   \n2:Popularity level 2.   \n3:Popularity level 3.   \n4:Popularity level 4.   \n5:Popularity level 5.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "3",
                                                    "4",
                                                    "5"
                                                ]
                                            },
                                            "exclusion": {
                                                "description": "ID of excluded applications.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Excluded application IDs.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "parameters": {
                                                "description": "Application parameters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Parameter tuple ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "members": {
                                                            "description": "Parameter tuple members.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Parameter.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "Parameter name.",
                                                                        "maxLength": 31
                                                                    },
                                                                    "value": {
                                                                        "type": "string",
                                                                        "description": "Parameter value.",
                                                                        "maxLength": 199
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Pass or block traffic, or reset connection for traffic from this application.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.   \nreset:Reset sessions for matching traffic.",
                                                "enum": [
                                                    "pass",
                                                    "block",
                                                    "reset"
                                                ]
                                            },
                                            "log": {
                                                "type": "string",
                                                "description": "Enable\/disable logging for this application list.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-packet": {
                                                "type": "string",
                                                "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-count": {
                                                "type": "integer",
                                                "description": "Count of the rate.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rate-duration": {
                                                "type": "integer",
                                                "description": "Duration (sec) of the rate.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "rate-mode": {
                                                "type": "string",
                                                "description": "Rate limit mode.   \nperiodical:Allow configured number of packets every rate-duration.   \ncontinuous:Block packets once the rate is reached.",
                                                "enum": [
                                                    "periodical",
                                                    "continuous"
                                                ]
                                            },
                                            "rate-track": {
                                                "type": "string",
                                                "description": "Track the packet protocol field.   \nnone:none   \nsrc-ip:Source IP.   \ndest-ip:Destination IP.   \ndhcp-client-mac:DHCP client.   \ndns-domain:DNS domain.",
                                                "enum": [
                                                    "none",
                                                    "src-ip",
                                                    "dest-ip",
                                                    "dhcp-client-mac",
                                                    "dns-domain"
                                                ]
                                            },
                                            "session-ttl": {
                                                "type": "integer",
                                                "description": "Session TTL (0 = default).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "shaper": {
                                                "type": "string",
                                                "description": "Traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "shaper-reverse": {
                                                "type": "string",
                                                "description": "Reverse traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "per-ip-shaper": {
                                                "type": "string",
                                                "description": "Per-IP traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "quarantine": {
                                                "type": "string",
                                                "description": "Quarantine method.   \nnone:Quarantine is disabled.   \nattacker:Block all traffic sent from attacker's IP address. The attacker's IP address is also added to the banned user list. The target's address is not affected.",
                                                "enum": [
                                                    "none",
                                                    "attacker"
                                                ]
                                            },
                                            "quarantine-expiry": {
                                                "type": "string",
                                                "description": "Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker."
                                            },
                                            "quarantine-log": {
                                                "type": "string",
                                                "description": "Enable\/disable quarantine logging.   \ndisable:Disable quarantine logging.   \nenable:Enable quarantine logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "control-default-network-services": {
                                    "type": "string",
                                    "description": "Enable\/disable enforcement of protocols over selected ports.   \ndisable:Disable protocol enforcement over selected ports.   \nenable:Enable protocol enforcement over selected ports.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "default-network-services": {
                                    "description": "Default network service entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Port number.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "services": {
                                                "type": "string",
                                                "description": "Network protocols.   \nhttp:HTTP.   \nssh:SSH.   \ntelnet:TELNET.   \nftp:FTP.   \ndns:DNS.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nsnmp:SNMP.   \nnntp:NNTP.   \nhttps:HTTPS.",
                                                "enum": [
                                                    "http",
                                                    "ssh",
                                                    "telnet",
                                                    "ftp",
                                                    "dns",
                                                    "smtp",
                                                    "pop3",
                                                    "imap",
                                                    "snmp",
                                                    "nntp",
                                                    "https"
                                                ]
                                            },
                                            "violation-action": {
                                                "type": "string",
                                                "description": "Action for protocols not white listed under selected port.   \npass:Allow protocols not white listed under selected port.   \nmonitor:Monitor protocols not white listed under selected port.   \nblock:Block protocols not white listed under selected port.",
                                                "enum": [
                                                    "pass",
                                                    "monitor",
                                                    "block"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "application\/list"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "List name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "comments",
                                    "maxLength": 255
                                },
                                "replacemsg-group": {
                                    "type": "string",
                                    "description": "Replacement message group.",
                                    "maxLength": 35
                                },
                                "extended-log": {
                                    "type": "string",
                                    "description": "Enable\/disable extended logging.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "other-application-action": {
                                    "type": "string",
                                    "description": "Action for other applications.   \npass:Allow sessions matching an application in this application list.   \nblock:Block sessions matching an application in this application list.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "app-replacemsg": {
                                    "type": "string",
                                    "description": "Enable\/disable replacement messages for blocked applications.   \ndisable:Disable replacement messages for blocked applications.   \nenable:Enable replacement messages for blocked applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "other-application-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging for other applications.   \ndisable:Disable logging for other applications.   \nenable:Enable logging for other applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "enforce-default-app-port": {
                                    "type": "string",
                                    "description": "Enable\/disable default application port enforcement for allowed applications.   \ndisable:Disable default application port enforcement.   \nenable:Enable default application port enforcement.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "force-inclusion-ssl-di-sigs": {
                                    "type": "string",
                                    "description": "Enable\/disable forced inclusion of SSL deep inspection signatures.   \ndisable:Disable forced inclusion of signatures which normally require SSL deep inspection.   \nenable:Enable forced inclusion of signatures which normally require SSL deep inspection.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "unknown-application-action": {
                                    "type": "string",
                                    "description": "Pass or block traffic from unknown applications.   \npass:Pass or allow unknown applications.   \nblock:Drop or block unknown applications.",
                                    "enum": [
                                        "pass",
                                        "block"
                                    ]
                                },
                                "unknown-application-log": {
                                    "type": "string",
                                    "description": "Enable\/disable logging for unknown applications.   \ndisable:Disable logging for unknown applications.   \nenable:Enable logging for unknown applications.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "p2p-black-list": {
                                    "type": "string",
                                    "description": "P2P applications to be black listed.   \nskype:Skype.   \nedonkey:Edonkey.   \nbittorrent:Bit torrent.",
                                    "enum": [
                                        "skype",
                                        "edonkey",
                                        "bittorrent"
                                    ]
                                },
                                "deep-app-inspection": {
                                    "type": "string",
                                    "description": "Enable\/disable deep application inspection.   \ndisable:Disable deep application inspection.   \nenable:Enable deep application inspection.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Basic application protocol signatures allowed by default.   \nallow-dns:Allow DNS.   \nallow-icmp:Allow ICMP.   \nallow-http:Allow generic HTTP web browsing.   \nallow-ssl:Allow generic SSL communication.   \nallow-quic:Allow QUIC.",
                                    "enum": [
                                        "allow-dns",
                                        "allow-icmp",
                                        "allow-http",
                                        "allow-ssl",
                                        "allow-quic"
                                    ]
                                },
                                "entries": {
                                    "description": "Application list entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "risk": {
                                                "description": "Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "level": {
                                                            "type": "integer",
                                                            "description": "Risk, or impact, of allowing traffic from this application to occur (1 - 5; Low, Elevated, Medium, High, and Critical).",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "category": {
                                                "description": "Category ID list.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Application category ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "application": {
                                                "description": "ID of allowed applications.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Application IDs.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "protocols": {
                                                "type": "string",
                                                "description": "Application protocol filter."
                                            },
                                            "vendor": {
                                                "type": "string",
                                                "description": "Application vendor filter."
                                            },
                                            "technology": {
                                                "type": "string",
                                                "description": "Application technology filter."
                                            },
                                            "behavior": {
                                                "type": "string",
                                                "description": "Application behavior filter."
                                            },
                                            "popularity": {
                                                "type": "string",
                                                "description": "Application popularity filter (1 - 5, from least to most popular).   \n1:Popularity level 1.   \n2:Popularity level 2.   \n3:Popularity level 3.   \n4:Popularity level 4.   \n5:Popularity level 5.",
                                                "enum": [
                                                    "1",
                                                    "2",
                                                    "3",
                                                    "4",
                                                    "5"
                                                ]
                                            },
                                            "exclusion": {
                                                "description": "ID of excluded applications.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Excluded application IDs.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "parameters": {
                                                "description": "Application parameters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Parameter tuple ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "members": {
                                                            "description": "Parameter tuple members.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Parameter.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "Parameter name.",
                                                                        "maxLength": 31
                                                                    },
                                                                    "value": {
                                                                        "type": "string",
                                                                        "description": "Parameter value.",
                                                                        "maxLength": 199
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Pass or block traffic, or reset connection for traffic from this application.   \npass:Pass or allow matching traffic.   \nblock:Block or drop matching traffic.   \nreset:Reset sessions for matching traffic.",
                                                "enum": [
                                                    "pass",
                                                    "block",
                                                    "reset"
                                                ]
                                            },
                                            "log": {
                                                "type": "string",
                                                "description": "Enable\/disable logging for this application list.   \ndisable:Disable logging.   \nenable:Enable logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "log-packet": {
                                                "type": "string",
                                                "description": "Enable\/disable packet logging.   \ndisable:Disable packet logging.   \nenable:Enable packet logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "rate-count": {
                                                "type": "integer",
                                                "description": "Count of the rate.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "rate-duration": {
                                                "type": "integer",
                                                "description": "Duration (sec) of the rate.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "rate-mode": {
                                                "type": "string",
                                                "description": "Rate limit mode.   \nperiodical:Allow configured number of packets every rate-duration.   \ncontinuous:Block packets once the rate is reached.",
                                                "enum": [
                                                    "periodical",
                                                    "continuous"
                                                ]
                                            },
                                            "rate-track": {
                                                "type": "string",
                                                "description": "Track the packet protocol field.   \nnone:none   \nsrc-ip:Source IP.   \ndest-ip:Destination IP.   \ndhcp-client-mac:DHCP client.   \ndns-domain:DNS domain.",
                                                "enum": [
                                                    "none",
                                                    "src-ip",
                                                    "dest-ip",
                                                    "dhcp-client-mac",
                                                    "dns-domain"
                                                ]
                                            },
                                            "session-ttl": {
                                                "type": "integer",
                                                "description": "Session TTL (0 = default).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "shaper": {
                                                "type": "string",
                                                "description": "Traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "shaper-reverse": {
                                                "type": "string",
                                                "description": "Reverse traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "per-ip-shaper": {
                                                "type": "string",
                                                "description": "Per-IP traffic shaper.",
                                                "maxLength": 35
                                            },
                                            "quarantine": {
                                                "type": "string",
                                                "description": "Quarantine method.   \nnone:Quarantine is disabled.   \nattacker:Block all traffic sent from attacker's IP address. The attacker's IP address is also added to the banned user list. The target's address is not affected.",
                                                "enum": [
                                                    "none",
                                                    "attacker"
                                                ]
                                            },
                                            "quarantine-expiry": {
                                                "type": "string",
                                                "description": "Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker."
                                            },
                                            "quarantine-log": {
                                                "type": "string",
                                                "description": "Enable\/disable quarantine logging.   \ndisable:Disable quarantine logging.   \nenable:Enable quarantine logging.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "control-default-network-services": {
                                    "type": "string",
                                    "description": "Enable\/disable enforcement of protocols over selected ports.   \ndisable:Disable protocol enforcement over selected ports.   \nenable:Enable protocol enforcement over selected ports.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "default-network-services": {
                                    "description": "Default network service entries.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Port number.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "services": {
                                                "type": "string",
                                                "description": "Network protocols.   \nhttp:HTTP.   \nssh:SSH.   \ntelnet:TELNET.   \nftp:FTP.   \ndns:DNS.   \nsmtp:SMTP.   \npop3:POP3.   \nimap:IMAP.   \nsnmp:SNMP.   \nnntp:NNTP.   \nhttps:HTTPS.",
                                                "enum": [
                                                    "http",
                                                    "ssh",
                                                    "telnet",
                                                    "ftp",
                                                    "dns",
                                                    "smtp",
                                                    "pop3",
                                                    "imap",
                                                    "snmp",
                                                    "nntp",
                                                    "https"
                                                ]
                                            },
                                            "violation-action": {
                                                "type": "string",
                                                "description": "Action for protocols not white listed under selected port.   \npass:Allow protocols not white listed under selected port.   \nmonitor:Monitor protocols not white listed under selected port.   \nblock:Block protocols not white listed under selected port.",
                                                "enum": [
                                                    "pass",
                                                    "monitor",
                                                    "block"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "application\/list"
                ]
            }
        },
        "\/application\/name\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Application name.",
                                    "maxLength": 63
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Application ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "category": {
                                    "type": "integer",
                                    "description": "Application category ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "popularity": {
                                    "type": "integer",
                                    "description": "Application popularity.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "risk": {
                                    "type": "integer",
                                    "description": "Application risk.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "weight": {
                                    "type": "integer",
                                    "description": "Application weight.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Application protocol."
                                },
                                "technology": {
                                    "type": "string",
                                    "description": "Application technology."
                                },
                                "behavior": {
                                    "type": "string",
                                    "description": "Application behavior."
                                },
                                "vendor": {
                                    "type": "string",
                                    "description": "Application vendor."
                                },
                                "parameters": {
                                    "description": "Application parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Parameter name.",
                                                "maxLength": 31
                                            },
                                            "default value": {
                                                "type": "string",
                                                "description": "Parameter default value.",
                                                "maxLength": 199
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "metadata": {
                                    "description": "Meta data.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "metaid": {
                                                "type": "integer",
                                                "description": "Meta ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "valueid": {
                                                "type": "integer",
                                                "description": "Value ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "application\/name"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Application name.",
                                    "maxLength": 63
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Application ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "category": {
                                    "type": "integer",
                                    "description": "Application category ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "popularity": {
                                    "type": "integer",
                                    "description": "Application popularity.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "risk": {
                                    "type": "integer",
                                    "description": "Application risk.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "weight": {
                                    "type": "integer",
                                    "description": "Application weight.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Application protocol."
                                },
                                "technology": {
                                    "type": "string",
                                    "description": "Application technology."
                                },
                                "behavior": {
                                    "type": "string",
                                    "description": "Application behavior."
                                },
                                "vendor": {
                                    "type": "string",
                                    "description": "Application vendor."
                                },
                                "parameters": {
                                    "description": "Application parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Parameter name.",
                                                "maxLength": 31
                                            },
                                            "default value": {
                                                "type": "string",
                                                "description": "Parameter default value.",
                                                "maxLength": 199
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "metadata": {
                                    "description": "Meta data.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "metaid": {
                                                "type": "integer",
                                                "description": "Meta ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "valueid": {
                                                "type": "integer",
                                                "description": "Value ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "application\/name"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "application\/name"
                ]
            }
        },
        "\/application\/name": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Application name.",
                                    "maxLength": 63
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Application ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "category": {
                                    "type": "integer",
                                    "description": "Application category ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "popularity": {
                                    "type": "integer",
                                    "description": "Application popularity.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "risk": {
                                    "type": "integer",
                                    "description": "Application risk.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "weight": {
                                    "type": "integer",
                                    "description": "Application weight.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Application protocol."
                                },
                                "technology": {
                                    "type": "string",
                                    "description": "Application technology."
                                },
                                "behavior": {
                                    "type": "string",
                                    "description": "Application behavior."
                                },
                                "vendor": {
                                    "type": "string",
                                    "description": "Application vendor."
                                },
                                "parameters": {
                                    "description": "Application parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Parameter name.",
                                                "maxLength": 31
                                            },
                                            "default value": {
                                                "type": "string",
                                                "description": "Parameter default value.",
                                                "maxLength": 199
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "metadata": {
                                    "description": "Meta data.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "metaid": {
                                                "type": "integer",
                                                "description": "Meta ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "valueid": {
                                                "type": "integer",
                                                "description": "Value ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "application\/name"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Application name.",
                                    "maxLength": 63
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "Application ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "category": {
                                    "type": "integer",
                                    "description": "Application category ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "popularity": {
                                    "type": "integer",
                                    "description": "Application popularity.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "risk": {
                                    "type": "integer",
                                    "description": "Application risk.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "weight": {
                                    "type": "integer",
                                    "description": "Application weight.",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "protocol": {
                                    "type": "string",
                                    "description": "Application protocol."
                                },
                                "technology": {
                                    "type": "string",
                                    "description": "Application technology."
                                },
                                "behavior": {
                                    "type": "string",
                                    "description": "Application behavior."
                                },
                                "vendor": {
                                    "type": "string",
                                    "description": "Application vendor."
                                },
                                "parameters": {
                                    "description": "Application parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Parameter name.",
                                                "maxLength": 31
                                            },
                                            "default value": {
                                                "type": "string",
                                                "description": "Parameter default value.",
                                                "maxLength": 199
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "metadata": {
                                    "description": "Meta data.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "metaid": {
                                                "type": "integer",
                                                "description": "Meta ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "valueid": {
                                                "type": "integer",
                                                "description": "Value ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "application\/name"
                ]
            }
        },
        "\/application\/rule-settings\/{id}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "application\/rule-settings"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "application\/rule-settings"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "application\/rule-settings"
                ]
            }
        },
        "\/application\/rule-settings": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "application\/rule-settings"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: utmgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "Rule ID.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "application\/rule-settings"
                ]
            }
        }
    }
}