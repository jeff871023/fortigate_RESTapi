{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS CMDB"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/cmdb",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "tags": [
        {
            "name": "vpn.certificate\/ca",
            "description": "CA certificate."
        },
        {
            "name": "vpn.certificate\/crl",
            "description": "Certificate Revocation List as a PEM file."
        },
        {
            "name": "vpn.certificate\/local",
            "description": "Local keys and certificates."
        },
        {
            "name": "vpn.certificate\/ocsp-server",
            "description": "OCSP server configuration."
        },
        {
            "name": "vpn.certificate\/remote",
            "description": "Remote certificate as a PEM file."
        },
        {
            "name": "vpn.certificate\/setting",
            "description": "VPN certificate setting."
        },
        {
            "name": "vpn.ipsec\/concentrator",
            "description": "Concentrator configuration."
        },
        {
            "name": "vpn.ipsec\/forticlient",
            "description": "Configure FortiClient policy realm."
        },
        {
            "name": "vpn.ipsec\/manualkey",
            "description": "Configure IPsec manual keys."
        },
        {
            "name": "vpn.ipsec\/manualkey-interface",
            "description": "Configure IPsec manual keys."
        },
        {
            "name": "vpn.ipsec\/phase1",
            "description": "Configure VPN remote gateway."
        },
        {
            "name": "vpn.ipsec\/phase1-interface",
            "description": "Configure VPN remote gateway."
        },
        {
            "name": "vpn.ipsec\/phase2",
            "description": "Configure VPN autokey tunnel."
        },
        {
            "name": "vpn.ipsec\/phase2-interface",
            "description": "Configure VPN autokey tunnel."
        },
        {
            "name": "vpn.ssl.web\/host-check-software",
            "description": "SSL-VPN host check software."
        },
        {
            "name": "vpn.ssl.web\/portal",
            "description": "Portal."
        },
        {
            "name": "vpn.ssl.web\/realm",
            "description": "Realm."
        },
        {
            "name": "vpn.ssl.web\/user-bookmark",
            "description": "Configure SSL-VPN user bookmark."
        },
        {
            "name": "vpn.ssl.web\/user-group-bookmark",
            "description": "Configure SSL-VPN user group bookmark."
        },
        {
            "name": "vpn.ssl\/settings",
            "description": "Configure SSL-VPN."
        },
        {
            "name": "vpn\/l2tp",
            "description": "Configure L2TP."
        },
        {
            "name": "vpn\/ocvpn",
            "description": "Configure Overlay Controller VPN settings."
        },
        {
            "name": "vpn\/pptp",
            "description": "Configure PPTP."
        }
    ],
    "paths": {
        "\/vpn.certificate\/ca\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 79
                                },
                                "ca": {
                                    "type": "string",
                                    "description": "CA certificate as a PEM file."
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either global or VDOM IP address range for the CA certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "CA certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                },
                                "ssl-inspection-trusted": {
                                    "type": "string",
                                    "description": "Enable\/disable this CA as a trusted CA for SSL inspection.   \nenable:Trusted CA for SSL inspection.   \ndisable:Untrusted CA for SSL inspection.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "scep-url": {
                                    "type": "string",
                                    "description": "URL of the SCEP server.",
                                    "maxLength": 255
                                },
                                "auto-update-days": {
                                    "type": "integer",
                                    "description": "Number of days to wait before requesting an updated CA certificate (0 - 4294967295, 0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "auto-update-days-warning": {
                                    "type": "integer",
                                    "description": "Number of days before an expiry-warning message is generated (0 - 4294967295, 0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to the SCEP server."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.certificate\/ca"
                ]
            }
        },
        "\/vpn.certificate\/ca": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 79
                                },
                                "ca": {
                                    "type": "string",
                                    "description": "CA certificate as a PEM file."
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either global or VDOM IP address range for the CA certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "CA certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                },
                                "ssl-inspection-trusted": {
                                    "type": "string",
                                    "description": "Enable\/disable this CA as a trusted CA for SSL inspection.   \nenable:Trusted CA for SSL inspection.   \ndisable:Untrusted CA for SSL inspection.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "scep-url": {
                                    "type": "string",
                                    "description": "URL of the SCEP server.",
                                    "maxLength": 255
                                },
                                "auto-update-days": {
                                    "type": "integer",
                                    "description": "Number of days to wait before requesting an updated CA certificate (0 - 4294967295, 0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "auto-update-days-warning": {
                                    "type": "integer",
                                    "description": "Number of days before an expiry-warning message is generated (0 - 4294967295, 0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to the SCEP server."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.certificate\/ca"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 79
                                },
                                "ca": {
                                    "type": "string",
                                    "description": "CA certificate as a PEM file."
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either global or VDOM IP address range for the CA certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "CA certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                },
                                "ssl-inspection-trusted": {
                                    "type": "string",
                                    "description": "Enable\/disable this CA as a trusted CA for SSL inspection.   \nenable:Trusted CA for SSL inspection.   \ndisable:Untrusted CA for SSL inspection.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "scep-url": {
                                    "type": "string",
                                    "description": "URL of the SCEP server.",
                                    "maxLength": 255
                                },
                                "auto-update-days": {
                                    "type": "integer",
                                    "description": "Number of days to wait before requesting an updated CA certificate (0 - 4294967295, 0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "auto-update-days-warning": {
                                    "type": "integer",
                                    "description": "Number of days before an expiry-warning message is generated (0 - 4294967295, 0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to the SCEP server."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.certificate\/ca"
                ]
            }
        },
        "\/vpn.certificate\/crl\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "crl": {
                                    "type": "string",
                                    "description": "Certificate Revocation List as a PEM file."
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either global or VDOM IP address range for the certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                },
                                "update-vdom": {
                                    "type": "string",
                                    "description": "VDOM for CRL update.",
                                    "maxLength": 31
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "LDAP server name for CRL auto-update.",
                                    "maxLength": 35
                                },
                                "ldap-username": {
                                    "type": "string",
                                    "description": "LDAP server user name.",
                                    "maxLength": 63
                                },
                                "ldap-password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "LDAP server user password."
                                },
                                "http-url": {
                                    "type": "string",
                                    "description": "HTTP server URL for CRL auto-update.",
                                    "maxLength": 255
                                },
                                "scep-url": {
                                    "type": "string",
                                    "description": "SCEP server URL for CRL auto-update.",
                                    "maxLength": 255
                                },
                                "scep-cert": {
                                    "type": "string",
                                    "description": "Local certificate for SCEP communication for CRL auto-update.",
                                    "maxLength": 35
                                },
                                "update-interval": {
                                    "type": "integer",
                                    "description": "Time in seconds before the FortiGate checks for an updated CRL. Set to 0 to update only when it expires.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to a HTTP or SCEP CA server."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.certificate\/crl"
                ]
            }
        },
        "\/vpn.certificate\/crl": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "crl": {
                                    "type": "string",
                                    "description": "Certificate Revocation List as a PEM file."
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either global or VDOM IP address range for the certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                },
                                "update-vdom": {
                                    "type": "string",
                                    "description": "VDOM for CRL update.",
                                    "maxLength": 31
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "LDAP server name for CRL auto-update.",
                                    "maxLength": 35
                                },
                                "ldap-username": {
                                    "type": "string",
                                    "description": "LDAP server user name.",
                                    "maxLength": 63
                                },
                                "ldap-password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "LDAP server user password."
                                },
                                "http-url": {
                                    "type": "string",
                                    "description": "HTTP server URL for CRL auto-update.",
                                    "maxLength": 255
                                },
                                "scep-url": {
                                    "type": "string",
                                    "description": "SCEP server URL for CRL auto-update.",
                                    "maxLength": 255
                                },
                                "scep-cert": {
                                    "type": "string",
                                    "description": "Local certificate for SCEP communication for CRL auto-update.",
                                    "maxLength": 35
                                },
                                "update-interval": {
                                    "type": "integer",
                                    "description": "Time in seconds before the FortiGate checks for an updated CRL. Set to 0 to update only when it expires.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to a HTTP or SCEP CA server."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.certificate\/crl"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "crl": {
                                    "type": "string",
                                    "description": "Certificate Revocation List as a PEM file."
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either global or VDOM IP address range for the certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                },
                                "update-vdom": {
                                    "type": "string",
                                    "description": "VDOM for CRL update.",
                                    "maxLength": 31
                                },
                                "ldap-server": {
                                    "type": "string",
                                    "description": "LDAP server name for CRL auto-update.",
                                    "maxLength": 35
                                },
                                "ldap-username": {
                                    "type": "string",
                                    "description": "LDAP server user name.",
                                    "maxLength": 63
                                },
                                "ldap-password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "LDAP server user password."
                                },
                                "http-url": {
                                    "type": "string",
                                    "description": "HTTP server URL for CRL auto-update.",
                                    "maxLength": 255
                                },
                                "scep-url": {
                                    "type": "string",
                                    "description": "SCEP server URL for CRL auto-update.",
                                    "maxLength": 255
                                },
                                "scep-cert": {
                                    "type": "string",
                                    "description": "Local certificate for SCEP communication for CRL auto-update.",
                                    "maxLength": 35
                                },
                                "update-interval": {
                                    "type": "integer",
                                    "description": "Time in seconds before the FortiGate checks for an updated CRL. Set to 0 to update only when it expires.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to a HTTP or SCEP CA server."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.certificate\/crl"
                ]
            }
        },
        "\/vpn.certificate\/local\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password as a PEM file."
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 511
                                },
                                "private-key": {
                                    "type": "string",
                                    "description": "PEM format key, encrypted with a password."
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "PEM format certificate."
                                },
                                "csr": {
                                    "type": "string",
                                    "description": "Certificate Signing Request."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "Certificate Signing Request State."
                                },
                                "scep-url": {
                                    "type": "string",
                                    "description": "SCEP server URL.",
                                    "maxLength": 255
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either a global or VDOM IP address range for the certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                },
                                "auto-regenerate-days": {
                                    "type": "integer",
                                    "description": "Number of days to wait before expiry of an updated local certificate is requested (0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "auto-regenerate-days-warning": {
                                    "type": "integer",
                                    "description": "Number of days to wait before an expiry warning message is generated (0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "scep-password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "SCEP server challenge password for auto-regeneration."
                                },
                                "ca-identifier": {
                                    "type": "string",
                                    "description": "CA identifier of the CA server for signing via SCEP.",
                                    "maxLength": 255
                                },
                                "name-encoding": {
                                    "type": "string",
                                    "description": "Name encoding method for auto-regeneration.   \nprintable:Printable encoding (default).   \nutf8:UTF-8 encoding.",
                                    "enum": [
                                        "printable",
                                        "utf8"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to the SCEP server."
                                },
                                "ike-localid": {
                                    "type": "string",
                                    "description": "Local ID the FortiGate uses for authentication as a VPN client.",
                                    "maxLength": 63
                                },
                                "ike-localid-type": {
                                    "type": "string",
                                    "description": "IKE local ID type.   \nasn1dn:ASN.1 distinguished name.   \nfqdn:Fully qualified domain name.",
                                    "enum": [
                                        "asn1dn",
                                        "fqdn"
                                    ]
                                },
                                "enroll-protocol": {
                                    "type": "string",
                                    "description": "Certificate enrollment protocol.   \nnone:None (default).   \nscep:Simple Certificate Enrollment Protocol.   \ncmpv2:Certificate Management Protocol Version 2.",
                                    "enum": [
                                        "none",
                                        "scep",
                                        "cmpv2"
                                    ]
                                },
                                "cmp-server": {
                                    "type": "string",
                                    "description": "'ADDRESS:PORT' for CMP server.",
                                    "maxLength": 63
                                },
                                "cmp-path": {
                                    "type": "string",
                                    "description": "Path location inside CMP server.",
                                    "maxLength": 255
                                },
                                "cmp-server-cert": {
                                    "type": "string",
                                    "description": "CMP server certificate.",
                                    "maxLength": 79
                                },
                                "cmp-regeneration-method": {
                                    "type": "string",
                                    "description": "CMP auto-regeneration method.   \nkeyupate:Key Update.   \nrenewal:Renewal.",
                                    "enum": [
                                        "keyupate",
                                        "renewal"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.certificate\/local"
                ]
            }
        },
        "\/vpn.certificate\/local": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password as a PEM file."
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 511
                                },
                                "private-key": {
                                    "type": "string",
                                    "description": "PEM format key, encrypted with a password."
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "PEM format certificate."
                                },
                                "csr": {
                                    "type": "string",
                                    "description": "Certificate Signing Request."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "Certificate Signing Request State."
                                },
                                "scep-url": {
                                    "type": "string",
                                    "description": "SCEP server URL.",
                                    "maxLength": 255
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either a global or VDOM IP address range for the certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                },
                                "auto-regenerate-days": {
                                    "type": "integer",
                                    "description": "Number of days to wait before expiry of an updated local certificate is requested (0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "auto-regenerate-days-warning": {
                                    "type": "integer",
                                    "description": "Number of days to wait before an expiry warning message is generated (0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "scep-password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "SCEP server challenge password for auto-regeneration."
                                },
                                "ca-identifier": {
                                    "type": "string",
                                    "description": "CA identifier of the CA server for signing via SCEP.",
                                    "maxLength": 255
                                },
                                "name-encoding": {
                                    "type": "string",
                                    "description": "Name encoding method for auto-regeneration.   \nprintable:Printable encoding (default).   \nutf8:UTF-8 encoding.",
                                    "enum": [
                                        "printable",
                                        "utf8"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to the SCEP server."
                                },
                                "ike-localid": {
                                    "type": "string",
                                    "description": "Local ID the FortiGate uses for authentication as a VPN client.",
                                    "maxLength": 63
                                },
                                "ike-localid-type": {
                                    "type": "string",
                                    "description": "IKE local ID type.   \nasn1dn:ASN.1 distinguished name.   \nfqdn:Fully qualified domain name.",
                                    "enum": [
                                        "asn1dn",
                                        "fqdn"
                                    ]
                                },
                                "enroll-protocol": {
                                    "type": "string",
                                    "description": "Certificate enrollment protocol.   \nnone:None (default).   \nscep:Simple Certificate Enrollment Protocol.   \ncmpv2:Certificate Management Protocol Version 2.",
                                    "enum": [
                                        "none",
                                        "scep",
                                        "cmpv2"
                                    ]
                                },
                                "cmp-server": {
                                    "type": "string",
                                    "description": "'ADDRESS:PORT' for CMP server.",
                                    "maxLength": 63
                                },
                                "cmp-path": {
                                    "type": "string",
                                    "description": "Path location inside CMP server.",
                                    "maxLength": 255
                                },
                                "cmp-server-cert": {
                                    "type": "string",
                                    "description": "CMP server certificate.",
                                    "maxLength": 79
                                },
                                "cmp-regeneration-method": {
                                    "type": "string",
                                    "description": "CMP auto-regeneration method.   \nkeyupate:Key Update.   \nrenewal:Renewal.",
                                    "enum": [
                                        "keyupate",
                                        "renewal"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.certificate\/local"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password as a PEM file."
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 511
                                },
                                "private-key": {
                                    "type": "string",
                                    "description": "PEM format key, encrypted with a password."
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "PEM format certificate."
                                },
                                "csr": {
                                    "type": "string",
                                    "description": "Certificate Signing Request."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "Certificate Signing Request State."
                                },
                                "scep-url": {
                                    "type": "string",
                                    "description": "SCEP server URL.",
                                    "maxLength": 255
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either a global or VDOM IP address range for the certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                },
                                "auto-regenerate-days": {
                                    "type": "integer",
                                    "description": "Number of days to wait before expiry of an updated local certificate is requested (0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "auto-regenerate-days-warning": {
                                    "type": "integer",
                                    "description": "Number of days to wait before an expiry warning message is generated (0 = disabled).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "scep-password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "SCEP server challenge password for auto-regeneration."
                                },
                                "ca-identifier": {
                                    "type": "string",
                                    "description": "CA identifier of the CA server for signing via SCEP.",
                                    "maxLength": 255
                                },
                                "name-encoding": {
                                    "type": "string",
                                    "description": "Name encoding method for auto-regeneration.   \nprintable:Printable encoding (default).   \nutf8:UTF-8 encoding.",
                                    "enum": [
                                        "printable",
                                        "utf8"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to the SCEP server."
                                },
                                "ike-localid": {
                                    "type": "string",
                                    "description": "Local ID the FortiGate uses for authentication as a VPN client.",
                                    "maxLength": 63
                                },
                                "ike-localid-type": {
                                    "type": "string",
                                    "description": "IKE local ID type.   \nasn1dn:ASN.1 distinguished name.   \nfqdn:Fully qualified domain name.",
                                    "enum": [
                                        "asn1dn",
                                        "fqdn"
                                    ]
                                },
                                "enroll-protocol": {
                                    "type": "string",
                                    "description": "Certificate enrollment protocol.   \nnone:None (default).   \nscep:Simple Certificate Enrollment Protocol.   \ncmpv2:Certificate Management Protocol Version 2.",
                                    "enum": [
                                        "none",
                                        "scep",
                                        "cmpv2"
                                    ]
                                },
                                "cmp-server": {
                                    "type": "string",
                                    "description": "'ADDRESS:PORT' for CMP server.",
                                    "maxLength": 63
                                },
                                "cmp-path": {
                                    "type": "string",
                                    "description": "Path location inside CMP server.",
                                    "maxLength": 255
                                },
                                "cmp-server-cert": {
                                    "type": "string",
                                    "description": "CMP server certificate.",
                                    "maxLength": 79
                                },
                                "cmp-regeneration-method": {
                                    "type": "string",
                                    "description": "CMP auto-regeneration method.   \nkeyupate:Key Update.   \nrenewal:Renewal.",
                                    "enum": [
                                        "keyupate",
                                        "renewal"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.certificate\/local"
                ]
            }
        },
        "\/vpn.certificate\/ocsp-server\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "OCSP server entry name.",
                                    "maxLength": 35
                                },
                                "url": {
                                    "type": "string",
                                    "description": "OCSP server URL.",
                                    "maxLength": 127
                                },
                                "cert": {
                                    "type": "string",
                                    "description": "OCSP server certificate.",
                                    "maxLength": 127
                                },
                                "secondary-url": {
                                    "type": "string",
                                    "description": "Secondary OCSP server URL.",
                                    "maxLength": 127
                                },
                                "secondary-cert": {
                                    "type": "string",
                                    "description": "Secondary OCSP server certificate.",
                                    "maxLength": 127
                                },
                                "unavail-action": {
                                    "type": "string",
                                    "description": "Action when server is unavailable (revoke the certificate or ignore the result of the check).   \nrevoke:Revoke certificate if server is unavailable.   \nignore:Ignore OCSP check if server is unavailable.",
                                    "enum": [
                                        "revoke",
                                        "ignore"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to the OCSP server."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.certificate\/ocsp-server"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "OCSP server entry name.",
                                    "maxLength": 35
                                },
                                "url": {
                                    "type": "string",
                                    "description": "OCSP server URL.",
                                    "maxLength": 127
                                },
                                "cert": {
                                    "type": "string",
                                    "description": "OCSP server certificate.",
                                    "maxLength": 127
                                },
                                "secondary-url": {
                                    "type": "string",
                                    "description": "Secondary OCSP server URL.",
                                    "maxLength": 127
                                },
                                "secondary-cert": {
                                    "type": "string",
                                    "description": "Secondary OCSP server certificate.",
                                    "maxLength": 127
                                },
                                "unavail-action": {
                                    "type": "string",
                                    "description": "Action when server is unavailable (revoke the certificate or ignore the result of the check).   \nrevoke:Revoke certificate if server is unavailable.   \nignore:Ignore OCSP check if server is unavailable.",
                                    "enum": [
                                        "revoke",
                                        "ignore"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to the OCSP server."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.certificate\/ocsp-server"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.certificate\/ocsp-server"
                ]
            }
        },
        "\/vpn.certificate\/ocsp-server": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "OCSP server entry name.",
                                    "maxLength": 35
                                },
                                "url": {
                                    "type": "string",
                                    "description": "OCSP server URL.",
                                    "maxLength": 127
                                },
                                "cert": {
                                    "type": "string",
                                    "description": "OCSP server certificate.",
                                    "maxLength": 127
                                },
                                "secondary-url": {
                                    "type": "string",
                                    "description": "Secondary OCSP server URL.",
                                    "maxLength": 127
                                },
                                "secondary-cert": {
                                    "type": "string",
                                    "description": "Secondary OCSP server certificate.",
                                    "maxLength": 127
                                },
                                "unavail-action": {
                                    "type": "string",
                                    "description": "Action when server is unavailable (revoke the certificate or ignore the result of the check).   \nrevoke:Revoke certificate if server is unavailable.   \nignore:Ignore OCSP check if server is unavailable.",
                                    "enum": [
                                        "revoke",
                                        "ignore"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to the OCSP server."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.certificate\/ocsp-server"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "OCSP server entry name.",
                                    "maxLength": 35
                                },
                                "url": {
                                    "type": "string",
                                    "description": "OCSP server URL.",
                                    "maxLength": 127
                                },
                                "cert": {
                                    "type": "string",
                                    "description": "OCSP server certificate.",
                                    "maxLength": 127
                                },
                                "secondary-url": {
                                    "type": "string",
                                    "description": "Secondary OCSP server URL.",
                                    "maxLength": 127
                                },
                                "secondary-cert": {
                                    "type": "string",
                                    "description": "Secondary OCSP server certificate.",
                                    "maxLength": 127
                                },
                                "unavail-action": {
                                    "type": "string",
                                    "description": "Action when server is unavailable (revoke the certificate or ignore the result of the check).   \nrevoke:Revoke certificate if server is unavailable.   \nignore:Ignore OCSP check if server is unavailable.",
                                    "enum": [
                                        "revoke",
                                        "ignore"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address for communications to the OCSP server."
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.certificate\/ocsp-server"
                ]
            }
        },
        "\/vpn.certificate\/remote\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote certificate."
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either the global or VDOM IP address range for the remote certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Remote certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.certificate\/remote"
                ]
            }
        },
        "\/vpn.certificate\/remote": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote certificate."
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either the global or VDOM IP address range for the remote certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Remote certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.certificate\/remote"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 35
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote certificate."
                                },
                                "range": {
                                    "type": "string",
                                    "description": "Either the global or VDOM IP address range for the remote certificate.   \nglobal:Global range.   \nvdom:VDOM IP address range.",
                                    "enum": [
                                        "global",
                                        "vdom"
                                    ]
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Remote certificate source type.   \nfactory:Factory installed certificate.   \nuser:User generated certificate.   \nbundle:Bundle file certificate.",
                                    "enum": [
                                        "factory",
                                        "user",
                                        "bundle"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.certificate\/remote"
                ]
            }
        },
        "\/vpn.certificate\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "ocsp-status": {
                                    "type": "string",
                                    "description": "Enable\/disable receiving certificates using the OCSP.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ocsp-option": {
                                    "type": "string",
                                    "description": "Specify whether the OCSP URL is from certificate or configured OCSP server.   \ncertificate:Use URL from certificate.   \nserver:Use URL from configured OCSP server.",
                                    "enum": [
                                        "certificate",
                                        "server"
                                    ]
                                },
                                "ssl-ocsp-source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address to use to communicate with the OCSP server."
                                },
                                "ocsp-default-server": {
                                    "type": "string",
                                    "description": "Default OCSP server.",
                                    "maxLength": 35
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                },
                                "check-ca-cert": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of the user certificate and pass authentication if any CA in the chain is trusted (default = enable).   \nenable:Enable verification of the user certificate.   \ndisable:Disable verification of the user certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "check-ca-chain": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of the entire certificate chain and pass authentication only if the chain is complete and all of the CAs in the chain are trusted (default = disable).   \nenable:Enable verification of the entire certificate chain.   \ndisable:Disable verification of the entire certificate chain.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "subject-match": {
                                    "type": "string",
                                    "description": "When searching for a matching certificate, control how to find matches in the certificate subject name.   \nsubstring:Find a match if any string in the certificate subject name matches the name being searched for.   \nvalue:Find a match if any attribute value string in a certificate subject name is an exact match with the name being searched for.",
                                    "enum": [
                                        "substring",
                                        "value"
                                    ]
                                },
                                "cn-match": {
                                    "type": "string",
                                    "description": "When searching for a matching certificate, control how to find matches in the cn attribute of the certificate subject name.   \nsubstring:Find a match if any string in a certificate subject name cn attribute name matches the name being searched for.   \nvalue:Find a match if the cn attribute value string is an exact match with the name being searched for.",
                                    "enum": [
                                        "substring",
                                        "value"
                                    ]
                                },
                                "strict-crl-check": {
                                    "type": "string",
                                    "description": "Enable\/disable strict mode CRL checking.   \nenable:Enable strict mode CRL checking.   \ndisable:Disable strict mode CRL checking.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "strict-ocsp-check": {
                                    "type": "string",
                                    "description": "Enable\/disable strict mode OCSP checking.   \nenable:Enable strict mode OCSP checking.   \ndisable:Disable strict mode OCSP checking.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "cmp-save-extra-certs": {
                                    "type": "string",
                                    "description": "Enable\/disable saving extra certificates in CMP mode (default = disable).   \nenable:Enable saving extra certificates in CMP mode.   \ndisable:Disable saving extra certificates in CMP mode.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "cmp-key-usage-checking": {
                                    "type": "string",
                                    "description": "Enable\/disable server certificate key usage checking in CMP mode (default = enable).   \nenable:Enable server certificate key usage checking in CMP mode.   \ndisable:Disable server certificate key usage checking in CMP mode.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "certname-rsa1024": {
                                    "type": "string",
                                    "description": "1024 bit RSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-rsa2048": {
                                    "type": "string",
                                    "description": "2048 bit RSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-rsa4096": {
                                    "type": "string",
                                    "description": "4096 bit RSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-dsa1024": {
                                    "type": "string",
                                    "description": "1024 bit DSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-dsa2048": {
                                    "type": "string",
                                    "description": "2048 bit DSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-ecdsa256": {
                                    "type": "string",
                                    "description": "256 bit ECDSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-ecdsa384": {
                                    "type": "string",
                                    "description": "384 bit ECDSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-ecdsa521": {
                                    "type": "string",
                                    "description": "521 bit ECDSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-ed25519": {
                                    "type": "string",
                                    "description": "253 bit EdDSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-ed448": {
                                    "type": "string",
                                    "description": "456 bit EdDSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.certificate\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ocsp-status": {
                                    "type": "string",
                                    "description": "Enable\/disable receiving certificates using the OCSP.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ocsp-option": {
                                    "type": "string",
                                    "description": "Specify whether the OCSP URL is from certificate or configured OCSP server.   \ncertificate:Use URL from certificate.   \nserver:Use URL from configured OCSP server.",
                                    "enum": [
                                        "certificate",
                                        "server"
                                    ]
                                },
                                "ssl-ocsp-source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address to use to communicate with the OCSP server."
                                },
                                "ocsp-default-server": {
                                    "type": "string",
                                    "description": "Default OCSP server.",
                                    "maxLength": 35
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                },
                                "check-ca-cert": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of the user certificate and pass authentication if any CA in the chain is trusted (default = enable).   \nenable:Enable verification of the user certificate.   \ndisable:Disable verification of the user certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "check-ca-chain": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of the entire certificate chain and pass authentication only if the chain is complete and all of the CAs in the chain are trusted (default = disable).   \nenable:Enable verification of the entire certificate chain.   \ndisable:Disable verification of the entire certificate chain.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "subject-match": {
                                    "type": "string",
                                    "description": "When searching for a matching certificate, control how to find matches in the certificate subject name.   \nsubstring:Find a match if any string in the certificate subject name matches the name being searched for.   \nvalue:Find a match if any attribute value string in a certificate subject name is an exact match with the name being searched for.",
                                    "enum": [
                                        "substring",
                                        "value"
                                    ]
                                },
                                "cn-match": {
                                    "type": "string",
                                    "description": "When searching for a matching certificate, control how to find matches in the cn attribute of the certificate subject name.   \nsubstring:Find a match if any string in a certificate subject name cn attribute name matches the name being searched for.   \nvalue:Find a match if the cn attribute value string is an exact match with the name being searched for.",
                                    "enum": [
                                        "substring",
                                        "value"
                                    ]
                                },
                                "strict-crl-check": {
                                    "type": "string",
                                    "description": "Enable\/disable strict mode CRL checking.   \nenable:Enable strict mode CRL checking.   \ndisable:Disable strict mode CRL checking.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "strict-ocsp-check": {
                                    "type": "string",
                                    "description": "Enable\/disable strict mode OCSP checking.   \nenable:Enable strict mode OCSP checking.   \ndisable:Disable strict mode OCSP checking.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "cmp-save-extra-certs": {
                                    "type": "string",
                                    "description": "Enable\/disable saving extra certificates in CMP mode (default = disable).   \nenable:Enable saving extra certificates in CMP mode.   \ndisable:Disable saving extra certificates in CMP mode.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "cmp-key-usage-checking": {
                                    "type": "string",
                                    "description": "Enable\/disable server certificate key usage checking in CMP mode (default = enable).   \nenable:Enable server certificate key usage checking in CMP mode.   \ndisable:Disable server certificate key usage checking in CMP mode.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "certname-rsa1024": {
                                    "type": "string",
                                    "description": "1024 bit RSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-rsa2048": {
                                    "type": "string",
                                    "description": "2048 bit RSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-rsa4096": {
                                    "type": "string",
                                    "description": "4096 bit RSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-dsa1024": {
                                    "type": "string",
                                    "description": "1024 bit DSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-dsa2048": {
                                    "type": "string",
                                    "description": "2048 bit DSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-ecdsa256": {
                                    "type": "string",
                                    "description": "256 bit ECDSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-ecdsa384": {
                                    "type": "string",
                                    "description": "384 bit ECDSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-ecdsa521": {
                                    "type": "string",
                                    "description": "521 bit ECDSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-ed25519": {
                                    "type": "string",
                                    "description": "253 bit EdDSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                },
                                "certname-ed448": {
                                    "type": "string",
                                    "description": "456 bit EdDSA key certificate for re-signing server certificates for SSL inspection.",
                                    "maxLength": 35
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.certificate\/setting"
                ]
            }
        },
        "\/vpn.ipsec\/concentrator\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Concentrator name.",
                                    "maxLength": 35
                                },
                                "src-check": {
                                    "type": "string",
                                    "description": "Enable to check source address of phase 2 selector. Disable to check only the destination selector.   \ndisable:Ignore source selector when choosing tunnel.   \nenable:Use source selector to choose tunnel.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "member": {
                                    "description": "Names of up to 3 VPN tunnels to add to the concentrator.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Member name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 300
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/concentrator"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Concentrator name.",
                                    "maxLength": 35
                                },
                                "src-check": {
                                    "type": "string",
                                    "description": "Enable to check source address of phase 2 selector. Disable to check only the destination selector.   \ndisable:Ignore source selector when choosing tunnel.   \nenable:Use source selector to choose tunnel.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "member": {
                                    "description": "Names of up to 3 VPN tunnels to add to the concentrator.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Member name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 300
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/concentrator"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/concentrator"
                ]
            }
        },
        "\/vpn.ipsec\/concentrator": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Concentrator name.",
                                    "maxLength": 35
                                },
                                "src-check": {
                                    "type": "string",
                                    "description": "Enable to check source address of phase 2 selector. Disable to check only the destination selector.   \ndisable:Ignore source selector when choosing tunnel.   \nenable:Use source selector to choose tunnel.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "member": {
                                    "description": "Names of up to 3 VPN tunnels to add to the concentrator.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Member name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 300
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/concentrator"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Concentrator name.",
                                    "maxLength": 35
                                },
                                "src-check": {
                                    "type": "string",
                                    "description": "Enable to check source address of phase 2 selector. Disable to check only the destination selector.   \ndisable:Ignore source selector when choosing tunnel.   \nenable:Use source selector to choose tunnel.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "member": {
                                    "description": "Names of up to 3 VPN tunnels to add to the concentrator.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Member name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 300
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/concentrator"
                ]
            }
        },
        "\/vpn.ipsec\/forticlient\/{realm}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "realm": {
                                    "type": "string",
                                    "description": "FortiClient realm name.",
                                    "maxLength": 35
                                },
                                "usergroupname": {
                                    "type": "string",
                                    "description": "User group name for FortiClient users.",
                                    "maxLength": 35
                                },
                                "phase2name": {
                                    "type": "string",
                                    "description": "Phase 2 tunnel name that you defined in the FortiClient dialup configuration.",
                                    "maxLength": 35
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this FortiClient configuration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "realm",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/forticlient"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "realm": {
                                    "type": "string",
                                    "description": "FortiClient realm name.",
                                    "maxLength": 35
                                },
                                "usergroupname": {
                                    "type": "string",
                                    "description": "User group name for FortiClient users.",
                                    "maxLength": 35
                                },
                                "phase2name": {
                                    "type": "string",
                                    "description": "Phase 2 tunnel name that you defined in the FortiClient dialup configuration.",
                                    "maxLength": 35
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this FortiClient configuration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "realm",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/forticlient"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "realm",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/forticlient"
                ]
            }
        },
        "\/vpn.ipsec\/forticlient": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "realm": {
                                    "type": "string",
                                    "description": "FortiClient realm name.",
                                    "maxLength": 35
                                },
                                "usergroupname": {
                                    "type": "string",
                                    "description": "User group name for FortiClient users.",
                                    "maxLength": 35
                                },
                                "phase2name": {
                                    "type": "string",
                                    "description": "Phase 2 tunnel name that you defined in the FortiClient dialup configuration.",
                                    "maxLength": 35
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this FortiClient configuration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/forticlient"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "realm": {
                                    "type": "string",
                                    "description": "FortiClient realm name.",
                                    "maxLength": 35
                                },
                                "usergroupname": {
                                    "type": "string",
                                    "description": "User group name for FortiClient users.",
                                    "maxLength": 35
                                },
                                "phase2name": {
                                    "type": "string",
                                    "description": "Phase 2 tunnel name that you defined in the FortiClient dialup configuration.",
                                    "maxLength": 35
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this FortiClient configuration.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/forticlient"
                ]
            }
        },
        "\/vpn.ipsec\/manualkey\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Name of the physical, aggregate, or VLAN interface.",
                                    "maxLength": 15
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Peer gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local gateway."
                                },
                                "authentication": {
                                    "type": "string",
                                    "description": "Authentication algorithm. Must be the same for both ends of the tunnel.   \nnull:Null.   \nmd5:MD5.   \nsha1:SHA1.   \nsha256:SHA256.   \nsha384:SHA384.   \nsha512:SHA512.",
                                    "enum": [
                                        "null",
                                        "md5",
                                        "sha1",
                                        "sha256",
                                        "sha384",
                                        "sha512"
                                    ]
                                },
                                "encryption": {
                                    "type": "string",
                                    "description": "Encryption algorithm. Must be the same for both ends of the tunnel.   \nnull:Null.   \ndes:DES.   \n3des:3DES.   \naes128:AES128.   \naes192:AES192.   \naes256:AES256.   \naria128:ARIA128.   \naria192:ARIA192.   \naria256:ARIA256.   \nseed:Seed.",
                                    "enum": [
                                        "null",
                                        "des",
                                        "3des",
                                        "aes128",
                                        "aes192",
                                        "aes256",
                                        "aria128",
                                        "aria192",
                                        "aria256",
                                        "seed"
                                    ]
                                },
                                "authkey": {
                                    "type": "string",
                                    "description": "Hexadecimal authentication key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "enckey": {
                                    "type": "string",
                                    "description": "Hexadecimal encryption key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "localspi": {
                                    "type": "string",
                                    "description": "Local SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "remotespi": {
                                    "type": "string",
                                    "description": "Remote SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable NPU offloading.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/manualkey"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Name of the physical, aggregate, or VLAN interface.",
                                    "maxLength": 15
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Peer gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local gateway."
                                },
                                "authentication": {
                                    "type": "string",
                                    "description": "Authentication algorithm. Must be the same for both ends of the tunnel.   \nnull:Null.   \nmd5:MD5.   \nsha1:SHA1.   \nsha256:SHA256.   \nsha384:SHA384.   \nsha512:SHA512.",
                                    "enum": [
                                        "null",
                                        "md5",
                                        "sha1",
                                        "sha256",
                                        "sha384",
                                        "sha512"
                                    ]
                                },
                                "encryption": {
                                    "type": "string",
                                    "description": "Encryption algorithm. Must be the same for both ends of the tunnel.   \nnull:Null.   \ndes:DES.   \n3des:3DES.   \naes128:AES128.   \naes192:AES192.   \naes256:AES256.   \naria128:ARIA128.   \naria192:ARIA192.   \naria256:ARIA256.   \nseed:Seed.",
                                    "enum": [
                                        "null",
                                        "des",
                                        "3des",
                                        "aes128",
                                        "aes192",
                                        "aes256",
                                        "aria128",
                                        "aria192",
                                        "aria256",
                                        "seed"
                                    ]
                                },
                                "authkey": {
                                    "type": "string",
                                    "description": "Hexadecimal authentication key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "enckey": {
                                    "type": "string",
                                    "description": "Hexadecimal encryption key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "localspi": {
                                    "type": "string",
                                    "description": "Local SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "remotespi": {
                                    "type": "string",
                                    "description": "Remote SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable NPU offloading.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/manualkey"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/manualkey"
                ]
            }
        },
        "\/vpn.ipsec\/manualkey": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Name of the physical, aggregate, or VLAN interface.",
                                    "maxLength": 15
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Peer gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local gateway."
                                },
                                "authentication": {
                                    "type": "string",
                                    "description": "Authentication algorithm. Must be the same for both ends of the tunnel.   \nnull:Null.   \nmd5:MD5.   \nsha1:SHA1.   \nsha256:SHA256.   \nsha384:SHA384.   \nsha512:SHA512.",
                                    "enum": [
                                        "null",
                                        "md5",
                                        "sha1",
                                        "sha256",
                                        "sha384",
                                        "sha512"
                                    ]
                                },
                                "encryption": {
                                    "type": "string",
                                    "description": "Encryption algorithm. Must be the same for both ends of the tunnel.   \nnull:Null.   \ndes:DES.   \n3des:3DES.   \naes128:AES128.   \naes192:AES192.   \naes256:AES256.   \naria128:ARIA128.   \naria192:ARIA192.   \naria256:ARIA256.   \nseed:Seed.",
                                    "enum": [
                                        "null",
                                        "des",
                                        "3des",
                                        "aes128",
                                        "aes192",
                                        "aes256",
                                        "aria128",
                                        "aria192",
                                        "aria256",
                                        "seed"
                                    ]
                                },
                                "authkey": {
                                    "type": "string",
                                    "description": "Hexadecimal authentication key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "enckey": {
                                    "type": "string",
                                    "description": "Hexadecimal encryption key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "localspi": {
                                    "type": "string",
                                    "description": "Local SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "remotespi": {
                                    "type": "string",
                                    "description": "Remote SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable NPU offloading.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/manualkey"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Name of the physical, aggregate, or VLAN interface.",
                                    "maxLength": 15
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Peer gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local gateway."
                                },
                                "authentication": {
                                    "type": "string",
                                    "description": "Authentication algorithm. Must be the same for both ends of the tunnel.   \nnull:Null.   \nmd5:MD5.   \nsha1:SHA1.   \nsha256:SHA256.   \nsha384:SHA384.   \nsha512:SHA512.",
                                    "enum": [
                                        "null",
                                        "md5",
                                        "sha1",
                                        "sha256",
                                        "sha384",
                                        "sha512"
                                    ]
                                },
                                "encryption": {
                                    "type": "string",
                                    "description": "Encryption algorithm. Must be the same for both ends of the tunnel.   \nnull:Null.   \ndes:DES.   \n3des:3DES.   \naes128:AES128.   \naes192:AES192.   \naes256:AES256.   \naria128:ARIA128.   \naria192:ARIA192.   \naria256:ARIA256.   \nseed:Seed.",
                                    "enum": [
                                        "null",
                                        "des",
                                        "3des",
                                        "aes128",
                                        "aes192",
                                        "aes256",
                                        "aria128",
                                        "aria192",
                                        "aria256",
                                        "seed"
                                    ]
                                },
                                "authkey": {
                                    "type": "string",
                                    "description": "Hexadecimal authentication key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "enckey": {
                                    "type": "string",
                                    "description": "Hexadecimal encryption key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "localspi": {
                                    "type": "string",
                                    "description": "Local SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "remotespi": {
                                    "type": "string",
                                    "description": "Remote SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable NPU offloading.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/manualkey"
                ]
            }
        },
        "\/vpn.ipsec\/manualkey-interface\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 15
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Name of the physical, aggregate, or VLAN interface.",
                                    "maxLength": 15
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version to use for VPN interface.   \n4:Use IPv4 addressing for gateways.   \n6:Use IPv6 addressing for gateways.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "addr-type": {
                                    "type": "string",
                                    "description": "IP version to use for IP packets.   \n4:Use IPv4 addressing for IP packets.   \n6:Use IPv6 addressing for IP packets.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the remote gateway's external interface."
                                },
                                "remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote IPv6 address of VPN gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the local gateway's external interface."
                                },
                                "local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local IPv6 address of VPN gateway."
                                },
                                "auth-alg": {
                                    "type": "string",
                                    "description": "Authentication algorithm. Must be the same for both ends of the tunnel.   \nnull:null   \nmd5:md5   \nsha1:sha1   \nsha256:sha256   \nsha384:sha384   \nsha512:sha512",
                                    "enum": [
                                        "null",
                                        "md5",
                                        "sha1",
                                        "sha256",
                                        "sha384",
                                        "sha512"
                                    ]
                                },
                                "enc-alg": {
                                    "type": "string",
                                    "description": "Encryption algorithm. Must be the same for both ends of the tunnel.   \nnull:null   \ndes:des   \n3des:3des   \naes128:aes128   \naes192:aes192   \naes256:aes256   \naria128:aria128   \naria192:aria192   \naria256:aria256   \nseed:seed",
                                    "enum": [
                                        "null",
                                        "des",
                                        "3des",
                                        "aes128",
                                        "aes192",
                                        "aes256",
                                        "aria128",
                                        "aria192",
                                        "aria256",
                                        "seed"
                                    ]
                                },
                                "auth-key": {
                                    "type": "string",
                                    "description": "Hexadecimal authentication key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "enc-key": {
                                    "type": "string",
                                    "description": "Hexadecimal encryption key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "local-spi": {
                                    "type": "string",
                                    "description": "Local SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "remote-spi": {
                                    "type": "string",
                                    "description": "Remote SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading IPsec VPN manual key sessions to NPUs.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/manualkey-interface"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 15
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Name of the physical, aggregate, or VLAN interface.",
                                    "maxLength": 15
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version to use for VPN interface.   \n4:Use IPv4 addressing for gateways.   \n6:Use IPv6 addressing for gateways.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "addr-type": {
                                    "type": "string",
                                    "description": "IP version to use for IP packets.   \n4:Use IPv4 addressing for IP packets.   \n6:Use IPv6 addressing for IP packets.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the remote gateway's external interface."
                                },
                                "remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote IPv6 address of VPN gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the local gateway's external interface."
                                },
                                "local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local IPv6 address of VPN gateway."
                                },
                                "auth-alg": {
                                    "type": "string",
                                    "description": "Authentication algorithm. Must be the same for both ends of the tunnel.   \nnull:null   \nmd5:md5   \nsha1:sha1   \nsha256:sha256   \nsha384:sha384   \nsha512:sha512",
                                    "enum": [
                                        "null",
                                        "md5",
                                        "sha1",
                                        "sha256",
                                        "sha384",
                                        "sha512"
                                    ]
                                },
                                "enc-alg": {
                                    "type": "string",
                                    "description": "Encryption algorithm. Must be the same for both ends of the tunnel.   \nnull:null   \ndes:des   \n3des:3des   \naes128:aes128   \naes192:aes192   \naes256:aes256   \naria128:aria128   \naria192:aria192   \naria256:aria256   \nseed:seed",
                                    "enum": [
                                        "null",
                                        "des",
                                        "3des",
                                        "aes128",
                                        "aes192",
                                        "aes256",
                                        "aria128",
                                        "aria192",
                                        "aria256",
                                        "seed"
                                    ]
                                },
                                "auth-key": {
                                    "type": "string",
                                    "description": "Hexadecimal authentication key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "enc-key": {
                                    "type": "string",
                                    "description": "Hexadecimal encryption key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "local-spi": {
                                    "type": "string",
                                    "description": "Local SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "remote-spi": {
                                    "type": "string",
                                    "description": "Remote SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading IPsec VPN manual key sessions to NPUs.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/manualkey-interface"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/manualkey-interface"
                ]
            }
        },
        "\/vpn.ipsec\/manualkey-interface": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 15
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Name of the physical, aggregate, or VLAN interface.",
                                    "maxLength": 15
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version to use for VPN interface.   \n4:Use IPv4 addressing for gateways.   \n6:Use IPv6 addressing for gateways.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "addr-type": {
                                    "type": "string",
                                    "description": "IP version to use for IP packets.   \n4:Use IPv4 addressing for IP packets.   \n6:Use IPv6 addressing for IP packets.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the remote gateway's external interface."
                                },
                                "remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote IPv6 address of VPN gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the local gateway's external interface."
                                },
                                "local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local IPv6 address of VPN gateway."
                                },
                                "auth-alg": {
                                    "type": "string",
                                    "description": "Authentication algorithm. Must be the same for both ends of the tunnel.   \nnull:null   \nmd5:md5   \nsha1:sha1   \nsha256:sha256   \nsha384:sha384   \nsha512:sha512",
                                    "enum": [
                                        "null",
                                        "md5",
                                        "sha1",
                                        "sha256",
                                        "sha384",
                                        "sha512"
                                    ]
                                },
                                "enc-alg": {
                                    "type": "string",
                                    "description": "Encryption algorithm. Must be the same for both ends of the tunnel.   \nnull:null   \ndes:des   \n3des:3des   \naes128:aes128   \naes192:aes192   \naes256:aes256   \naria128:aria128   \naria192:aria192   \naria256:aria256   \nseed:seed",
                                    "enum": [
                                        "null",
                                        "des",
                                        "3des",
                                        "aes128",
                                        "aes192",
                                        "aes256",
                                        "aria128",
                                        "aria192",
                                        "aria256",
                                        "seed"
                                    ]
                                },
                                "auth-key": {
                                    "type": "string",
                                    "description": "Hexadecimal authentication key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "enc-key": {
                                    "type": "string",
                                    "description": "Hexadecimal encryption key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "local-spi": {
                                    "type": "string",
                                    "description": "Local SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "remote-spi": {
                                    "type": "string",
                                    "description": "Remote SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading IPsec VPN manual key sessions to NPUs.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/manualkey-interface"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 15
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Name of the physical, aggregate, or VLAN interface.",
                                    "maxLength": 15
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version to use for VPN interface.   \n4:Use IPv4 addressing for gateways.   \n6:Use IPv6 addressing for gateways.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "addr-type": {
                                    "type": "string",
                                    "description": "IP version to use for IP packets.   \n4:Use IPv4 addressing for IP packets.   \n6:Use IPv6 addressing for IP packets.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the remote gateway's external interface."
                                },
                                "remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote IPv6 address of VPN gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the local gateway's external interface."
                                },
                                "local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local IPv6 address of VPN gateway."
                                },
                                "auth-alg": {
                                    "type": "string",
                                    "description": "Authentication algorithm. Must be the same for both ends of the tunnel.   \nnull:null   \nmd5:md5   \nsha1:sha1   \nsha256:sha256   \nsha384:sha384   \nsha512:sha512",
                                    "enum": [
                                        "null",
                                        "md5",
                                        "sha1",
                                        "sha256",
                                        "sha384",
                                        "sha512"
                                    ]
                                },
                                "enc-alg": {
                                    "type": "string",
                                    "description": "Encryption algorithm. Must be the same for both ends of the tunnel.   \nnull:null   \ndes:des   \n3des:3des   \naes128:aes128   \naes192:aes192   \naes256:aes256   \naria128:aria128   \naria192:aria192   \naria256:aria256   \nseed:seed",
                                    "enum": [
                                        "null",
                                        "des",
                                        "3des",
                                        "aes128",
                                        "aes192",
                                        "aes256",
                                        "aria128",
                                        "aria192",
                                        "aria256",
                                        "seed"
                                    ]
                                },
                                "auth-key": {
                                    "type": "string",
                                    "description": "Hexadecimal authentication key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "enc-key": {
                                    "type": "string",
                                    "description": "Hexadecimal encryption key in 16-digit (8-byte) segments separated by hyphens."
                                },
                                "local-spi": {
                                    "type": "string",
                                    "description": "Local SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "remote-spi": {
                                    "type": "string",
                                    "description": "Remote SPI, a hexadecimal 8-digit (4-byte) tag. Discerns between two traffic streams with different encryption rules."
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading IPsec VPN manual key sessions to NPUs.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/manualkey-interface"
                ]
            }
        },
        "\/vpn.ipsec\/phase1\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec remote gateway name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Remote gateway type.   \nstatic:Remote VPN gateway has fixed IP address.   \ndynamic:Remote VPN gateway has dynamic IP address.   \nddns:Remote VPN gateway has dynamic IP address and is a dynamic DNS client.",
                                    "enum": [
                                        "static",
                                        "dynamic",
                                        "ddns"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Local physical, aggregate, or VLAN outgoing interface.",
                                    "maxLength": 35
                                },
                                "ike-version": {
                                    "type": "string",
                                    "description": "IKE protocol version.   \n1:Use IKEv1 protocol.   \n2:Use IKEv2 protocol.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote VPN gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local VPN gateway."
                                },
                                "remotegw-ddns": {
                                    "type": "string",
                                    "description": "Domain name of remote gateway (eg. name.DDNS.com).",
                                    "maxLength": 63
                                },
                                "keylife": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before phase 1 encryption key expires.",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "certificate": {
                                    "description": "Names of up to 4 signed personal certificates.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Certificate name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "authmethod": {
                                    "type": "string",
                                    "description": "Authentication method.   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "authmethod-remote": {
                                    "type": "string",
                                    "description": "Authentication method (remote side).   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "ID protection mode used to establish a secure channel.   \naggressive:Aggressive mode.   \nmain:Main mode.",
                                    "enum": [
                                        "aggressive",
                                        "main"
                                    ]
                                },
                                "peertype": {
                                    "type": "string",
                                    "description": "Accept this peer type.   \nany:Accept any peer ID.   \none:Accept this peer ID.   \ndialup:Accept peer ID in dialup group.   \npeer:Accept this peer certificate.   \npeergrp:Accept this peer certificate group.",
                                    "enum": [
                                        "any",
                                        "one",
                                        "dialup",
                                        "peer",
                                        "peergrp"
                                    ]
                                },
                                "peerid": {
                                    "type": "string",
                                    "description": "Accept this peer identity.",
                                    "maxLength": 255
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group name for dialup peers.",
                                    "maxLength": 35
                                },
                                "peer": {
                                    "type": "string",
                                    "description": "Accept this peer certificate.",
                                    "maxLength": 35
                                },
                                "peergrp": {
                                    "type": "string",
                                    "description": "Accept this peer certificate group.",
                                    "maxLength": 35
                                },
                                "mode-cfg": {
                                    "type": "string",
                                    "description": "Enable\/disable configuration method.   \ndisable:Disable Configuration Method.   \nenable:Enable Configuration Method.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable assignment of IP to IPsec interface via configuration method.   \ndisable:Do not assign an IP address to the IPsec interface.   \nenable:Assign an IP address to the IPsec interface.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip-from": {
                                    "type": "string",
                                    "description": "Method by which the IP address will be assigned.   \nrange:Assign IP address from locally defined range.   \nusrgrp:Assign IP address via user group.   \ndhcp:Assign IP address via DHCP.   \nname:Assign IP address from firewall address or group.",
                                    "enum": [
                                        "range",
                                        "usrgrp",
                                        "dhcp",
                                        "name"
                                    ]
                                },
                                "ipv4-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start of IPv4 range."
                                },
                                "ipv4-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End of IPv4 range."
                                },
                                "ipv4-netmask": {
                                    "type": "string",
                                    "description": "IPv4 Netmask."
                                },
                                "dhcp-ra-giaddr": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Relay agent gateway IP address to use in the giaddr field of DHCP requests."
                                },
                                "dhcp6-ra-linkaddr": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Relay agent IPv6 link address to use in DHCP6 requests."
                                },
                                "dns-mode": {
                                    "type": "string",
                                    "description": "DNS server mode.   \nmanual:Manually configure DNS servers.   \nauto:Use default DNS servers.",
                                    "enum": [
                                        "manual",
                                        "auto"
                                    ]
                                },
                                "ipv4-dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "ipv4-dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "ipv4-dns-server3": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 3."
                                },
                                "ipv4-wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 1."
                                },
                                "ipv4-wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 2."
                                },
                                "ipv4-exclude-range": {
                                    "description": "Configuration Method IPv4 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Start of IPv4 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "End of IPv4 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv4-split-include": {
                                    "type": "string",
                                    "description": "IPv4 split-include subnets.",
                                    "maxLength": 79
                                },
                                "split-include-service": {
                                    "type": "string",
                                    "description": "Split-include services.",
                                    "maxLength": 79
                                },
                                "ipv4-name": {
                                    "type": "string",
                                    "description": "IPv4 address name.",
                                    "maxLength": 79
                                },
                                "ipv6-start-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Start of IPv6 range."
                                },
                                "ipv6-end-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "End of IPv6 range."
                                },
                                "ipv6-prefix": {
                                    "type": "integer",
                                    "description": "IPv6 prefix.",
                                    "maximum": 128,
                                    "minimum": 1
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-dns-server3": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 3."
                                },
                                "ipv6-exclude-range": {
                                    "description": "Configuration method IPv6 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Start of IPv6 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "End of IPv6 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-split-include": {
                                    "type": "string",
                                    "description": "IPv6 split-include subnets.",
                                    "maxLength": 79
                                },
                                "ipv6-name": {
                                    "type": "string",
                                    "description": "IPv6 address name.",
                                    "maxLength": 79
                                },
                                "unity-support": {
                                    "type": "string",
                                    "description": "Enable\/disable support for Cisco UNITY Configuration Method extensions.   \ndisable:Disable Cisco Unity Configuration Method Extensions.   \nenable:Enable Cisco Unity Configuration Method Extensions.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "domain": {
                                    "type": "string",
                                    "description": "Instruct unity clients about the default DNS domain.",
                                    "maxLength": 63
                                },
                                "banner": {
                                    "type": "string",
                                    "description": "Message that unity client should display after connecting.",
                                    "maxLength": 1024
                                },
                                "include-local-lan": {
                                    "type": "string",
                                    "description": "Enable\/disable allow local LAN access on unity clients.   \ndisable:Disable local LAN access on Unity clients.   \nenable:Enable local LAN access on Unity clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "ipv4-split-exclude": {
                                    "type": "string",
                                    "description": "IPv4 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "ipv6-split-exclude": {
                                    "type": "string",
                                    "description": "IPv6 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable saving XAuth username and password on VPN clients.   \ndisable:Disable saving XAuth username and password on VPN clients.   \nenable:Enable saving XAuth username and password on VPN clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to bring up the tunnel when there is no traffic.   \ndisable:Disable allowing the VPN client to bring up the tunnel when there is no traffic.   \nenable:Enable allowing the VPN client to bring up the tunnel when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to keep the tunnel up when there is no traffic.   \ndisable:Disable allowing the VPN client to keep the tunnel up when there is no traffic.   \nenable:Enable allowing the VPN client to keep the tunnel up when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "backup-gateway": {
                                    "description": "Instruct unity clients about the backup gateway address(es).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string",
                                                "description": "Address of backup gateway.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase1 proposal.   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm-prfsha1:aes128gcm-prfsha1   \naes128gcm-prfsha256:aes128gcm-prfsha256   \naes128gcm-prfsha384:aes128gcm-prfsha384   \naes128gcm-prfsha512:aes128gcm-prfsha512   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm-prfsha1:aes256gcm-prfsha1   \naes256gcm-prfsha256:aes256gcm-prfsha256   \naes256gcm-prfsha384:aes256gcm-prfsha384   \naes256gcm-prfsha512:aes256gcm-prfsha512   \nchacha20poly1305-prfsha1:chacha20poly1305-prfsha1   \nchacha20poly1305-prfsha256:chacha20poly1305-prfsha256   \nchacha20poly1305-prfsha384:chacha20poly1305-prfsha384   \nchacha20poly1305-prfsha512:chacha20poly1305-prfsha512   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm-prfsha1",
                                        "aes128gcm-prfsha256",
                                        "aes128gcm-prfsha384",
                                        "aes128gcm-prfsha512",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm-prfsha1",
                                        "aes256gcm-prfsha256",
                                        "aes256gcm-prfsha384",
                                        "aes256gcm-prfsha512",
                                        "chacha20poly1305-prfsha1",
                                        "chacha20poly1305-prfsha256",
                                        "chacha20poly1305-prfsha384",
                                        "chacha20poly1305-prfsha512",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable control addition of a route to peer destination selector.   \ndisable:Do not add a route to destination of peer selector.   \nenable:Add route to destination of peer selector.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "add-gw-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically add a route to the remote gateway.   \nenable:Automatically add a route to the remote gateway.   \ndisable:Do not automatically add a route to the remote gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "psksecret": {
                                    "type": "string",
                                    "description": "Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "psksecret-remote": {
                                    "type": "string",
                                    "description": "Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "keepalive": {
                                    "type": "integer",
                                    "description": "NAT-T keep alive interval.",
                                    "maximum": 900,
                                    "minimum": 10
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance for routes added by IKE (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Priority for routes added by IKE (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "localid": {
                                    "type": "string",
                                    "description": "Local ID.",
                                    "maxLength": 63
                                },
                                "localid-type": {
                                    "type": "string",
                                    "description": "Local ID type.   \nauto:Select ID type automatically.   \nfqdn:Use fully qualified domain name.   \nuser-fqdn:Use user fully qualified domain name.   \nkeyid:Use key-id string.   \naddress:Use local IP address.   \nasn1dn:Use ASN.1 distinguished name.",
                                    "enum": [
                                        "auto",
                                        "fqdn",
                                        "user-fqdn",
                                        "keyid",
                                        "address",
                                        "asn1dn"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic initiation of IKE SA negotiation.   \nenable:Enable automatic initiation of IKE SA negotiation.   \ndisable:Disable automatic initiation of IKE SA negotiation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "negotiate-timeout": {
                                    "type": "integer",
                                    "description": "IKE SA negotiation timeout in seconds (1 - 300).",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "fragmentation": {
                                    "type": "string",
                                    "description": "Enable\/disable fragment IKE message on re-transmission.   \nenable:Enable intra-IKE fragmentation support on re-transmission.   \ndisable:Disable intra-IKE fragmentation support.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dpd": {
                                    "type": "string",
                                    "description": "Dead Peer Detection mode.   \ndisable:Disable Dead Peer Detection.   \non-idle:Trigger Dead Peer Detection when IPsec is idle.   \non-demand:Trigger Dead Peer Detection when IPsec traffic is sent but no reply is received from the peer.",
                                    "enum": [
                                        "disable",
                                        "on-idle",
                                        "on-demand"
                                    ]
                                },
                                "dpd-retrycount": {
                                    "type": "integer",
                                    "description": "Number of DPD retry attempts.",
                                    "maximum": 10,
                                    "minimum": 0
                                },
                                "dpd-retryinterval": {
                                    "type": "string",
                                    "description": "DPD retry interval."
                                },
                                "forticlient-enforcement": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient enforcement.   \nenable:Enable FortiClient enforcement.   \ndisable:Disable FortiClient enforcement.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading NPU.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "send-cert-chain": {
                                    "type": "string",
                                    "description": "Enable\/disable sending certificate chain.   \nenable:Enable sending certificate chain.   \ndisable:Disable sending certificate chain.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "suite-b": {
                                    "type": "string",
                                    "description": "Use Suite-B.   \ndisable:Do not use UI suite.   \nsuite-b-gcm-128:Use Suite-B-GCM-128.   \nsuite-b-gcm-256:Use Suite-B-GCM-256.",
                                    "enum": [
                                        "disable",
                                        "suite-b-gcm-128",
                                        "suite-b-gcm-256"
                                    ]
                                },
                                "eap": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 EAP authentication.   \nenable:Enable IKEv2 EAP authentication.   \ndisable:Disable IKEv2 EAP authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eap-identity": {
                                    "type": "string",
                                    "description": "IKEv2 EAP peer identity type.   \nuse-id-payload:Use IKEv2 IDi payload to resolve peer identity.   \nsend-request:Use EAP identity request to resolve peer identity.",
                                    "enum": [
                                        "use-id-payload",
                                        "send-request"
                                    ]
                                },
                                "eap-exclude-peergrp": {
                                    "type": "string",
                                    "description": "Peer group excluded from EAP authentication.",
                                    "maxLength": 35
                                },
                                "acct-verify": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of RADIUS accounting record.   \nenable:Enable verification of RADIUS accounting record.   \ndisable:Disable verification of RADIUS accounting record.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ppk": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Postquantum Preshared Key (PPK).   \ndisable:Disable use of IKEv2 Postquantum Preshared Key (PPK).   \nallow:Allow, but do not require, use of IKEv2 Postquantum Preshared Key (PPK).   \nrequire:Require use of IKEv2 Postquantum Preshared Key (PPK).",
                                    "enum": [
                                        "disable",
                                        "allow",
                                        "require"
                                    ]
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "wizard-type": {
                                    "type": "string",
                                    "description": "GUI VPN Wizard Type.   \ncustom:Custom VPN configuration.   \ndialup-forticlient:Dial Up - FortiClient Windows, Mac and Android.   \ndialup-ios:Dial Up - iPhone \/ iPad Native IPsec Client.   \ndialup-android:Dial Up - Android Native IPsec Client.   \ndialup-windows:Dial Up - Windows Native IPsec Client.   \ndialup-cisco:Dial Up - Cisco IPsec Client.   \nstatic-fortigate:Site to Site - FortiGate.   \ndialup-fortigate:Dial Up - FortiGate.   \nstatic-cisco:Site to Site - Cisco.   \ndialup-cisco-fw:Dialup Up - Cisco Firewall.   \nsimplified-static-fortigate:Site to Site - FortiGate (SD-WAN).   \nhub-fortigate-auto-discovery:Hub role in a Hub-and-Spoke auto-discovery VPN.   \nspoke-fortigate-auto-discovery:Spoke role in a Hub-and-Spoke auto-discovery VPN.",
                                    "enum": [
                                        "custom",
                                        "dialup-forticlient",
                                        "dialup-ios",
                                        "dialup-android",
                                        "dialup-windows",
                                        "dialup-cisco",
                                        "static-fortigate",
                                        "dialup-fortigate",
                                        "static-cisco",
                                        "dialup-cisco-fw",
                                        "simplified-static-fortigate",
                                        "hub-fortigate-auto-discovery",
                                        "spoke-fortigate-auto-discovery"
                                    ]
                                },
                                "xauthtype": {
                                    "type": "string",
                                    "description": "XAuth type.   \ndisable:Disable.   \nclient:Enable as client.   \npap:Enable as server PAP.   \nchap:Enable as server CHAP.   \nauto:Enable as server auto.",
                                    "enum": [
                                        "disable",
                                        "client",
                                        "pap",
                                        "chap",
                                        "auto"
                                    ]
                                },
                                "reauth": {
                                    "type": "string",
                                    "description": "Enable\/disable re-authentication upon IKE SA lifetime expiration.   \ndisable:Disable IKE SA re-authentication.   \nenable:Enable IKE SA re-authentication.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "authusr": {
                                    "type": "string",
                                    "description": "XAuth user name.",
                                    "maxLength": 64
                                },
                                "authpasswd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "XAuth password (max 35 characters)."
                                },
                                "group-authentication": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 IDi group authentication.   \nenable:Enable IKEv2 IDi group authentication.   \ndisable:Disable IKEv2 IDi group authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-authentication-secret": {
                                    "type": "string",
                                    "description": "Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)"
                                },
                                "authusrgrp": {
                                    "type": "string",
                                    "description": "Authentication user group.",
                                    "maxLength": 35
                                },
                                "mesh-selector-type": {
                                    "type": "string",
                                    "description": "Add selectors containing subsets of the configuration depending on traffic.   \ndisable:Disable.   \nsubnet:Enable addition of matching subnet selector.   \nhost:Enable addition of host to host selector.",
                                    "enum": [
                                        "disable",
                                        "subnet",
                                        "host"
                                    ]
                                },
                                "idle-timeout": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec tunnel idle timeout.   \nenable:Enable IPsec tunnel idle timeout.   \ndisable:Disable IPsec tunnel idle timeout.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "idle-timeoutinterval": {
                                    "type": "integer",
                                    "description": "IPsec tunnel idle timeout in minutes (5 - 43200).",
                                    "maximum": 43200,
                                    "minimum": 5
                                },
                                "ha-sync-esp-seqno": {
                                    "type": "string",
                                    "description": "Enable\/disable sequence number jump ahead for IPsec HA.   \nenable:Enable HA syncing of ESP sequence numbers.   \ndisable:Disable HA syncing of ESP sequence numbers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copy the dscp in the ESP header to the inner IP Header.   \nenable:Enable copy the dscp in the ESP header to the inner IP Header.   \ndisable:Disable copy the dscp in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nattraversal": {
                                    "type": "string",
                                    "description": "Enable\/disable NAT traversal.   \nenable:Enable IPsec NAT traversal.   \ndisable:Disable IPsec NAT traversal.   \nforced:Force IPsec NAT traversal on.",
                                    "enum": [
                                        "enable",
                                        "disable",
                                        "forced"
                                    ]
                                },
                                "esn": {
                                    "type": "string",
                                    "description": "Extended sequence number (ESN) negotiation.   \nrequire:Require extended sequence number.   \nallow:Allow extended sequence number.   \ndisable:Disable extended sequence number.",
                                    "enum": [
                                        "require",
                                        "allow",
                                        "disable"
                                    ]
                                },
                                "fragmentation-mtu": {
                                    "type": "integer",
                                    "description": "IKE fragmentation MTU (500 - 16000).",
                                    "maximum": 16000,
                                    "minimum": 500
                                },
                                "childless-ike": {
                                    "type": "string",
                                    "description": "Enable\/disable childless IKEv2 initiation (RFC 6023).   \nenable:Enable childless IKEv2 initiation (RFC 6023).   \ndisable:Disable childless IKEv2 initiation (RFC 6023).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rekey": {
                                    "type": "string",
                                    "description": "Enable\/disable phase1 rekey.   \nenable:Enable phase1 rekey.   \ndisable:Disable phase1 rekey.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "digital-signature-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Digital Signature Authentication (RFC 7427).   \nenable:Enable IKEv2 Digital Signature Authentication (RFC 7427).   \ndisable:Disable IKEv2 Digital Signature Authentication (RFC 7427).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "signature-hash-alg": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication hash algorithms.   \nsha1:SHA1.   \nsha2-256:SHA2-256.   \nsha2-384:SHA2-384.   \nsha2-512:SHA2-512.",
                                    "enum": [
                                        "sha1",
                                        "sha2-256",
                                        "sha2-384",
                                        "sha2-512"
                                    ]
                                },
                                "rsa-signature-format": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication RSA signature format.   \npkcs1:RSASSA PKCS#1 v1.5.   \npss:RSASSA Probabilistic Signature Scheme (PSS).",
                                    "enum": [
                                        "pkcs1",
                                        "pss"
                                    ]
                                },
                                "enforce-unique-id": {
                                    "type": "string",
                                    "description": "Enable\/disable peer ID uniqueness check.   \ndisable:Disable peer ID uniqueness enforcement.   \nkeep-new:Enforce peer ID uniqueness, keep new connection if collision found.   \nkeep-old:Enforce peer ID uniqueness, keep old connection if collision found.",
                                    "enum": [
                                        "disable",
                                        "keep-new",
                                        "keep-old"
                                    ]
                                },
                                "cert-id-validation": {
                                    "type": "string",
                                    "description": "Enable\/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \nenable:Enable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \ndisable:Disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-egress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for egress IPsec traffic.   \nenable:Enable Forward Error Correction for egress IPsec traffic.   \ndisable:Disable Forward Error Correction for egress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-send-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).",
                                    "maximum": 1000,
                                    "minimum": 1
                                },
                                "fec-base": {
                                    "type": "integer",
                                    "description": "Number of base Forward Error Correction packets (1 - 100).",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "fec-codec": {
                                    "type": "integer",
                                    "description": "ipsec fec encoding\/decoding algorithm (0: reed-solomon, 1: xor).",
                                    "maximum": 1,
                                    "minimum": 0
                                },
                                "fec-redundant": {
                                    "type": "integer",
                                    "description": "Number of redundant Forward Error Correction packets (0 - 100,  when fec-codec is reed-solomon  or 1 when fec-codec is xor .",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "fec-ingress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for ingress IPsec traffic.   \nenable:Enable Forward Error Correction for ingress IPsec traffic.   \ndisable:Disable Forward Error Correction for ingress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-receive-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).",
                                    "maximum": 10000,
                                    "minimum": 1
                                },
                                "network-overlay": {
                                    "type": "string",
                                    "description": "Enable\/disable network overlays.   \ndisable:Disable network overlays.   \nenable:Enable network overlays.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "network-id": {
                                    "type": "integer",
                                    "description": "VPN gateway network ID.",
                                    "maximum": 255,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase1"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec remote gateway name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Remote gateway type.   \nstatic:Remote VPN gateway has fixed IP address.   \ndynamic:Remote VPN gateway has dynamic IP address.   \nddns:Remote VPN gateway has dynamic IP address and is a dynamic DNS client.",
                                    "enum": [
                                        "static",
                                        "dynamic",
                                        "ddns"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Local physical, aggregate, or VLAN outgoing interface.",
                                    "maxLength": 35
                                },
                                "ike-version": {
                                    "type": "string",
                                    "description": "IKE protocol version.   \n1:Use IKEv1 protocol.   \n2:Use IKEv2 protocol.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote VPN gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local VPN gateway."
                                },
                                "remotegw-ddns": {
                                    "type": "string",
                                    "description": "Domain name of remote gateway (eg. name.DDNS.com).",
                                    "maxLength": 63
                                },
                                "keylife": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before phase 1 encryption key expires.",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "certificate": {
                                    "description": "Names of up to 4 signed personal certificates.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Certificate name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "authmethod": {
                                    "type": "string",
                                    "description": "Authentication method.   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "authmethod-remote": {
                                    "type": "string",
                                    "description": "Authentication method (remote side).   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "ID protection mode used to establish a secure channel.   \naggressive:Aggressive mode.   \nmain:Main mode.",
                                    "enum": [
                                        "aggressive",
                                        "main"
                                    ]
                                },
                                "peertype": {
                                    "type": "string",
                                    "description": "Accept this peer type.   \nany:Accept any peer ID.   \none:Accept this peer ID.   \ndialup:Accept peer ID in dialup group.   \npeer:Accept this peer certificate.   \npeergrp:Accept this peer certificate group.",
                                    "enum": [
                                        "any",
                                        "one",
                                        "dialup",
                                        "peer",
                                        "peergrp"
                                    ]
                                },
                                "peerid": {
                                    "type": "string",
                                    "description": "Accept this peer identity.",
                                    "maxLength": 255
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group name for dialup peers.",
                                    "maxLength": 35
                                },
                                "peer": {
                                    "type": "string",
                                    "description": "Accept this peer certificate.",
                                    "maxLength": 35
                                },
                                "peergrp": {
                                    "type": "string",
                                    "description": "Accept this peer certificate group.",
                                    "maxLength": 35
                                },
                                "mode-cfg": {
                                    "type": "string",
                                    "description": "Enable\/disable configuration method.   \ndisable:Disable Configuration Method.   \nenable:Enable Configuration Method.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable assignment of IP to IPsec interface via configuration method.   \ndisable:Do not assign an IP address to the IPsec interface.   \nenable:Assign an IP address to the IPsec interface.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip-from": {
                                    "type": "string",
                                    "description": "Method by which the IP address will be assigned.   \nrange:Assign IP address from locally defined range.   \nusrgrp:Assign IP address via user group.   \ndhcp:Assign IP address via DHCP.   \nname:Assign IP address from firewall address or group.",
                                    "enum": [
                                        "range",
                                        "usrgrp",
                                        "dhcp",
                                        "name"
                                    ]
                                },
                                "ipv4-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start of IPv4 range."
                                },
                                "ipv4-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End of IPv4 range."
                                },
                                "ipv4-netmask": {
                                    "type": "string",
                                    "description": "IPv4 Netmask."
                                },
                                "dhcp-ra-giaddr": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Relay agent gateway IP address to use in the giaddr field of DHCP requests."
                                },
                                "dhcp6-ra-linkaddr": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Relay agent IPv6 link address to use in DHCP6 requests."
                                },
                                "dns-mode": {
                                    "type": "string",
                                    "description": "DNS server mode.   \nmanual:Manually configure DNS servers.   \nauto:Use default DNS servers.",
                                    "enum": [
                                        "manual",
                                        "auto"
                                    ]
                                },
                                "ipv4-dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "ipv4-dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "ipv4-dns-server3": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 3."
                                },
                                "ipv4-wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 1."
                                },
                                "ipv4-wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 2."
                                },
                                "ipv4-exclude-range": {
                                    "description": "Configuration Method IPv4 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Start of IPv4 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "End of IPv4 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv4-split-include": {
                                    "type": "string",
                                    "description": "IPv4 split-include subnets.",
                                    "maxLength": 79
                                },
                                "split-include-service": {
                                    "type": "string",
                                    "description": "Split-include services.",
                                    "maxLength": 79
                                },
                                "ipv4-name": {
                                    "type": "string",
                                    "description": "IPv4 address name.",
                                    "maxLength": 79
                                },
                                "ipv6-start-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Start of IPv6 range."
                                },
                                "ipv6-end-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "End of IPv6 range."
                                },
                                "ipv6-prefix": {
                                    "type": "integer",
                                    "description": "IPv6 prefix.",
                                    "maximum": 128,
                                    "minimum": 1
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-dns-server3": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 3."
                                },
                                "ipv6-exclude-range": {
                                    "description": "Configuration method IPv6 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Start of IPv6 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "End of IPv6 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-split-include": {
                                    "type": "string",
                                    "description": "IPv6 split-include subnets.",
                                    "maxLength": 79
                                },
                                "ipv6-name": {
                                    "type": "string",
                                    "description": "IPv6 address name.",
                                    "maxLength": 79
                                },
                                "unity-support": {
                                    "type": "string",
                                    "description": "Enable\/disable support for Cisco UNITY Configuration Method extensions.   \ndisable:Disable Cisco Unity Configuration Method Extensions.   \nenable:Enable Cisco Unity Configuration Method Extensions.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "domain": {
                                    "type": "string",
                                    "description": "Instruct unity clients about the default DNS domain.",
                                    "maxLength": 63
                                },
                                "banner": {
                                    "type": "string",
                                    "description": "Message that unity client should display after connecting.",
                                    "maxLength": 1024
                                },
                                "include-local-lan": {
                                    "type": "string",
                                    "description": "Enable\/disable allow local LAN access on unity clients.   \ndisable:Disable local LAN access on Unity clients.   \nenable:Enable local LAN access on Unity clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "ipv4-split-exclude": {
                                    "type": "string",
                                    "description": "IPv4 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "ipv6-split-exclude": {
                                    "type": "string",
                                    "description": "IPv6 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable saving XAuth username and password on VPN clients.   \ndisable:Disable saving XAuth username and password on VPN clients.   \nenable:Enable saving XAuth username and password on VPN clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to bring up the tunnel when there is no traffic.   \ndisable:Disable allowing the VPN client to bring up the tunnel when there is no traffic.   \nenable:Enable allowing the VPN client to bring up the tunnel when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to keep the tunnel up when there is no traffic.   \ndisable:Disable allowing the VPN client to keep the tunnel up when there is no traffic.   \nenable:Enable allowing the VPN client to keep the tunnel up when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "backup-gateway": {
                                    "description": "Instruct unity clients about the backup gateway address(es).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string",
                                                "description": "Address of backup gateway.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase1 proposal.   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm-prfsha1:aes128gcm-prfsha1   \naes128gcm-prfsha256:aes128gcm-prfsha256   \naes128gcm-prfsha384:aes128gcm-prfsha384   \naes128gcm-prfsha512:aes128gcm-prfsha512   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm-prfsha1:aes256gcm-prfsha1   \naes256gcm-prfsha256:aes256gcm-prfsha256   \naes256gcm-prfsha384:aes256gcm-prfsha384   \naes256gcm-prfsha512:aes256gcm-prfsha512   \nchacha20poly1305-prfsha1:chacha20poly1305-prfsha1   \nchacha20poly1305-prfsha256:chacha20poly1305-prfsha256   \nchacha20poly1305-prfsha384:chacha20poly1305-prfsha384   \nchacha20poly1305-prfsha512:chacha20poly1305-prfsha512   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm-prfsha1",
                                        "aes128gcm-prfsha256",
                                        "aes128gcm-prfsha384",
                                        "aes128gcm-prfsha512",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm-prfsha1",
                                        "aes256gcm-prfsha256",
                                        "aes256gcm-prfsha384",
                                        "aes256gcm-prfsha512",
                                        "chacha20poly1305-prfsha1",
                                        "chacha20poly1305-prfsha256",
                                        "chacha20poly1305-prfsha384",
                                        "chacha20poly1305-prfsha512",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable control addition of a route to peer destination selector.   \ndisable:Do not add a route to destination of peer selector.   \nenable:Add route to destination of peer selector.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "add-gw-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically add a route to the remote gateway.   \nenable:Automatically add a route to the remote gateway.   \ndisable:Do not automatically add a route to the remote gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "psksecret": {
                                    "type": "string",
                                    "description": "Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "psksecret-remote": {
                                    "type": "string",
                                    "description": "Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "keepalive": {
                                    "type": "integer",
                                    "description": "NAT-T keep alive interval.",
                                    "maximum": 900,
                                    "minimum": 10
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance for routes added by IKE (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Priority for routes added by IKE (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "localid": {
                                    "type": "string",
                                    "description": "Local ID.",
                                    "maxLength": 63
                                },
                                "localid-type": {
                                    "type": "string",
                                    "description": "Local ID type.   \nauto:Select ID type automatically.   \nfqdn:Use fully qualified domain name.   \nuser-fqdn:Use user fully qualified domain name.   \nkeyid:Use key-id string.   \naddress:Use local IP address.   \nasn1dn:Use ASN.1 distinguished name.",
                                    "enum": [
                                        "auto",
                                        "fqdn",
                                        "user-fqdn",
                                        "keyid",
                                        "address",
                                        "asn1dn"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic initiation of IKE SA negotiation.   \nenable:Enable automatic initiation of IKE SA negotiation.   \ndisable:Disable automatic initiation of IKE SA negotiation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "negotiate-timeout": {
                                    "type": "integer",
                                    "description": "IKE SA negotiation timeout in seconds (1 - 300).",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "fragmentation": {
                                    "type": "string",
                                    "description": "Enable\/disable fragment IKE message on re-transmission.   \nenable:Enable intra-IKE fragmentation support on re-transmission.   \ndisable:Disable intra-IKE fragmentation support.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dpd": {
                                    "type": "string",
                                    "description": "Dead Peer Detection mode.   \ndisable:Disable Dead Peer Detection.   \non-idle:Trigger Dead Peer Detection when IPsec is idle.   \non-demand:Trigger Dead Peer Detection when IPsec traffic is sent but no reply is received from the peer.",
                                    "enum": [
                                        "disable",
                                        "on-idle",
                                        "on-demand"
                                    ]
                                },
                                "dpd-retrycount": {
                                    "type": "integer",
                                    "description": "Number of DPD retry attempts.",
                                    "maximum": 10,
                                    "minimum": 0
                                },
                                "dpd-retryinterval": {
                                    "type": "string",
                                    "description": "DPD retry interval."
                                },
                                "forticlient-enforcement": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient enforcement.   \nenable:Enable FortiClient enforcement.   \ndisable:Disable FortiClient enforcement.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading NPU.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "send-cert-chain": {
                                    "type": "string",
                                    "description": "Enable\/disable sending certificate chain.   \nenable:Enable sending certificate chain.   \ndisable:Disable sending certificate chain.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "suite-b": {
                                    "type": "string",
                                    "description": "Use Suite-B.   \ndisable:Do not use UI suite.   \nsuite-b-gcm-128:Use Suite-B-GCM-128.   \nsuite-b-gcm-256:Use Suite-B-GCM-256.",
                                    "enum": [
                                        "disable",
                                        "suite-b-gcm-128",
                                        "suite-b-gcm-256"
                                    ]
                                },
                                "eap": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 EAP authentication.   \nenable:Enable IKEv2 EAP authentication.   \ndisable:Disable IKEv2 EAP authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eap-identity": {
                                    "type": "string",
                                    "description": "IKEv2 EAP peer identity type.   \nuse-id-payload:Use IKEv2 IDi payload to resolve peer identity.   \nsend-request:Use EAP identity request to resolve peer identity.",
                                    "enum": [
                                        "use-id-payload",
                                        "send-request"
                                    ]
                                },
                                "eap-exclude-peergrp": {
                                    "type": "string",
                                    "description": "Peer group excluded from EAP authentication.",
                                    "maxLength": 35
                                },
                                "acct-verify": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of RADIUS accounting record.   \nenable:Enable verification of RADIUS accounting record.   \ndisable:Disable verification of RADIUS accounting record.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ppk": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Postquantum Preshared Key (PPK).   \ndisable:Disable use of IKEv2 Postquantum Preshared Key (PPK).   \nallow:Allow, but do not require, use of IKEv2 Postquantum Preshared Key (PPK).   \nrequire:Require use of IKEv2 Postquantum Preshared Key (PPK).",
                                    "enum": [
                                        "disable",
                                        "allow",
                                        "require"
                                    ]
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "wizard-type": {
                                    "type": "string",
                                    "description": "GUI VPN Wizard Type.   \ncustom:Custom VPN configuration.   \ndialup-forticlient:Dial Up - FortiClient Windows, Mac and Android.   \ndialup-ios:Dial Up - iPhone \/ iPad Native IPsec Client.   \ndialup-android:Dial Up - Android Native IPsec Client.   \ndialup-windows:Dial Up - Windows Native IPsec Client.   \ndialup-cisco:Dial Up - Cisco IPsec Client.   \nstatic-fortigate:Site to Site - FortiGate.   \ndialup-fortigate:Dial Up - FortiGate.   \nstatic-cisco:Site to Site - Cisco.   \ndialup-cisco-fw:Dialup Up - Cisco Firewall.   \nsimplified-static-fortigate:Site to Site - FortiGate (SD-WAN).   \nhub-fortigate-auto-discovery:Hub role in a Hub-and-Spoke auto-discovery VPN.   \nspoke-fortigate-auto-discovery:Spoke role in a Hub-and-Spoke auto-discovery VPN.",
                                    "enum": [
                                        "custom",
                                        "dialup-forticlient",
                                        "dialup-ios",
                                        "dialup-android",
                                        "dialup-windows",
                                        "dialup-cisco",
                                        "static-fortigate",
                                        "dialup-fortigate",
                                        "static-cisco",
                                        "dialup-cisco-fw",
                                        "simplified-static-fortigate",
                                        "hub-fortigate-auto-discovery",
                                        "spoke-fortigate-auto-discovery"
                                    ]
                                },
                                "xauthtype": {
                                    "type": "string",
                                    "description": "XAuth type.   \ndisable:Disable.   \nclient:Enable as client.   \npap:Enable as server PAP.   \nchap:Enable as server CHAP.   \nauto:Enable as server auto.",
                                    "enum": [
                                        "disable",
                                        "client",
                                        "pap",
                                        "chap",
                                        "auto"
                                    ]
                                },
                                "reauth": {
                                    "type": "string",
                                    "description": "Enable\/disable re-authentication upon IKE SA lifetime expiration.   \ndisable:Disable IKE SA re-authentication.   \nenable:Enable IKE SA re-authentication.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "authusr": {
                                    "type": "string",
                                    "description": "XAuth user name.",
                                    "maxLength": 64
                                },
                                "authpasswd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "XAuth password (max 35 characters)."
                                },
                                "group-authentication": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 IDi group authentication.   \nenable:Enable IKEv2 IDi group authentication.   \ndisable:Disable IKEv2 IDi group authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-authentication-secret": {
                                    "type": "string",
                                    "description": "Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)"
                                },
                                "authusrgrp": {
                                    "type": "string",
                                    "description": "Authentication user group.",
                                    "maxLength": 35
                                },
                                "mesh-selector-type": {
                                    "type": "string",
                                    "description": "Add selectors containing subsets of the configuration depending on traffic.   \ndisable:Disable.   \nsubnet:Enable addition of matching subnet selector.   \nhost:Enable addition of host to host selector.",
                                    "enum": [
                                        "disable",
                                        "subnet",
                                        "host"
                                    ]
                                },
                                "idle-timeout": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec tunnel idle timeout.   \nenable:Enable IPsec tunnel idle timeout.   \ndisable:Disable IPsec tunnel idle timeout.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "idle-timeoutinterval": {
                                    "type": "integer",
                                    "description": "IPsec tunnel idle timeout in minutes (5 - 43200).",
                                    "maximum": 43200,
                                    "minimum": 5
                                },
                                "ha-sync-esp-seqno": {
                                    "type": "string",
                                    "description": "Enable\/disable sequence number jump ahead for IPsec HA.   \nenable:Enable HA syncing of ESP sequence numbers.   \ndisable:Disable HA syncing of ESP sequence numbers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copy the dscp in the ESP header to the inner IP Header.   \nenable:Enable copy the dscp in the ESP header to the inner IP Header.   \ndisable:Disable copy the dscp in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nattraversal": {
                                    "type": "string",
                                    "description": "Enable\/disable NAT traversal.   \nenable:Enable IPsec NAT traversal.   \ndisable:Disable IPsec NAT traversal.   \nforced:Force IPsec NAT traversal on.",
                                    "enum": [
                                        "enable",
                                        "disable",
                                        "forced"
                                    ]
                                },
                                "esn": {
                                    "type": "string",
                                    "description": "Extended sequence number (ESN) negotiation.   \nrequire:Require extended sequence number.   \nallow:Allow extended sequence number.   \ndisable:Disable extended sequence number.",
                                    "enum": [
                                        "require",
                                        "allow",
                                        "disable"
                                    ]
                                },
                                "fragmentation-mtu": {
                                    "type": "integer",
                                    "description": "IKE fragmentation MTU (500 - 16000).",
                                    "maximum": 16000,
                                    "minimum": 500
                                },
                                "childless-ike": {
                                    "type": "string",
                                    "description": "Enable\/disable childless IKEv2 initiation (RFC 6023).   \nenable:Enable childless IKEv2 initiation (RFC 6023).   \ndisable:Disable childless IKEv2 initiation (RFC 6023).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rekey": {
                                    "type": "string",
                                    "description": "Enable\/disable phase1 rekey.   \nenable:Enable phase1 rekey.   \ndisable:Disable phase1 rekey.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "digital-signature-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Digital Signature Authentication (RFC 7427).   \nenable:Enable IKEv2 Digital Signature Authentication (RFC 7427).   \ndisable:Disable IKEv2 Digital Signature Authentication (RFC 7427).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "signature-hash-alg": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication hash algorithms.   \nsha1:SHA1.   \nsha2-256:SHA2-256.   \nsha2-384:SHA2-384.   \nsha2-512:SHA2-512.",
                                    "enum": [
                                        "sha1",
                                        "sha2-256",
                                        "sha2-384",
                                        "sha2-512"
                                    ]
                                },
                                "rsa-signature-format": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication RSA signature format.   \npkcs1:RSASSA PKCS#1 v1.5.   \npss:RSASSA Probabilistic Signature Scheme (PSS).",
                                    "enum": [
                                        "pkcs1",
                                        "pss"
                                    ]
                                },
                                "enforce-unique-id": {
                                    "type": "string",
                                    "description": "Enable\/disable peer ID uniqueness check.   \ndisable:Disable peer ID uniqueness enforcement.   \nkeep-new:Enforce peer ID uniqueness, keep new connection if collision found.   \nkeep-old:Enforce peer ID uniqueness, keep old connection if collision found.",
                                    "enum": [
                                        "disable",
                                        "keep-new",
                                        "keep-old"
                                    ]
                                },
                                "cert-id-validation": {
                                    "type": "string",
                                    "description": "Enable\/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \nenable:Enable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \ndisable:Disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-egress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for egress IPsec traffic.   \nenable:Enable Forward Error Correction for egress IPsec traffic.   \ndisable:Disable Forward Error Correction for egress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-send-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).",
                                    "maximum": 1000,
                                    "minimum": 1
                                },
                                "fec-base": {
                                    "type": "integer",
                                    "description": "Number of base Forward Error Correction packets (1 - 100).",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "fec-codec": {
                                    "type": "integer",
                                    "description": "ipsec fec encoding\/decoding algorithm (0: reed-solomon, 1: xor).",
                                    "maximum": 1,
                                    "minimum": 0
                                },
                                "fec-redundant": {
                                    "type": "integer",
                                    "description": "Number of redundant Forward Error Correction packets (0 - 100,  when fec-codec is reed-solomon  or 1 when fec-codec is xor .",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "fec-ingress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for ingress IPsec traffic.   \nenable:Enable Forward Error Correction for ingress IPsec traffic.   \ndisable:Disable Forward Error Correction for ingress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-receive-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).",
                                    "maximum": 10000,
                                    "minimum": 1
                                },
                                "network-overlay": {
                                    "type": "string",
                                    "description": "Enable\/disable network overlays.   \ndisable:Disable network overlays.   \nenable:Enable network overlays.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "network-id": {
                                    "type": "integer",
                                    "description": "VPN gateway network ID.",
                                    "maximum": 255,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase1"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase1"
                ]
            }
        },
        "\/vpn.ipsec\/phase1": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec remote gateway name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Remote gateway type.   \nstatic:Remote VPN gateway has fixed IP address.   \ndynamic:Remote VPN gateway has dynamic IP address.   \nddns:Remote VPN gateway has dynamic IP address and is a dynamic DNS client.",
                                    "enum": [
                                        "static",
                                        "dynamic",
                                        "ddns"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Local physical, aggregate, or VLAN outgoing interface.",
                                    "maxLength": 35
                                },
                                "ike-version": {
                                    "type": "string",
                                    "description": "IKE protocol version.   \n1:Use IKEv1 protocol.   \n2:Use IKEv2 protocol.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote VPN gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local VPN gateway."
                                },
                                "remotegw-ddns": {
                                    "type": "string",
                                    "description": "Domain name of remote gateway (eg. name.DDNS.com).",
                                    "maxLength": 63
                                },
                                "keylife": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before phase 1 encryption key expires.",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "certificate": {
                                    "description": "Names of up to 4 signed personal certificates.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Certificate name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "authmethod": {
                                    "type": "string",
                                    "description": "Authentication method.   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "authmethod-remote": {
                                    "type": "string",
                                    "description": "Authentication method (remote side).   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "ID protection mode used to establish a secure channel.   \naggressive:Aggressive mode.   \nmain:Main mode.",
                                    "enum": [
                                        "aggressive",
                                        "main"
                                    ]
                                },
                                "peertype": {
                                    "type": "string",
                                    "description": "Accept this peer type.   \nany:Accept any peer ID.   \none:Accept this peer ID.   \ndialup:Accept peer ID in dialup group.   \npeer:Accept this peer certificate.   \npeergrp:Accept this peer certificate group.",
                                    "enum": [
                                        "any",
                                        "one",
                                        "dialup",
                                        "peer",
                                        "peergrp"
                                    ]
                                },
                                "peerid": {
                                    "type": "string",
                                    "description": "Accept this peer identity.",
                                    "maxLength": 255
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group name for dialup peers.",
                                    "maxLength": 35
                                },
                                "peer": {
                                    "type": "string",
                                    "description": "Accept this peer certificate.",
                                    "maxLength": 35
                                },
                                "peergrp": {
                                    "type": "string",
                                    "description": "Accept this peer certificate group.",
                                    "maxLength": 35
                                },
                                "mode-cfg": {
                                    "type": "string",
                                    "description": "Enable\/disable configuration method.   \ndisable:Disable Configuration Method.   \nenable:Enable Configuration Method.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable assignment of IP to IPsec interface via configuration method.   \ndisable:Do not assign an IP address to the IPsec interface.   \nenable:Assign an IP address to the IPsec interface.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip-from": {
                                    "type": "string",
                                    "description": "Method by which the IP address will be assigned.   \nrange:Assign IP address from locally defined range.   \nusrgrp:Assign IP address via user group.   \ndhcp:Assign IP address via DHCP.   \nname:Assign IP address from firewall address or group.",
                                    "enum": [
                                        "range",
                                        "usrgrp",
                                        "dhcp",
                                        "name"
                                    ]
                                },
                                "ipv4-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start of IPv4 range."
                                },
                                "ipv4-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End of IPv4 range."
                                },
                                "ipv4-netmask": {
                                    "type": "string",
                                    "description": "IPv4 Netmask."
                                },
                                "dhcp-ra-giaddr": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Relay agent gateway IP address to use in the giaddr field of DHCP requests."
                                },
                                "dhcp6-ra-linkaddr": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Relay agent IPv6 link address to use in DHCP6 requests."
                                },
                                "dns-mode": {
                                    "type": "string",
                                    "description": "DNS server mode.   \nmanual:Manually configure DNS servers.   \nauto:Use default DNS servers.",
                                    "enum": [
                                        "manual",
                                        "auto"
                                    ]
                                },
                                "ipv4-dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "ipv4-dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "ipv4-dns-server3": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 3."
                                },
                                "ipv4-wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 1."
                                },
                                "ipv4-wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 2."
                                },
                                "ipv4-exclude-range": {
                                    "description": "Configuration Method IPv4 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Start of IPv4 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "End of IPv4 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv4-split-include": {
                                    "type": "string",
                                    "description": "IPv4 split-include subnets.",
                                    "maxLength": 79
                                },
                                "split-include-service": {
                                    "type": "string",
                                    "description": "Split-include services.",
                                    "maxLength": 79
                                },
                                "ipv4-name": {
                                    "type": "string",
                                    "description": "IPv4 address name.",
                                    "maxLength": 79
                                },
                                "ipv6-start-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Start of IPv6 range."
                                },
                                "ipv6-end-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "End of IPv6 range."
                                },
                                "ipv6-prefix": {
                                    "type": "integer",
                                    "description": "IPv6 prefix.",
                                    "maximum": 128,
                                    "minimum": 1
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-dns-server3": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 3."
                                },
                                "ipv6-exclude-range": {
                                    "description": "Configuration method IPv6 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Start of IPv6 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "End of IPv6 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-split-include": {
                                    "type": "string",
                                    "description": "IPv6 split-include subnets.",
                                    "maxLength": 79
                                },
                                "ipv6-name": {
                                    "type": "string",
                                    "description": "IPv6 address name.",
                                    "maxLength": 79
                                },
                                "unity-support": {
                                    "type": "string",
                                    "description": "Enable\/disable support for Cisco UNITY Configuration Method extensions.   \ndisable:Disable Cisco Unity Configuration Method Extensions.   \nenable:Enable Cisco Unity Configuration Method Extensions.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "domain": {
                                    "type": "string",
                                    "description": "Instruct unity clients about the default DNS domain.",
                                    "maxLength": 63
                                },
                                "banner": {
                                    "type": "string",
                                    "description": "Message that unity client should display after connecting.",
                                    "maxLength": 1024
                                },
                                "include-local-lan": {
                                    "type": "string",
                                    "description": "Enable\/disable allow local LAN access on unity clients.   \ndisable:Disable local LAN access on Unity clients.   \nenable:Enable local LAN access on Unity clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "ipv4-split-exclude": {
                                    "type": "string",
                                    "description": "IPv4 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "ipv6-split-exclude": {
                                    "type": "string",
                                    "description": "IPv6 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable saving XAuth username and password on VPN clients.   \ndisable:Disable saving XAuth username and password on VPN clients.   \nenable:Enable saving XAuth username and password on VPN clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to bring up the tunnel when there is no traffic.   \ndisable:Disable allowing the VPN client to bring up the tunnel when there is no traffic.   \nenable:Enable allowing the VPN client to bring up the tunnel when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to keep the tunnel up when there is no traffic.   \ndisable:Disable allowing the VPN client to keep the tunnel up when there is no traffic.   \nenable:Enable allowing the VPN client to keep the tunnel up when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "backup-gateway": {
                                    "description": "Instruct unity clients about the backup gateway address(es).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string",
                                                "description": "Address of backup gateway.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase1 proposal.   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm-prfsha1:aes128gcm-prfsha1   \naes128gcm-prfsha256:aes128gcm-prfsha256   \naes128gcm-prfsha384:aes128gcm-prfsha384   \naes128gcm-prfsha512:aes128gcm-prfsha512   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm-prfsha1:aes256gcm-prfsha1   \naes256gcm-prfsha256:aes256gcm-prfsha256   \naes256gcm-prfsha384:aes256gcm-prfsha384   \naes256gcm-prfsha512:aes256gcm-prfsha512   \nchacha20poly1305-prfsha1:chacha20poly1305-prfsha1   \nchacha20poly1305-prfsha256:chacha20poly1305-prfsha256   \nchacha20poly1305-prfsha384:chacha20poly1305-prfsha384   \nchacha20poly1305-prfsha512:chacha20poly1305-prfsha512   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm-prfsha1",
                                        "aes128gcm-prfsha256",
                                        "aes128gcm-prfsha384",
                                        "aes128gcm-prfsha512",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm-prfsha1",
                                        "aes256gcm-prfsha256",
                                        "aes256gcm-prfsha384",
                                        "aes256gcm-prfsha512",
                                        "chacha20poly1305-prfsha1",
                                        "chacha20poly1305-prfsha256",
                                        "chacha20poly1305-prfsha384",
                                        "chacha20poly1305-prfsha512",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable control addition of a route to peer destination selector.   \ndisable:Do not add a route to destination of peer selector.   \nenable:Add route to destination of peer selector.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "add-gw-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically add a route to the remote gateway.   \nenable:Automatically add a route to the remote gateway.   \ndisable:Do not automatically add a route to the remote gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "psksecret": {
                                    "type": "string",
                                    "description": "Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "psksecret-remote": {
                                    "type": "string",
                                    "description": "Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "keepalive": {
                                    "type": "integer",
                                    "description": "NAT-T keep alive interval.",
                                    "maximum": 900,
                                    "minimum": 10
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance for routes added by IKE (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Priority for routes added by IKE (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "localid": {
                                    "type": "string",
                                    "description": "Local ID.",
                                    "maxLength": 63
                                },
                                "localid-type": {
                                    "type": "string",
                                    "description": "Local ID type.   \nauto:Select ID type automatically.   \nfqdn:Use fully qualified domain name.   \nuser-fqdn:Use user fully qualified domain name.   \nkeyid:Use key-id string.   \naddress:Use local IP address.   \nasn1dn:Use ASN.1 distinguished name.",
                                    "enum": [
                                        "auto",
                                        "fqdn",
                                        "user-fqdn",
                                        "keyid",
                                        "address",
                                        "asn1dn"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic initiation of IKE SA negotiation.   \nenable:Enable automatic initiation of IKE SA negotiation.   \ndisable:Disable automatic initiation of IKE SA negotiation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "negotiate-timeout": {
                                    "type": "integer",
                                    "description": "IKE SA negotiation timeout in seconds (1 - 300).",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "fragmentation": {
                                    "type": "string",
                                    "description": "Enable\/disable fragment IKE message on re-transmission.   \nenable:Enable intra-IKE fragmentation support on re-transmission.   \ndisable:Disable intra-IKE fragmentation support.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dpd": {
                                    "type": "string",
                                    "description": "Dead Peer Detection mode.   \ndisable:Disable Dead Peer Detection.   \non-idle:Trigger Dead Peer Detection when IPsec is idle.   \non-demand:Trigger Dead Peer Detection when IPsec traffic is sent but no reply is received from the peer.",
                                    "enum": [
                                        "disable",
                                        "on-idle",
                                        "on-demand"
                                    ]
                                },
                                "dpd-retrycount": {
                                    "type": "integer",
                                    "description": "Number of DPD retry attempts.",
                                    "maximum": 10,
                                    "minimum": 0
                                },
                                "dpd-retryinterval": {
                                    "type": "string",
                                    "description": "DPD retry interval."
                                },
                                "forticlient-enforcement": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient enforcement.   \nenable:Enable FortiClient enforcement.   \ndisable:Disable FortiClient enforcement.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading NPU.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "send-cert-chain": {
                                    "type": "string",
                                    "description": "Enable\/disable sending certificate chain.   \nenable:Enable sending certificate chain.   \ndisable:Disable sending certificate chain.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "suite-b": {
                                    "type": "string",
                                    "description": "Use Suite-B.   \ndisable:Do not use UI suite.   \nsuite-b-gcm-128:Use Suite-B-GCM-128.   \nsuite-b-gcm-256:Use Suite-B-GCM-256.",
                                    "enum": [
                                        "disable",
                                        "suite-b-gcm-128",
                                        "suite-b-gcm-256"
                                    ]
                                },
                                "eap": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 EAP authentication.   \nenable:Enable IKEv2 EAP authentication.   \ndisable:Disable IKEv2 EAP authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eap-identity": {
                                    "type": "string",
                                    "description": "IKEv2 EAP peer identity type.   \nuse-id-payload:Use IKEv2 IDi payload to resolve peer identity.   \nsend-request:Use EAP identity request to resolve peer identity.",
                                    "enum": [
                                        "use-id-payload",
                                        "send-request"
                                    ]
                                },
                                "eap-exclude-peergrp": {
                                    "type": "string",
                                    "description": "Peer group excluded from EAP authentication.",
                                    "maxLength": 35
                                },
                                "acct-verify": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of RADIUS accounting record.   \nenable:Enable verification of RADIUS accounting record.   \ndisable:Disable verification of RADIUS accounting record.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ppk": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Postquantum Preshared Key (PPK).   \ndisable:Disable use of IKEv2 Postquantum Preshared Key (PPK).   \nallow:Allow, but do not require, use of IKEv2 Postquantum Preshared Key (PPK).   \nrequire:Require use of IKEv2 Postquantum Preshared Key (PPK).",
                                    "enum": [
                                        "disable",
                                        "allow",
                                        "require"
                                    ]
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "wizard-type": {
                                    "type": "string",
                                    "description": "GUI VPN Wizard Type.   \ncustom:Custom VPN configuration.   \ndialup-forticlient:Dial Up - FortiClient Windows, Mac and Android.   \ndialup-ios:Dial Up - iPhone \/ iPad Native IPsec Client.   \ndialup-android:Dial Up - Android Native IPsec Client.   \ndialup-windows:Dial Up - Windows Native IPsec Client.   \ndialup-cisco:Dial Up - Cisco IPsec Client.   \nstatic-fortigate:Site to Site - FortiGate.   \ndialup-fortigate:Dial Up - FortiGate.   \nstatic-cisco:Site to Site - Cisco.   \ndialup-cisco-fw:Dialup Up - Cisco Firewall.   \nsimplified-static-fortigate:Site to Site - FortiGate (SD-WAN).   \nhub-fortigate-auto-discovery:Hub role in a Hub-and-Spoke auto-discovery VPN.   \nspoke-fortigate-auto-discovery:Spoke role in a Hub-and-Spoke auto-discovery VPN.",
                                    "enum": [
                                        "custom",
                                        "dialup-forticlient",
                                        "dialup-ios",
                                        "dialup-android",
                                        "dialup-windows",
                                        "dialup-cisco",
                                        "static-fortigate",
                                        "dialup-fortigate",
                                        "static-cisco",
                                        "dialup-cisco-fw",
                                        "simplified-static-fortigate",
                                        "hub-fortigate-auto-discovery",
                                        "spoke-fortigate-auto-discovery"
                                    ]
                                },
                                "xauthtype": {
                                    "type": "string",
                                    "description": "XAuth type.   \ndisable:Disable.   \nclient:Enable as client.   \npap:Enable as server PAP.   \nchap:Enable as server CHAP.   \nauto:Enable as server auto.",
                                    "enum": [
                                        "disable",
                                        "client",
                                        "pap",
                                        "chap",
                                        "auto"
                                    ]
                                },
                                "reauth": {
                                    "type": "string",
                                    "description": "Enable\/disable re-authentication upon IKE SA lifetime expiration.   \ndisable:Disable IKE SA re-authentication.   \nenable:Enable IKE SA re-authentication.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "authusr": {
                                    "type": "string",
                                    "description": "XAuth user name.",
                                    "maxLength": 64
                                },
                                "authpasswd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "XAuth password (max 35 characters)."
                                },
                                "group-authentication": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 IDi group authentication.   \nenable:Enable IKEv2 IDi group authentication.   \ndisable:Disable IKEv2 IDi group authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-authentication-secret": {
                                    "type": "string",
                                    "description": "Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)"
                                },
                                "authusrgrp": {
                                    "type": "string",
                                    "description": "Authentication user group.",
                                    "maxLength": 35
                                },
                                "mesh-selector-type": {
                                    "type": "string",
                                    "description": "Add selectors containing subsets of the configuration depending on traffic.   \ndisable:Disable.   \nsubnet:Enable addition of matching subnet selector.   \nhost:Enable addition of host to host selector.",
                                    "enum": [
                                        "disable",
                                        "subnet",
                                        "host"
                                    ]
                                },
                                "idle-timeout": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec tunnel idle timeout.   \nenable:Enable IPsec tunnel idle timeout.   \ndisable:Disable IPsec tunnel idle timeout.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "idle-timeoutinterval": {
                                    "type": "integer",
                                    "description": "IPsec tunnel idle timeout in minutes (5 - 43200).",
                                    "maximum": 43200,
                                    "minimum": 5
                                },
                                "ha-sync-esp-seqno": {
                                    "type": "string",
                                    "description": "Enable\/disable sequence number jump ahead for IPsec HA.   \nenable:Enable HA syncing of ESP sequence numbers.   \ndisable:Disable HA syncing of ESP sequence numbers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copy the dscp in the ESP header to the inner IP Header.   \nenable:Enable copy the dscp in the ESP header to the inner IP Header.   \ndisable:Disable copy the dscp in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nattraversal": {
                                    "type": "string",
                                    "description": "Enable\/disable NAT traversal.   \nenable:Enable IPsec NAT traversal.   \ndisable:Disable IPsec NAT traversal.   \nforced:Force IPsec NAT traversal on.",
                                    "enum": [
                                        "enable",
                                        "disable",
                                        "forced"
                                    ]
                                },
                                "esn": {
                                    "type": "string",
                                    "description": "Extended sequence number (ESN) negotiation.   \nrequire:Require extended sequence number.   \nallow:Allow extended sequence number.   \ndisable:Disable extended sequence number.",
                                    "enum": [
                                        "require",
                                        "allow",
                                        "disable"
                                    ]
                                },
                                "fragmentation-mtu": {
                                    "type": "integer",
                                    "description": "IKE fragmentation MTU (500 - 16000).",
                                    "maximum": 16000,
                                    "minimum": 500
                                },
                                "childless-ike": {
                                    "type": "string",
                                    "description": "Enable\/disable childless IKEv2 initiation (RFC 6023).   \nenable:Enable childless IKEv2 initiation (RFC 6023).   \ndisable:Disable childless IKEv2 initiation (RFC 6023).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rekey": {
                                    "type": "string",
                                    "description": "Enable\/disable phase1 rekey.   \nenable:Enable phase1 rekey.   \ndisable:Disable phase1 rekey.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "digital-signature-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Digital Signature Authentication (RFC 7427).   \nenable:Enable IKEv2 Digital Signature Authentication (RFC 7427).   \ndisable:Disable IKEv2 Digital Signature Authentication (RFC 7427).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "signature-hash-alg": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication hash algorithms.   \nsha1:SHA1.   \nsha2-256:SHA2-256.   \nsha2-384:SHA2-384.   \nsha2-512:SHA2-512.",
                                    "enum": [
                                        "sha1",
                                        "sha2-256",
                                        "sha2-384",
                                        "sha2-512"
                                    ]
                                },
                                "rsa-signature-format": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication RSA signature format.   \npkcs1:RSASSA PKCS#1 v1.5.   \npss:RSASSA Probabilistic Signature Scheme (PSS).",
                                    "enum": [
                                        "pkcs1",
                                        "pss"
                                    ]
                                },
                                "enforce-unique-id": {
                                    "type": "string",
                                    "description": "Enable\/disable peer ID uniqueness check.   \ndisable:Disable peer ID uniqueness enforcement.   \nkeep-new:Enforce peer ID uniqueness, keep new connection if collision found.   \nkeep-old:Enforce peer ID uniqueness, keep old connection if collision found.",
                                    "enum": [
                                        "disable",
                                        "keep-new",
                                        "keep-old"
                                    ]
                                },
                                "cert-id-validation": {
                                    "type": "string",
                                    "description": "Enable\/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \nenable:Enable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \ndisable:Disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-egress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for egress IPsec traffic.   \nenable:Enable Forward Error Correction for egress IPsec traffic.   \ndisable:Disable Forward Error Correction for egress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-send-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).",
                                    "maximum": 1000,
                                    "minimum": 1
                                },
                                "fec-base": {
                                    "type": "integer",
                                    "description": "Number of base Forward Error Correction packets (1 - 100).",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "fec-codec": {
                                    "type": "integer",
                                    "description": "ipsec fec encoding\/decoding algorithm (0: reed-solomon, 1: xor).",
                                    "maximum": 1,
                                    "minimum": 0
                                },
                                "fec-redundant": {
                                    "type": "integer",
                                    "description": "Number of redundant Forward Error Correction packets (0 - 100,  when fec-codec is reed-solomon  or 1 when fec-codec is xor .",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "fec-ingress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for ingress IPsec traffic.   \nenable:Enable Forward Error Correction for ingress IPsec traffic.   \ndisable:Disable Forward Error Correction for ingress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-receive-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).",
                                    "maximum": 10000,
                                    "minimum": 1
                                },
                                "network-overlay": {
                                    "type": "string",
                                    "description": "Enable\/disable network overlays.   \ndisable:Disable network overlays.   \nenable:Enable network overlays.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "network-id": {
                                    "type": "integer",
                                    "description": "VPN gateway network ID.",
                                    "maximum": 255,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase1"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec remote gateway name.",
                                    "maxLength": 35
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Remote gateway type.   \nstatic:Remote VPN gateway has fixed IP address.   \ndynamic:Remote VPN gateway has dynamic IP address.   \nddns:Remote VPN gateway has dynamic IP address and is a dynamic DNS client.",
                                    "enum": [
                                        "static",
                                        "dynamic",
                                        "ddns"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Local physical, aggregate, or VLAN outgoing interface.",
                                    "maxLength": 35
                                },
                                "ike-version": {
                                    "type": "string",
                                    "description": "IKE protocol version.   \n1:Use IKEv1 protocol.   \n2:Use IKEv2 protocol.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote VPN gateway."
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local VPN gateway."
                                },
                                "remotegw-ddns": {
                                    "type": "string",
                                    "description": "Domain name of remote gateway (eg. name.DDNS.com).",
                                    "maxLength": 63
                                },
                                "keylife": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before phase 1 encryption key expires.",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "certificate": {
                                    "description": "Names of up to 4 signed personal certificates.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Certificate name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "authmethod": {
                                    "type": "string",
                                    "description": "Authentication method.   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "authmethod-remote": {
                                    "type": "string",
                                    "description": "Authentication method (remote side).   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "ID protection mode used to establish a secure channel.   \naggressive:Aggressive mode.   \nmain:Main mode.",
                                    "enum": [
                                        "aggressive",
                                        "main"
                                    ]
                                },
                                "peertype": {
                                    "type": "string",
                                    "description": "Accept this peer type.   \nany:Accept any peer ID.   \none:Accept this peer ID.   \ndialup:Accept peer ID in dialup group.   \npeer:Accept this peer certificate.   \npeergrp:Accept this peer certificate group.",
                                    "enum": [
                                        "any",
                                        "one",
                                        "dialup",
                                        "peer",
                                        "peergrp"
                                    ]
                                },
                                "peerid": {
                                    "type": "string",
                                    "description": "Accept this peer identity.",
                                    "maxLength": 255
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group name for dialup peers.",
                                    "maxLength": 35
                                },
                                "peer": {
                                    "type": "string",
                                    "description": "Accept this peer certificate.",
                                    "maxLength": 35
                                },
                                "peergrp": {
                                    "type": "string",
                                    "description": "Accept this peer certificate group.",
                                    "maxLength": 35
                                },
                                "mode-cfg": {
                                    "type": "string",
                                    "description": "Enable\/disable configuration method.   \ndisable:Disable Configuration Method.   \nenable:Enable Configuration Method.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable assignment of IP to IPsec interface via configuration method.   \ndisable:Do not assign an IP address to the IPsec interface.   \nenable:Assign an IP address to the IPsec interface.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip-from": {
                                    "type": "string",
                                    "description": "Method by which the IP address will be assigned.   \nrange:Assign IP address from locally defined range.   \nusrgrp:Assign IP address via user group.   \ndhcp:Assign IP address via DHCP.   \nname:Assign IP address from firewall address or group.",
                                    "enum": [
                                        "range",
                                        "usrgrp",
                                        "dhcp",
                                        "name"
                                    ]
                                },
                                "ipv4-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start of IPv4 range."
                                },
                                "ipv4-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End of IPv4 range."
                                },
                                "ipv4-netmask": {
                                    "type": "string",
                                    "description": "IPv4 Netmask."
                                },
                                "dhcp-ra-giaddr": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Relay agent gateway IP address to use in the giaddr field of DHCP requests."
                                },
                                "dhcp6-ra-linkaddr": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Relay agent IPv6 link address to use in DHCP6 requests."
                                },
                                "dns-mode": {
                                    "type": "string",
                                    "description": "DNS server mode.   \nmanual:Manually configure DNS servers.   \nauto:Use default DNS servers.",
                                    "enum": [
                                        "manual",
                                        "auto"
                                    ]
                                },
                                "ipv4-dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "ipv4-dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "ipv4-dns-server3": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 3."
                                },
                                "ipv4-wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 1."
                                },
                                "ipv4-wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 2."
                                },
                                "ipv4-exclude-range": {
                                    "description": "Configuration Method IPv4 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Start of IPv4 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "End of IPv4 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv4-split-include": {
                                    "type": "string",
                                    "description": "IPv4 split-include subnets.",
                                    "maxLength": 79
                                },
                                "split-include-service": {
                                    "type": "string",
                                    "description": "Split-include services.",
                                    "maxLength": 79
                                },
                                "ipv4-name": {
                                    "type": "string",
                                    "description": "IPv4 address name.",
                                    "maxLength": 79
                                },
                                "ipv6-start-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Start of IPv6 range."
                                },
                                "ipv6-end-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "End of IPv6 range."
                                },
                                "ipv6-prefix": {
                                    "type": "integer",
                                    "description": "IPv6 prefix.",
                                    "maximum": 128,
                                    "minimum": 1
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-dns-server3": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 3."
                                },
                                "ipv6-exclude-range": {
                                    "description": "Configuration method IPv6 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Start of IPv6 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "End of IPv6 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-split-include": {
                                    "type": "string",
                                    "description": "IPv6 split-include subnets.",
                                    "maxLength": 79
                                },
                                "ipv6-name": {
                                    "type": "string",
                                    "description": "IPv6 address name.",
                                    "maxLength": 79
                                },
                                "unity-support": {
                                    "type": "string",
                                    "description": "Enable\/disable support for Cisco UNITY Configuration Method extensions.   \ndisable:Disable Cisco Unity Configuration Method Extensions.   \nenable:Enable Cisco Unity Configuration Method Extensions.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "domain": {
                                    "type": "string",
                                    "description": "Instruct unity clients about the default DNS domain.",
                                    "maxLength": 63
                                },
                                "banner": {
                                    "type": "string",
                                    "description": "Message that unity client should display after connecting.",
                                    "maxLength": 1024
                                },
                                "include-local-lan": {
                                    "type": "string",
                                    "description": "Enable\/disable allow local LAN access on unity clients.   \ndisable:Disable local LAN access on Unity clients.   \nenable:Enable local LAN access on Unity clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "ipv4-split-exclude": {
                                    "type": "string",
                                    "description": "IPv4 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "ipv6-split-exclude": {
                                    "type": "string",
                                    "description": "IPv6 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable saving XAuth username and password on VPN clients.   \ndisable:Disable saving XAuth username and password on VPN clients.   \nenable:Enable saving XAuth username and password on VPN clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to bring up the tunnel when there is no traffic.   \ndisable:Disable allowing the VPN client to bring up the tunnel when there is no traffic.   \nenable:Enable allowing the VPN client to bring up the tunnel when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to keep the tunnel up when there is no traffic.   \ndisable:Disable allowing the VPN client to keep the tunnel up when there is no traffic.   \nenable:Enable allowing the VPN client to keep the tunnel up when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "backup-gateway": {
                                    "description": "Instruct unity clients about the backup gateway address(es).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string",
                                                "description": "Address of backup gateway.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase1 proposal.   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm-prfsha1:aes128gcm-prfsha1   \naes128gcm-prfsha256:aes128gcm-prfsha256   \naes128gcm-prfsha384:aes128gcm-prfsha384   \naes128gcm-prfsha512:aes128gcm-prfsha512   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm-prfsha1:aes256gcm-prfsha1   \naes256gcm-prfsha256:aes256gcm-prfsha256   \naes256gcm-prfsha384:aes256gcm-prfsha384   \naes256gcm-prfsha512:aes256gcm-prfsha512   \nchacha20poly1305-prfsha1:chacha20poly1305-prfsha1   \nchacha20poly1305-prfsha256:chacha20poly1305-prfsha256   \nchacha20poly1305-prfsha384:chacha20poly1305-prfsha384   \nchacha20poly1305-prfsha512:chacha20poly1305-prfsha512   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm-prfsha1",
                                        "aes128gcm-prfsha256",
                                        "aes128gcm-prfsha384",
                                        "aes128gcm-prfsha512",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm-prfsha1",
                                        "aes256gcm-prfsha256",
                                        "aes256gcm-prfsha384",
                                        "aes256gcm-prfsha512",
                                        "chacha20poly1305-prfsha1",
                                        "chacha20poly1305-prfsha256",
                                        "chacha20poly1305-prfsha384",
                                        "chacha20poly1305-prfsha512",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable control addition of a route to peer destination selector.   \ndisable:Do not add a route to destination of peer selector.   \nenable:Add route to destination of peer selector.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "add-gw-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically add a route to the remote gateway.   \nenable:Automatically add a route to the remote gateway.   \ndisable:Do not automatically add a route to the remote gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "psksecret": {
                                    "type": "string",
                                    "description": "Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "psksecret-remote": {
                                    "type": "string",
                                    "description": "Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "keepalive": {
                                    "type": "integer",
                                    "description": "NAT-T keep alive interval.",
                                    "maximum": 900,
                                    "minimum": 10
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance for routes added by IKE (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Priority for routes added by IKE (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "localid": {
                                    "type": "string",
                                    "description": "Local ID.",
                                    "maxLength": 63
                                },
                                "localid-type": {
                                    "type": "string",
                                    "description": "Local ID type.   \nauto:Select ID type automatically.   \nfqdn:Use fully qualified domain name.   \nuser-fqdn:Use user fully qualified domain name.   \nkeyid:Use key-id string.   \naddress:Use local IP address.   \nasn1dn:Use ASN.1 distinguished name.",
                                    "enum": [
                                        "auto",
                                        "fqdn",
                                        "user-fqdn",
                                        "keyid",
                                        "address",
                                        "asn1dn"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic initiation of IKE SA negotiation.   \nenable:Enable automatic initiation of IKE SA negotiation.   \ndisable:Disable automatic initiation of IKE SA negotiation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "negotiate-timeout": {
                                    "type": "integer",
                                    "description": "IKE SA negotiation timeout in seconds (1 - 300).",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "fragmentation": {
                                    "type": "string",
                                    "description": "Enable\/disable fragment IKE message on re-transmission.   \nenable:Enable intra-IKE fragmentation support on re-transmission.   \ndisable:Disable intra-IKE fragmentation support.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dpd": {
                                    "type": "string",
                                    "description": "Dead Peer Detection mode.   \ndisable:Disable Dead Peer Detection.   \non-idle:Trigger Dead Peer Detection when IPsec is idle.   \non-demand:Trigger Dead Peer Detection when IPsec traffic is sent but no reply is received from the peer.",
                                    "enum": [
                                        "disable",
                                        "on-idle",
                                        "on-demand"
                                    ]
                                },
                                "dpd-retrycount": {
                                    "type": "integer",
                                    "description": "Number of DPD retry attempts.",
                                    "maximum": 10,
                                    "minimum": 0
                                },
                                "dpd-retryinterval": {
                                    "type": "string",
                                    "description": "DPD retry interval."
                                },
                                "forticlient-enforcement": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient enforcement.   \nenable:Enable FortiClient enforcement.   \ndisable:Disable FortiClient enforcement.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading NPU.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "send-cert-chain": {
                                    "type": "string",
                                    "description": "Enable\/disable sending certificate chain.   \nenable:Enable sending certificate chain.   \ndisable:Disable sending certificate chain.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "suite-b": {
                                    "type": "string",
                                    "description": "Use Suite-B.   \ndisable:Do not use UI suite.   \nsuite-b-gcm-128:Use Suite-B-GCM-128.   \nsuite-b-gcm-256:Use Suite-B-GCM-256.",
                                    "enum": [
                                        "disable",
                                        "suite-b-gcm-128",
                                        "suite-b-gcm-256"
                                    ]
                                },
                                "eap": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 EAP authentication.   \nenable:Enable IKEv2 EAP authentication.   \ndisable:Disable IKEv2 EAP authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eap-identity": {
                                    "type": "string",
                                    "description": "IKEv2 EAP peer identity type.   \nuse-id-payload:Use IKEv2 IDi payload to resolve peer identity.   \nsend-request:Use EAP identity request to resolve peer identity.",
                                    "enum": [
                                        "use-id-payload",
                                        "send-request"
                                    ]
                                },
                                "eap-exclude-peergrp": {
                                    "type": "string",
                                    "description": "Peer group excluded from EAP authentication.",
                                    "maxLength": 35
                                },
                                "acct-verify": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of RADIUS accounting record.   \nenable:Enable verification of RADIUS accounting record.   \ndisable:Disable verification of RADIUS accounting record.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ppk": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Postquantum Preshared Key (PPK).   \ndisable:Disable use of IKEv2 Postquantum Preshared Key (PPK).   \nallow:Allow, but do not require, use of IKEv2 Postquantum Preshared Key (PPK).   \nrequire:Require use of IKEv2 Postquantum Preshared Key (PPK).",
                                    "enum": [
                                        "disable",
                                        "allow",
                                        "require"
                                    ]
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "wizard-type": {
                                    "type": "string",
                                    "description": "GUI VPN Wizard Type.   \ncustom:Custom VPN configuration.   \ndialup-forticlient:Dial Up - FortiClient Windows, Mac and Android.   \ndialup-ios:Dial Up - iPhone \/ iPad Native IPsec Client.   \ndialup-android:Dial Up - Android Native IPsec Client.   \ndialup-windows:Dial Up - Windows Native IPsec Client.   \ndialup-cisco:Dial Up - Cisco IPsec Client.   \nstatic-fortigate:Site to Site - FortiGate.   \ndialup-fortigate:Dial Up - FortiGate.   \nstatic-cisco:Site to Site - Cisco.   \ndialup-cisco-fw:Dialup Up - Cisco Firewall.   \nsimplified-static-fortigate:Site to Site - FortiGate (SD-WAN).   \nhub-fortigate-auto-discovery:Hub role in a Hub-and-Spoke auto-discovery VPN.   \nspoke-fortigate-auto-discovery:Spoke role in a Hub-and-Spoke auto-discovery VPN.",
                                    "enum": [
                                        "custom",
                                        "dialup-forticlient",
                                        "dialup-ios",
                                        "dialup-android",
                                        "dialup-windows",
                                        "dialup-cisco",
                                        "static-fortigate",
                                        "dialup-fortigate",
                                        "static-cisco",
                                        "dialup-cisco-fw",
                                        "simplified-static-fortigate",
                                        "hub-fortigate-auto-discovery",
                                        "spoke-fortigate-auto-discovery"
                                    ]
                                },
                                "xauthtype": {
                                    "type": "string",
                                    "description": "XAuth type.   \ndisable:Disable.   \nclient:Enable as client.   \npap:Enable as server PAP.   \nchap:Enable as server CHAP.   \nauto:Enable as server auto.",
                                    "enum": [
                                        "disable",
                                        "client",
                                        "pap",
                                        "chap",
                                        "auto"
                                    ]
                                },
                                "reauth": {
                                    "type": "string",
                                    "description": "Enable\/disable re-authentication upon IKE SA lifetime expiration.   \ndisable:Disable IKE SA re-authentication.   \nenable:Enable IKE SA re-authentication.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "authusr": {
                                    "type": "string",
                                    "description": "XAuth user name.",
                                    "maxLength": 64
                                },
                                "authpasswd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "XAuth password (max 35 characters)."
                                },
                                "group-authentication": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 IDi group authentication.   \nenable:Enable IKEv2 IDi group authentication.   \ndisable:Disable IKEv2 IDi group authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-authentication-secret": {
                                    "type": "string",
                                    "description": "Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)"
                                },
                                "authusrgrp": {
                                    "type": "string",
                                    "description": "Authentication user group.",
                                    "maxLength": 35
                                },
                                "mesh-selector-type": {
                                    "type": "string",
                                    "description": "Add selectors containing subsets of the configuration depending on traffic.   \ndisable:Disable.   \nsubnet:Enable addition of matching subnet selector.   \nhost:Enable addition of host to host selector.",
                                    "enum": [
                                        "disable",
                                        "subnet",
                                        "host"
                                    ]
                                },
                                "idle-timeout": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec tunnel idle timeout.   \nenable:Enable IPsec tunnel idle timeout.   \ndisable:Disable IPsec tunnel idle timeout.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "idle-timeoutinterval": {
                                    "type": "integer",
                                    "description": "IPsec tunnel idle timeout in minutes (5 - 43200).",
                                    "maximum": 43200,
                                    "minimum": 5
                                },
                                "ha-sync-esp-seqno": {
                                    "type": "string",
                                    "description": "Enable\/disable sequence number jump ahead for IPsec HA.   \nenable:Enable HA syncing of ESP sequence numbers.   \ndisable:Disable HA syncing of ESP sequence numbers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copy the dscp in the ESP header to the inner IP Header.   \nenable:Enable copy the dscp in the ESP header to the inner IP Header.   \ndisable:Disable copy the dscp in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "nattraversal": {
                                    "type": "string",
                                    "description": "Enable\/disable NAT traversal.   \nenable:Enable IPsec NAT traversal.   \ndisable:Disable IPsec NAT traversal.   \nforced:Force IPsec NAT traversal on.",
                                    "enum": [
                                        "enable",
                                        "disable",
                                        "forced"
                                    ]
                                },
                                "esn": {
                                    "type": "string",
                                    "description": "Extended sequence number (ESN) negotiation.   \nrequire:Require extended sequence number.   \nallow:Allow extended sequence number.   \ndisable:Disable extended sequence number.",
                                    "enum": [
                                        "require",
                                        "allow",
                                        "disable"
                                    ]
                                },
                                "fragmentation-mtu": {
                                    "type": "integer",
                                    "description": "IKE fragmentation MTU (500 - 16000).",
                                    "maximum": 16000,
                                    "minimum": 500
                                },
                                "childless-ike": {
                                    "type": "string",
                                    "description": "Enable\/disable childless IKEv2 initiation (RFC 6023).   \nenable:Enable childless IKEv2 initiation (RFC 6023).   \ndisable:Disable childless IKEv2 initiation (RFC 6023).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rekey": {
                                    "type": "string",
                                    "description": "Enable\/disable phase1 rekey.   \nenable:Enable phase1 rekey.   \ndisable:Disable phase1 rekey.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "digital-signature-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Digital Signature Authentication (RFC 7427).   \nenable:Enable IKEv2 Digital Signature Authentication (RFC 7427).   \ndisable:Disable IKEv2 Digital Signature Authentication (RFC 7427).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "signature-hash-alg": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication hash algorithms.   \nsha1:SHA1.   \nsha2-256:SHA2-256.   \nsha2-384:SHA2-384.   \nsha2-512:SHA2-512.",
                                    "enum": [
                                        "sha1",
                                        "sha2-256",
                                        "sha2-384",
                                        "sha2-512"
                                    ]
                                },
                                "rsa-signature-format": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication RSA signature format.   \npkcs1:RSASSA PKCS#1 v1.5.   \npss:RSASSA Probabilistic Signature Scheme (PSS).",
                                    "enum": [
                                        "pkcs1",
                                        "pss"
                                    ]
                                },
                                "enforce-unique-id": {
                                    "type": "string",
                                    "description": "Enable\/disable peer ID uniqueness check.   \ndisable:Disable peer ID uniqueness enforcement.   \nkeep-new:Enforce peer ID uniqueness, keep new connection if collision found.   \nkeep-old:Enforce peer ID uniqueness, keep old connection if collision found.",
                                    "enum": [
                                        "disable",
                                        "keep-new",
                                        "keep-old"
                                    ]
                                },
                                "cert-id-validation": {
                                    "type": "string",
                                    "description": "Enable\/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \nenable:Enable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \ndisable:Disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-egress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for egress IPsec traffic.   \nenable:Enable Forward Error Correction for egress IPsec traffic.   \ndisable:Disable Forward Error Correction for egress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-send-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).",
                                    "maximum": 1000,
                                    "minimum": 1
                                },
                                "fec-base": {
                                    "type": "integer",
                                    "description": "Number of base Forward Error Correction packets (1 - 100).",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "fec-codec": {
                                    "type": "integer",
                                    "description": "ipsec fec encoding\/decoding algorithm (0: reed-solomon, 1: xor).",
                                    "maximum": 1,
                                    "minimum": 0
                                },
                                "fec-redundant": {
                                    "type": "integer",
                                    "description": "Number of redundant Forward Error Correction packets (0 - 100,  when fec-codec is reed-solomon  or 1 when fec-codec is xor .",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "fec-ingress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for ingress IPsec traffic.   \nenable:Enable Forward Error Correction for ingress IPsec traffic.   \ndisable:Disable Forward Error Correction for ingress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-receive-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).",
                                    "maximum": 10000,
                                    "minimum": 1
                                },
                                "network-overlay": {
                                    "type": "string",
                                    "description": "Enable\/disable network overlays.   \ndisable:Disable network overlays.   \nenable:Enable network overlays.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "network-id": {
                                    "type": "integer",
                                    "description": "VPN gateway network ID.",
                                    "maximum": 255,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase1"
                ]
            }
        },
        "\/vpn.ipsec\/phase1-interface\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec remote gateway name.",
                                    "maxLength": 15
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Remote gateway type.   \nstatic:Remote VPN gateway has fixed IP address.   \ndynamic:Remote VPN gateway has dynamic IP address.   \nddns:Remote VPN gateway has dynamic IP address and is a dynamic DNS client.",
                                    "enum": [
                                        "static",
                                        "dynamic",
                                        "ddns"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Local physical, aggregate, or VLAN outgoing interface.",
                                    "maxLength": 35
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version to use for VPN interface.   \n4:Use IPv4 addressing for gateways.   \n6:Use IPv6 addressing for gateways.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "ike-version": {
                                    "type": "string",
                                    "description": "IKE protocol version.   \n1:Use IKEv1 protocol.   \n2:Use IKEv2 protocol.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the local gateway's external interface."
                                },
                                "local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the local gateway's external interface."
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the remote gateway's external interface."
                                },
                                "remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the remote gateway's external interface."
                                },
                                "remotegw-ddns": {
                                    "type": "string",
                                    "description": "Domain name of remote gateway (eg. name.DDNS.com).",
                                    "maxLength": 63
                                },
                                "keylife": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before phase 1 encryption key expires.",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "certificate": {
                                    "description": "The names of up to 4 signed personal certificates.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Certificate name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "authmethod": {
                                    "type": "string",
                                    "description": "Authentication method.   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "authmethod-remote": {
                                    "type": "string",
                                    "description": "Authentication method (remote side).   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "The ID protection mode used to establish a secure channel.   \naggressive:Aggressive mode.   \nmain:Main mode.",
                                    "enum": [
                                        "aggressive",
                                        "main"
                                    ]
                                },
                                "peertype": {
                                    "type": "string",
                                    "description": "Accept this peer type.   \nany:Accept any peer ID.   \none:Accept this peer ID.   \ndialup:Accept peer ID in dialup group.   \npeer:Accept this peer certificate.   \npeergrp:Accept this peer certificate group.",
                                    "enum": [
                                        "any",
                                        "one",
                                        "dialup",
                                        "peer",
                                        "peergrp"
                                    ]
                                },
                                "peerid": {
                                    "type": "string",
                                    "description": "Accept this peer identity.",
                                    "maxLength": 255
                                },
                                "default-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of default route gateway to use for traffic exiting the interface."
                                },
                                "default-gw-priority": {
                                    "type": "integer",
                                    "description": "Priority for default gateway route. A higher priority number signifies a less preferred route.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group name for dialup peers.",
                                    "maxLength": 35
                                },
                                "peer": {
                                    "type": "string",
                                    "description": "Accept this peer certificate.",
                                    "maxLength": 35
                                },
                                "peergrp": {
                                    "type": "string",
                                    "description": "Accept this peer certificate group.",
                                    "maxLength": 35
                                },
                                "monitor": {
                                    "type": "string",
                                    "description": "IPsec interface as backup for primary interface.",
                                    "maxLength": 35
                                },
                                "monitor-hold-down-type": {
                                    "type": "string",
                                    "description": "Recovery time method when primary interface re-establishes.   \nimmediate:Fail back immediately after primary recovers.   \ndelay:Number of seconds to delay fail back after primary recovers.   \ntime:Specify a time at which to fail back after primary recovers.",
                                    "enum": [
                                        "immediate",
                                        "delay",
                                        "time"
                                    ]
                                },
                                "monitor-hold-down-delay": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before recovery once primary re-establishes.",
                                    "maximum": 31536000,
                                    "minimum": 0
                                },
                                "monitor-hold-down-weekday": {
                                    "type": "string",
                                    "description": "Day of the week to recover once primary re-establishes.   \neveryday:Every Day.   \nsunday:Sunday.   \nmonday:Monday.   \ntuesday:Tuesday.   \nwednesday:Wednesday.   \nthursday:Thursday.   \nfriday:Friday.   \nsaturday:Saturday.",
                                    "enum": [
                                        "everyday",
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "monitor-hold-down-time": {
                                    "type": "string",
                                    "description": "Time of day at which to fail back to primary after it re-establishes."
                                },
                                "net-device": {
                                    "type": "string",
                                    "description": "Enable\/disable kernel device creation.   \nenable:Create a kernel device for every tunnel.   \ndisable:Do not create a kernel device for tunnels.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "tunnel-search": {
                                    "type": "string",
                                    "description": "Tunnel search method for when the interface is shared.   \nselectors:Search for tunnel in selectors.   \nnexthop:Search for tunnel using nexthop.",
                                    "enum": [
                                        "selectors",
                                        "nexthop"
                                    ]
                                },
                                "passive-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec passive mode for static tunnels.   \nenable:Enable IPsec passive mode.   \ndisable:Disable IPsec passive mode.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exchange-interface-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable exchange of IPsec interface IP address.   \nenable:Enable exchange of IPsec interface IP address.   \ndisable:Disable exchange of IPsec interface IP address.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exchange-ip-addr4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address to exchange with peers."
                                },
                                "exchange-ip-addr6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address to exchange with peers"
                                },
                                "aggregate-member": {
                                    "type": "string",
                                    "description": "Enable\/disable use as an aggregate member.   \nenable:Enable use as an aggregate member.   \ndisable:Disable use as an aggregate member.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "aggregate-weight": {
                                    "type": "integer",
                                    "description": "Link weight for aggregate.",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "mode-cfg": {
                                    "type": "string",
                                    "description": "Enable\/disable configuration method.   \ndisable:Disable Configuration Method.   \nenable:Enable Configuration Method.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable assignment of IP to IPsec interface via configuration method.   \ndisable:Do not assign an IP address to the IPsec interface.   \nenable:Assign an IP address to the IPsec interface.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip-from": {
                                    "type": "string",
                                    "description": "Method by which the IP address will be assigned.   \nrange:Assign IP address from locally defined range.   \nusrgrp:Assign IP address via user group.   \ndhcp:Assign IP address via DHCP.   \nname:Assign IP address from firewall address or group.",
                                    "enum": [
                                        "range",
                                        "usrgrp",
                                        "dhcp",
                                        "name"
                                    ]
                                },
                                "ipv4-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start of IPv4 range."
                                },
                                "ipv4-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End of IPv4 range."
                                },
                                "ipv4-netmask": {
                                    "type": "string",
                                    "description": "IPv4 Netmask."
                                },
                                "dhcp-ra-giaddr": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Relay agent gateway IP address to use in the giaddr field of DHCP requests."
                                },
                                "dhcp6-ra-linkaddr": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Relay agent IPv6 link address to use in DHCP6 requests."
                                },
                                "dns-mode": {
                                    "type": "string",
                                    "description": "DNS server mode.   \nmanual:Manually configure DNS servers.   \nauto:Use default DNS servers.",
                                    "enum": [
                                        "manual",
                                        "auto"
                                    ]
                                },
                                "ipv4-dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "ipv4-dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "ipv4-dns-server3": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 3."
                                },
                                "ipv4-wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 1."
                                },
                                "ipv4-wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 2."
                                },
                                "ipv4-exclude-range": {
                                    "description": "Configuration Method IPv4 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Start of IPv4 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "End of IPv4 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv4-split-include": {
                                    "type": "string",
                                    "description": "IPv4 split-include subnets.",
                                    "maxLength": 79
                                },
                                "split-include-service": {
                                    "type": "string",
                                    "description": "Split-include services.",
                                    "maxLength": 79
                                },
                                "ipv4-name": {
                                    "type": "string",
                                    "description": "IPv4 address name.",
                                    "maxLength": 79
                                },
                                "ipv6-start-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Start of IPv6 range."
                                },
                                "ipv6-end-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "End of IPv6 range."
                                },
                                "ipv6-prefix": {
                                    "type": "integer",
                                    "description": "IPv6 prefix.",
                                    "maximum": 128,
                                    "minimum": 1
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-dns-server3": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 3."
                                },
                                "ipv6-exclude-range": {
                                    "description": "Configuration method IPv6 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Start of IPv6 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "End of IPv6 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-split-include": {
                                    "type": "string",
                                    "description": "IPv6 split-include subnets.",
                                    "maxLength": 79
                                },
                                "ipv6-name": {
                                    "type": "string",
                                    "description": "IPv6 address name.",
                                    "maxLength": 79
                                },
                                "unity-support": {
                                    "type": "string",
                                    "description": "Enable\/disable support for Cisco UNITY Configuration Method extensions.   \ndisable:Disable Cisco Unity Configuration Method Extensions.   \nenable:Enable Cisco Unity Configuration Method Extensions.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "domain": {
                                    "type": "string",
                                    "description": "Instruct unity clients about the default DNS domain.",
                                    "maxLength": 63
                                },
                                "banner": {
                                    "type": "string",
                                    "description": "Message that unity client should display after connecting.",
                                    "maxLength": 1024
                                },
                                "include-local-lan": {
                                    "type": "string",
                                    "description": "Enable\/disable allow local LAN access on unity clients.   \ndisable:Disable local LAN access on Unity clients.   \nenable:Enable local LAN access on Unity clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "ipv4-split-exclude": {
                                    "type": "string",
                                    "description": "IPv4 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "ipv6-split-exclude": {
                                    "type": "string",
                                    "description": "IPv6 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable saving XAuth username and password on VPN clients.   \ndisable:Disable saving XAuth username and password on VPN clients.   \nenable:Enable saving XAuth username and password on VPN clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to bring up the tunnel when there is no traffic.   \ndisable:Disable allowing the VPN client to bring up the tunnel when there is no traffic.   \nenable:Enable allowing the VPN client to bring up the tunnel when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to keep the tunnel up when there is no traffic.   \ndisable:Disable allowing the VPN client to keep the tunnel up when there is no traffic.   \nenable:Enable allowing the VPN client to keep the tunnel up when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "backup-gateway": {
                                    "description": "Instruct unity clients about the backup gateway address(es).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string",
                                                "description": "Address of backup gateway.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase1 proposal.   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm-prfsha1:aes128gcm-prfsha1   \naes128gcm-prfsha256:aes128gcm-prfsha256   \naes128gcm-prfsha384:aes128gcm-prfsha384   \naes128gcm-prfsha512:aes128gcm-prfsha512   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm-prfsha1:aes256gcm-prfsha1   \naes256gcm-prfsha256:aes256gcm-prfsha256   \naes256gcm-prfsha384:aes256gcm-prfsha384   \naes256gcm-prfsha512:aes256gcm-prfsha512   \nchacha20poly1305-prfsha1:chacha20poly1305-prfsha1   \nchacha20poly1305-prfsha256:chacha20poly1305-prfsha256   \nchacha20poly1305-prfsha384:chacha20poly1305-prfsha384   \nchacha20poly1305-prfsha512:chacha20poly1305-prfsha512   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm-prfsha1",
                                        "aes128gcm-prfsha256",
                                        "aes128gcm-prfsha384",
                                        "aes128gcm-prfsha512",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm-prfsha1",
                                        "aes256gcm-prfsha256",
                                        "aes256gcm-prfsha384",
                                        "aes256gcm-prfsha512",
                                        "chacha20poly1305-prfsha1",
                                        "chacha20poly1305-prfsha256",
                                        "chacha20poly1305-prfsha384",
                                        "chacha20poly1305-prfsha512",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable control addition of a route to peer destination selector.   \ndisable:Do not add a route to destination of peer selector.   \nenable:Add route to destination of peer selector.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "add-gw-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically add a route to the remote gateway.   \nenable:Automatically add a route to the remote gateway.   \ndisable:Do not automatically add a route to the remote gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "psksecret": {
                                    "type": "string",
                                    "description": "Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "psksecret-remote": {
                                    "type": "string",
                                    "description": "Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "keepalive": {
                                    "type": "integer",
                                    "description": "NAT-T keep alive interval.",
                                    "maximum": 900,
                                    "minimum": 10
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance for routes added by IKE (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Priority for routes added by IKE (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "localid": {
                                    "type": "string",
                                    "description": "Local ID.",
                                    "maxLength": 63
                                },
                                "localid-type": {
                                    "type": "string",
                                    "description": "Local ID type.   \nauto:Select ID type automatically.   \nfqdn:Use fully qualified domain name.   \nuser-fqdn:Use user fully qualified domain name.   \nkeyid:Use key-id string.   \naddress:Use local IP address.   \nasn1dn:Use ASN.1 distinguished name.",
                                    "enum": [
                                        "auto",
                                        "fqdn",
                                        "user-fqdn",
                                        "keyid",
                                        "address",
                                        "asn1dn"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic initiation of IKE SA negotiation.   \nenable:Enable automatic initiation of IKE SA negotiation.   \ndisable:Disable automatic initiation of IKE SA negotiation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "negotiate-timeout": {
                                    "type": "integer",
                                    "description": "IKE SA negotiation timeout in seconds (1 - 300).",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "fragmentation": {
                                    "type": "string",
                                    "description": "Enable\/disable fragment IKE message on re-transmission.   \nenable:Enable intra-IKE fragmentation support on re-transmission.   \ndisable:Disable intra-IKE fragmentation support.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-fragmentation": {
                                    "type": "string",
                                    "description": "Determine whether IP packets are fragmented before or after IPsec encapsulation.   \npre-encapsulation:Fragment before IPsec encapsulation.   \npost-encapsulation:Fragment after IPsec encapsulation (RFC compliant).",
                                    "enum": [
                                        "pre-encapsulation",
                                        "post-encapsulation"
                                    ]
                                },
                                "dpd": {
                                    "type": "string",
                                    "description": "Dead Peer Detection mode.   \ndisable:Disable Dead Peer Detection.   \non-idle:Trigger Dead Peer Detection when IPsec is idle.   \non-demand:Trigger Dead Peer Detection when IPsec traffic is sent but no reply is received from the peer.",
                                    "enum": [
                                        "disable",
                                        "on-idle",
                                        "on-demand"
                                    ]
                                },
                                "dpd-retrycount": {
                                    "type": "integer",
                                    "description": "Number of DPD retry attempts.",
                                    "maximum": 10,
                                    "minimum": 0
                                },
                                "dpd-retryinterval": {
                                    "type": "string",
                                    "description": "DPD retry interval."
                                },
                                "forticlient-enforcement": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient enforcement.   \nenable:Enable FortiClient enforcement.   \ndisable:Disable FortiClient enforcement.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading NPU.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "send-cert-chain": {
                                    "type": "string",
                                    "description": "Enable\/disable sending certificate chain.   \nenable:Enable sending certificate chain.   \ndisable:Disable sending certificate chain.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "suite-b": {
                                    "type": "string",
                                    "description": "Use Suite-B.   \ndisable:Do not use UI suite.   \nsuite-b-gcm-128:Use Suite-B-GCM-128.   \nsuite-b-gcm-256:Use Suite-B-GCM-256.",
                                    "enum": [
                                        "disable",
                                        "suite-b-gcm-128",
                                        "suite-b-gcm-256"
                                    ]
                                },
                                "eap": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 EAP authentication.   \nenable:Enable IKEv2 EAP authentication.   \ndisable:Disable IKEv2 EAP authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eap-identity": {
                                    "type": "string",
                                    "description": "IKEv2 EAP peer identity type.   \nuse-id-payload:Use IKEv2 IDi payload to resolve peer identity.   \nsend-request:Use EAP identity request to resolve peer identity.",
                                    "enum": [
                                        "use-id-payload",
                                        "send-request"
                                    ]
                                },
                                "eap-exclude-peergrp": {
                                    "type": "string",
                                    "description": "Peer group excluded from EAP authentication.",
                                    "maxLength": 35
                                },
                                "acct-verify": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of RADIUS accounting record.   \nenable:Enable verification of RADIUS accounting record.   \ndisable:Disable verification of RADIUS accounting record.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ppk": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Postquantum Preshared Key (PPK).   \ndisable:Disable use of IKEv2 Postquantum Preshared Key (PPK).   \nallow:Allow, but do not require, use of IKEv2 Postquantum Preshared Key (PPK).   \nrequire:Require use of IKEv2 Postquantum Preshared Key (PPK).",
                                    "enum": [
                                        "disable",
                                        "allow",
                                        "require"
                                    ]
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "wizard-type": {
                                    "type": "string",
                                    "description": "GUI VPN Wizard Type.   \ncustom:Custom VPN configuration.   \ndialup-forticlient:Dial Up - FortiClient Windows, Mac and Android.   \ndialup-ios:Dial Up - iPhone \/ iPad Native IPsec Client.   \ndialup-android:Dial Up - Android Native IPsec Client.   \ndialup-windows:Dial Up - Windows Native IPsec Client.   \ndialup-cisco:Dial Up - Cisco IPsec Client.   \nstatic-fortigate:Site to Site - FortiGate.   \ndialup-fortigate:Dial Up - FortiGate.   \nstatic-cisco:Site to Site - Cisco.   \ndialup-cisco-fw:Dialup Up - Cisco Firewall.   \nsimplified-static-fortigate:Site to Site - FortiGate (SD-WAN).   \nhub-fortigate-auto-discovery:Hub role in a Hub-and-Spoke auto-discovery VPN.   \nspoke-fortigate-auto-discovery:Spoke role in a Hub-and-Spoke auto-discovery VPN.",
                                    "enum": [
                                        "custom",
                                        "dialup-forticlient",
                                        "dialup-ios",
                                        "dialup-android",
                                        "dialup-windows",
                                        "dialup-cisco",
                                        "static-fortigate",
                                        "dialup-fortigate",
                                        "static-cisco",
                                        "dialup-cisco-fw",
                                        "simplified-static-fortigate",
                                        "hub-fortigate-auto-discovery",
                                        "spoke-fortigate-auto-discovery"
                                    ]
                                },
                                "xauthtype": {
                                    "type": "string",
                                    "description": "XAuth type.   \ndisable:Disable.   \nclient:Enable as client.   \npap:Enable as server PAP.   \nchap:Enable as server CHAP.   \nauto:Enable as server auto.",
                                    "enum": [
                                        "disable",
                                        "client",
                                        "pap",
                                        "chap",
                                        "auto"
                                    ]
                                },
                                "reauth": {
                                    "type": "string",
                                    "description": "Enable\/disable re-authentication upon IKE SA lifetime expiration.   \ndisable:Disable IKE SA re-authentication.   \nenable:Enable IKE SA re-authentication.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "authusr": {
                                    "type": "string",
                                    "description": "XAuth user name.",
                                    "maxLength": 64
                                },
                                "authpasswd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "XAuth password (max 35 characters)."
                                },
                                "group-authentication": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 IDi group authentication.   \nenable:Enable IKEv2 IDi group authentication.   \ndisable:Disable IKEv2 IDi group authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-authentication-secret": {
                                    "type": "string",
                                    "description": "Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)"
                                },
                                "authusrgrp": {
                                    "type": "string",
                                    "description": "Authentication user group.",
                                    "maxLength": 35
                                },
                                "mesh-selector-type": {
                                    "type": "string",
                                    "description": "Add selectors containing subsets of the configuration depending on traffic.   \ndisable:Disable.   \nsubnet:Enable addition of matching subnet selector.   \nhost:Enable addition of host to host selector.",
                                    "enum": [
                                        "disable",
                                        "subnet",
                                        "host"
                                    ]
                                },
                                "idle-timeout": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec tunnel idle timeout.   \nenable:Enable IPsec tunnel idle timeout.   \ndisable:Disable IPsec tunnel idle timeout.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "idle-timeoutinterval": {
                                    "type": "integer",
                                    "description": "IPsec tunnel idle timeout in minutes (5 - 43200).",
                                    "maximum": 43200,
                                    "minimum": 5
                                },
                                "ha-sync-esp-seqno": {
                                    "type": "string",
                                    "description": "Enable\/disable sequence number jump ahead for IPsec HA.   \nenable:Enable HA syncing of ESP sequence numbers.   \ndisable:Disable HA syncing of ESP sequence numbers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copy the dscp in the ESP header to the inner IP Header.   \nenable:Enable copy the dscp in the ESP header to the inner IP Header.   \ndisable:Disable copy the dscp in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-sender": {
                                    "type": "string",
                                    "description": "Enable\/disable sending auto-discovery short-cut messages.   \nenable:Enable sending auto-discovery short-cut messages.   \ndisable:Disable sending auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-receiver": {
                                    "type": "string",
                                    "description": "Enable\/disable accepting auto-discovery short-cut messages.   \nenable:Enable receiving auto-discovery short-cut messages.   \ndisable:Disable receiving auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-forwarder": {
                                    "type": "string",
                                    "description": "Enable\/disable forwarding auto-discovery short-cut messages.   \nenable:Enable forwarding auto-discovery short-cut messages.   \ndisable:Disable forwarding auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-psk": {
                                    "type": "string",
                                    "description": "Enable\/disable use of pre-shared secrets for authentication of auto-discovery tunnels.   \nenable:Enable use of pre-shared-secret authentication for auto-discovery tunnels.   \ndisable:Disable use of authentication defined by 'authmethod' for auto-discovery tunnels.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-shortcuts": {
                                    "type": "string",
                                    "description": "Control deletion of child short-cut tunnels when the parent tunnel goes down.   \nindependent:Short-cut tunnels remain up if the parent tunnel goes down.   \ndependent:Short-cut tunnels are brought down if the parent tunnel goes down.",
                                    "enum": [
                                        "independent",
                                        "dependent"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "Enable\/disable GRE\/VXLAN encapsulation.   \nnone:No additional encapsulation.   \ngre:GRE encapsulation.   \nvxlan:VXLAN encapsulation.",
                                    "enum": [
                                        "none",
                                        "gre",
                                        "vxlan"
                                    ]
                                },
                                "encapsulation-address": {
                                    "type": "string",
                                    "description": "Source for GRE\/VXLAN tunnel address.   \nike:Use IKE\/IPsec gateway addresses.   \nipv4:Specify separate GRE\/VXLAN tunnel address.   \nipv6:Specify separate GRE\/VXLAN tunnel address.",
                                    "enum": [
                                        "ike",
                                        "ipv4",
                                        "ipv6"
                                    ]
                                },
                                "encap-local-gw4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local IPv4 address of GRE\/VXLAN tunnel."
                                },
                                "encap-local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local IPv6 address of GRE\/VXLAN tunnel."
                                },
                                "encap-remote-gw4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote IPv4 address of GRE\/VXLAN tunnel."
                                },
                                "encap-remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote IPv6 address of GRE\/VXLAN tunnel."
                                },
                                "vni": {
                                    "type": "integer",
                                    "description": "VNI of VXLAN tunnel.",
                                    "maximum": 16777215,
                                    "minimum": 1
                                },
                                "nattraversal": {
                                    "type": "string",
                                    "description": "Enable\/disable NAT traversal.   \nenable:Enable IPsec NAT traversal.   \ndisable:Disable IPsec NAT traversal.   \nforced:Force IPsec NAT traversal on.",
                                    "enum": [
                                        "enable",
                                        "disable",
                                        "forced"
                                    ]
                                },
                                "esn": {
                                    "type": "string",
                                    "description": "Extended sequence number (ESN) negotiation.   \nrequire:Require extended sequence number.   \nallow:Allow extended sequence number.   \ndisable:Disable extended sequence number.",
                                    "enum": [
                                        "require",
                                        "allow",
                                        "disable"
                                    ]
                                },
                                "fragmentation-mtu": {
                                    "type": "integer",
                                    "description": "IKE fragmentation MTU (500 - 16000).",
                                    "maximum": 16000,
                                    "minimum": 500
                                },
                                "childless-ike": {
                                    "type": "string",
                                    "description": "Enable\/disable childless IKEv2 initiation (RFC 6023).   \nenable:Enable childless IKEv2 initiation (RFC 6023).   \ndisable:Disable childless IKEv2 initiation (RFC 6023).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rekey": {
                                    "type": "string",
                                    "description": "Enable\/disable phase1 rekey.   \nenable:Enable phase1 rekey.   \ndisable:Disable phase1 rekey.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "digital-signature-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Digital Signature Authentication (RFC 7427).   \nenable:Enable IKEv2 Digital Signature Authentication (RFC 7427).   \ndisable:Disable IKEv2 Digital Signature Authentication (RFC 7427).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "signature-hash-alg": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication hash algorithms.   \nsha1:SHA1.   \nsha2-256:SHA2-256.   \nsha2-384:SHA2-384.   \nsha2-512:SHA2-512.",
                                    "enum": [
                                        "sha1",
                                        "sha2-256",
                                        "sha2-384",
                                        "sha2-512"
                                    ]
                                },
                                "rsa-signature-format": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication RSA signature format.   \npkcs1:RSASSA PKCS#1 v1.5.   \npss:RSASSA Probabilistic Signature Scheme (PSS).",
                                    "enum": [
                                        "pkcs1",
                                        "pss"
                                    ]
                                },
                                "enforce-unique-id": {
                                    "type": "string",
                                    "description": "Enable\/disable peer ID uniqueness check.   \ndisable:Disable peer ID uniqueness enforcement.   \nkeep-new:Enforce peer ID uniqueness, keep new connection if collision found.   \nkeep-old:Enforce peer ID uniqueness, keep old connection if collision found.",
                                    "enum": [
                                        "disable",
                                        "keep-new",
                                        "keep-old"
                                    ]
                                },
                                "cert-id-validation": {
                                    "type": "string",
                                    "description": "Enable\/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \nenable:Enable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \ndisable:Disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-egress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for egress IPsec traffic.   \nenable:Enable Forward Error Correction for egress IPsec traffic.   \ndisable:Disable Forward Error Correction for egress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-send-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).",
                                    "maximum": 1000,
                                    "minimum": 1
                                },
                                "fec-base": {
                                    "type": "integer",
                                    "description": "Number of base Forward Error Correction packets (1 - 100).",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "fec-codec": {
                                    "type": "integer",
                                    "description": "ipsec fec encoding\/decoding algorithm (0: reed-solomon, 1: xor).",
                                    "maximum": 1,
                                    "minimum": 0
                                },
                                "fec-redundant": {
                                    "type": "integer",
                                    "description": "Number of redundant Forward Error Correction packets (0 - 100,  when fec-codec is reed-solomon  or 1 when fec-codec is xor .",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "fec-ingress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for ingress IPsec traffic.   \nenable:Enable Forward Error Correction for ingress IPsec traffic.   \ndisable:Disable Forward Error Correction for ingress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-receive-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).",
                                    "maximum": 10000,
                                    "minimum": 1
                                },
                                "network-overlay": {
                                    "type": "string",
                                    "description": "Enable\/disable network overlays.   \ndisable:Disable network overlays.   \nenable:Enable network overlays.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "network-id": {
                                    "type": "integer",
                                    "description": "VPN gateway network ID.",
                                    "maximum": 255,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase1-interface"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec remote gateway name.",
                                    "maxLength": 15
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Remote gateway type.   \nstatic:Remote VPN gateway has fixed IP address.   \ndynamic:Remote VPN gateway has dynamic IP address.   \nddns:Remote VPN gateway has dynamic IP address and is a dynamic DNS client.",
                                    "enum": [
                                        "static",
                                        "dynamic",
                                        "ddns"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Local physical, aggregate, or VLAN outgoing interface.",
                                    "maxLength": 35
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version to use for VPN interface.   \n4:Use IPv4 addressing for gateways.   \n6:Use IPv6 addressing for gateways.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "ike-version": {
                                    "type": "string",
                                    "description": "IKE protocol version.   \n1:Use IKEv1 protocol.   \n2:Use IKEv2 protocol.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the local gateway's external interface."
                                },
                                "local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the local gateway's external interface."
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the remote gateway's external interface."
                                },
                                "remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the remote gateway's external interface."
                                },
                                "remotegw-ddns": {
                                    "type": "string",
                                    "description": "Domain name of remote gateway (eg. name.DDNS.com).",
                                    "maxLength": 63
                                },
                                "keylife": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before phase 1 encryption key expires.",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "certificate": {
                                    "description": "The names of up to 4 signed personal certificates.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Certificate name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "authmethod": {
                                    "type": "string",
                                    "description": "Authentication method.   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "authmethod-remote": {
                                    "type": "string",
                                    "description": "Authentication method (remote side).   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "The ID protection mode used to establish a secure channel.   \naggressive:Aggressive mode.   \nmain:Main mode.",
                                    "enum": [
                                        "aggressive",
                                        "main"
                                    ]
                                },
                                "peertype": {
                                    "type": "string",
                                    "description": "Accept this peer type.   \nany:Accept any peer ID.   \none:Accept this peer ID.   \ndialup:Accept peer ID in dialup group.   \npeer:Accept this peer certificate.   \npeergrp:Accept this peer certificate group.",
                                    "enum": [
                                        "any",
                                        "one",
                                        "dialup",
                                        "peer",
                                        "peergrp"
                                    ]
                                },
                                "peerid": {
                                    "type": "string",
                                    "description": "Accept this peer identity.",
                                    "maxLength": 255
                                },
                                "default-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of default route gateway to use for traffic exiting the interface."
                                },
                                "default-gw-priority": {
                                    "type": "integer",
                                    "description": "Priority for default gateway route. A higher priority number signifies a less preferred route.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group name for dialup peers.",
                                    "maxLength": 35
                                },
                                "peer": {
                                    "type": "string",
                                    "description": "Accept this peer certificate.",
                                    "maxLength": 35
                                },
                                "peergrp": {
                                    "type": "string",
                                    "description": "Accept this peer certificate group.",
                                    "maxLength": 35
                                },
                                "monitor": {
                                    "type": "string",
                                    "description": "IPsec interface as backup for primary interface.",
                                    "maxLength": 35
                                },
                                "monitor-hold-down-type": {
                                    "type": "string",
                                    "description": "Recovery time method when primary interface re-establishes.   \nimmediate:Fail back immediately after primary recovers.   \ndelay:Number of seconds to delay fail back after primary recovers.   \ntime:Specify a time at which to fail back after primary recovers.",
                                    "enum": [
                                        "immediate",
                                        "delay",
                                        "time"
                                    ]
                                },
                                "monitor-hold-down-delay": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before recovery once primary re-establishes.",
                                    "maximum": 31536000,
                                    "minimum": 0
                                },
                                "monitor-hold-down-weekday": {
                                    "type": "string",
                                    "description": "Day of the week to recover once primary re-establishes.   \neveryday:Every Day.   \nsunday:Sunday.   \nmonday:Monday.   \ntuesday:Tuesday.   \nwednesday:Wednesday.   \nthursday:Thursday.   \nfriday:Friday.   \nsaturday:Saturday.",
                                    "enum": [
                                        "everyday",
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "monitor-hold-down-time": {
                                    "type": "string",
                                    "description": "Time of day at which to fail back to primary after it re-establishes."
                                },
                                "net-device": {
                                    "type": "string",
                                    "description": "Enable\/disable kernel device creation.   \nenable:Create a kernel device for every tunnel.   \ndisable:Do not create a kernel device for tunnels.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "tunnel-search": {
                                    "type": "string",
                                    "description": "Tunnel search method for when the interface is shared.   \nselectors:Search for tunnel in selectors.   \nnexthop:Search for tunnel using nexthop.",
                                    "enum": [
                                        "selectors",
                                        "nexthop"
                                    ]
                                },
                                "passive-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec passive mode for static tunnels.   \nenable:Enable IPsec passive mode.   \ndisable:Disable IPsec passive mode.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exchange-interface-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable exchange of IPsec interface IP address.   \nenable:Enable exchange of IPsec interface IP address.   \ndisable:Disable exchange of IPsec interface IP address.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exchange-ip-addr4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address to exchange with peers."
                                },
                                "exchange-ip-addr6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address to exchange with peers"
                                },
                                "aggregate-member": {
                                    "type": "string",
                                    "description": "Enable\/disable use as an aggregate member.   \nenable:Enable use as an aggregate member.   \ndisable:Disable use as an aggregate member.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "aggregate-weight": {
                                    "type": "integer",
                                    "description": "Link weight for aggregate.",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "mode-cfg": {
                                    "type": "string",
                                    "description": "Enable\/disable configuration method.   \ndisable:Disable Configuration Method.   \nenable:Enable Configuration Method.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable assignment of IP to IPsec interface via configuration method.   \ndisable:Do not assign an IP address to the IPsec interface.   \nenable:Assign an IP address to the IPsec interface.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip-from": {
                                    "type": "string",
                                    "description": "Method by which the IP address will be assigned.   \nrange:Assign IP address from locally defined range.   \nusrgrp:Assign IP address via user group.   \ndhcp:Assign IP address via DHCP.   \nname:Assign IP address from firewall address or group.",
                                    "enum": [
                                        "range",
                                        "usrgrp",
                                        "dhcp",
                                        "name"
                                    ]
                                },
                                "ipv4-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start of IPv4 range."
                                },
                                "ipv4-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End of IPv4 range."
                                },
                                "ipv4-netmask": {
                                    "type": "string",
                                    "description": "IPv4 Netmask."
                                },
                                "dhcp-ra-giaddr": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Relay agent gateway IP address to use in the giaddr field of DHCP requests."
                                },
                                "dhcp6-ra-linkaddr": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Relay agent IPv6 link address to use in DHCP6 requests."
                                },
                                "dns-mode": {
                                    "type": "string",
                                    "description": "DNS server mode.   \nmanual:Manually configure DNS servers.   \nauto:Use default DNS servers.",
                                    "enum": [
                                        "manual",
                                        "auto"
                                    ]
                                },
                                "ipv4-dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "ipv4-dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "ipv4-dns-server3": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 3."
                                },
                                "ipv4-wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 1."
                                },
                                "ipv4-wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 2."
                                },
                                "ipv4-exclude-range": {
                                    "description": "Configuration Method IPv4 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Start of IPv4 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "End of IPv4 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv4-split-include": {
                                    "type": "string",
                                    "description": "IPv4 split-include subnets.",
                                    "maxLength": 79
                                },
                                "split-include-service": {
                                    "type": "string",
                                    "description": "Split-include services.",
                                    "maxLength": 79
                                },
                                "ipv4-name": {
                                    "type": "string",
                                    "description": "IPv4 address name.",
                                    "maxLength": 79
                                },
                                "ipv6-start-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Start of IPv6 range."
                                },
                                "ipv6-end-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "End of IPv6 range."
                                },
                                "ipv6-prefix": {
                                    "type": "integer",
                                    "description": "IPv6 prefix.",
                                    "maximum": 128,
                                    "minimum": 1
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-dns-server3": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 3."
                                },
                                "ipv6-exclude-range": {
                                    "description": "Configuration method IPv6 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Start of IPv6 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "End of IPv6 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-split-include": {
                                    "type": "string",
                                    "description": "IPv6 split-include subnets.",
                                    "maxLength": 79
                                },
                                "ipv6-name": {
                                    "type": "string",
                                    "description": "IPv6 address name.",
                                    "maxLength": 79
                                },
                                "unity-support": {
                                    "type": "string",
                                    "description": "Enable\/disable support for Cisco UNITY Configuration Method extensions.   \ndisable:Disable Cisco Unity Configuration Method Extensions.   \nenable:Enable Cisco Unity Configuration Method Extensions.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "domain": {
                                    "type": "string",
                                    "description": "Instruct unity clients about the default DNS domain.",
                                    "maxLength": 63
                                },
                                "banner": {
                                    "type": "string",
                                    "description": "Message that unity client should display after connecting.",
                                    "maxLength": 1024
                                },
                                "include-local-lan": {
                                    "type": "string",
                                    "description": "Enable\/disable allow local LAN access on unity clients.   \ndisable:Disable local LAN access on Unity clients.   \nenable:Enable local LAN access on Unity clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "ipv4-split-exclude": {
                                    "type": "string",
                                    "description": "IPv4 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "ipv6-split-exclude": {
                                    "type": "string",
                                    "description": "IPv6 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable saving XAuth username and password on VPN clients.   \ndisable:Disable saving XAuth username and password on VPN clients.   \nenable:Enable saving XAuth username and password on VPN clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to bring up the tunnel when there is no traffic.   \ndisable:Disable allowing the VPN client to bring up the tunnel when there is no traffic.   \nenable:Enable allowing the VPN client to bring up the tunnel when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to keep the tunnel up when there is no traffic.   \ndisable:Disable allowing the VPN client to keep the tunnel up when there is no traffic.   \nenable:Enable allowing the VPN client to keep the tunnel up when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "backup-gateway": {
                                    "description": "Instruct unity clients about the backup gateway address(es).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string",
                                                "description": "Address of backup gateway.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase1 proposal.   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm-prfsha1:aes128gcm-prfsha1   \naes128gcm-prfsha256:aes128gcm-prfsha256   \naes128gcm-prfsha384:aes128gcm-prfsha384   \naes128gcm-prfsha512:aes128gcm-prfsha512   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm-prfsha1:aes256gcm-prfsha1   \naes256gcm-prfsha256:aes256gcm-prfsha256   \naes256gcm-prfsha384:aes256gcm-prfsha384   \naes256gcm-prfsha512:aes256gcm-prfsha512   \nchacha20poly1305-prfsha1:chacha20poly1305-prfsha1   \nchacha20poly1305-prfsha256:chacha20poly1305-prfsha256   \nchacha20poly1305-prfsha384:chacha20poly1305-prfsha384   \nchacha20poly1305-prfsha512:chacha20poly1305-prfsha512   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm-prfsha1",
                                        "aes128gcm-prfsha256",
                                        "aes128gcm-prfsha384",
                                        "aes128gcm-prfsha512",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm-prfsha1",
                                        "aes256gcm-prfsha256",
                                        "aes256gcm-prfsha384",
                                        "aes256gcm-prfsha512",
                                        "chacha20poly1305-prfsha1",
                                        "chacha20poly1305-prfsha256",
                                        "chacha20poly1305-prfsha384",
                                        "chacha20poly1305-prfsha512",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable control addition of a route to peer destination selector.   \ndisable:Do not add a route to destination of peer selector.   \nenable:Add route to destination of peer selector.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "add-gw-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically add a route to the remote gateway.   \nenable:Automatically add a route to the remote gateway.   \ndisable:Do not automatically add a route to the remote gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "psksecret": {
                                    "type": "string",
                                    "description": "Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "psksecret-remote": {
                                    "type": "string",
                                    "description": "Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "keepalive": {
                                    "type": "integer",
                                    "description": "NAT-T keep alive interval.",
                                    "maximum": 900,
                                    "minimum": 10
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance for routes added by IKE (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Priority for routes added by IKE (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "localid": {
                                    "type": "string",
                                    "description": "Local ID.",
                                    "maxLength": 63
                                },
                                "localid-type": {
                                    "type": "string",
                                    "description": "Local ID type.   \nauto:Select ID type automatically.   \nfqdn:Use fully qualified domain name.   \nuser-fqdn:Use user fully qualified domain name.   \nkeyid:Use key-id string.   \naddress:Use local IP address.   \nasn1dn:Use ASN.1 distinguished name.",
                                    "enum": [
                                        "auto",
                                        "fqdn",
                                        "user-fqdn",
                                        "keyid",
                                        "address",
                                        "asn1dn"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic initiation of IKE SA negotiation.   \nenable:Enable automatic initiation of IKE SA negotiation.   \ndisable:Disable automatic initiation of IKE SA negotiation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "negotiate-timeout": {
                                    "type": "integer",
                                    "description": "IKE SA negotiation timeout in seconds (1 - 300).",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "fragmentation": {
                                    "type": "string",
                                    "description": "Enable\/disable fragment IKE message on re-transmission.   \nenable:Enable intra-IKE fragmentation support on re-transmission.   \ndisable:Disable intra-IKE fragmentation support.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-fragmentation": {
                                    "type": "string",
                                    "description": "Determine whether IP packets are fragmented before or after IPsec encapsulation.   \npre-encapsulation:Fragment before IPsec encapsulation.   \npost-encapsulation:Fragment after IPsec encapsulation (RFC compliant).",
                                    "enum": [
                                        "pre-encapsulation",
                                        "post-encapsulation"
                                    ]
                                },
                                "dpd": {
                                    "type": "string",
                                    "description": "Dead Peer Detection mode.   \ndisable:Disable Dead Peer Detection.   \non-idle:Trigger Dead Peer Detection when IPsec is idle.   \non-demand:Trigger Dead Peer Detection when IPsec traffic is sent but no reply is received from the peer.",
                                    "enum": [
                                        "disable",
                                        "on-idle",
                                        "on-demand"
                                    ]
                                },
                                "dpd-retrycount": {
                                    "type": "integer",
                                    "description": "Number of DPD retry attempts.",
                                    "maximum": 10,
                                    "minimum": 0
                                },
                                "dpd-retryinterval": {
                                    "type": "string",
                                    "description": "DPD retry interval."
                                },
                                "forticlient-enforcement": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient enforcement.   \nenable:Enable FortiClient enforcement.   \ndisable:Disable FortiClient enforcement.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading NPU.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "send-cert-chain": {
                                    "type": "string",
                                    "description": "Enable\/disable sending certificate chain.   \nenable:Enable sending certificate chain.   \ndisable:Disable sending certificate chain.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "suite-b": {
                                    "type": "string",
                                    "description": "Use Suite-B.   \ndisable:Do not use UI suite.   \nsuite-b-gcm-128:Use Suite-B-GCM-128.   \nsuite-b-gcm-256:Use Suite-B-GCM-256.",
                                    "enum": [
                                        "disable",
                                        "suite-b-gcm-128",
                                        "suite-b-gcm-256"
                                    ]
                                },
                                "eap": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 EAP authentication.   \nenable:Enable IKEv2 EAP authentication.   \ndisable:Disable IKEv2 EAP authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eap-identity": {
                                    "type": "string",
                                    "description": "IKEv2 EAP peer identity type.   \nuse-id-payload:Use IKEv2 IDi payload to resolve peer identity.   \nsend-request:Use EAP identity request to resolve peer identity.",
                                    "enum": [
                                        "use-id-payload",
                                        "send-request"
                                    ]
                                },
                                "eap-exclude-peergrp": {
                                    "type": "string",
                                    "description": "Peer group excluded from EAP authentication.",
                                    "maxLength": 35
                                },
                                "acct-verify": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of RADIUS accounting record.   \nenable:Enable verification of RADIUS accounting record.   \ndisable:Disable verification of RADIUS accounting record.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ppk": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Postquantum Preshared Key (PPK).   \ndisable:Disable use of IKEv2 Postquantum Preshared Key (PPK).   \nallow:Allow, but do not require, use of IKEv2 Postquantum Preshared Key (PPK).   \nrequire:Require use of IKEv2 Postquantum Preshared Key (PPK).",
                                    "enum": [
                                        "disable",
                                        "allow",
                                        "require"
                                    ]
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "wizard-type": {
                                    "type": "string",
                                    "description": "GUI VPN Wizard Type.   \ncustom:Custom VPN configuration.   \ndialup-forticlient:Dial Up - FortiClient Windows, Mac and Android.   \ndialup-ios:Dial Up - iPhone \/ iPad Native IPsec Client.   \ndialup-android:Dial Up - Android Native IPsec Client.   \ndialup-windows:Dial Up - Windows Native IPsec Client.   \ndialup-cisco:Dial Up - Cisco IPsec Client.   \nstatic-fortigate:Site to Site - FortiGate.   \ndialup-fortigate:Dial Up - FortiGate.   \nstatic-cisco:Site to Site - Cisco.   \ndialup-cisco-fw:Dialup Up - Cisco Firewall.   \nsimplified-static-fortigate:Site to Site - FortiGate (SD-WAN).   \nhub-fortigate-auto-discovery:Hub role in a Hub-and-Spoke auto-discovery VPN.   \nspoke-fortigate-auto-discovery:Spoke role in a Hub-and-Spoke auto-discovery VPN.",
                                    "enum": [
                                        "custom",
                                        "dialup-forticlient",
                                        "dialup-ios",
                                        "dialup-android",
                                        "dialup-windows",
                                        "dialup-cisco",
                                        "static-fortigate",
                                        "dialup-fortigate",
                                        "static-cisco",
                                        "dialup-cisco-fw",
                                        "simplified-static-fortigate",
                                        "hub-fortigate-auto-discovery",
                                        "spoke-fortigate-auto-discovery"
                                    ]
                                },
                                "xauthtype": {
                                    "type": "string",
                                    "description": "XAuth type.   \ndisable:Disable.   \nclient:Enable as client.   \npap:Enable as server PAP.   \nchap:Enable as server CHAP.   \nauto:Enable as server auto.",
                                    "enum": [
                                        "disable",
                                        "client",
                                        "pap",
                                        "chap",
                                        "auto"
                                    ]
                                },
                                "reauth": {
                                    "type": "string",
                                    "description": "Enable\/disable re-authentication upon IKE SA lifetime expiration.   \ndisable:Disable IKE SA re-authentication.   \nenable:Enable IKE SA re-authentication.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "authusr": {
                                    "type": "string",
                                    "description": "XAuth user name.",
                                    "maxLength": 64
                                },
                                "authpasswd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "XAuth password (max 35 characters)."
                                },
                                "group-authentication": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 IDi group authentication.   \nenable:Enable IKEv2 IDi group authentication.   \ndisable:Disable IKEv2 IDi group authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-authentication-secret": {
                                    "type": "string",
                                    "description": "Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)"
                                },
                                "authusrgrp": {
                                    "type": "string",
                                    "description": "Authentication user group.",
                                    "maxLength": 35
                                },
                                "mesh-selector-type": {
                                    "type": "string",
                                    "description": "Add selectors containing subsets of the configuration depending on traffic.   \ndisable:Disable.   \nsubnet:Enable addition of matching subnet selector.   \nhost:Enable addition of host to host selector.",
                                    "enum": [
                                        "disable",
                                        "subnet",
                                        "host"
                                    ]
                                },
                                "idle-timeout": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec tunnel idle timeout.   \nenable:Enable IPsec tunnel idle timeout.   \ndisable:Disable IPsec tunnel idle timeout.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "idle-timeoutinterval": {
                                    "type": "integer",
                                    "description": "IPsec tunnel idle timeout in minutes (5 - 43200).",
                                    "maximum": 43200,
                                    "minimum": 5
                                },
                                "ha-sync-esp-seqno": {
                                    "type": "string",
                                    "description": "Enable\/disable sequence number jump ahead for IPsec HA.   \nenable:Enable HA syncing of ESP sequence numbers.   \ndisable:Disable HA syncing of ESP sequence numbers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copy the dscp in the ESP header to the inner IP Header.   \nenable:Enable copy the dscp in the ESP header to the inner IP Header.   \ndisable:Disable copy the dscp in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-sender": {
                                    "type": "string",
                                    "description": "Enable\/disable sending auto-discovery short-cut messages.   \nenable:Enable sending auto-discovery short-cut messages.   \ndisable:Disable sending auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-receiver": {
                                    "type": "string",
                                    "description": "Enable\/disable accepting auto-discovery short-cut messages.   \nenable:Enable receiving auto-discovery short-cut messages.   \ndisable:Disable receiving auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-forwarder": {
                                    "type": "string",
                                    "description": "Enable\/disable forwarding auto-discovery short-cut messages.   \nenable:Enable forwarding auto-discovery short-cut messages.   \ndisable:Disable forwarding auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-psk": {
                                    "type": "string",
                                    "description": "Enable\/disable use of pre-shared secrets for authentication of auto-discovery tunnels.   \nenable:Enable use of pre-shared-secret authentication for auto-discovery tunnels.   \ndisable:Disable use of authentication defined by 'authmethod' for auto-discovery tunnels.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-shortcuts": {
                                    "type": "string",
                                    "description": "Control deletion of child short-cut tunnels when the parent tunnel goes down.   \nindependent:Short-cut tunnels remain up if the parent tunnel goes down.   \ndependent:Short-cut tunnels are brought down if the parent tunnel goes down.",
                                    "enum": [
                                        "independent",
                                        "dependent"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "Enable\/disable GRE\/VXLAN encapsulation.   \nnone:No additional encapsulation.   \ngre:GRE encapsulation.   \nvxlan:VXLAN encapsulation.",
                                    "enum": [
                                        "none",
                                        "gre",
                                        "vxlan"
                                    ]
                                },
                                "encapsulation-address": {
                                    "type": "string",
                                    "description": "Source for GRE\/VXLAN tunnel address.   \nike:Use IKE\/IPsec gateway addresses.   \nipv4:Specify separate GRE\/VXLAN tunnel address.   \nipv6:Specify separate GRE\/VXLAN tunnel address.",
                                    "enum": [
                                        "ike",
                                        "ipv4",
                                        "ipv6"
                                    ]
                                },
                                "encap-local-gw4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local IPv4 address of GRE\/VXLAN tunnel."
                                },
                                "encap-local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local IPv6 address of GRE\/VXLAN tunnel."
                                },
                                "encap-remote-gw4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote IPv4 address of GRE\/VXLAN tunnel."
                                },
                                "encap-remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote IPv6 address of GRE\/VXLAN tunnel."
                                },
                                "vni": {
                                    "type": "integer",
                                    "description": "VNI of VXLAN tunnel.",
                                    "maximum": 16777215,
                                    "minimum": 1
                                },
                                "nattraversal": {
                                    "type": "string",
                                    "description": "Enable\/disable NAT traversal.   \nenable:Enable IPsec NAT traversal.   \ndisable:Disable IPsec NAT traversal.   \nforced:Force IPsec NAT traversal on.",
                                    "enum": [
                                        "enable",
                                        "disable",
                                        "forced"
                                    ]
                                },
                                "esn": {
                                    "type": "string",
                                    "description": "Extended sequence number (ESN) negotiation.   \nrequire:Require extended sequence number.   \nallow:Allow extended sequence number.   \ndisable:Disable extended sequence number.",
                                    "enum": [
                                        "require",
                                        "allow",
                                        "disable"
                                    ]
                                },
                                "fragmentation-mtu": {
                                    "type": "integer",
                                    "description": "IKE fragmentation MTU (500 - 16000).",
                                    "maximum": 16000,
                                    "minimum": 500
                                },
                                "childless-ike": {
                                    "type": "string",
                                    "description": "Enable\/disable childless IKEv2 initiation (RFC 6023).   \nenable:Enable childless IKEv2 initiation (RFC 6023).   \ndisable:Disable childless IKEv2 initiation (RFC 6023).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rekey": {
                                    "type": "string",
                                    "description": "Enable\/disable phase1 rekey.   \nenable:Enable phase1 rekey.   \ndisable:Disable phase1 rekey.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "digital-signature-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Digital Signature Authentication (RFC 7427).   \nenable:Enable IKEv2 Digital Signature Authentication (RFC 7427).   \ndisable:Disable IKEv2 Digital Signature Authentication (RFC 7427).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "signature-hash-alg": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication hash algorithms.   \nsha1:SHA1.   \nsha2-256:SHA2-256.   \nsha2-384:SHA2-384.   \nsha2-512:SHA2-512.",
                                    "enum": [
                                        "sha1",
                                        "sha2-256",
                                        "sha2-384",
                                        "sha2-512"
                                    ]
                                },
                                "rsa-signature-format": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication RSA signature format.   \npkcs1:RSASSA PKCS#1 v1.5.   \npss:RSASSA Probabilistic Signature Scheme (PSS).",
                                    "enum": [
                                        "pkcs1",
                                        "pss"
                                    ]
                                },
                                "enforce-unique-id": {
                                    "type": "string",
                                    "description": "Enable\/disable peer ID uniqueness check.   \ndisable:Disable peer ID uniqueness enforcement.   \nkeep-new:Enforce peer ID uniqueness, keep new connection if collision found.   \nkeep-old:Enforce peer ID uniqueness, keep old connection if collision found.",
                                    "enum": [
                                        "disable",
                                        "keep-new",
                                        "keep-old"
                                    ]
                                },
                                "cert-id-validation": {
                                    "type": "string",
                                    "description": "Enable\/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \nenable:Enable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \ndisable:Disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-egress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for egress IPsec traffic.   \nenable:Enable Forward Error Correction for egress IPsec traffic.   \ndisable:Disable Forward Error Correction for egress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-send-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).",
                                    "maximum": 1000,
                                    "minimum": 1
                                },
                                "fec-base": {
                                    "type": "integer",
                                    "description": "Number of base Forward Error Correction packets (1 - 100).",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "fec-codec": {
                                    "type": "integer",
                                    "description": "ipsec fec encoding\/decoding algorithm (0: reed-solomon, 1: xor).",
                                    "maximum": 1,
                                    "minimum": 0
                                },
                                "fec-redundant": {
                                    "type": "integer",
                                    "description": "Number of redundant Forward Error Correction packets (0 - 100,  when fec-codec is reed-solomon  or 1 when fec-codec is xor .",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "fec-ingress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for ingress IPsec traffic.   \nenable:Enable Forward Error Correction for ingress IPsec traffic.   \ndisable:Disable Forward Error Correction for ingress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-receive-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).",
                                    "maximum": 10000,
                                    "minimum": 1
                                },
                                "network-overlay": {
                                    "type": "string",
                                    "description": "Enable\/disable network overlays.   \ndisable:Disable network overlays.   \nenable:Enable network overlays.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "network-id": {
                                    "type": "integer",
                                    "description": "VPN gateway network ID.",
                                    "maximum": 255,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase1-interface"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase1-interface"
                ]
            }
        },
        "\/vpn.ipsec\/phase1-interface": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec remote gateway name.",
                                    "maxLength": 15
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Remote gateway type.   \nstatic:Remote VPN gateway has fixed IP address.   \ndynamic:Remote VPN gateway has dynamic IP address.   \nddns:Remote VPN gateway has dynamic IP address and is a dynamic DNS client.",
                                    "enum": [
                                        "static",
                                        "dynamic",
                                        "ddns"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Local physical, aggregate, or VLAN outgoing interface.",
                                    "maxLength": 35
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version to use for VPN interface.   \n4:Use IPv4 addressing for gateways.   \n6:Use IPv6 addressing for gateways.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "ike-version": {
                                    "type": "string",
                                    "description": "IKE protocol version.   \n1:Use IKEv1 protocol.   \n2:Use IKEv2 protocol.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the local gateway's external interface."
                                },
                                "local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the local gateway's external interface."
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the remote gateway's external interface."
                                },
                                "remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the remote gateway's external interface."
                                },
                                "remotegw-ddns": {
                                    "type": "string",
                                    "description": "Domain name of remote gateway (eg. name.DDNS.com).",
                                    "maxLength": 63
                                },
                                "keylife": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before phase 1 encryption key expires.",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "certificate": {
                                    "description": "The names of up to 4 signed personal certificates.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Certificate name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "authmethod": {
                                    "type": "string",
                                    "description": "Authentication method.   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "authmethod-remote": {
                                    "type": "string",
                                    "description": "Authentication method (remote side).   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "The ID protection mode used to establish a secure channel.   \naggressive:Aggressive mode.   \nmain:Main mode.",
                                    "enum": [
                                        "aggressive",
                                        "main"
                                    ]
                                },
                                "peertype": {
                                    "type": "string",
                                    "description": "Accept this peer type.   \nany:Accept any peer ID.   \none:Accept this peer ID.   \ndialup:Accept peer ID in dialup group.   \npeer:Accept this peer certificate.   \npeergrp:Accept this peer certificate group.",
                                    "enum": [
                                        "any",
                                        "one",
                                        "dialup",
                                        "peer",
                                        "peergrp"
                                    ]
                                },
                                "peerid": {
                                    "type": "string",
                                    "description": "Accept this peer identity.",
                                    "maxLength": 255
                                },
                                "default-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of default route gateway to use for traffic exiting the interface."
                                },
                                "default-gw-priority": {
                                    "type": "integer",
                                    "description": "Priority for default gateway route. A higher priority number signifies a less preferred route.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group name for dialup peers.",
                                    "maxLength": 35
                                },
                                "peer": {
                                    "type": "string",
                                    "description": "Accept this peer certificate.",
                                    "maxLength": 35
                                },
                                "peergrp": {
                                    "type": "string",
                                    "description": "Accept this peer certificate group.",
                                    "maxLength": 35
                                },
                                "monitor": {
                                    "type": "string",
                                    "description": "IPsec interface as backup for primary interface.",
                                    "maxLength": 35
                                },
                                "monitor-hold-down-type": {
                                    "type": "string",
                                    "description": "Recovery time method when primary interface re-establishes.   \nimmediate:Fail back immediately after primary recovers.   \ndelay:Number of seconds to delay fail back after primary recovers.   \ntime:Specify a time at which to fail back after primary recovers.",
                                    "enum": [
                                        "immediate",
                                        "delay",
                                        "time"
                                    ]
                                },
                                "monitor-hold-down-delay": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before recovery once primary re-establishes.",
                                    "maximum": 31536000,
                                    "minimum": 0
                                },
                                "monitor-hold-down-weekday": {
                                    "type": "string",
                                    "description": "Day of the week to recover once primary re-establishes.   \neveryday:Every Day.   \nsunday:Sunday.   \nmonday:Monday.   \ntuesday:Tuesday.   \nwednesday:Wednesday.   \nthursday:Thursday.   \nfriday:Friday.   \nsaturday:Saturday.",
                                    "enum": [
                                        "everyday",
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "monitor-hold-down-time": {
                                    "type": "string",
                                    "description": "Time of day at which to fail back to primary after it re-establishes."
                                },
                                "net-device": {
                                    "type": "string",
                                    "description": "Enable\/disable kernel device creation.   \nenable:Create a kernel device for every tunnel.   \ndisable:Do not create a kernel device for tunnels.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "tunnel-search": {
                                    "type": "string",
                                    "description": "Tunnel search method for when the interface is shared.   \nselectors:Search for tunnel in selectors.   \nnexthop:Search for tunnel using nexthop.",
                                    "enum": [
                                        "selectors",
                                        "nexthop"
                                    ]
                                },
                                "passive-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec passive mode for static tunnels.   \nenable:Enable IPsec passive mode.   \ndisable:Disable IPsec passive mode.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exchange-interface-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable exchange of IPsec interface IP address.   \nenable:Enable exchange of IPsec interface IP address.   \ndisable:Disable exchange of IPsec interface IP address.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exchange-ip-addr4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address to exchange with peers."
                                },
                                "exchange-ip-addr6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address to exchange with peers"
                                },
                                "aggregate-member": {
                                    "type": "string",
                                    "description": "Enable\/disable use as an aggregate member.   \nenable:Enable use as an aggregate member.   \ndisable:Disable use as an aggregate member.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "aggregate-weight": {
                                    "type": "integer",
                                    "description": "Link weight for aggregate.",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "mode-cfg": {
                                    "type": "string",
                                    "description": "Enable\/disable configuration method.   \ndisable:Disable Configuration Method.   \nenable:Enable Configuration Method.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable assignment of IP to IPsec interface via configuration method.   \ndisable:Do not assign an IP address to the IPsec interface.   \nenable:Assign an IP address to the IPsec interface.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip-from": {
                                    "type": "string",
                                    "description": "Method by which the IP address will be assigned.   \nrange:Assign IP address from locally defined range.   \nusrgrp:Assign IP address via user group.   \ndhcp:Assign IP address via DHCP.   \nname:Assign IP address from firewall address or group.",
                                    "enum": [
                                        "range",
                                        "usrgrp",
                                        "dhcp",
                                        "name"
                                    ]
                                },
                                "ipv4-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start of IPv4 range."
                                },
                                "ipv4-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End of IPv4 range."
                                },
                                "ipv4-netmask": {
                                    "type": "string",
                                    "description": "IPv4 Netmask."
                                },
                                "dhcp-ra-giaddr": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Relay agent gateway IP address to use in the giaddr field of DHCP requests."
                                },
                                "dhcp6-ra-linkaddr": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Relay agent IPv6 link address to use in DHCP6 requests."
                                },
                                "dns-mode": {
                                    "type": "string",
                                    "description": "DNS server mode.   \nmanual:Manually configure DNS servers.   \nauto:Use default DNS servers.",
                                    "enum": [
                                        "manual",
                                        "auto"
                                    ]
                                },
                                "ipv4-dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "ipv4-dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "ipv4-dns-server3": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 3."
                                },
                                "ipv4-wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 1."
                                },
                                "ipv4-wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 2."
                                },
                                "ipv4-exclude-range": {
                                    "description": "Configuration Method IPv4 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Start of IPv4 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "End of IPv4 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv4-split-include": {
                                    "type": "string",
                                    "description": "IPv4 split-include subnets.",
                                    "maxLength": 79
                                },
                                "split-include-service": {
                                    "type": "string",
                                    "description": "Split-include services.",
                                    "maxLength": 79
                                },
                                "ipv4-name": {
                                    "type": "string",
                                    "description": "IPv4 address name.",
                                    "maxLength": 79
                                },
                                "ipv6-start-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Start of IPv6 range."
                                },
                                "ipv6-end-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "End of IPv6 range."
                                },
                                "ipv6-prefix": {
                                    "type": "integer",
                                    "description": "IPv6 prefix.",
                                    "maximum": 128,
                                    "minimum": 1
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-dns-server3": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 3."
                                },
                                "ipv6-exclude-range": {
                                    "description": "Configuration method IPv6 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Start of IPv6 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "End of IPv6 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-split-include": {
                                    "type": "string",
                                    "description": "IPv6 split-include subnets.",
                                    "maxLength": 79
                                },
                                "ipv6-name": {
                                    "type": "string",
                                    "description": "IPv6 address name.",
                                    "maxLength": 79
                                },
                                "unity-support": {
                                    "type": "string",
                                    "description": "Enable\/disable support for Cisco UNITY Configuration Method extensions.   \ndisable:Disable Cisco Unity Configuration Method Extensions.   \nenable:Enable Cisco Unity Configuration Method Extensions.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "domain": {
                                    "type": "string",
                                    "description": "Instruct unity clients about the default DNS domain.",
                                    "maxLength": 63
                                },
                                "banner": {
                                    "type": "string",
                                    "description": "Message that unity client should display after connecting.",
                                    "maxLength": 1024
                                },
                                "include-local-lan": {
                                    "type": "string",
                                    "description": "Enable\/disable allow local LAN access on unity clients.   \ndisable:Disable local LAN access on Unity clients.   \nenable:Enable local LAN access on Unity clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "ipv4-split-exclude": {
                                    "type": "string",
                                    "description": "IPv4 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "ipv6-split-exclude": {
                                    "type": "string",
                                    "description": "IPv6 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable saving XAuth username and password on VPN clients.   \ndisable:Disable saving XAuth username and password on VPN clients.   \nenable:Enable saving XAuth username and password on VPN clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to bring up the tunnel when there is no traffic.   \ndisable:Disable allowing the VPN client to bring up the tunnel when there is no traffic.   \nenable:Enable allowing the VPN client to bring up the tunnel when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to keep the tunnel up when there is no traffic.   \ndisable:Disable allowing the VPN client to keep the tunnel up when there is no traffic.   \nenable:Enable allowing the VPN client to keep the tunnel up when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "backup-gateway": {
                                    "description": "Instruct unity clients about the backup gateway address(es).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string",
                                                "description": "Address of backup gateway.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase1 proposal.   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm-prfsha1:aes128gcm-prfsha1   \naes128gcm-prfsha256:aes128gcm-prfsha256   \naes128gcm-prfsha384:aes128gcm-prfsha384   \naes128gcm-prfsha512:aes128gcm-prfsha512   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm-prfsha1:aes256gcm-prfsha1   \naes256gcm-prfsha256:aes256gcm-prfsha256   \naes256gcm-prfsha384:aes256gcm-prfsha384   \naes256gcm-prfsha512:aes256gcm-prfsha512   \nchacha20poly1305-prfsha1:chacha20poly1305-prfsha1   \nchacha20poly1305-prfsha256:chacha20poly1305-prfsha256   \nchacha20poly1305-prfsha384:chacha20poly1305-prfsha384   \nchacha20poly1305-prfsha512:chacha20poly1305-prfsha512   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm-prfsha1",
                                        "aes128gcm-prfsha256",
                                        "aes128gcm-prfsha384",
                                        "aes128gcm-prfsha512",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm-prfsha1",
                                        "aes256gcm-prfsha256",
                                        "aes256gcm-prfsha384",
                                        "aes256gcm-prfsha512",
                                        "chacha20poly1305-prfsha1",
                                        "chacha20poly1305-prfsha256",
                                        "chacha20poly1305-prfsha384",
                                        "chacha20poly1305-prfsha512",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable control addition of a route to peer destination selector.   \ndisable:Do not add a route to destination of peer selector.   \nenable:Add route to destination of peer selector.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "add-gw-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically add a route to the remote gateway.   \nenable:Automatically add a route to the remote gateway.   \ndisable:Do not automatically add a route to the remote gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "psksecret": {
                                    "type": "string",
                                    "description": "Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "psksecret-remote": {
                                    "type": "string",
                                    "description": "Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "keepalive": {
                                    "type": "integer",
                                    "description": "NAT-T keep alive interval.",
                                    "maximum": 900,
                                    "minimum": 10
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance for routes added by IKE (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Priority for routes added by IKE (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "localid": {
                                    "type": "string",
                                    "description": "Local ID.",
                                    "maxLength": 63
                                },
                                "localid-type": {
                                    "type": "string",
                                    "description": "Local ID type.   \nauto:Select ID type automatically.   \nfqdn:Use fully qualified domain name.   \nuser-fqdn:Use user fully qualified domain name.   \nkeyid:Use key-id string.   \naddress:Use local IP address.   \nasn1dn:Use ASN.1 distinguished name.",
                                    "enum": [
                                        "auto",
                                        "fqdn",
                                        "user-fqdn",
                                        "keyid",
                                        "address",
                                        "asn1dn"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic initiation of IKE SA negotiation.   \nenable:Enable automatic initiation of IKE SA negotiation.   \ndisable:Disable automatic initiation of IKE SA negotiation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "negotiate-timeout": {
                                    "type": "integer",
                                    "description": "IKE SA negotiation timeout in seconds (1 - 300).",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "fragmentation": {
                                    "type": "string",
                                    "description": "Enable\/disable fragment IKE message on re-transmission.   \nenable:Enable intra-IKE fragmentation support on re-transmission.   \ndisable:Disable intra-IKE fragmentation support.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-fragmentation": {
                                    "type": "string",
                                    "description": "Determine whether IP packets are fragmented before or after IPsec encapsulation.   \npre-encapsulation:Fragment before IPsec encapsulation.   \npost-encapsulation:Fragment after IPsec encapsulation (RFC compliant).",
                                    "enum": [
                                        "pre-encapsulation",
                                        "post-encapsulation"
                                    ]
                                },
                                "dpd": {
                                    "type": "string",
                                    "description": "Dead Peer Detection mode.   \ndisable:Disable Dead Peer Detection.   \non-idle:Trigger Dead Peer Detection when IPsec is idle.   \non-demand:Trigger Dead Peer Detection when IPsec traffic is sent but no reply is received from the peer.",
                                    "enum": [
                                        "disable",
                                        "on-idle",
                                        "on-demand"
                                    ]
                                },
                                "dpd-retrycount": {
                                    "type": "integer",
                                    "description": "Number of DPD retry attempts.",
                                    "maximum": 10,
                                    "minimum": 0
                                },
                                "dpd-retryinterval": {
                                    "type": "string",
                                    "description": "DPD retry interval."
                                },
                                "forticlient-enforcement": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient enforcement.   \nenable:Enable FortiClient enforcement.   \ndisable:Disable FortiClient enforcement.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading NPU.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "send-cert-chain": {
                                    "type": "string",
                                    "description": "Enable\/disable sending certificate chain.   \nenable:Enable sending certificate chain.   \ndisable:Disable sending certificate chain.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "suite-b": {
                                    "type": "string",
                                    "description": "Use Suite-B.   \ndisable:Do not use UI suite.   \nsuite-b-gcm-128:Use Suite-B-GCM-128.   \nsuite-b-gcm-256:Use Suite-B-GCM-256.",
                                    "enum": [
                                        "disable",
                                        "suite-b-gcm-128",
                                        "suite-b-gcm-256"
                                    ]
                                },
                                "eap": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 EAP authentication.   \nenable:Enable IKEv2 EAP authentication.   \ndisable:Disable IKEv2 EAP authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eap-identity": {
                                    "type": "string",
                                    "description": "IKEv2 EAP peer identity type.   \nuse-id-payload:Use IKEv2 IDi payload to resolve peer identity.   \nsend-request:Use EAP identity request to resolve peer identity.",
                                    "enum": [
                                        "use-id-payload",
                                        "send-request"
                                    ]
                                },
                                "eap-exclude-peergrp": {
                                    "type": "string",
                                    "description": "Peer group excluded from EAP authentication.",
                                    "maxLength": 35
                                },
                                "acct-verify": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of RADIUS accounting record.   \nenable:Enable verification of RADIUS accounting record.   \ndisable:Disable verification of RADIUS accounting record.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ppk": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Postquantum Preshared Key (PPK).   \ndisable:Disable use of IKEv2 Postquantum Preshared Key (PPK).   \nallow:Allow, but do not require, use of IKEv2 Postquantum Preshared Key (PPK).   \nrequire:Require use of IKEv2 Postquantum Preshared Key (PPK).",
                                    "enum": [
                                        "disable",
                                        "allow",
                                        "require"
                                    ]
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "wizard-type": {
                                    "type": "string",
                                    "description": "GUI VPN Wizard Type.   \ncustom:Custom VPN configuration.   \ndialup-forticlient:Dial Up - FortiClient Windows, Mac and Android.   \ndialup-ios:Dial Up - iPhone \/ iPad Native IPsec Client.   \ndialup-android:Dial Up - Android Native IPsec Client.   \ndialup-windows:Dial Up - Windows Native IPsec Client.   \ndialup-cisco:Dial Up - Cisco IPsec Client.   \nstatic-fortigate:Site to Site - FortiGate.   \ndialup-fortigate:Dial Up - FortiGate.   \nstatic-cisco:Site to Site - Cisco.   \ndialup-cisco-fw:Dialup Up - Cisco Firewall.   \nsimplified-static-fortigate:Site to Site - FortiGate (SD-WAN).   \nhub-fortigate-auto-discovery:Hub role in a Hub-and-Spoke auto-discovery VPN.   \nspoke-fortigate-auto-discovery:Spoke role in a Hub-and-Spoke auto-discovery VPN.",
                                    "enum": [
                                        "custom",
                                        "dialup-forticlient",
                                        "dialup-ios",
                                        "dialup-android",
                                        "dialup-windows",
                                        "dialup-cisco",
                                        "static-fortigate",
                                        "dialup-fortigate",
                                        "static-cisco",
                                        "dialup-cisco-fw",
                                        "simplified-static-fortigate",
                                        "hub-fortigate-auto-discovery",
                                        "spoke-fortigate-auto-discovery"
                                    ]
                                },
                                "xauthtype": {
                                    "type": "string",
                                    "description": "XAuth type.   \ndisable:Disable.   \nclient:Enable as client.   \npap:Enable as server PAP.   \nchap:Enable as server CHAP.   \nauto:Enable as server auto.",
                                    "enum": [
                                        "disable",
                                        "client",
                                        "pap",
                                        "chap",
                                        "auto"
                                    ]
                                },
                                "reauth": {
                                    "type": "string",
                                    "description": "Enable\/disable re-authentication upon IKE SA lifetime expiration.   \ndisable:Disable IKE SA re-authentication.   \nenable:Enable IKE SA re-authentication.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "authusr": {
                                    "type": "string",
                                    "description": "XAuth user name.",
                                    "maxLength": 64
                                },
                                "authpasswd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "XAuth password (max 35 characters)."
                                },
                                "group-authentication": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 IDi group authentication.   \nenable:Enable IKEv2 IDi group authentication.   \ndisable:Disable IKEv2 IDi group authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-authentication-secret": {
                                    "type": "string",
                                    "description": "Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)"
                                },
                                "authusrgrp": {
                                    "type": "string",
                                    "description": "Authentication user group.",
                                    "maxLength": 35
                                },
                                "mesh-selector-type": {
                                    "type": "string",
                                    "description": "Add selectors containing subsets of the configuration depending on traffic.   \ndisable:Disable.   \nsubnet:Enable addition of matching subnet selector.   \nhost:Enable addition of host to host selector.",
                                    "enum": [
                                        "disable",
                                        "subnet",
                                        "host"
                                    ]
                                },
                                "idle-timeout": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec tunnel idle timeout.   \nenable:Enable IPsec tunnel idle timeout.   \ndisable:Disable IPsec tunnel idle timeout.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "idle-timeoutinterval": {
                                    "type": "integer",
                                    "description": "IPsec tunnel idle timeout in minutes (5 - 43200).",
                                    "maximum": 43200,
                                    "minimum": 5
                                },
                                "ha-sync-esp-seqno": {
                                    "type": "string",
                                    "description": "Enable\/disable sequence number jump ahead for IPsec HA.   \nenable:Enable HA syncing of ESP sequence numbers.   \ndisable:Disable HA syncing of ESP sequence numbers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copy the dscp in the ESP header to the inner IP Header.   \nenable:Enable copy the dscp in the ESP header to the inner IP Header.   \ndisable:Disable copy the dscp in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-sender": {
                                    "type": "string",
                                    "description": "Enable\/disable sending auto-discovery short-cut messages.   \nenable:Enable sending auto-discovery short-cut messages.   \ndisable:Disable sending auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-receiver": {
                                    "type": "string",
                                    "description": "Enable\/disable accepting auto-discovery short-cut messages.   \nenable:Enable receiving auto-discovery short-cut messages.   \ndisable:Disable receiving auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-forwarder": {
                                    "type": "string",
                                    "description": "Enable\/disable forwarding auto-discovery short-cut messages.   \nenable:Enable forwarding auto-discovery short-cut messages.   \ndisable:Disable forwarding auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-psk": {
                                    "type": "string",
                                    "description": "Enable\/disable use of pre-shared secrets for authentication of auto-discovery tunnels.   \nenable:Enable use of pre-shared-secret authentication for auto-discovery tunnels.   \ndisable:Disable use of authentication defined by 'authmethod' for auto-discovery tunnels.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-shortcuts": {
                                    "type": "string",
                                    "description": "Control deletion of child short-cut tunnels when the parent tunnel goes down.   \nindependent:Short-cut tunnels remain up if the parent tunnel goes down.   \ndependent:Short-cut tunnels are brought down if the parent tunnel goes down.",
                                    "enum": [
                                        "independent",
                                        "dependent"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "Enable\/disable GRE\/VXLAN encapsulation.   \nnone:No additional encapsulation.   \ngre:GRE encapsulation.   \nvxlan:VXLAN encapsulation.",
                                    "enum": [
                                        "none",
                                        "gre",
                                        "vxlan"
                                    ]
                                },
                                "encapsulation-address": {
                                    "type": "string",
                                    "description": "Source for GRE\/VXLAN tunnel address.   \nike:Use IKE\/IPsec gateway addresses.   \nipv4:Specify separate GRE\/VXLAN tunnel address.   \nipv6:Specify separate GRE\/VXLAN tunnel address.",
                                    "enum": [
                                        "ike",
                                        "ipv4",
                                        "ipv6"
                                    ]
                                },
                                "encap-local-gw4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local IPv4 address of GRE\/VXLAN tunnel."
                                },
                                "encap-local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local IPv6 address of GRE\/VXLAN tunnel."
                                },
                                "encap-remote-gw4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote IPv4 address of GRE\/VXLAN tunnel."
                                },
                                "encap-remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote IPv6 address of GRE\/VXLAN tunnel."
                                },
                                "vni": {
                                    "type": "integer",
                                    "description": "VNI of VXLAN tunnel.",
                                    "maximum": 16777215,
                                    "minimum": 1
                                },
                                "nattraversal": {
                                    "type": "string",
                                    "description": "Enable\/disable NAT traversal.   \nenable:Enable IPsec NAT traversal.   \ndisable:Disable IPsec NAT traversal.   \nforced:Force IPsec NAT traversal on.",
                                    "enum": [
                                        "enable",
                                        "disable",
                                        "forced"
                                    ]
                                },
                                "esn": {
                                    "type": "string",
                                    "description": "Extended sequence number (ESN) negotiation.   \nrequire:Require extended sequence number.   \nallow:Allow extended sequence number.   \ndisable:Disable extended sequence number.",
                                    "enum": [
                                        "require",
                                        "allow",
                                        "disable"
                                    ]
                                },
                                "fragmentation-mtu": {
                                    "type": "integer",
                                    "description": "IKE fragmentation MTU (500 - 16000).",
                                    "maximum": 16000,
                                    "minimum": 500
                                },
                                "childless-ike": {
                                    "type": "string",
                                    "description": "Enable\/disable childless IKEv2 initiation (RFC 6023).   \nenable:Enable childless IKEv2 initiation (RFC 6023).   \ndisable:Disable childless IKEv2 initiation (RFC 6023).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rekey": {
                                    "type": "string",
                                    "description": "Enable\/disable phase1 rekey.   \nenable:Enable phase1 rekey.   \ndisable:Disable phase1 rekey.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "digital-signature-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Digital Signature Authentication (RFC 7427).   \nenable:Enable IKEv2 Digital Signature Authentication (RFC 7427).   \ndisable:Disable IKEv2 Digital Signature Authentication (RFC 7427).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "signature-hash-alg": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication hash algorithms.   \nsha1:SHA1.   \nsha2-256:SHA2-256.   \nsha2-384:SHA2-384.   \nsha2-512:SHA2-512.",
                                    "enum": [
                                        "sha1",
                                        "sha2-256",
                                        "sha2-384",
                                        "sha2-512"
                                    ]
                                },
                                "rsa-signature-format": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication RSA signature format.   \npkcs1:RSASSA PKCS#1 v1.5.   \npss:RSASSA Probabilistic Signature Scheme (PSS).",
                                    "enum": [
                                        "pkcs1",
                                        "pss"
                                    ]
                                },
                                "enforce-unique-id": {
                                    "type": "string",
                                    "description": "Enable\/disable peer ID uniqueness check.   \ndisable:Disable peer ID uniqueness enforcement.   \nkeep-new:Enforce peer ID uniqueness, keep new connection if collision found.   \nkeep-old:Enforce peer ID uniqueness, keep old connection if collision found.",
                                    "enum": [
                                        "disable",
                                        "keep-new",
                                        "keep-old"
                                    ]
                                },
                                "cert-id-validation": {
                                    "type": "string",
                                    "description": "Enable\/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \nenable:Enable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \ndisable:Disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-egress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for egress IPsec traffic.   \nenable:Enable Forward Error Correction for egress IPsec traffic.   \ndisable:Disable Forward Error Correction for egress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-send-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).",
                                    "maximum": 1000,
                                    "minimum": 1
                                },
                                "fec-base": {
                                    "type": "integer",
                                    "description": "Number of base Forward Error Correction packets (1 - 100).",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "fec-codec": {
                                    "type": "integer",
                                    "description": "ipsec fec encoding\/decoding algorithm (0: reed-solomon, 1: xor).",
                                    "maximum": 1,
                                    "minimum": 0
                                },
                                "fec-redundant": {
                                    "type": "integer",
                                    "description": "Number of redundant Forward Error Correction packets (0 - 100,  when fec-codec is reed-solomon  or 1 when fec-codec is xor .",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "fec-ingress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for ingress IPsec traffic.   \nenable:Enable Forward Error Correction for ingress IPsec traffic.   \ndisable:Disable Forward Error Correction for ingress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-receive-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).",
                                    "maximum": 10000,
                                    "minimum": 1
                                },
                                "network-overlay": {
                                    "type": "string",
                                    "description": "Enable\/disable network overlays.   \ndisable:Disable network overlays.   \nenable:Enable network overlays.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "network-id": {
                                    "type": "integer",
                                    "description": "VPN gateway network ID.",
                                    "maximum": 255,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase1-interface"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec remote gateway name.",
                                    "maxLength": 15
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Remote gateway type.   \nstatic:Remote VPN gateway has fixed IP address.   \ndynamic:Remote VPN gateway has dynamic IP address.   \nddns:Remote VPN gateway has dynamic IP address and is a dynamic DNS client.",
                                    "enum": [
                                        "static",
                                        "dynamic",
                                        "ddns"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Local physical, aggregate, or VLAN outgoing interface.",
                                    "maxLength": 35
                                },
                                "ip-version": {
                                    "type": "string",
                                    "description": "IP version to use for VPN interface.   \n4:Use IPv4 addressing for gateways.   \n6:Use IPv6 addressing for gateways.",
                                    "enum": [
                                        "4",
                                        "6"
                                    ]
                                },
                                "ike-version": {
                                    "type": "string",
                                    "description": "IKE protocol version.   \n1:Use IKEv1 protocol.   \n2:Use IKEv2 protocol.",
                                    "enum": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "local-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the local gateway's external interface."
                                },
                                "local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the local gateway's external interface."
                                },
                                "remote-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of the remote gateway's external interface."
                                },
                                "remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address of the remote gateway's external interface."
                                },
                                "remotegw-ddns": {
                                    "type": "string",
                                    "description": "Domain name of remote gateway (eg. name.DDNS.com).",
                                    "maxLength": 63
                                },
                                "keylife": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before phase 1 encryption key expires.",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "certificate": {
                                    "description": "The names of up to 4 signed personal certificates.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Certificate name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "authmethod": {
                                    "type": "string",
                                    "description": "Authentication method.   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "authmethod-remote": {
                                    "type": "string",
                                    "description": "Authentication method (remote side).   \npsk:PSK authentication method.   \nsignature:Signature authentication method.",
                                    "enum": [
                                        "psk",
                                        "signature"
                                    ]
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "The ID protection mode used to establish a secure channel.   \naggressive:Aggressive mode.   \nmain:Main mode.",
                                    "enum": [
                                        "aggressive",
                                        "main"
                                    ]
                                },
                                "peertype": {
                                    "type": "string",
                                    "description": "Accept this peer type.   \nany:Accept any peer ID.   \none:Accept this peer ID.   \ndialup:Accept peer ID in dialup group.   \npeer:Accept this peer certificate.   \npeergrp:Accept this peer certificate group.",
                                    "enum": [
                                        "any",
                                        "one",
                                        "dialup",
                                        "peer",
                                        "peergrp"
                                    ]
                                },
                                "peerid": {
                                    "type": "string",
                                    "description": "Accept this peer identity.",
                                    "maxLength": 255
                                },
                                "default-gw": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address of default route gateway to use for traffic exiting the interface."
                                },
                                "default-gw-priority": {
                                    "type": "integer",
                                    "description": "Priority for default gateway route. A higher priority number signifies a less preferred route.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group name for dialup peers.",
                                    "maxLength": 35
                                },
                                "peer": {
                                    "type": "string",
                                    "description": "Accept this peer certificate.",
                                    "maxLength": 35
                                },
                                "peergrp": {
                                    "type": "string",
                                    "description": "Accept this peer certificate group.",
                                    "maxLength": 35
                                },
                                "monitor": {
                                    "type": "string",
                                    "description": "IPsec interface as backup for primary interface.",
                                    "maxLength": 35
                                },
                                "monitor-hold-down-type": {
                                    "type": "string",
                                    "description": "Recovery time method when primary interface re-establishes.   \nimmediate:Fail back immediately after primary recovers.   \ndelay:Number of seconds to delay fail back after primary recovers.   \ntime:Specify a time at which to fail back after primary recovers.",
                                    "enum": [
                                        "immediate",
                                        "delay",
                                        "time"
                                    ]
                                },
                                "monitor-hold-down-delay": {
                                    "type": "integer",
                                    "description": "Time to wait in seconds before recovery once primary re-establishes.",
                                    "maximum": 31536000,
                                    "minimum": 0
                                },
                                "monitor-hold-down-weekday": {
                                    "type": "string",
                                    "description": "Day of the week to recover once primary re-establishes.   \neveryday:Every Day.   \nsunday:Sunday.   \nmonday:Monday.   \ntuesday:Tuesday.   \nwednesday:Wednesday.   \nthursday:Thursday.   \nfriday:Friday.   \nsaturday:Saturday.",
                                    "enum": [
                                        "everyday",
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "monitor-hold-down-time": {
                                    "type": "string",
                                    "description": "Time of day at which to fail back to primary after it re-establishes."
                                },
                                "net-device": {
                                    "type": "string",
                                    "description": "Enable\/disable kernel device creation.   \nenable:Create a kernel device for every tunnel.   \ndisable:Do not create a kernel device for tunnels.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "tunnel-search": {
                                    "type": "string",
                                    "description": "Tunnel search method for when the interface is shared.   \nselectors:Search for tunnel in selectors.   \nnexthop:Search for tunnel using nexthop.",
                                    "enum": [
                                        "selectors",
                                        "nexthop"
                                    ]
                                },
                                "passive-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec passive mode for static tunnels.   \nenable:Enable IPsec passive mode.   \ndisable:Disable IPsec passive mode.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exchange-interface-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable exchange of IPsec interface IP address.   \nenable:Enable exchange of IPsec interface IP address.   \ndisable:Disable exchange of IPsec interface IP address.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exchange-ip-addr4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 address to exchange with peers."
                                },
                                "exchange-ip-addr6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 address to exchange with peers"
                                },
                                "aggregate-member": {
                                    "type": "string",
                                    "description": "Enable\/disable use as an aggregate member.   \nenable:Enable use as an aggregate member.   \ndisable:Disable use as an aggregate member.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "aggregate-weight": {
                                    "type": "integer",
                                    "description": "Link weight for aggregate.",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "mode-cfg": {
                                    "type": "string",
                                    "description": "Enable\/disable configuration method.   \ndisable:Disable Configuration Method.   \nenable:Enable Configuration Method.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable assignment of IP to IPsec interface via configuration method.   \ndisable:Do not assign an IP address to the IPsec interface.   \nenable:Assign an IP address to the IPsec interface.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "assign-ip-from": {
                                    "type": "string",
                                    "description": "Method by which the IP address will be assigned.   \nrange:Assign IP address from locally defined range.   \nusrgrp:Assign IP address via user group.   \ndhcp:Assign IP address via DHCP.   \nname:Assign IP address from firewall address or group.",
                                    "enum": [
                                        "range",
                                        "usrgrp",
                                        "dhcp",
                                        "name"
                                    ]
                                },
                                "ipv4-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start of IPv4 range."
                                },
                                "ipv4-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End of IPv4 range."
                                },
                                "ipv4-netmask": {
                                    "type": "string",
                                    "description": "IPv4 Netmask."
                                },
                                "dhcp-ra-giaddr": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Relay agent gateway IP address to use in the giaddr field of DHCP requests."
                                },
                                "dhcp6-ra-linkaddr": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Relay agent IPv6 link address to use in DHCP6 requests."
                                },
                                "dns-mode": {
                                    "type": "string",
                                    "description": "DNS server mode.   \nmanual:Manually configure DNS servers.   \nauto:Use default DNS servers.",
                                    "enum": [
                                        "manual",
                                        "auto"
                                    ]
                                },
                                "ipv4-dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "ipv4-dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "ipv4-dns-server3": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 3."
                                },
                                "ipv4-wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 1."
                                },
                                "ipv4-wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 2."
                                },
                                "ipv4-exclude-range": {
                                    "description": "Configuration Method IPv4 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Start of IPv4 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "End of IPv4 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv4-split-include": {
                                    "type": "string",
                                    "description": "IPv4 split-include subnets.",
                                    "maxLength": 79
                                },
                                "split-include-service": {
                                    "type": "string",
                                    "description": "Split-include services.",
                                    "maxLength": 79
                                },
                                "ipv4-name": {
                                    "type": "string",
                                    "description": "IPv4 address name.",
                                    "maxLength": 79
                                },
                                "ipv6-start-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Start of IPv6 range."
                                },
                                "ipv6-end-ip": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "End of IPv6 range."
                                },
                                "ipv6-prefix": {
                                    "type": "integer",
                                    "description": "IPv6 prefix.",
                                    "maximum": 128,
                                    "minimum": 1
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-dns-server3": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 3."
                                },
                                "ipv6-exclude-range": {
                                    "description": "Configuration method IPv6 exclude ranges.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "start-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "Start of IPv6 exclusive range."
                                            },
                                            "end-ip": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "End of IPv6 exclusive range."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-split-include": {
                                    "type": "string",
                                    "description": "IPv6 split-include subnets.",
                                    "maxLength": 79
                                },
                                "ipv6-name": {
                                    "type": "string",
                                    "description": "IPv6 address name.",
                                    "maxLength": 79
                                },
                                "unity-support": {
                                    "type": "string",
                                    "description": "Enable\/disable support for Cisco UNITY Configuration Method extensions.   \ndisable:Disable Cisco Unity Configuration Method Extensions.   \nenable:Enable Cisco Unity Configuration Method Extensions.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "domain": {
                                    "type": "string",
                                    "description": "Instruct unity clients about the default DNS domain.",
                                    "maxLength": 63
                                },
                                "banner": {
                                    "type": "string",
                                    "description": "Message that unity client should display after connecting.",
                                    "maxLength": 1024
                                },
                                "include-local-lan": {
                                    "type": "string",
                                    "description": "Enable\/disable allow local LAN access on unity clients.   \ndisable:Disable local LAN access on Unity clients.   \nenable:Enable local LAN access on Unity clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "ipv4-split-exclude": {
                                    "type": "string",
                                    "description": "IPv4 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "ipv6-split-exclude": {
                                    "type": "string",
                                    "description": "IPv6 subnets that should not be sent over the IPsec tunnel.",
                                    "maxLength": 79
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable saving XAuth username and password on VPN clients.   \ndisable:Disable saving XAuth username and password on VPN clients.   \nenable:Enable saving XAuth username and password on VPN clients.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to bring up the tunnel when there is no traffic.   \ndisable:Disable allowing the VPN client to bring up the tunnel when there is no traffic.   \nenable:Enable allowing the VPN client to bring up the tunnel when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "client-keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing the VPN client to keep the tunnel up when there is no traffic.   \ndisable:Disable allowing the VPN client to keep the tunnel up when there is no traffic.   \nenable:Enable allowing the VPN client to keep the tunnel up when there is no traffic.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "backup-gateway": {
                                    "description": "Instruct unity clients about the backup gateway address(es).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string",
                                                "description": "Address of backup gateway.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase1 proposal.   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm-prfsha1:aes128gcm-prfsha1   \naes128gcm-prfsha256:aes128gcm-prfsha256   \naes128gcm-prfsha384:aes128gcm-prfsha384   \naes128gcm-prfsha512:aes128gcm-prfsha512   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm-prfsha1:aes256gcm-prfsha1   \naes256gcm-prfsha256:aes256gcm-prfsha256   \naes256gcm-prfsha384:aes256gcm-prfsha384   \naes256gcm-prfsha512:aes256gcm-prfsha512   \nchacha20poly1305-prfsha1:chacha20poly1305-prfsha1   \nchacha20poly1305-prfsha256:chacha20poly1305-prfsha256   \nchacha20poly1305-prfsha384:chacha20poly1305-prfsha384   \nchacha20poly1305-prfsha512:chacha20poly1305-prfsha512   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm-prfsha1",
                                        "aes128gcm-prfsha256",
                                        "aes128gcm-prfsha384",
                                        "aes128gcm-prfsha512",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm-prfsha1",
                                        "aes256gcm-prfsha256",
                                        "aes256gcm-prfsha384",
                                        "aes256gcm-prfsha512",
                                        "chacha20poly1305-prfsha1",
                                        "chacha20poly1305-prfsha256",
                                        "chacha20poly1305-prfsha384",
                                        "chacha20poly1305-prfsha512",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable control addition of a route to peer destination selector.   \ndisable:Do not add a route to destination of peer selector.   \nenable:Add route to destination of peer selector.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "add-gw-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatically add a route to the remote gateway.   \nenable:Automatically add a route to the remote gateway.   \ndisable:Do not automatically add a route to the remote gateway.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "psksecret": {
                                    "type": "string",
                                    "description": "Pre-shared secret for PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "psksecret-remote": {
                                    "type": "string",
                                    "description": "Pre-shared secret for remote side PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "keepalive": {
                                    "type": "integer",
                                    "description": "NAT-T keep alive interval.",
                                    "maximum": 900,
                                    "minimum": 10
                                },
                                "distance": {
                                    "type": "integer",
                                    "description": "Distance for routes added by IKE (1 - 255).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "priority": {
                                    "type": "integer",
                                    "description": "Priority for routes added by IKE (0 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "localid": {
                                    "type": "string",
                                    "description": "Local ID.",
                                    "maxLength": 63
                                },
                                "localid-type": {
                                    "type": "string",
                                    "description": "Local ID type.   \nauto:Select ID type automatically.   \nfqdn:Use fully qualified domain name.   \nuser-fqdn:Use user fully qualified domain name.   \nkeyid:Use key-id string.   \naddress:Use local IP address.   \nasn1dn:Use ASN.1 distinguished name.",
                                    "enum": [
                                        "auto",
                                        "fqdn",
                                        "user-fqdn",
                                        "keyid",
                                        "address",
                                        "asn1dn"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic initiation of IKE SA negotiation.   \nenable:Enable automatic initiation of IKE SA negotiation.   \ndisable:Disable automatic initiation of IKE SA negotiation.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "negotiate-timeout": {
                                    "type": "integer",
                                    "description": "IKE SA negotiation timeout in seconds (1 - 300).",
                                    "maximum": 300,
                                    "minimum": 1
                                },
                                "fragmentation": {
                                    "type": "string",
                                    "description": "Enable\/disable fragment IKE message on re-transmission.   \nenable:Enable intra-IKE fragmentation support on re-transmission.   \ndisable:Disable intra-IKE fragmentation support.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-fragmentation": {
                                    "type": "string",
                                    "description": "Determine whether IP packets are fragmented before or after IPsec encapsulation.   \npre-encapsulation:Fragment before IPsec encapsulation.   \npost-encapsulation:Fragment after IPsec encapsulation (RFC compliant).",
                                    "enum": [
                                        "pre-encapsulation",
                                        "post-encapsulation"
                                    ]
                                },
                                "dpd": {
                                    "type": "string",
                                    "description": "Dead Peer Detection mode.   \ndisable:Disable Dead Peer Detection.   \non-idle:Trigger Dead Peer Detection when IPsec is idle.   \non-demand:Trigger Dead Peer Detection when IPsec traffic is sent but no reply is received from the peer.",
                                    "enum": [
                                        "disable",
                                        "on-idle",
                                        "on-demand"
                                    ]
                                },
                                "dpd-retrycount": {
                                    "type": "integer",
                                    "description": "Number of DPD retry attempts.",
                                    "maximum": 10,
                                    "minimum": 0
                                },
                                "dpd-retryinterval": {
                                    "type": "string",
                                    "description": "DPD retry interval."
                                },
                                "forticlient-enforcement": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient enforcement.   \nenable:Enable FortiClient enforcement.   \ndisable:Disable FortiClient enforcement.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "npu-offload": {
                                    "type": "string",
                                    "description": "Enable\/disable offloading NPU.   \nenable:Enable NPU offloading.   \ndisable:Disable NPU offloading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "send-cert-chain": {
                                    "type": "string",
                                    "description": "Enable\/disable sending certificate chain.   \nenable:Enable sending certificate chain.   \ndisable:Disable sending certificate chain.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "suite-b": {
                                    "type": "string",
                                    "description": "Use Suite-B.   \ndisable:Do not use UI suite.   \nsuite-b-gcm-128:Use Suite-B-GCM-128.   \nsuite-b-gcm-256:Use Suite-B-GCM-256.",
                                    "enum": [
                                        "disable",
                                        "suite-b-gcm-128",
                                        "suite-b-gcm-256"
                                    ]
                                },
                                "eap": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 EAP authentication.   \nenable:Enable IKEv2 EAP authentication.   \ndisable:Disable IKEv2 EAP authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eap-identity": {
                                    "type": "string",
                                    "description": "IKEv2 EAP peer identity type.   \nuse-id-payload:Use IKEv2 IDi payload to resolve peer identity.   \nsend-request:Use EAP identity request to resolve peer identity.",
                                    "enum": [
                                        "use-id-payload",
                                        "send-request"
                                    ]
                                },
                                "eap-exclude-peergrp": {
                                    "type": "string",
                                    "description": "Peer group excluded from EAP authentication.",
                                    "maxLength": 35
                                },
                                "acct-verify": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of RADIUS accounting record.   \nenable:Enable verification of RADIUS accounting record.   \ndisable:Disable verification of RADIUS accounting record.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ppk": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Postquantum Preshared Key (PPK).   \ndisable:Disable use of IKEv2 Postquantum Preshared Key (PPK).   \nallow:Allow, but do not require, use of IKEv2 Postquantum Preshared Key (PPK).   \nrequire:Require use of IKEv2 Postquantum Preshared Key (PPK).",
                                    "enum": [
                                        "disable",
                                        "allow",
                                        "require"
                                    ]
                                },
                                "ppk-secret": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key (ASCII string or hexadecimal encoded with a leading 0x)."
                                },
                                "ppk-identity": {
                                    "type": "string",
                                    "description": "IKEv2 Postquantum Preshared Key Identity.",
                                    "maxLength": 35
                                },
                                "wizard-type": {
                                    "type": "string",
                                    "description": "GUI VPN Wizard Type.   \ncustom:Custom VPN configuration.   \ndialup-forticlient:Dial Up - FortiClient Windows, Mac and Android.   \ndialup-ios:Dial Up - iPhone \/ iPad Native IPsec Client.   \ndialup-android:Dial Up - Android Native IPsec Client.   \ndialup-windows:Dial Up - Windows Native IPsec Client.   \ndialup-cisco:Dial Up - Cisco IPsec Client.   \nstatic-fortigate:Site to Site - FortiGate.   \ndialup-fortigate:Dial Up - FortiGate.   \nstatic-cisco:Site to Site - Cisco.   \ndialup-cisco-fw:Dialup Up - Cisco Firewall.   \nsimplified-static-fortigate:Site to Site - FortiGate (SD-WAN).   \nhub-fortigate-auto-discovery:Hub role in a Hub-and-Spoke auto-discovery VPN.   \nspoke-fortigate-auto-discovery:Spoke role in a Hub-and-Spoke auto-discovery VPN.",
                                    "enum": [
                                        "custom",
                                        "dialup-forticlient",
                                        "dialup-ios",
                                        "dialup-android",
                                        "dialup-windows",
                                        "dialup-cisco",
                                        "static-fortigate",
                                        "dialup-fortigate",
                                        "static-cisco",
                                        "dialup-cisco-fw",
                                        "simplified-static-fortigate",
                                        "hub-fortigate-auto-discovery",
                                        "spoke-fortigate-auto-discovery"
                                    ]
                                },
                                "xauthtype": {
                                    "type": "string",
                                    "description": "XAuth type.   \ndisable:Disable.   \nclient:Enable as client.   \npap:Enable as server PAP.   \nchap:Enable as server CHAP.   \nauto:Enable as server auto.",
                                    "enum": [
                                        "disable",
                                        "client",
                                        "pap",
                                        "chap",
                                        "auto"
                                    ]
                                },
                                "reauth": {
                                    "type": "string",
                                    "description": "Enable\/disable re-authentication upon IKE SA lifetime expiration.   \ndisable:Disable IKE SA re-authentication.   \nenable:Enable IKE SA re-authentication.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "authusr": {
                                    "type": "string",
                                    "description": "XAuth user name.",
                                    "maxLength": 64
                                },
                                "authpasswd": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "XAuth password (max 35 characters)."
                                },
                                "group-authentication": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 IDi group authentication.   \nenable:Enable IKEv2 IDi group authentication.   \ndisable:Disable IKEv2 IDi group authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "group-authentication-secret": {
                                    "type": "string",
                                    "description": "Password for IKEv2 IDi group authentication.  (ASCII string or hexadecimal indicated by a leading 0x.)"
                                },
                                "authusrgrp": {
                                    "type": "string",
                                    "description": "Authentication user group.",
                                    "maxLength": 35
                                },
                                "mesh-selector-type": {
                                    "type": "string",
                                    "description": "Add selectors containing subsets of the configuration depending on traffic.   \ndisable:Disable.   \nsubnet:Enable addition of matching subnet selector.   \nhost:Enable addition of host to host selector.",
                                    "enum": [
                                        "disable",
                                        "subnet",
                                        "host"
                                    ]
                                },
                                "idle-timeout": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec tunnel idle timeout.   \nenable:Enable IPsec tunnel idle timeout.   \ndisable:Disable IPsec tunnel idle timeout.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "idle-timeoutinterval": {
                                    "type": "integer",
                                    "description": "IPsec tunnel idle timeout in minutes (5 - 43200).",
                                    "maximum": 43200,
                                    "minimum": 5
                                },
                                "ha-sync-esp-seqno": {
                                    "type": "string",
                                    "description": "Enable\/disable sequence number jump ahead for IPsec HA.   \nenable:Enable HA syncing of ESP sequence numbers.   \ndisable:Disable HA syncing of ESP sequence numbers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copy the dscp in the ESP header to the inner IP Header.   \nenable:Enable copy the dscp in the ESP header to the inner IP Header.   \ndisable:Disable copy the dscp in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-sender": {
                                    "type": "string",
                                    "description": "Enable\/disable sending auto-discovery short-cut messages.   \nenable:Enable sending auto-discovery short-cut messages.   \ndisable:Disable sending auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-receiver": {
                                    "type": "string",
                                    "description": "Enable\/disable accepting auto-discovery short-cut messages.   \nenable:Enable receiving auto-discovery short-cut messages.   \ndisable:Disable receiving auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-forwarder": {
                                    "type": "string",
                                    "description": "Enable\/disable forwarding auto-discovery short-cut messages.   \nenable:Enable forwarding auto-discovery short-cut messages.   \ndisable:Disable forwarding auto-discovery short-cut messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-psk": {
                                    "type": "string",
                                    "description": "Enable\/disable use of pre-shared secrets for authentication of auto-discovery tunnels.   \nenable:Enable use of pre-shared-secret authentication for auto-discovery tunnels.   \ndisable:Disable use of authentication defined by 'authmethod' for auto-discovery tunnels.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-shortcuts": {
                                    "type": "string",
                                    "description": "Control deletion of child short-cut tunnels when the parent tunnel goes down.   \nindependent:Short-cut tunnels remain up if the parent tunnel goes down.   \ndependent:Short-cut tunnels are brought down if the parent tunnel goes down.",
                                    "enum": [
                                        "independent",
                                        "dependent"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "Enable\/disable GRE\/VXLAN encapsulation.   \nnone:No additional encapsulation.   \ngre:GRE encapsulation.   \nvxlan:VXLAN encapsulation.",
                                    "enum": [
                                        "none",
                                        "gre",
                                        "vxlan"
                                    ]
                                },
                                "encapsulation-address": {
                                    "type": "string",
                                    "description": "Source for GRE\/VXLAN tunnel address.   \nike:Use IKE\/IPsec gateway addresses.   \nipv4:Specify separate GRE\/VXLAN tunnel address.   \nipv6:Specify separate GRE\/VXLAN tunnel address.",
                                    "enum": [
                                        "ike",
                                        "ipv4",
                                        "ipv6"
                                    ]
                                },
                                "encap-local-gw4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local IPv4 address of GRE\/VXLAN tunnel."
                                },
                                "encap-local-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local IPv6 address of GRE\/VXLAN tunnel."
                                },
                                "encap-remote-gw4": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote IPv4 address of GRE\/VXLAN tunnel."
                                },
                                "encap-remote-gw6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote IPv6 address of GRE\/VXLAN tunnel."
                                },
                                "vni": {
                                    "type": "integer",
                                    "description": "VNI of VXLAN tunnel.",
                                    "maximum": 16777215,
                                    "minimum": 1
                                },
                                "nattraversal": {
                                    "type": "string",
                                    "description": "Enable\/disable NAT traversal.   \nenable:Enable IPsec NAT traversal.   \ndisable:Disable IPsec NAT traversal.   \nforced:Force IPsec NAT traversal on.",
                                    "enum": [
                                        "enable",
                                        "disable",
                                        "forced"
                                    ]
                                },
                                "esn": {
                                    "type": "string",
                                    "description": "Extended sequence number (ESN) negotiation.   \nrequire:Require extended sequence number.   \nallow:Allow extended sequence number.   \ndisable:Disable extended sequence number.",
                                    "enum": [
                                        "require",
                                        "allow",
                                        "disable"
                                    ]
                                },
                                "fragmentation-mtu": {
                                    "type": "integer",
                                    "description": "IKE fragmentation MTU (500 - 16000).",
                                    "maximum": 16000,
                                    "minimum": 500
                                },
                                "childless-ike": {
                                    "type": "string",
                                    "description": "Enable\/disable childless IKEv2 initiation (RFC 6023).   \nenable:Enable childless IKEv2 initiation (RFC 6023).   \ndisable:Disable childless IKEv2 initiation (RFC 6023).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "rekey": {
                                    "type": "string",
                                    "description": "Enable\/disable phase1 rekey.   \nenable:Enable phase1 rekey.   \ndisable:Disable phase1 rekey.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "digital-signature-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable IKEv2 Digital Signature Authentication (RFC 7427).   \nenable:Enable IKEv2 Digital Signature Authentication (RFC 7427).   \ndisable:Disable IKEv2 Digital Signature Authentication (RFC 7427).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "signature-hash-alg": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication hash algorithms.   \nsha1:SHA1.   \nsha2-256:SHA2-256.   \nsha2-384:SHA2-384.   \nsha2-512:SHA2-512.",
                                    "enum": [
                                        "sha1",
                                        "sha2-256",
                                        "sha2-384",
                                        "sha2-512"
                                    ]
                                },
                                "rsa-signature-format": {
                                    "type": "string",
                                    "description": "Digital Signature Authentication RSA signature format.   \npkcs1:RSASSA PKCS#1 v1.5.   \npss:RSASSA Probabilistic Signature Scheme (PSS).",
                                    "enum": [
                                        "pkcs1",
                                        "pss"
                                    ]
                                },
                                "enforce-unique-id": {
                                    "type": "string",
                                    "description": "Enable\/disable peer ID uniqueness check.   \ndisable:Disable peer ID uniqueness enforcement.   \nkeep-new:Enforce peer ID uniqueness, keep new connection if collision found.   \nkeep-old:Enforce peer ID uniqueness, keep old connection if collision found.",
                                    "enum": [
                                        "disable",
                                        "keep-new",
                                        "keep-old"
                                    ]
                                },
                                "cert-id-validation": {
                                    "type": "string",
                                    "description": "Enable\/disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \nenable:Enable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.   \ndisable:Disable cross validation of peer ID and the identity in the peer's certificate as specified in RFC 4945.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-egress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for egress IPsec traffic.   \nenable:Enable Forward Error Correction for egress IPsec traffic.   \ndisable:Disable Forward Error Correction for egress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-send-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before sending Forward Error Correction packets (1 - 1000).",
                                    "maximum": 1000,
                                    "minimum": 1
                                },
                                "fec-base": {
                                    "type": "integer",
                                    "description": "Number of base Forward Error Correction packets (1 - 100).",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "fec-codec": {
                                    "type": "integer",
                                    "description": "ipsec fec encoding\/decoding algorithm (0: reed-solomon, 1: xor).",
                                    "maximum": 1,
                                    "minimum": 0
                                },
                                "fec-redundant": {
                                    "type": "integer",
                                    "description": "Number of redundant Forward Error Correction packets (0 - 100,  when fec-codec is reed-solomon  or 1 when fec-codec is xor .",
                                    "maximum": 100,
                                    "minimum": 0
                                },
                                "fec-ingress": {
                                    "type": "string",
                                    "description": "Enable\/disable Forward Error Correction for ingress IPsec traffic.   \nenable:Enable Forward Error Correction for ingress IPsec traffic.   \ndisable:Disable Forward Error Correction for ingress IPsec traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fec-receive-timeout": {
                                    "type": "integer",
                                    "description": "Timeout in milliseconds before dropping Forward Error Correction packets (1 - 10000).",
                                    "maximum": 10000,
                                    "minimum": 1
                                },
                                "network-overlay": {
                                    "type": "string",
                                    "description": "Enable\/disable network overlays.   \ndisable:Disable network overlays.   \nenable:Enable network overlays.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "network-id": {
                                    "type": "integer",
                                    "description": "VPN gateway network ID.",
                                    "maximum": 255,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase1-interface"
                ]
            }
        },
        "\/vpn.ipsec\/phase2\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "phase1name": {
                                    "type": "string",
                                    "description": "Phase 1 determines the options required for phase 2.",
                                    "maxLength": 35
                                },
                                "dhcp-ipsec": {
                                    "type": "string",
                                    "description": "Enable\/disable DHCP-IPsec.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "use-natip": {
                                    "type": "string",
                                    "description": "Enable to use the FortiGate public IP as the source selector when outbound NAT is used.   \nenable:Replace source selector with interface IP when using outbound NAT.   \ndisable:Do not modify source selector when using outbound NAT.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "selector-match": {
                                    "type": "string",
                                    "description": "Match type to use when comparing selectors.   \nexact:Match selectors exactly.   \nsubset:Match selectors by subset.   \nauto:Use subset or exact match depending on selector address type.",
                                    "enum": [
                                        "exact",
                                        "subset",
                                        "auto"
                                    ]
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase2 proposal.   \nnull-md5:null-md5   \nnull-sha1:null-sha1   \nnull-sha256:null-sha256   \nnull-sha384:null-sha384   \nnull-sha512:null-sha512   \ndes-null:des-null   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-null:3des-null   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-null:aes128-null   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm:aes128gcm   \naes192-null:aes192-null   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-null:aes256-null   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm:aes256gcm   \nchacha20poly1305:chacha20poly1305   \naria128-null:aria128-null   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-null:aria192-null   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-null:aria256-null   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-null:seed-null   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "null-md5",
                                        "null-sha1",
                                        "null-sha256",
                                        "null-sha384",
                                        "null-sha512",
                                        "des-null",
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-null",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-null",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm",
                                        "aes192-null",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-null",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm",
                                        "chacha20poly1305",
                                        "aria128-null",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-null",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-null",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-null",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "pfs": {
                                    "type": "string",
                                    "description": "Enable\/disable PFS feature.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv4-df": {
                                    "type": "string",
                                    "description": "Enable\/disable setting and resetting of IPv4 'Don't Fragment' bit.   \nenable:Set IPv4 DF.   \ndisable:Reset IPv4 DF.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "Phase2 DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "replay": {
                                    "type": "string",
                                    "description": "Enable\/disable replay detection.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keepalive": {
                                    "type": "string",
                                    "description": "Enable\/disable keep alive.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec SA auto-negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic route addition.   \nphase1:Add route according to phase1 add-route setting.   \nenable:Add route for remote proxy ID.   \ndisable:Do not add route for remote proxy ID.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copying of the DSCP field in the ESP header to the inner IP header.   \nphase1:Enable\/disable copying the DSCP in the ESP header to the inner IP Header according to the phase1 inbound_dscp_copy setting.   \nenable:Enable copy the DSCP in the ESP header to the inner IP Header.   \ndisable:Disable copy the DSCP in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keylifeseconds": {
                                    "type": "integer",
                                    "description": "Phase2 key life in time in seconds (120 - 172800).",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "keylifekbs": {
                                    "type": "integer",
                                    "description": "Phase2 key life in number of kilobytes of traffic (5120 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 5120
                                },
                                "keylife-type": {
                                    "type": "string",
                                    "description": "Keylife type.   \nseconds:Key life in seconds.   \nkbs:Key life in kilobytes.   \nboth:Key life both.",
                                    "enum": [
                                        "seconds",
                                        "kbs",
                                        "both"
                                    ]
                                },
                                "single-source": {
                                    "type": "string",
                                    "description": "Enable\/disable single source IP restriction.   \nenable:Only single source IP will be accepted.   \ndisable:Source IP range will be accepted.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "route-overlap": {
                                    "type": "string",
                                    "description": "Action for overlapping routes.   \nuse-old:Use the old route and do not add the new route.   \nuse-new:Delete the old route and add the new route.   \nallow:Allow overlapping routes.",
                                    "enum": [
                                        "use-old",
                                        "use-new",
                                        "allow"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "ESP encapsulation mode.   \ntunnel-mode:Use tunnel mode encapsulation.   \ntransport-mode:Use transport mode encapsulation.",
                                    "enum": [
                                        "tunnel-mode",
                                        "transport-mode"
                                    ]
                                },
                                "l2tp": {
                                    "type": "string",
                                    "description": "Enable\/disable L2TP over IPsec.   \nenable:Enable L2TP over IPsec.   \ndisable:Disable L2TP over IPsec.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "initiator-ts-narrow": {
                                    "type": "string",
                                    "description": "Enable\/disable traffic selector narrowing for IKEv2 initiator.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffserv": {
                                    "type": "string",
                                    "description": "Enable\/disable applying DSCP value to the IPsec tunnel outer IP header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffservcode": {
                                    "type": "string",
                                    "description": "DSCP value to be applied to the IPsec tunnel outer IP header."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Quick mode protocol selector (1 - 255 or 0 for all).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "src-name": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-name6": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-addr-type": {
                                    "type": "string",
                                    "description": "Local proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name"
                                    ]
                                },
                                "src-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID start."
                                },
                                "src-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 start."
                                },
                                "src-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID end."
                                },
                                "src-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 end."
                                },
                                "src-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID subnet."
                                },
                                "src-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 subnet."
                                },
                                "src-port": {
                                    "type": "integer",
                                    "description": "Quick mode source port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "dst-name": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-name6": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-addr-type": {
                                    "type": "string",
                                    "description": "Remote proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name"
                                    ]
                                },
                                "dst-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 start."
                                },
                                "dst-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 start."
                                },
                                "dst-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 end."
                                },
                                "dst-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 end."
                                },
                                "dst-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 subnet."
                                },
                                "dst-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 subnet."
                                },
                                "dst-port": {
                                    "type": "integer",
                                    "description": "Quick mode destination port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase2"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "phase1name": {
                                    "type": "string",
                                    "description": "Phase 1 determines the options required for phase 2.",
                                    "maxLength": 35
                                },
                                "dhcp-ipsec": {
                                    "type": "string",
                                    "description": "Enable\/disable DHCP-IPsec.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "use-natip": {
                                    "type": "string",
                                    "description": "Enable to use the FortiGate public IP as the source selector when outbound NAT is used.   \nenable:Replace source selector with interface IP when using outbound NAT.   \ndisable:Do not modify source selector when using outbound NAT.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "selector-match": {
                                    "type": "string",
                                    "description": "Match type to use when comparing selectors.   \nexact:Match selectors exactly.   \nsubset:Match selectors by subset.   \nauto:Use subset or exact match depending on selector address type.",
                                    "enum": [
                                        "exact",
                                        "subset",
                                        "auto"
                                    ]
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase2 proposal.   \nnull-md5:null-md5   \nnull-sha1:null-sha1   \nnull-sha256:null-sha256   \nnull-sha384:null-sha384   \nnull-sha512:null-sha512   \ndes-null:des-null   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-null:3des-null   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-null:aes128-null   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm:aes128gcm   \naes192-null:aes192-null   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-null:aes256-null   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm:aes256gcm   \nchacha20poly1305:chacha20poly1305   \naria128-null:aria128-null   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-null:aria192-null   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-null:aria256-null   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-null:seed-null   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "null-md5",
                                        "null-sha1",
                                        "null-sha256",
                                        "null-sha384",
                                        "null-sha512",
                                        "des-null",
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-null",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-null",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm",
                                        "aes192-null",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-null",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm",
                                        "chacha20poly1305",
                                        "aria128-null",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-null",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-null",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-null",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "pfs": {
                                    "type": "string",
                                    "description": "Enable\/disable PFS feature.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv4-df": {
                                    "type": "string",
                                    "description": "Enable\/disable setting and resetting of IPv4 'Don't Fragment' bit.   \nenable:Set IPv4 DF.   \ndisable:Reset IPv4 DF.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "Phase2 DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "replay": {
                                    "type": "string",
                                    "description": "Enable\/disable replay detection.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keepalive": {
                                    "type": "string",
                                    "description": "Enable\/disable keep alive.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec SA auto-negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic route addition.   \nphase1:Add route according to phase1 add-route setting.   \nenable:Add route for remote proxy ID.   \ndisable:Do not add route for remote proxy ID.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copying of the DSCP field in the ESP header to the inner IP header.   \nphase1:Enable\/disable copying the DSCP in the ESP header to the inner IP Header according to the phase1 inbound_dscp_copy setting.   \nenable:Enable copy the DSCP in the ESP header to the inner IP Header.   \ndisable:Disable copy the DSCP in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keylifeseconds": {
                                    "type": "integer",
                                    "description": "Phase2 key life in time in seconds (120 - 172800).",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "keylifekbs": {
                                    "type": "integer",
                                    "description": "Phase2 key life in number of kilobytes of traffic (5120 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 5120
                                },
                                "keylife-type": {
                                    "type": "string",
                                    "description": "Keylife type.   \nseconds:Key life in seconds.   \nkbs:Key life in kilobytes.   \nboth:Key life both.",
                                    "enum": [
                                        "seconds",
                                        "kbs",
                                        "both"
                                    ]
                                },
                                "single-source": {
                                    "type": "string",
                                    "description": "Enable\/disable single source IP restriction.   \nenable:Only single source IP will be accepted.   \ndisable:Source IP range will be accepted.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "route-overlap": {
                                    "type": "string",
                                    "description": "Action for overlapping routes.   \nuse-old:Use the old route and do not add the new route.   \nuse-new:Delete the old route and add the new route.   \nallow:Allow overlapping routes.",
                                    "enum": [
                                        "use-old",
                                        "use-new",
                                        "allow"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "ESP encapsulation mode.   \ntunnel-mode:Use tunnel mode encapsulation.   \ntransport-mode:Use transport mode encapsulation.",
                                    "enum": [
                                        "tunnel-mode",
                                        "transport-mode"
                                    ]
                                },
                                "l2tp": {
                                    "type": "string",
                                    "description": "Enable\/disable L2TP over IPsec.   \nenable:Enable L2TP over IPsec.   \ndisable:Disable L2TP over IPsec.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "initiator-ts-narrow": {
                                    "type": "string",
                                    "description": "Enable\/disable traffic selector narrowing for IKEv2 initiator.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffserv": {
                                    "type": "string",
                                    "description": "Enable\/disable applying DSCP value to the IPsec tunnel outer IP header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffservcode": {
                                    "type": "string",
                                    "description": "DSCP value to be applied to the IPsec tunnel outer IP header."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Quick mode protocol selector (1 - 255 or 0 for all).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "src-name": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-name6": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-addr-type": {
                                    "type": "string",
                                    "description": "Local proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name"
                                    ]
                                },
                                "src-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID start."
                                },
                                "src-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 start."
                                },
                                "src-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID end."
                                },
                                "src-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 end."
                                },
                                "src-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID subnet."
                                },
                                "src-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 subnet."
                                },
                                "src-port": {
                                    "type": "integer",
                                    "description": "Quick mode source port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "dst-name": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-name6": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-addr-type": {
                                    "type": "string",
                                    "description": "Remote proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name"
                                    ]
                                },
                                "dst-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 start."
                                },
                                "dst-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 start."
                                },
                                "dst-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 end."
                                },
                                "dst-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 end."
                                },
                                "dst-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 subnet."
                                },
                                "dst-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 subnet."
                                },
                                "dst-port": {
                                    "type": "integer",
                                    "description": "Quick mode destination port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase2"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase2"
                ]
            }
        },
        "\/vpn.ipsec\/phase2": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "phase1name": {
                                    "type": "string",
                                    "description": "Phase 1 determines the options required for phase 2.",
                                    "maxLength": 35
                                },
                                "dhcp-ipsec": {
                                    "type": "string",
                                    "description": "Enable\/disable DHCP-IPsec.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "use-natip": {
                                    "type": "string",
                                    "description": "Enable to use the FortiGate public IP as the source selector when outbound NAT is used.   \nenable:Replace source selector with interface IP when using outbound NAT.   \ndisable:Do not modify source selector when using outbound NAT.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "selector-match": {
                                    "type": "string",
                                    "description": "Match type to use when comparing selectors.   \nexact:Match selectors exactly.   \nsubset:Match selectors by subset.   \nauto:Use subset or exact match depending on selector address type.",
                                    "enum": [
                                        "exact",
                                        "subset",
                                        "auto"
                                    ]
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase2 proposal.   \nnull-md5:null-md5   \nnull-sha1:null-sha1   \nnull-sha256:null-sha256   \nnull-sha384:null-sha384   \nnull-sha512:null-sha512   \ndes-null:des-null   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-null:3des-null   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-null:aes128-null   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm:aes128gcm   \naes192-null:aes192-null   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-null:aes256-null   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm:aes256gcm   \nchacha20poly1305:chacha20poly1305   \naria128-null:aria128-null   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-null:aria192-null   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-null:aria256-null   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-null:seed-null   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "null-md5",
                                        "null-sha1",
                                        "null-sha256",
                                        "null-sha384",
                                        "null-sha512",
                                        "des-null",
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-null",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-null",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm",
                                        "aes192-null",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-null",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm",
                                        "chacha20poly1305",
                                        "aria128-null",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-null",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-null",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-null",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "pfs": {
                                    "type": "string",
                                    "description": "Enable\/disable PFS feature.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv4-df": {
                                    "type": "string",
                                    "description": "Enable\/disable setting and resetting of IPv4 'Don't Fragment' bit.   \nenable:Set IPv4 DF.   \ndisable:Reset IPv4 DF.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "Phase2 DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "replay": {
                                    "type": "string",
                                    "description": "Enable\/disable replay detection.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keepalive": {
                                    "type": "string",
                                    "description": "Enable\/disable keep alive.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec SA auto-negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic route addition.   \nphase1:Add route according to phase1 add-route setting.   \nenable:Add route for remote proxy ID.   \ndisable:Do not add route for remote proxy ID.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copying of the DSCP field in the ESP header to the inner IP header.   \nphase1:Enable\/disable copying the DSCP in the ESP header to the inner IP Header according to the phase1 inbound_dscp_copy setting.   \nenable:Enable copy the DSCP in the ESP header to the inner IP Header.   \ndisable:Disable copy the DSCP in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keylifeseconds": {
                                    "type": "integer",
                                    "description": "Phase2 key life in time in seconds (120 - 172800).",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "keylifekbs": {
                                    "type": "integer",
                                    "description": "Phase2 key life in number of kilobytes of traffic (5120 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 5120
                                },
                                "keylife-type": {
                                    "type": "string",
                                    "description": "Keylife type.   \nseconds:Key life in seconds.   \nkbs:Key life in kilobytes.   \nboth:Key life both.",
                                    "enum": [
                                        "seconds",
                                        "kbs",
                                        "both"
                                    ]
                                },
                                "single-source": {
                                    "type": "string",
                                    "description": "Enable\/disable single source IP restriction.   \nenable:Only single source IP will be accepted.   \ndisable:Source IP range will be accepted.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "route-overlap": {
                                    "type": "string",
                                    "description": "Action for overlapping routes.   \nuse-old:Use the old route and do not add the new route.   \nuse-new:Delete the old route and add the new route.   \nallow:Allow overlapping routes.",
                                    "enum": [
                                        "use-old",
                                        "use-new",
                                        "allow"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "ESP encapsulation mode.   \ntunnel-mode:Use tunnel mode encapsulation.   \ntransport-mode:Use transport mode encapsulation.",
                                    "enum": [
                                        "tunnel-mode",
                                        "transport-mode"
                                    ]
                                },
                                "l2tp": {
                                    "type": "string",
                                    "description": "Enable\/disable L2TP over IPsec.   \nenable:Enable L2TP over IPsec.   \ndisable:Disable L2TP over IPsec.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "initiator-ts-narrow": {
                                    "type": "string",
                                    "description": "Enable\/disable traffic selector narrowing for IKEv2 initiator.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffserv": {
                                    "type": "string",
                                    "description": "Enable\/disable applying DSCP value to the IPsec tunnel outer IP header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffservcode": {
                                    "type": "string",
                                    "description": "DSCP value to be applied to the IPsec tunnel outer IP header."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Quick mode protocol selector (1 - 255 or 0 for all).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "src-name": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-name6": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-addr-type": {
                                    "type": "string",
                                    "description": "Local proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name"
                                    ]
                                },
                                "src-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID start."
                                },
                                "src-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 start."
                                },
                                "src-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID end."
                                },
                                "src-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 end."
                                },
                                "src-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID subnet."
                                },
                                "src-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 subnet."
                                },
                                "src-port": {
                                    "type": "integer",
                                    "description": "Quick mode source port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "dst-name": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-name6": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-addr-type": {
                                    "type": "string",
                                    "description": "Remote proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name"
                                    ]
                                },
                                "dst-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 start."
                                },
                                "dst-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 start."
                                },
                                "dst-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 end."
                                },
                                "dst-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 end."
                                },
                                "dst-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 subnet."
                                },
                                "dst-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 subnet."
                                },
                                "dst-port": {
                                    "type": "integer",
                                    "description": "Quick mode destination port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase2"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "phase1name": {
                                    "type": "string",
                                    "description": "Phase 1 determines the options required for phase 2.",
                                    "maxLength": 35
                                },
                                "dhcp-ipsec": {
                                    "type": "string",
                                    "description": "Enable\/disable DHCP-IPsec.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "use-natip": {
                                    "type": "string",
                                    "description": "Enable to use the FortiGate public IP as the source selector when outbound NAT is used.   \nenable:Replace source selector with interface IP when using outbound NAT.   \ndisable:Do not modify source selector when using outbound NAT.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "selector-match": {
                                    "type": "string",
                                    "description": "Match type to use when comparing selectors.   \nexact:Match selectors exactly.   \nsubset:Match selectors by subset.   \nauto:Use subset or exact match depending on selector address type.",
                                    "enum": [
                                        "exact",
                                        "subset",
                                        "auto"
                                    ]
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase2 proposal.   \nnull-md5:null-md5   \nnull-sha1:null-sha1   \nnull-sha256:null-sha256   \nnull-sha384:null-sha384   \nnull-sha512:null-sha512   \ndes-null:des-null   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-null:3des-null   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-null:aes128-null   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm:aes128gcm   \naes192-null:aes192-null   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-null:aes256-null   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm:aes256gcm   \nchacha20poly1305:chacha20poly1305   \naria128-null:aria128-null   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-null:aria192-null   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-null:aria256-null   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-null:seed-null   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "null-md5",
                                        "null-sha1",
                                        "null-sha256",
                                        "null-sha384",
                                        "null-sha512",
                                        "des-null",
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-null",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-null",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm",
                                        "aes192-null",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-null",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm",
                                        "chacha20poly1305",
                                        "aria128-null",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-null",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-null",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-null",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "pfs": {
                                    "type": "string",
                                    "description": "Enable\/disable PFS feature.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv4-df": {
                                    "type": "string",
                                    "description": "Enable\/disable setting and resetting of IPv4 'Don't Fragment' bit.   \nenable:Set IPv4 DF.   \ndisable:Reset IPv4 DF.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "Phase2 DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "replay": {
                                    "type": "string",
                                    "description": "Enable\/disable replay detection.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keepalive": {
                                    "type": "string",
                                    "description": "Enable\/disable keep alive.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec SA auto-negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic route addition.   \nphase1:Add route according to phase1 add-route setting.   \nenable:Add route for remote proxy ID.   \ndisable:Do not add route for remote proxy ID.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copying of the DSCP field in the ESP header to the inner IP header.   \nphase1:Enable\/disable copying the DSCP in the ESP header to the inner IP Header according to the phase1 inbound_dscp_copy setting.   \nenable:Enable copy the DSCP in the ESP header to the inner IP Header.   \ndisable:Disable copy the DSCP in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keylifeseconds": {
                                    "type": "integer",
                                    "description": "Phase2 key life in time in seconds (120 - 172800).",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "keylifekbs": {
                                    "type": "integer",
                                    "description": "Phase2 key life in number of kilobytes of traffic (5120 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 5120
                                },
                                "keylife-type": {
                                    "type": "string",
                                    "description": "Keylife type.   \nseconds:Key life in seconds.   \nkbs:Key life in kilobytes.   \nboth:Key life both.",
                                    "enum": [
                                        "seconds",
                                        "kbs",
                                        "both"
                                    ]
                                },
                                "single-source": {
                                    "type": "string",
                                    "description": "Enable\/disable single source IP restriction.   \nenable:Only single source IP will be accepted.   \ndisable:Source IP range will be accepted.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "route-overlap": {
                                    "type": "string",
                                    "description": "Action for overlapping routes.   \nuse-old:Use the old route and do not add the new route.   \nuse-new:Delete the old route and add the new route.   \nallow:Allow overlapping routes.",
                                    "enum": [
                                        "use-old",
                                        "use-new",
                                        "allow"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "ESP encapsulation mode.   \ntunnel-mode:Use tunnel mode encapsulation.   \ntransport-mode:Use transport mode encapsulation.",
                                    "enum": [
                                        "tunnel-mode",
                                        "transport-mode"
                                    ]
                                },
                                "l2tp": {
                                    "type": "string",
                                    "description": "Enable\/disable L2TP over IPsec.   \nenable:Enable L2TP over IPsec.   \ndisable:Disable L2TP over IPsec.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "initiator-ts-narrow": {
                                    "type": "string",
                                    "description": "Enable\/disable traffic selector narrowing for IKEv2 initiator.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffserv": {
                                    "type": "string",
                                    "description": "Enable\/disable applying DSCP value to the IPsec tunnel outer IP header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffservcode": {
                                    "type": "string",
                                    "description": "DSCP value to be applied to the IPsec tunnel outer IP header."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Quick mode protocol selector (1 - 255 or 0 for all).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "src-name": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-name6": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-addr-type": {
                                    "type": "string",
                                    "description": "Local proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name"
                                    ]
                                },
                                "src-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID start."
                                },
                                "src-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 start."
                                },
                                "src-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID end."
                                },
                                "src-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 end."
                                },
                                "src-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID subnet."
                                },
                                "src-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 subnet."
                                },
                                "src-port": {
                                    "type": "integer",
                                    "description": "Quick mode source port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "dst-name": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-name6": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-addr-type": {
                                    "type": "string",
                                    "description": "Remote proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name"
                                    ]
                                },
                                "dst-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 start."
                                },
                                "dst-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 start."
                                },
                                "dst-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 end."
                                },
                                "dst-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 end."
                                },
                                "dst-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 subnet."
                                },
                                "dst-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 subnet."
                                },
                                "dst-port": {
                                    "type": "integer",
                                    "description": "Quick mode destination port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase2"
                ]
            }
        },
        "\/vpn.ipsec\/phase2-interface\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "phase1name": {
                                    "type": "string",
                                    "description": "Phase 1 determines the options required for phase 2.",
                                    "maxLength": 15
                                },
                                "dhcp-ipsec": {
                                    "type": "string",
                                    "description": "Enable\/disable DHCP-IPsec.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase2 proposal.   \nnull-md5:null-md5   \nnull-sha1:null-sha1   \nnull-sha256:null-sha256   \nnull-sha384:null-sha384   \nnull-sha512:null-sha512   \ndes-null:des-null   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-null:3des-null   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-null:aes128-null   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm:aes128gcm   \naes192-null:aes192-null   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-null:aes256-null   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm:aes256gcm   \nchacha20poly1305:chacha20poly1305   \naria128-null:aria128-null   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-null:aria192-null   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-null:aria256-null   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-null:seed-null   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "null-md5",
                                        "null-sha1",
                                        "null-sha256",
                                        "null-sha384",
                                        "null-sha512",
                                        "des-null",
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-null",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-null",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm",
                                        "aes192-null",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-null",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm",
                                        "chacha20poly1305",
                                        "aria128-null",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-null",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-null",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-null",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "pfs": {
                                    "type": "string",
                                    "description": "Enable\/disable PFS feature.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv4-df": {
                                    "type": "string",
                                    "description": "Enable\/disable setting and resetting of IPv4 'Don't Fragment' bit.   \nenable:Set IPv4 DF.   \ndisable:Reset IPv4 DF.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "Phase2 DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "replay": {
                                    "type": "string",
                                    "description": "Enable\/disable replay detection.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keepalive": {
                                    "type": "string",
                                    "description": "Enable\/disable keep alive.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec SA auto-negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic route addition.   \nphase1:Add route according to phase1 add-route setting.   \nenable:Add route for remote proxy ID.   \ndisable:Do not add route for remote proxy ID.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copying of the DSCP field in the ESP header to the inner IP header.   \nphase1:Enable\/disable copying the DSCP in the ESP header to the inner IP Header according to the phase1 inbound_dscp_copy setting.   \nenable:Enable copy the DSCP in the ESP header to the inner IP Header.   \ndisable:Disable copy the DSCP in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-sender": {
                                    "type": "string",
                                    "description": "Enable\/disable sending short-cut messages.   \nphase1:Send short-cut messages according to the phase1 auto-discovery-sender setting.   \nenable:Enable sending auto-discovery short-cut messages.   \ndisable:Disable sending auto-discovery short-cut messages.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-forwarder": {
                                    "type": "string",
                                    "description": "Enable\/disable forwarding short-cut messages.   \nphase1:Forward short-cut messages according to the phase1 auto-discovery-forwarder setting.   \nenable:Enable forwarding auto-discovery short-cut messages.   \ndisable:Disable forwarding auto-discovery short-cut messages.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keylifeseconds": {
                                    "type": "integer",
                                    "description": "Phase2 key life in time in seconds (120 - 172800).",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "keylifekbs": {
                                    "type": "integer",
                                    "description": "Phase2 key life in number of kilobytes of traffic (5120 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 5120
                                },
                                "keylife-type": {
                                    "type": "string",
                                    "description": "Keylife type.   \nseconds:Key life in seconds.   \nkbs:Key life in kilobytes.   \nboth:Key life both.",
                                    "enum": [
                                        "seconds",
                                        "kbs",
                                        "both"
                                    ]
                                },
                                "single-source": {
                                    "type": "string",
                                    "description": "Enable\/disable single source IP restriction.   \nenable:Only single source IP will be accepted.   \ndisable:Source IP range will be accepted.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "route-overlap": {
                                    "type": "string",
                                    "description": "Action for overlapping routes.   \nuse-old:Use the old route and do not add the new route.   \nuse-new:Delete the old route and add the new route.   \nallow:Allow overlapping routes.",
                                    "enum": [
                                        "use-old",
                                        "use-new",
                                        "allow"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "ESP encapsulation mode.   \ntunnel-mode:Use tunnel mode encapsulation.   \ntransport-mode:Use transport mode encapsulation.",
                                    "enum": [
                                        "tunnel-mode",
                                        "transport-mode"
                                    ]
                                },
                                "l2tp": {
                                    "type": "string",
                                    "description": "Enable\/disable L2TP over IPsec.   \nenable:Enable L2TP over IPsec.   \ndisable:Disable L2TP over IPsec.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "initiator-ts-narrow": {
                                    "type": "string",
                                    "description": "Enable\/disable traffic selector narrowing for IKEv2 initiator.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffserv": {
                                    "type": "string",
                                    "description": "Enable\/disable applying DSCP value to the IPsec tunnel outer IP header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffservcode": {
                                    "type": "string",
                                    "description": "DSCP value to be applied to the IPsec tunnel outer IP header."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Quick mode protocol selector (1 - 255 or 0 for all).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "src-name": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-name6": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-addr-type": {
                                    "type": "string",
                                    "description": "Local proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.   \nsubnet6:IPv6 subnet.   \nrange6:IPv6 range.   \nip6:IPv6 IP.   \nname6:IPv6 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name",
                                        "subnet6",
                                        "range6",
                                        "ip6",
                                        "name6"
                                    ]
                                },
                                "src-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID start."
                                },
                                "src-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 start."
                                },
                                "src-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID end."
                                },
                                "src-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 end."
                                },
                                "src-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID subnet."
                                },
                                "src-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 subnet."
                                },
                                "src-port": {
                                    "type": "integer",
                                    "description": "Quick mode source port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "dst-name": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-name6": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-addr-type": {
                                    "type": "string",
                                    "description": "Remote proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.   \nsubnet6:IPv6 subnet.   \nrange6:IPv6 range.   \nip6:IPv6 IP.   \nname6:IPv6 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name",
                                        "subnet6",
                                        "range6",
                                        "ip6",
                                        "name6"
                                    ]
                                },
                                "dst-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 start."
                                },
                                "dst-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 start."
                                },
                                "dst-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 end."
                                },
                                "dst-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 end."
                                },
                                "dst-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 subnet."
                                },
                                "dst-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 subnet."
                                },
                                "dst-port": {
                                    "type": "integer",
                                    "description": "Quick mode destination port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase2-interface"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "phase1name": {
                                    "type": "string",
                                    "description": "Phase 1 determines the options required for phase 2.",
                                    "maxLength": 15
                                },
                                "dhcp-ipsec": {
                                    "type": "string",
                                    "description": "Enable\/disable DHCP-IPsec.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase2 proposal.   \nnull-md5:null-md5   \nnull-sha1:null-sha1   \nnull-sha256:null-sha256   \nnull-sha384:null-sha384   \nnull-sha512:null-sha512   \ndes-null:des-null   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-null:3des-null   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-null:aes128-null   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm:aes128gcm   \naes192-null:aes192-null   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-null:aes256-null   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm:aes256gcm   \nchacha20poly1305:chacha20poly1305   \naria128-null:aria128-null   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-null:aria192-null   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-null:aria256-null   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-null:seed-null   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "null-md5",
                                        "null-sha1",
                                        "null-sha256",
                                        "null-sha384",
                                        "null-sha512",
                                        "des-null",
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-null",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-null",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm",
                                        "aes192-null",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-null",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm",
                                        "chacha20poly1305",
                                        "aria128-null",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-null",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-null",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-null",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "pfs": {
                                    "type": "string",
                                    "description": "Enable\/disable PFS feature.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv4-df": {
                                    "type": "string",
                                    "description": "Enable\/disable setting and resetting of IPv4 'Don't Fragment' bit.   \nenable:Set IPv4 DF.   \ndisable:Reset IPv4 DF.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "Phase2 DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "replay": {
                                    "type": "string",
                                    "description": "Enable\/disable replay detection.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keepalive": {
                                    "type": "string",
                                    "description": "Enable\/disable keep alive.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec SA auto-negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic route addition.   \nphase1:Add route according to phase1 add-route setting.   \nenable:Add route for remote proxy ID.   \ndisable:Do not add route for remote proxy ID.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copying of the DSCP field in the ESP header to the inner IP header.   \nphase1:Enable\/disable copying the DSCP in the ESP header to the inner IP Header according to the phase1 inbound_dscp_copy setting.   \nenable:Enable copy the DSCP in the ESP header to the inner IP Header.   \ndisable:Disable copy the DSCP in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-sender": {
                                    "type": "string",
                                    "description": "Enable\/disable sending short-cut messages.   \nphase1:Send short-cut messages according to the phase1 auto-discovery-sender setting.   \nenable:Enable sending auto-discovery short-cut messages.   \ndisable:Disable sending auto-discovery short-cut messages.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-forwarder": {
                                    "type": "string",
                                    "description": "Enable\/disable forwarding short-cut messages.   \nphase1:Forward short-cut messages according to the phase1 auto-discovery-forwarder setting.   \nenable:Enable forwarding auto-discovery short-cut messages.   \ndisable:Disable forwarding auto-discovery short-cut messages.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keylifeseconds": {
                                    "type": "integer",
                                    "description": "Phase2 key life in time in seconds (120 - 172800).",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "keylifekbs": {
                                    "type": "integer",
                                    "description": "Phase2 key life in number of kilobytes of traffic (5120 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 5120
                                },
                                "keylife-type": {
                                    "type": "string",
                                    "description": "Keylife type.   \nseconds:Key life in seconds.   \nkbs:Key life in kilobytes.   \nboth:Key life both.",
                                    "enum": [
                                        "seconds",
                                        "kbs",
                                        "both"
                                    ]
                                },
                                "single-source": {
                                    "type": "string",
                                    "description": "Enable\/disable single source IP restriction.   \nenable:Only single source IP will be accepted.   \ndisable:Source IP range will be accepted.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "route-overlap": {
                                    "type": "string",
                                    "description": "Action for overlapping routes.   \nuse-old:Use the old route and do not add the new route.   \nuse-new:Delete the old route and add the new route.   \nallow:Allow overlapping routes.",
                                    "enum": [
                                        "use-old",
                                        "use-new",
                                        "allow"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "ESP encapsulation mode.   \ntunnel-mode:Use tunnel mode encapsulation.   \ntransport-mode:Use transport mode encapsulation.",
                                    "enum": [
                                        "tunnel-mode",
                                        "transport-mode"
                                    ]
                                },
                                "l2tp": {
                                    "type": "string",
                                    "description": "Enable\/disable L2TP over IPsec.   \nenable:Enable L2TP over IPsec.   \ndisable:Disable L2TP over IPsec.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "initiator-ts-narrow": {
                                    "type": "string",
                                    "description": "Enable\/disable traffic selector narrowing for IKEv2 initiator.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffserv": {
                                    "type": "string",
                                    "description": "Enable\/disable applying DSCP value to the IPsec tunnel outer IP header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffservcode": {
                                    "type": "string",
                                    "description": "DSCP value to be applied to the IPsec tunnel outer IP header."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Quick mode protocol selector (1 - 255 or 0 for all).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "src-name": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-name6": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-addr-type": {
                                    "type": "string",
                                    "description": "Local proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.   \nsubnet6:IPv6 subnet.   \nrange6:IPv6 range.   \nip6:IPv6 IP.   \nname6:IPv6 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name",
                                        "subnet6",
                                        "range6",
                                        "ip6",
                                        "name6"
                                    ]
                                },
                                "src-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID start."
                                },
                                "src-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 start."
                                },
                                "src-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID end."
                                },
                                "src-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 end."
                                },
                                "src-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID subnet."
                                },
                                "src-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 subnet."
                                },
                                "src-port": {
                                    "type": "integer",
                                    "description": "Quick mode source port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "dst-name": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-name6": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-addr-type": {
                                    "type": "string",
                                    "description": "Remote proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.   \nsubnet6:IPv6 subnet.   \nrange6:IPv6 range.   \nip6:IPv6 IP.   \nname6:IPv6 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name",
                                        "subnet6",
                                        "range6",
                                        "ip6",
                                        "name6"
                                    ]
                                },
                                "dst-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 start."
                                },
                                "dst-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 start."
                                },
                                "dst-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 end."
                                },
                                "dst-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 end."
                                },
                                "dst-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 subnet."
                                },
                                "dst-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 subnet."
                                },
                                "dst-port": {
                                    "type": "integer",
                                    "description": "Quick mode destination port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase2-interface"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase2-interface"
                ]
            }
        },
        "\/vpn.ipsec\/phase2-interface": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "phase1name": {
                                    "type": "string",
                                    "description": "Phase 1 determines the options required for phase 2.",
                                    "maxLength": 15
                                },
                                "dhcp-ipsec": {
                                    "type": "string",
                                    "description": "Enable\/disable DHCP-IPsec.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase2 proposal.   \nnull-md5:null-md5   \nnull-sha1:null-sha1   \nnull-sha256:null-sha256   \nnull-sha384:null-sha384   \nnull-sha512:null-sha512   \ndes-null:des-null   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-null:3des-null   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-null:aes128-null   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm:aes128gcm   \naes192-null:aes192-null   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-null:aes256-null   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm:aes256gcm   \nchacha20poly1305:chacha20poly1305   \naria128-null:aria128-null   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-null:aria192-null   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-null:aria256-null   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-null:seed-null   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "null-md5",
                                        "null-sha1",
                                        "null-sha256",
                                        "null-sha384",
                                        "null-sha512",
                                        "des-null",
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-null",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-null",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm",
                                        "aes192-null",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-null",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm",
                                        "chacha20poly1305",
                                        "aria128-null",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-null",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-null",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-null",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "pfs": {
                                    "type": "string",
                                    "description": "Enable\/disable PFS feature.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv4-df": {
                                    "type": "string",
                                    "description": "Enable\/disable setting and resetting of IPv4 'Don't Fragment' bit.   \nenable:Set IPv4 DF.   \ndisable:Reset IPv4 DF.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "Phase2 DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "replay": {
                                    "type": "string",
                                    "description": "Enable\/disable replay detection.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keepalive": {
                                    "type": "string",
                                    "description": "Enable\/disable keep alive.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec SA auto-negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic route addition.   \nphase1:Add route according to phase1 add-route setting.   \nenable:Add route for remote proxy ID.   \ndisable:Do not add route for remote proxy ID.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copying of the DSCP field in the ESP header to the inner IP header.   \nphase1:Enable\/disable copying the DSCP in the ESP header to the inner IP Header according to the phase1 inbound_dscp_copy setting.   \nenable:Enable copy the DSCP in the ESP header to the inner IP Header.   \ndisable:Disable copy the DSCP in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-sender": {
                                    "type": "string",
                                    "description": "Enable\/disable sending short-cut messages.   \nphase1:Send short-cut messages according to the phase1 auto-discovery-sender setting.   \nenable:Enable sending auto-discovery short-cut messages.   \ndisable:Disable sending auto-discovery short-cut messages.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-forwarder": {
                                    "type": "string",
                                    "description": "Enable\/disable forwarding short-cut messages.   \nphase1:Forward short-cut messages according to the phase1 auto-discovery-forwarder setting.   \nenable:Enable forwarding auto-discovery short-cut messages.   \ndisable:Disable forwarding auto-discovery short-cut messages.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keylifeseconds": {
                                    "type": "integer",
                                    "description": "Phase2 key life in time in seconds (120 - 172800).",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "keylifekbs": {
                                    "type": "integer",
                                    "description": "Phase2 key life in number of kilobytes of traffic (5120 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 5120
                                },
                                "keylife-type": {
                                    "type": "string",
                                    "description": "Keylife type.   \nseconds:Key life in seconds.   \nkbs:Key life in kilobytes.   \nboth:Key life both.",
                                    "enum": [
                                        "seconds",
                                        "kbs",
                                        "both"
                                    ]
                                },
                                "single-source": {
                                    "type": "string",
                                    "description": "Enable\/disable single source IP restriction.   \nenable:Only single source IP will be accepted.   \ndisable:Source IP range will be accepted.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "route-overlap": {
                                    "type": "string",
                                    "description": "Action for overlapping routes.   \nuse-old:Use the old route and do not add the new route.   \nuse-new:Delete the old route and add the new route.   \nallow:Allow overlapping routes.",
                                    "enum": [
                                        "use-old",
                                        "use-new",
                                        "allow"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "ESP encapsulation mode.   \ntunnel-mode:Use tunnel mode encapsulation.   \ntransport-mode:Use transport mode encapsulation.",
                                    "enum": [
                                        "tunnel-mode",
                                        "transport-mode"
                                    ]
                                },
                                "l2tp": {
                                    "type": "string",
                                    "description": "Enable\/disable L2TP over IPsec.   \nenable:Enable L2TP over IPsec.   \ndisable:Disable L2TP over IPsec.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "initiator-ts-narrow": {
                                    "type": "string",
                                    "description": "Enable\/disable traffic selector narrowing for IKEv2 initiator.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffserv": {
                                    "type": "string",
                                    "description": "Enable\/disable applying DSCP value to the IPsec tunnel outer IP header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffservcode": {
                                    "type": "string",
                                    "description": "DSCP value to be applied to the IPsec tunnel outer IP header."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Quick mode protocol selector (1 - 255 or 0 for all).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "src-name": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-name6": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-addr-type": {
                                    "type": "string",
                                    "description": "Local proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.   \nsubnet6:IPv6 subnet.   \nrange6:IPv6 range.   \nip6:IPv6 IP.   \nname6:IPv6 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name",
                                        "subnet6",
                                        "range6",
                                        "ip6",
                                        "name6"
                                    ]
                                },
                                "src-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID start."
                                },
                                "src-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 start."
                                },
                                "src-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID end."
                                },
                                "src-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 end."
                                },
                                "src-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID subnet."
                                },
                                "src-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 subnet."
                                },
                                "src-port": {
                                    "type": "integer",
                                    "description": "Quick mode source port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "dst-name": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-name6": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-addr-type": {
                                    "type": "string",
                                    "description": "Remote proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.   \nsubnet6:IPv6 subnet.   \nrange6:IPv6 range.   \nip6:IPv6 IP.   \nname6:IPv6 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name",
                                        "subnet6",
                                        "range6",
                                        "ip6",
                                        "name6"
                                    ]
                                },
                                "dst-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 start."
                                },
                                "dst-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 start."
                                },
                                "dst-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 end."
                                },
                                "dst-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 end."
                                },
                                "dst-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 subnet."
                                },
                                "dst-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 subnet."
                                },
                                "dst-port": {
                                    "type": "integer",
                                    "description": "Quick mode destination port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase2-interface"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "IPsec tunnel name.",
                                    "maxLength": 35
                                },
                                "phase1name": {
                                    "type": "string",
                                    "description": "Phase 1 determines the options required for phase 2.",
                                    "maxLength": 15
                                },
                                "dhcp-ipsec": {
                                    "type": "string",
                                    "description": "Enable\/disable DHCP-IPsec.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "proposal": {
                                    "type": "string",
                                    "description": "Phase2 proposal.   \nnull-md5:null-md5   \nnull-sha1:null-sha1   \nnull-sha256:null-sha256   \nnull-sha384:null-sha384   \nnull-sha512:null-sha512   \ndes-null:des-null   \ndes-md5:des-md5   \ndes-sha1:des-sha1   \ndes-sha256:des-sha256   \ndes-sha384:des-sha384   \ndes-sha512:des-sha512   \n3des-null:3des-null   \n3des-md5:3des-md5   \n3des-sha1:3des-sha1   \n3des-sha256:3des-sha256   \n3des-sha384:3des-sha384   \n3des-sha512:3des-sha512   \naes128-null:aes128-null   \naes128-md5:aes128-md5   \naes128-sha1:aes128-sha1   \naes128-sha256:aes128-sha256   \naes128-sha384:aes128-sha384   \naes128-sha512:aes128-sha512   \naes128gcm:aes128gcm   \naes192-null:aes192-null   \naes192-md5:aes192-md5   \naes192-sha1:aes192-sha1   \naes192-sha256:aes192-sha256   \naes192-sha384:aes192-sha384   \naes192-sha512:aes192-sha512   \naes256-null:aes256-null   \naes256-md5:aes256-md5   \naes256-sha1:aes256-sha1   \naes256-sha256:aes256-sha256   \naes256-sha384:aes256-sha384   \naes256-sha512:aes256-sha512   \naes256gcm:aes256gcm   \nchacha20poly1305:chacha20poly1305   \naria128-null:aria128-null   \naria128-md5:aria128-md5   \naria128-sha1:aria128-sha1   \naria128-sha256:aria128-sha256   \naria128-sha384:aria128-sha384   \naria128-sha512:aria128-sha512   \naria192-null:aria192-null   \naria192-md5:aria192-md5   \naria192-sha1:aria192-sha1   \naria192-sha256:aria192-sha256   \naria192-sha384:aria192-sha384   \naria192-sha512:aria192-sha512   \naria256-null:aria256-null   \naria256-md5:aria256-md5   \naria256-sha1:aria256-sha1   \naria256-sha256:aria256-sha256   \naria256-sha384:aria256-sha384   \naria256-sha512:aria256-sha512   \nseed-null:seed-null   \nseed-md5:seed-md5   \nseed-sha1:seed-sha1   \nseed-sha256:seed-sha256   \nseed-sha384:seed-sha384   \nseed-sha512:seed-sha512",
                                    "enum": [
                                        "null-md5",
                                        "null-sha1",
                                        "null-sha256",
                                        "null-sha384",
                                        "null-sha512",
                                        "des-null",
                                        "des-md5",
                                        "des-sha1",
                                        "des-sha256",
                                        "des-sha384",
                                        "des-sha512",
                                        "3des-null",
                                        "3des-md5",
                                        "3des-sha1",
                                        "3des-sha256",
                                        "3des-sha384",
                                        "3des-sha512",
                                        "aes128-null",
                                        "aes128-md5",
                                        "aes128-sha1",
                                        "aes128-sha256",
                                        "aes128-sha384",
                                        "aes128-sha512",
                                        "aes128gcm",
                                        "aes192-null",
                                        "aes192-md5",
                                        "aes192-sha1",
                                        "aes192-sha256",
                                        "aes192-sha384",
                                        "aes192-sha512",
                                        "aes256-null",
                                        "aes256-md5",
                                        "aes256-sha1",
                                        "aes256-sha256",
                                        "aes256-sha384",
                                        "aes256-sha512",
                                        "aes256gcm",
                                        "chacha20poly1305",
                                        "aria128-null",
                                        "aria128-md5",
                                        "aria128-sha1",
                                        "aria128-sha256",
                                        "aria128-sha384",
                                        "aria128-sha512",
                                        "aria192-null",
                                        "aria192-md5",
                                        "aria192-sha1",
                                        "aria192-sha256",
                                        "aria192-sha384",
                                        "aria192-sha512",
                                        "aria256-null",
                                        "aria256-md5",
                                        "aria256-sha1",
                                        "aria256-sha256",
                                        "aria256-sha384",
                                        "aria256-sha512",
                                        "seed-null",
                                        "seed-md5",
                                        "seed-sha1",
                                        "seed-sha256",
                                        "seed-sha384",
                                        "seed-sha512"
                                    ]
                                },
                                "pfs": {
                                    "type": "string",
                                    "description": "Enable\/disable PFS feature.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv4-df": {
                                    "type": "string",
                                    "description": "Enable\/disable setting and resetting of IPv4 'Don't Fragment' bit.   \nenable:Set IPv4 DF.   \ndisable:Reset IPv4 DF.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dhgrp": {
                                    "type": "string",
                                    "description": "Phase2 DH group.   \n1:DH Group 1.   \n2:DH Group 2.   \n5:DH Group 5.   \n14:DH Group 14.   \n15:DH Group 15.   \n16:DH Group 16.   \n17:DH Group 17.   \n18:DH Group 18.   \n19:DH Group 19.   \n20:DH Group 20.   \n21:DH Group 21.   \n27:DH Group 27.   \n28:DH Group 28.   \n29:DH Group 29.   \n30:DH Group 30.   \n31:DH Group 31.   \n32:DH Group 32.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "5",
                                        "14",
                                        "15",
                                        "16",
                                        "17",
                                        "18",
                                        "19",
                                        "20",
                                        "21",
                                        "27",
                                        "28",
                                        "29",
                                        "30",
                                        "31",
                                        "32"
                                    ]
                                },
                                "replay": {
                                    "type": "string",
                                    "description": "Enable\/disable replay detection.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keepalive": {
                                    "type": "string",
                                    "description": "Enable\/disable keep alive.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-negotiate": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec SA auto-negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "add-route": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic route addition.   \nphase1:Add route according to phase1 add-route setting.   \nenable:Add route for remote proxy ID.   \ndisable:Do not add route for remote proxy ID.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "inbound-dscp-copy": {
                                    "type": "string",
                                    "description": "Enable\/disable copying of the DSCP field in the ESP header to the inner IP header.   \nphase1:Enable\/disable copying the DSCP in the ESP header to the inner IP Header according to the phase1 inbound_dscp_copy setting.   \nenable:Enable copy the DSCP in the ESP header to the inner IP Header.   \ndisable:Disable copy the DSCP in the ESP header to the inner IP Header.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-sender": {
                                    "type": "string",
                                    "description": "Enable\/disable sending short-cut messages.   \nphase1:Send short-cut messages according to the phase1 auto-discovery-sender setting.   \nenable:Enable sending auto-discovery short-cut messages.   \ndisable:Disable sending auto-discovery short-cut messages.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-discovery-forwarder": {
                                    "type": "string",
                                    "description": "Enable\/disable forwarding short-cut messages.   \nphase1:Forward short-cut messages according to the phase1 auto-discovery-forwarder setting.   \nenable:Enable forwarding auto-discovery short-cut messages.   \ndisable:Disable forwarding auto-discovery short-cut messages.",
                                    "enum": [
                                        "phase1",
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keylifeseconds": {
                                    "type": "integer",
                                    "description": "Phase2 key life in time in seconds (120 - 172800).",
                                    "maximum": 172800,
                                    "minimum": 120
                                },
                                "keylifekbs": {
                                    "type": "integer",
                                    "description": "Phase2 key life in number of kilobytes of traffic (5120 - 4294967295).",
                                    "maximum": 4294967295,
                                    "minimum": 5120
                                },
                                "keylife-type": {
                                    "type": "string",
                                    "description": "Keylife type.   \nseconds:Key life in seconds.   \nkbs:Key life in kilobytes.   \nboth:Key life both.",
                                    "enum": [
                                        "seconds",
                                        "kbs",
                                        "both"
                                    ]
                                },
                                "single-source": {
                                    "type": "string",
                                    "description": "Enable\/disable single source IP restriction.   \nenable:Only single source IP will be accepted.   \ndisable:Source IP range will be accepted.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "route-overlap": {
                                    "type": "string",
                                    "description": "Action for overlapping routes.   \nuse-old:Use the old route and do not add the new route.   \nuse-new:Delete the old route and add the new route.   \nallow:Allow overlapping routes.",
                                    "enum": [
                                        "use-old",
                                        "use-new",
                                        "allow"
                                    ]
                                },
                                "encapsulation": {
                                    "type": "string",
                                    "description": "ESP encapsulation mode.   \ntunnel-mode:Use tunnel mode encapsulation.   \ntransport-mode:Use transport mode encapsulation.",
                                    "enum": [
                                        "tunnel-mode",
                                        "transport-mode"
                                    ]
                                },
                                "l2tp": {
                                    "type": "string",
                                    "description": "Enable\/disable L2TP over IPsec.   \nenable:Enable L2TP over IPsec.   \ndisable:Disable L2TP over IPsec.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "initiator-ts-narrow": {
                                    "type": "string",
                                    "description": "Enable\/disable traffic selector narrowing for IKEv2 initiator.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffserv": {
                                    "type": "string",
                                    "description": "Enable\/disable applying DSCP value to the IPsec tunnel outer IP header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "diffservcode": {
                                    "type": "string",
                                    "description": "DSCP value to be applied to the IPsec tunnel outer IP header."
                                },
                                "protocol": {
                                    "type": "integer",
                                    "description": "Quick mode protocol selector (1 - 255 or 0 for all).",
                                    "maximum": 255,
                                    "minimum": 0
                                },
                                "src-name": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-name6": {
                                    "type": "string",
                                    "description": "Local proxy ID name.",
                                    "maxLength": 79
                                },
                                "src-addr-type": {
                                    "type": "string",
                                    "description": "Local proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.   \nsubnet6:IPv6 subnet.   \nrange6:IPv6 range.   \nip6:IPv6 IP.   \nname6:IPv6 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name",
                                        "subnet6",
                                        "range6",
                                        "ip6",
                                        "name6"
                                    ]
                                },
                                "src-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID start."
                                },
                                "src-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 start."
                                },
                                "src-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID end."
                                },
                                "src-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 end."
                                },
                                "src-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local proxy ID subnet."
                                },
                                "src-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Local proxy ID IPv6 subnet."
                                },
                                "src-port": {
                                    "type": "integer",
                                    "description": "Quick mode source port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "dst-name": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-name6": {
                                    "type": "string",
                                    "description": "Remote proxy ID name.",
                                    "maxLength": 79
                                },
                                "dst-addr-type": {
                                    "type": "string",
                                    "description": "Remote proxy ID type.   \nsubnet:IPv4 subnet.   \nrange:IPv4 range.   \nip:IPv4 IP.   \nname:IPv4 firewall address or group name.   \nsubnet6:IPv6 subnet.   \nrange6:IPv6 range.   \nip6:IPv6 IP.   \nname6:IPv6 firewall address or group name.",
                                    "enum": [
                                        "subnet",
                                        "range",
                                        "ip",
                                        "name",
                                        "subnet6",
                                        "range6",
                                        "ip6",
                                        "name6"
                                    ]
                                },
                                "dst-start-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 start."
                                },
                                "dst-start-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 start."
                                },
                                "dst-end-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 end."
                                },
                                "dst-end-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 end."
                                },
                                "dst-subnet": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Remote proxy ID IPv4 subnet."
                                },
                                "dst-subnet6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Remote proxy ID IPv6 subnet."
                                },
                                "dst-port": {
                                    "type": "integer",
                                    "description": "Quick mode destination port (1 - 65535 or 0 for all).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ipsec\/phase2-interface"
                ]
            }
        },
        "\/vpn.ssl.web\/host-check-software\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 63
                                },
                                "os-type": {
                                    "type": "string",
                                    "description": "OS type.   \nwindows:Microsoft Windows operating system.   \nmacos:Apple MacOS operating system.",
                                    "enum": [
                                        "windows",
                                        "macos"
                                    ]
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type.   \nav:AntiVirus.   \nfw:Firewall.",
                                    "enum": [
                                        "av",
                                        "fw"
                                    ]
                                },
                                "version": {
                                    "type": "string",
                                    "description": "Version.",
                                    "maxLength": 35
                                },
                                "guid": {
                                    "type": "string",
                                    "description": "Globally unique ID."
                                },
                                "check-item-list": {
                                    "description": "Check item list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID (0 - 4294967295).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action.   \nrequire:Require.   \ndeny:Deny.",
                                                "enum": [
                                                    "require",
                                                    "deny"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Type.   \nfile:File.   \nregistry:Registry.   \nprocess:Process.",
                                                "enum": [
                                                    "file",
                                                    "registry",
                                                    "process"
                                                ]
                                            },
                                            "target": {
                                                "type": "string",
                                                "description": "Target.",
                                                "maxLength": 255
                                            },
                                            "version": {
                                                "type": "string",
                                                "description": "Version.",
                                                "maxLength": 35
                                            },
                                            "md5s": {
                                                "description": "MD5 checksum.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "Hex string of MD5 checksum.",
                                                            "maxLength": 32
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/host-check-software"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 63
                                },
                                "os-type": {
                                    "type": "string",
                                    "description": "OS type.   \nwindows:Microsoft Windows operating system.   \nmacos:Apple MacOS operating system.",
                                    "enum": [
                                        "windows",
                                        "macos"
                                    ]
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type.   \nav:AntiVirus.   \nfw:Firewall.",
                                    "enum": [
                                        "av",
                                        "fw"
                                    ]
                                },
                                "version": {
                                    "type": "string",
                                    "description": "Version.",
                                    "maxLength": 35
                                },
                                "guid": {
                                    "type": "string",
                                    "description": "Globally unique ID."
                                },
                                "check-item-list": {
                                    "description": "Check item list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID (0 - 4294967295).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action.   \nrequire:Require.   \ndeny:Deny.",
                                                "enum": [
                                                    "require",
                                                    "deny"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Type.   \nfile:File.   \nregistry:Registry.   \nprocess:Process.",
                                                "enum": [
                                                    "file",
                                                    "registry",
                                                    "process"
                                                ]
                                            },
                                            "target": {
                                                "type": "string",
                                                "description": "Target.",
                                                "maxLength": 255
                                            },
                                            "version": {
                                                "type": "string",
                                                "description": "Version.",
                                                "maxLength": 35
                                            },
                                            "md5s": {
                                                "description": "MD5 checksum.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "Hex string of MD5 checksum.",
                                                            "maxLength": 32
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/host-check-software"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/host-check-software"
                ]
            }
        },
        "\/vpn.ssl.web\/host-check-software": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 63
                                },
                                "os-type": {
                                    "type": "string",
                                    "description": "OS type.   \nwindows:Microsoft Windows operating system.   \nmacos:Apple MacOS operating system.",
                                    "enum": [
                                        "windows",
                                        "macos"
                                    ]
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type.   \nav:AntiVirus.   \nfw:Firewall.",
                                    "enum": [
                                        "av",
                                        "fw"
                                    ]
                                },
                                "version": {
                                    "type": "string",
                                    "description": "Version.",
                                    "maxLength": 35
                                },
                                "guid": {
                                    "type": "string",
                                    "description": "Globally unique ID."
                                },
                                "check-item-list": {
                                    "description": "Check item list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID (0 - 4294967295).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action.   \nrequire:Require.   \ndeny:Deny.",
                                                "enum": [
                                                    "require",
                                                    "deny"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Type.   \nfile:File.   \nregistry:Registry.   \nprocess:Process.",
                                                "enum": [
                                                    "file",
                                                    "registry",
                                                    "process"
                                                ]
                                            },
                                            "target": {
                                                "type": "string",
                                                "description": "Target.",
                                                "maxLength": 255
                                            },
                                            "version": {
                                                "type": "string",
                                                "description": "Version.",
                                                "maxLength": 35
                                            },
                                            "md5s": {
                                                "description": "MD5 checksum.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "Hex string of MD5 checksum.",
                                                            "maxLength": 32
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/host-check-software"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 63
                                },
                                "os-type": {
                                    "type": "string",
                                    "description": "OS type.   \nwindows:Microsoft Windows operating system.   \nmacos:Apple MacOS operating system.",
                                    "enum": [
                                        "windows",
                                        "macos"
                                    ]
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type.   \nav:AntiVirus.   \nfw:Firewall.",
                                    "enum": [
                                        "av",
                                        "fw"
                                    ]
                                },
                                "version": {
                                    "type": "string",
                                    "description": "Version.",
                                    "maxLength": 35
                                },
                                "guid": {
                                    "type": "string",
                                    "description": "Globally unique ID."
                                },
                                "check-item-list": {
                                    "description": "Check item list.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID (0 - 4294967295).",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action.   \nrequire:Require.   \ndeny:Deny.",
                                                "enum": [
                                                    "require",
                                                    "deny"
                                                ]
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Type.   \nfile:File.   \nregistry:Registry.   \nprocess:Process.",
                                                "enum": [
                                                    "file",
                                                    "registry",
                                                    "process"
                                                ]
                                            },
                                            "target": {
                                                "type": "string",
                                                "description": "Target.",
                                                "maxLength": 255
                                            },
                                            "version": {
                                                "type": "string",
                                                "description": "Version.",
                                                "maxLength": 35
                                            },
                                            "md5s": {
                                                "description": "MD5 checksum.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "Hex string of MD5 checksum.",
                                                            "maxLength": 32
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/host-check-software"
                ]
            }
        },
        "\/vpn.ssl.web\/portal\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Portal name.",
                                    "maxLength": 35
                                },
                                "tunnel-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv4 SSL-VPN tunnel mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-mode": {
                                    "type": "string",
                                    "description": "Method by which users of this SSL-VPN tunnel obtain IP addresses.   \nrange:Use the IP addresses available for all SSL-VPN users as defined by the SSL settings command.   \nuser-group:Use IP the addresses associated with individual users or user groups (usually from external auth servers).",
                                    "enum": [
                                        "range",
                                        "user-group"
                                    ]
                                },
                                "auto-connect": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic connect by client when system is up.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic reconnect for FortiClient connections.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient saving the user's password.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-pools": {
                                    "description": "IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "exclusive-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable all traffic go through tunnel only.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "service-restriction": {
                                    "type": "string",
                                    "description": "Enable\/disable tunnel service restriction.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv4 split tunneling.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling-routing-negate": {
                                    "type": "string",
                                    "description": "Enable to negate split tunneling routing address.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling-routing-address": {
                                    "description": "IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "dns-suffix": {
                                    "type": "string",
                                    "description": "DNS suffix.",
                                    "maxLength": 253
                                },
                                "wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 WINS server 1."
                                },
                                "wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 WINS server 1."
                                },
                                "ipv6-tunnel-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 SSL-VPN tunnel mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-pools": {
                                    "description": "IPv6 firewall source address objects reserved for SSL-VPN tunnel mode clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-exclusive-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable all IPv6 traffic go through tunnel only.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-service-restriction": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 tunnel service restriction.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 split tunneling.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling-routing-negate": {
                                    "type": "string",
                                    "description": "Enable to negate IPv6 split tunneling routing address.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling-routing-address": {
                                    "description": "IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-wins-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 1."
                                },
                                "ipv6-wins-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 2."
                                },
                                "web-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable SSL-VPN web mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-bookmark": {
                                    "type": "string",
                                    "description": "Enable to display the web portal bookmark widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-bookmark": {
                                    "type": "string",
                                    "description": "Enable to allow web portal users to create their own bookmarks.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "allow-user-access": {
                                    "type": "string",
                                    "description": "Allow user access to SSL-VPN applications.   \nweb:HTTP\/HTTPS access.   \nftp:FTP access.   \nsmb:SMB\/CIFS access.   \nsftp:SFTP access.   \ntelnet:TELNET access.   \nssh:SSH access.   \nvnc:VNC access.   \nrdp:RDP access.   \nping:PING access.",
                                    "enum": [
                                        "web",
                                        "ftp",
                                        "smb",
                                        "sftp",
                                        "telnet",
                                        "ssh",
                                        "vnc",
                                        "rdp",
                                        "ping"
                                    ]
                                },
                                "user-group-bookmark": {
                                    "type": "string",
                                    "description": "Enable to allow web portal users to create bookmarks for all users in the same user group.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bookmark-group": {
                                    "description": "Portal bookmark group.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark group name.",
                                                "maxLength": 35
                                            },
                                            "bookmarks": {
                                                "description": "Bookmark table.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Bookmark name.",
                                                            "maxLength": 35
                                                        },
                                                        "apptype": {
                                                            "type": "string",
                                                            "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                            "enum": [
                                                                "ftp",
                                                                "rdp",
                                                                "sftp",
                                                                "smb",
                                                                "ssh",
                                                                "telnet",
                                                                "vnc",
                                                                "web"
                                                            ]
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "description": "URL parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "host": {
                                                            "type": "string",
                                                            "description": "Host name\/IP parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "folder": {
                                                            "type": "string",
                                                            "description": "Network shared file folder parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "domain": {
                                                            "type": "string",
                                                            "description": "Login domain.",
                                                            "maxLength": 128
                                                        },
                                                        "additional-params": {
                                                            "type": "string",
                                                            "description": "Additional parameters.",
                                                            "maxLength": 128
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "description": "Description.",
                                                            "maxLength": 128
                                                        },
                                                        "keyboard-layout": {
                                                            "type": "string",
                                                            "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                            "enum": [
                                                                "ar-101",
                                                                "ar-102",
                                                                "ar-102-azerty",
                                                                "can-mul",
                                                                "cz",
                                                                "cz-qwerty",
                                                                "cz-pr",
                                                                "da",
                                                                "nl",
                                                                "de",
                                                                "de-ch",
                                                                "de-ibm",
                                                                "en-uk",
                                                                "en-uk-ext",
                                                                "en-us",
                                                                "en-us-dvorak",
                                                                "es",
                                                                "es-var",
                                                                "fi",
                                                                "fi-sami",
                                                                "fr",
                                                                "fr-ca",
                                                                "fr-ch",
                                                                "fr-be",
                                                                "hr",
                                                                "hu",
                                                                "hu-101",
                                                                "it",
                                                                "it-142",
                                                                "ja",
                                                                "ko",
                                                                "lt",
                                                                "lt-ibm",
                                                                "lt-std",
                                                                "lav-std",
                                                                "lav-leg",
                                                                "mk",
                                                                "mk-std",
                                                                "no",
                                                                "no-sami",
                                                                "pol-214",
                                                                "pol-pr",
                                                                "pt",
                                                                "pt-br",
                                                                "pt-br-abnt2",
                                                                "ru",
                                                                "ru-mne",
                                                                "ru-t",
                                                                "sl",
                                                                "sv",
                                                                "sv-sami",
                                                                "tuk",
                                                                "tur-f",
                                                                "tur-q",
                                                                "zh-sym-sg-us",
                                                                "zh-sym-us",
                                                                "zh-tr-hk",
                                                                "zh-tr-mo",
                                                                "zh-tr-us"
                                                            ]
                                                        },
                                                        "security": {
                                                            "type": "string",
                                                            "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                            "enum": [
                                                                "any",
                                                                "rdp",
                                                                "nla",
                                                                "tls"
                                                            ]
                                                        },
                                                        "send-preconnection-id": {
                                                            "type": "string",
                                                            "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "preconnection-id": {
                                                            "type": "integer",
                                                            "description": "The numeric ID of the RDP source (0-4294967295).",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "preconnection-blob": {
                                                            "type": "string",
                                                            "description": "An arbitrary string which identifies the RDP source.",
                                                            "maxLength": 511
                                                        },
                                                        "load-balancing-info": {
                                                            "type": "string",
                                                            "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                            "maxLength": 511
                                                        },
                                                        "restricted-admin": {
                                                            "type": "string",
                                                            "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "port": {
                                                            "type": "integer",
                                                            "description": "Remote port.",
                                                            "maximum": 65535,
                                                            "minimum": 0
                                                        },
                                                        "logon-user": {
                                                            "type": "string",
                                                            "description": "Logon user.",
                                                            "maxLength": 35
                                                        },
                                                        "logon-password": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Logon password."
                                                        },
                                                        "color-depth": {
                                                            "type": "string",
                                                            "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                            "enum": [
                                                                "32",
                                                                "16",
                                                                "8"
                                                            ]
                                                        },
                                                        "sso": {
                                                            "type": "string",
                                                            "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                            "enum": [
                                                                "disable",
                                                                "static",
                                                                "auto"
                                                            ]
                                                        },
                                                        "form-data": {
                                                            "description": "Form data.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "Name.",
                                                                        "maxLength": 35
                                                                    },
                                                                    "value": {
                                                                        "type": "string",
                                                                        "description": "Value.",
                                                                        "maxLength": 63
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        },
                                                        "sso-credential": {
                                                            "type": "string",
                                                            "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                            "enum": [
                                                                "sslvpn-login",
                                                                "alternative"
                                                            ]
                                                        },
                                                        "sso-username": {
                                                            "type": "string",
                                                            "description": "SSO user name.",
                                                            "maxLength": 35
                                                        },
                                                        "sso-password": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "SSO password."
                                                        },
                                                        "sso-credential-sent-once": {
                                                            "type": "string",
                                                            "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": 256
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "display-connection-tools": {
                                    "type": "string",
                                    "description": "Enable to display the web portal connection tools widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-history": {
                                    "type": "string",
                                    "description": "Enable to display the web portal user login history widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-status": {
                                    "type": "string",
                                    "description": "Enable to display the web portal status widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "heading": {
                                    "type": "string",
                                    "description": "Web portal heading message.",
                                    "maxLength": 31
                                },
                                "redir-url": {
                                    "type": "string",
                                    "description": "Client login redirect URL.",
                                    "maxLength": 255
                                },
                                "theme": {
                                    "type": "string",
                                    "description": "Web portal color scheme.   \nblue:Light blue theme.   \ngreen:Green theme.   \nneutrino:Neutrino theme.   \nmelongene:Melongene theme (eggplant color).   \nmariner:Mariner theme (dark blue color).",
                                    "enum": [
                                        "blue",
                                        "green",
                                        "neutrino",
                                        "melongene",
                                        "mariner"
                                    ]
                                },
                                "custom-lang": {
                                    "type": "string",
                                    "description": "Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.",
                                    "maxLength": 35
                                },
                                "smb-ntlmv1-auth": {
                                    "type": "string",
                                    "description": "Enable support of NTLMv1 for Samba authentication.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smbv1": {
                                    "type": "string",
                                    "description": "smbv1   \nenable:enable   \ndisable:disable",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smb-min-version": {
                                    "type": "string",
                                    "description": "SMB minimum client protocol version.   \nsmbv1:SMB version 1.   \nsmbv2:SMB version 2.   \nsmbv3:SMB version 3.",
                                    "enum": [
                                        "smbv1",
                                        "smbv2",
                                        "smbv3"
                                    ]
                                },
                                "smb-max-version": {
                                    "type": "string",
                                    "description": "SMB maximum client protocol version.   \nsmbv1:SMB version 1.   \nsmbv2:SMB version 2.   \nsmbv3:SMB version 3.",
                                    "enum": [
                                        "smbv1",
                                        "smbv2",
                                        "smbv3"
                                    ]
                                },
                                "use-sdwan": {
                                    "type": "string",
                                    "description": "Use SD-WAN rules to get output interface.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "clipboard": {
                                    "type": "string",
                                    "description": "Enable to support RDP\/VPC clipboard functionality.   \nenable:Enable support of RDP\/VNC clipboard.   \ndisable:Disable support of RDP\/VNC clipboard.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "host-check": {
                                    "type": "string",
                                    "description": "Type of host checking performed on endpoints.   \nnone:No host checking.   \nav:AntiVirus software recognized by the Windows Security Center.   \nfw:Firewall software recognized by the Windows Security Center.   \nav-fw:AntiVirus and firewall software recognized by the Windows Security Center.   \ncustom:Custom.",
                                    "enum": [
                                        "none",
                                        "av",
                                        "fw",
                                        "av-fw",
                                        "custom"
                                    ]
                                },
                                "host-check-interval": {
                                    "type": "integer",
                                    "description": "Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.",
                                    "maximum": 259200,
                                    "minimum": 120
                                },
                                "host-check-policy": {
                                    "description": "One or more policies to require the endpoint to have specific security software.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Host check software list name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "limit-user-logins": {
                                    "type": "string",
                                    "description": "Enable to limit each user to one SSL-VPN session at a time.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac-addr-check": {
                                    "type": "string",
                                    "description": "Enable\/disable MAC address host checking.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac-addr-action": {
                                    "type": "string",
                                    "description": "Client MAC address action.   \nallow:Allow connection when client MAC address is matched.   \ndeny:Deny connection when client MAC address is matched.",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ]
                                },
                                "mac-addr-check-rule": {
                                    "description": "Client MAC address check rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Client MAC address check rule name.",
                                                "maxLength": 35
                                            },
                                            "mac-addr-mask": {
                                                "type": "integer",
                                                "description": "Client MAC address mask.",
                                                "maximum": 48,
                                                "minimum": 1
                                            },
                                            "mac-addr-list": {
                                                "description": "Client MAC address list.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "addr": {
                                                            "type": "string",
                                                            "format": "mac-address",
                                                            "description": "Client MAC address."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "os-check": {
                                    "type": "string",
                                    "description": "Enable to let the FortiGate decide action based on client OS.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "os-check-list": {
                                    "description": "SSL-VPN OS checks.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 35
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "OS check options.   \ndeny:Deny all OS versions.   \nallow:Allow any OS version.   \ncheck-up-to-date:Verify OS is up-to-date.",
                                                "enum": [
                                                    "deny",
                                                    "allow",
                                                    "check-up-to-date"
                                                ]
                                            },
                                            "tolerance": {
                                                "type": "integer",
                                                "description": "OS patch level tolerance.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "latest-patch-level": {
                                                "type": "string",
                                                "description": "Latest OS patch level."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "forticlient-download": {
                                    "type": "string",
                                    "description": "Enable\/disable download option for FortiClient.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "forticlient-download-method": {
                                    "type": "string",
                                    "description": "FortiClient download method.   \ndirect:Download via direct link.   \nssl-vpn:Download via SSL-VPN.",
                                    "enum": [
                                        "direct",
                                        "ssl-vpn"
                                    ]
                                },
                                "customize-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Enable support of customized download URL for FortiClient.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "windows-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Download URL for Windows FortiClient.",
                                    "maxLength": 1023
                                },
                                "macos-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Download URL for Mac FortiClient.",
                                    "maxLength": 1023
                                },
                                "skip-check-for-unsupported-os": {
                                    "type": "string",
                                    "description": "Enable to skip host check if client OS does not support it.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "skip-check-for-browser": {
                                    "type": "string",
                                    "description": "Enable to skip host check for browser support.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hide-sso-credential": {
                                    "type": "string",
                                    "description": "Enable to prevent SSO credential being sent to client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-dns": {
                                    "description": "Split DNS for SSL-VPN.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967294,
                                                "minimum": 0
                                            },
                                            "domains": {
                                                "type": "string",
                                                "description": "Split DNS domains used for SSL-VPN clients separated by comma(,).",
                                                "maxLength": 1024
                                            },
                                            "dns-server1": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "DNS server 1."
                                            },
                                            "dns-server2": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "DNS server 2."
                                            },
                                            "ipv6-dns-server1": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 DNS server 1."
                                            },
                                            "ipv6-dns-server2": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 DNS server 2."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/portal"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Portal name.",
                                    "maxLength": 35
                                },
                                "tunnel-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv4 SSL-VPN tunnel mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-mode": {
                                    "type": "string",
                                    "description": "Method by which users of this SSL-VPN tunnel obtain IP addresses.   \nrange:Use the IP addresses available for all SSL-VPN users as defined by the SSL settings command.   \nuser-group:Use IP the addresses associated with individual users or user groups (usually from external auth servers).",
                                    "enum": [
                                        "range",
                                        "user-group"
                                    ]
                                },
                                "auto-connect": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic connect by client when system is up.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic reconnect for FortiClient connections.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient saving the user's password.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-pools": {
                                    "description": "IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "exclusive-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable all traffic go through tunnel only.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "service-restriction": {
                                    "type": "string",
                                    "description": "Enable\/disable tunnel service restriction.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv4 split tunneling.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling-routing-negate": {
                                    "type": "string",
                                    "description": "Enable to negate split tunneling routing address.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling-routing-address": {
                                    "description": "IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "dns-suffix": {
                                    "type": "string",
                                    "description": "DNS suffix.",
                                    "maxLength": 253
                                },
                                "wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 WINS server 1."
                                },
                                "wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 WINS server 1."
                                },
                                "ipv6-tunnel-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 SSL-VPN tunnel mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-pools": {
                                    "description": "IPv6 firewall source address objects reserved for SSL-VPN tunnel mode clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-exclusive-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable all IPv6 traffic go through tunnel only.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-service-restriction": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 tunnel service restriction.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 split tunneling.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling-routing-negate": {
                                    "type": "string",
                                    "description": "Enable to negate IPv6 split tunneling routing address.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling-routing-address": {
                                    "description": "IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-wins-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 1."
                                },
                                "ipv6-wins-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 2."
                                },
                                "web-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable SSL-VPN web mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-bookmark": {
                                    "type": "string",
                                    "description": "Enable to display the web portal bookmark widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-bookmark": {
                                    "type": "string",
                                    "description": "Enable to allow web portal users to create their own bookmarks.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "allow-user-access": {
                                    "type": "string",
                                    "description": "Allow user access to SSL-VPN applications.   \nweb:HTTP\/HTTPS access.   \nftp:FTP access.   \nsmb:SMB\/CIFS access.   \nsftp:SFTP access.   \ntelnet:TELNET access.   \nssh:SSH access.   \nvnc:VNC access.   \nrdp:RDP access.   \nping:PING access.",
                                    "enum": [
                                        "web",
                                        "ftp",
                                        "smb",
                                        "sftp",
                                        "telnet",
                                        "ssh",
                                        "vnc",
                                        "rdp",
                                        "ping"
                                    ]
                                },
                                "user-group-bookmark": {
                                    "type": "string",
                                    "description": "Enable to allow web portal users to create bookmarks for all users in the same user group.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bookmark-group": {
                                    "description": "Portal bookmark group.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark group name.",
                                                "maxLength": 35
                                            },
                                            "bookmarks": {
                                                "description": "Bookmark table.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Bookmark name.",
                                                            "maxLength": 35
                                                        },
                                                        "apptype": {
                                                            "type": "string",
                                                            "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                            "enum": [
                                                                "ftp",
                                                                "rdp",
                                                                "sftp",
                                                                "smb",
                                                                "ssh",
                                                                "telnet",
                                                                "vnc",
                                                                "web"
                                                            ]
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "description": "URL parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "host": {
                                                            "type": "string",
                                                            "description": "Host name\/IP parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "folder": {
                                                            "type": "string",
                                                            "description": "Network shared file folder parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "domain": {
                                                            "type": "string",
                                                            "description": "Login domain.",
                                                            "maxLength": 128
                                                        },
                                                        "additional-params": {
                                                            "type": "string",
                                                            "description": "Additional parameters.",
                                                            "maxLength": 128
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "description": "Description.",
                                                            "maxLength": 128
                                                        },
                                                        "keyboard-layout": {
                                                            "type": "string",
                                                            "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                            "enum": [
                                                                "ar-101",
                                                                "ar-102",
                                                                "ar-102-azerty",
                                                                "can-mul",
                                                                "cz",
                                                                "cz-qwerty",
                                                                "cz-pr",
                                                                "da",
                                                                "nl",
                                                                "de",
                                                                "de-ch",
                                                                "de-ibm",
                                                                "en-uk",
                                                                "en-uk-ext",
                                                                "en-us",
                                                                "en-us-dvorak",
                                                                "es",
                                                                "es-var",
                                                                "fi",
                                                                "fi-sami",
                                                                "fr",
                                                                "fr-ca",
                                                                "fr-ch",
                                                                "fr-be",
                                                                "hr",
                                                                "hu",
                                                                "hu-101",
                                                                "it",
                                                                "it-142",
                                                                "ja",
                                                                "ko",
                                                                "lt",
                                                                "lt-ibm",
                                                                "lt-std",
                                                                "lav-std",
                                                                "lav-leg",
                                                                "mk",
                                                                "mk-std",
                                                                "no",
                                                                "no-sami",
                                                                "pol-214",
                                                                "pol-pr",
                                                                "pt",
                                                                "pt-br",
                                                                "pt-br-abnt2",
                                                                "ru",
                                                                "ru-mne",
                                                                "ru-t",
                                                                "sl",
                                                                "sv",
                                                                "sv-sami",
                                                                "tuk",
                                                                "tur-f",
                                                                "tur-q",
                                                                "zh-sym-sg-us",
                                                                "zh-sym-us",
                                                                "zh-tr-hk",
                                                                "zh-tr-mo",
                                                                "zh-tr-us"
                                                            ]
                                                        },
                                                        "security": {
                                                            "type": "string",
                                                            "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                            "enum": [
                                                                "any",
                                                                "rdp",
                                                                "nla",
                                                                "tls"
                                                            ]
                                                        },
                                                        "send-preconnection-id": {
                                                            "type": "string",
                                                            "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "preconnection-id": {
                                                            "type": "integer",
                                                            "description": "The numeric ID of the RDP source (0-4294967295).",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "preconnection-blob": {
                                                            "type": "string",
                                                            "description": "An arbitrary string which identifies the RDP source.",
                                                            "maxLength": 511
                                                        },
                                                        "load-balancing-info": {
                                                            "type": "string",
                                                            "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                            "maxLength": 511
                                                        },
                                                        "restricted-admin": {
                                                            "type": "string",
                                                            "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "port": {
                                                            "type": "integer",
                                                            "description": "Remote port.",
                                                            "maximum": 65535,
                                                            "minimum": 0
                                                        },
                                                        "logon-user": {
                                                            "type": "string",
                                                            "description": "Logon user.",
                                                            "maxLength": 35
                                                        },
                                                        "logon-password": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Logon password."
                                                        },
                                                        "color-depth": {
                                                            "type": "string",
                                                            "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                            "enum": [
                                                                "32",
                                                                "16",
                                                                "8"
                                                            ]
                                                        },
                                                        "sso": {
                                                            "type": "string",
                                                            "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                            "enum": [
                                                                "disable",
                                                                "static",
                                                                "auto"
                                                            ]
                                                        },
                                                        "form-data": {
                                                            "description": "Form data.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "Name.",
                                                                        "maxLength": 35
                                                                    },
                                                                    "value": {
                                                                        "type": "string",
                                                                        "description": "Value.",
                                                                        "maxLength": 63
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        },
                                                        "sso-credential": {
                                                            "type": "string",
                                                            "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                            "enum": [
                                                                "sslvpn-login",
                                                                "alternative"
                                                            ]
                                                        },
                                                        "sso-username": {
                                                            "type": "string",
                                                            "description": "SSO user name.",
                                                            "maxLength": 35
                                                        },
                                                        "sso-password": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "SSO password."
                                                        },
                                                        "sso-credential-sent-once": {
                                                            "type": "string",
                                                            "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": 256
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "display-connection-tools": {
                                    "type": "string",
                                    "description": "Enable to display the web portal connection tools widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-history": {
                                    "type": "string",
                                    "description": "Enable to display the web portal user login history widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-status": {
                                    "type": "string",
                                    "description": "Enable to display the web portal status widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "heading": {
                                    "type": "string",
                                    "description": "Web portal heading message.",
                                    "maxLength": 31
                                },
                                "redir-url": {
                                    "type": "string",
                                    "description": "Client login redirect URL.",
                                    "maxLength": 255
                                },
                                "theme": {
                                    "type": "string",
                                    "description": "Web portal color scheme.   \nblue:Light blue theme.   \ngreen:Green theme.   \nneutrino:Neutrino theme.   \nmelongene:Melongene theme (eggplant color).   \nmariner:Mariner theme (dark blue color).",
                                    "enum": [
                                        "blue",
                                        "green",
                                        "neutrino",
                                        "melongene",
                                        "mariner"
                                    ]
                                },
                                "custom-lang": {
                                    "type": "string",
                                    "description": "Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.",
                                    "maxLength": 35
                                },
                                "smb-ntlmv1-auth": {
                                    "type": "string",
                                    "description": "Enable support of NTLMv1 for Samba authentication.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smbv1": {
                                    "type": "string",
                                    "description": "smbv1   \nenable:enable   \ndisable:disable",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smb-min-version": {
                                    "type": "string",
                                    "description": "SMB minimum client protocol version.   \nsmbv1:SMB version 1.   \nsmbv2:SMB version 2.   \nsmbv3:SMB version 3.",
                                    "enum": [
                                        "smbv1",
                                        "smbv2",
                                        "smbv3"
                                    ]
                                },
                                "smb-max-version": {
                                    "type": "string",
                                    "description": "SMB maximum client protocol version.   \nsmbv1:SMB version 1.   \nsmbv2:SMB version 2.   \nsmbv3:SMB version 3.",
                                    "enum": [
                                        "smbv1",
                                        "smbv2",
                                        "smbv3"
                                    ]
                                },
                                "use-sdwan": {
                                    "type": "string",
                                    "description": "Use SD-WAN rules to get output interface.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "clipboard": {
                                    "type": "string",
                                    "description": "Enable to support RDP\/VPC clipboard functionality.   \nenable:Enable support of RDP\/VNC clipboard.   \ndisable:Disable support of RDP\/VNC clipboard.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "host-check": {
                                    "type": "string",
                                    "description": "Type of host checking performed on endpoints.   \nnone:No host checking.   \nav:AntiVirus software recognized by the Windows Security Center.   \nfw:Firewall software recognized by the Windows Security Center.   \nav-fw:AntiVirus and firewall software recognized by the Windows Security Center.   \ncustom:Custom.",
                                    "enum": [
                                        "none",
                                        "av",
                                        "fw",
                                        "av-fw",
                                        "custom"
                                    ]
                                },
                                "host-check-interval": {
                                    "type": "integer",
                                    "description": "Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.",
                                    "maximum": 259200,
                                    "minimum": 120
                                },
                                "host-check-policy": {
                                    "description": "One or more policies to require the endpoint to have specific security software.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Host check software list name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "limit-user-logins": {
                                    "type": "string",
                                    "description": "Enable to limit each user to one SSL-VPN session at a time.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac-addr-check": {
                                    "type": "string",
                                    "description": "Enable\/disable MAC address host checking.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac-addr-action": {
                                    "type": "string",
                                    "description": "Client MAC address action.   \nallow:Allow connection when client MAC address is matched.   \ndeny:Deny connection when client MAC address is matched.",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ]
                                },
                                "mac-addr-check-rule": {
                                    "description": "Client MAC address check rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Client MAC address check rule name.",
                                                "maxLength": 35
                                            },
                                            "mac-addr-mask": {
                                                "type": "integer",
                                                "description": "Client MAC address mask.",
                                                "maximum": 48,
                                                "minimum": 1
                                            },
                                            "mac-addr-list": {
                                                "description": "Client MAC address list.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "addr": {
                                                            "type": "string",
                                                            "format": "mac-address",
                                                            "description": "Client MAC address."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "os-check": {
                                    "type": "string",
                                    "description": "Enable to let the FortiGate decide action based on client OS.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "os-check-list": {
                                    "description": "SSL-VPN OS checks.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 35
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "OS check options.   \ndeny:Deny all OS versions.   \nallow:Allow any OS version.   \ncheck-up-to-date:Verify OS is up-to-date.",
                                                "enum": [
                                                    "deny",
                                                    "allow",
                                                    "check-up-to-date"
                                                ]
                                            },
                                            "tolerance": {
                                                "type": "integer",
                                                "description": "OS patch level tolerance.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "latest-patch-level": {
                                                "type": "string",
                                                "description": "Latest OS patch level."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "forticlient-download": {
                                    "type": "string",
                                    "description": "Enable\/disable download option for FortiClient.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "forticlient-download-method": {
                                    "type": "string",
                                    "description": "FortiClient download method.   \ndirect:Download via direct link.   \nssl-vpn:Download via SSL-VPN.",
                                    "enum": [
                                        "direct",
                                        "ssl-vpn"
                                    ]
                                },
                                "customize-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Enable support of customized download URL for FortiClient.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "windows-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Download URL for Windows FortiClient.",
                                    "maxLength": 1023
                                },
                                "macos-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Download URL for Mac FortiClient.",
                                    "maxLength": 1023
                                },
                                "skip-check-for-unsupported-os": {
                                    "type": "string",
                                    "description": "Enable to skip host check if client OS does not support it.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "skip-check-for-browser": {
                                    "type": "string",
                                    "description": "Enable to skip host check for browser support.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hide-sso-credential": {
                                    "type": "string",
                                    "description": "Enable to prevent SSO credential being sent to client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-dns": {
                                    "description": "Split DNS for SSL-VPN.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967294,
                                                "minimum": 0
                                            },
                                            "domains": {
                                                "type": "string",
                                                "description": "Split DNS domains used for SSL-VPN clients separated by comma(,).",
                                                "maxLength": 1024
                                            },
                                            "dns-server1": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "DNS server 1."
                                            },
                                            "dns-server2": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "DNS server 2."
                                            },
                                            "ipv6-dns-server1": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 DNS server 1."
                                            },
                                            "ipv6-dns-server2": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 DNS server 2."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/portal"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/portal"
                ]
            }
        },
        "\/vpn.ssl.web\/portal": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Portal name.",
                                    "maxLength": 35
                                },
                                "tunnel-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv4 SSL-VPN tunnel mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-mode": {
                                    "type": "string",
                                    "description": "Method by which users of this SSL-VPN tunnel obtain IP addresses.   \nrange:Use the IP addresses available for all SSL-VPN users as defined by the SSL settings command.   \nuser-group:Use IP the addresses associated with individual users or user groups (usually from external auth servers).",
                                    "enum": [
                                        "range",
                                        "user-group"
                                    ]
                                },
                                "auto-connect": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic connect by client when system is up.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic reconnect for FortiClient connections.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient saving the user's password.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-pools": {
                                    "description": "IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "exclusive-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable all traffic go through tunnel only.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "service-restriction": {
                                    "type": "string",
                                    "description": "Enable\/disable tunnel service restriction.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv4 split tunneling.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling-routing-negate": {
                                    "type": "string",
                                    "description": "Enable to negate split tunneling routing address.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling-routing-address": {
                                    "description": "IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "dns-suffix": {
                                    "type": "string",
                                    "description": "DNS suffix.",
                                    "maxLength": 253
                                },
                                "wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 WINS server 1."
                                },
                                "wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 WINS server 1."
                                },
                                "ipv6-tunnel-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 SSL-VPN tunnel mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-pools": {
                                    "description": "IPv6 firewall source address objects reserved for SSL-VPN tunnel mode clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-exclusive-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable all IPv6 traffic go through tunnel only.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-service-restriction": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 tunnel service restriction.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 split tunneling.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling-routing-negate": {
                                    "type": "string",
                                    "description": "Enable to negate IPv6 split tunneling routing address.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling-routing-address": {
                                    "description": "IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-wins-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 1."
                                },
                                "ipv6-wins-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 2."
                                },
                                "web-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable SSL-VPN web mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-bookmark": {
                                    "type": "string",
                                    "description": "Enable to display the web portal bookmark widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-bookmark": {
                                    "type": "string",
                                    "description": "Enable to allow web portal users to create their own bookmarks.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "allow-user-access": {
                                    "type": "string",
                                    "description": "Allow user access to SSL-VPN applications.   \nweb:HTTP\/HTTPS access.   \nftp:FTP access.   \nsmb:SMB\/CIFS access.   \nsftp:SFTP access.   \ntelnet:TELNET access.   \nssh:SSH access.   \nvnc:VNC access.   \nrdp:RDP access.   \nping:PING access.",
                                    "enum": [
                                        "web",
                                        "ftp",
                                        "smb",
                                        "sftp",
                                        "telnet",
                                        "ssh",
                                        "vnc",
                                        "rdp",
                                        "ping"
                                    ]
                                },
                                "user-group-bookmark": {
                                    "type": "string",
                                    "description": "Enable to allow web portal users to create bookmarks for all users in the same user group.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bookmark-group": {
                                    "description": "Portal bookmark group.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark group name.",
                                                "maxLength": 35
                                            },
                                            "bookmarks": {
                                                "description": "Bookmark table.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Bookmark name.",
                                                            "maxLength": 35
                                                        },
                                                        "apptype": {
                                                            "type": "string",
                                                            "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                            "enum": [
                                                                "ftp",
                                                                "rdp",
                                                                "sftp",
                                                                "smb",
                                                                "ssh",
                                                                "telnet",
                                                                "vnc",
                                                                "web"
                                                            ]
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "description": "URL parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "host": {
                                                            "type": "string",
                                                            "description": "Host name\/IP parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "folder": {
                                                            "type": "string",
                                                            "description": "Network shared file folder parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "domain": {
                                                            "type": "string",
                                                            "description": "Login domain.",
                                                            "maxLength": 128
                                                        },
                                                        "additional-params": {
                                                            "type": "string",
                                                            "description": "Additional parameters.",
                                                            "maxLength": 128
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "description": "Description.",
                                                            "maxLength": 128
                                                        },
                                                        "keyboard-layout": {
                                                            "type": "string",
                                                            "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                            "enum": [
                                                                "ar-101",
                                                                "ar-102",
                                                                "ar-102-azerty",
                                                                "can-mul",
                                                                "cz",
                                                                "cz-qwerty",
                                                                "cz-pr",
                                                                "da",
                                                                "nl",
                                                                "de",
                                                                "de-ch",
                                                                "de-ibm",
                                                                "en-uk",
                                                                "en-uk-ext",
                                                                "en-us",
                                                                "en-us-dvorak",
                                                                "es",
                                                                "es-var",
                                                                "fi",
                                                                "fi-sami",
                                                                "fr",
                                                                "fr-ca",
                                                                "fr-ch",
                                                                "fr-be",
                                                                "hr",
                                                                "hu",
                                                                "hu-101",
                                                                "it",
                                                                "it-142",
                                                                "ja",
                                                                "ko",
                                                                "lt",
                                                                "lt-ibm",
                                                                "lt-std",
                                                                "lav-std",
                                                                "lav-leg",
                                                                "mk",
                                                                "mk-std",
                                                                "no",
                                                                "no-sami",
                                                                "pol-214",
                                                                "pol-pr",
                                                                "pt",
                                                                "pt-br",
                                                                "pt-br-abnt2",
                                                                "ru",
                                                                "ru-mne",
                                                                "ru-t",
                                                                "sl",
                                                                "sv",
                                                                "sv-sami",
                                                                "tuk",
                                                                "tur-f",
                                                                "tur-q",
                                                                "zh-sym-sg-us",
                                                                "zh-sym-us",
                                                                "zh-tr-hk",
                                                                "zh-tr-mo",
                                                                "zh-tr-us"
                                                            ]
                                                        },
                                                        "security": {
                                                            "type": "string",
                                                            "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                            "enum": [
                                                                "any",
                                                                "rdp",
                                                                "nla",
                                                                "tls"
                                                            ]
                                                        },
                                                        "send-preconnection-id": {
                                                            "type": "string",
                                                            "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "preconnection-id": {
                                                            "type": "integer",
                                                            "description": "The numeric ID of the RDP source (0-4294967295).",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "preconnection-blob": {
                                                            "type": "string",
                                                            "description": "An arbitrary string which identifies the RDP source.",
                                                            "maxLength": 511
                                                        },
                                                        "load-balancing-info": {
                                                            "type": "string",
                                                            "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                            "maxLength": 511
                                                        },
                                                        "restricted-admin": {
                                                            "type": "string",
                                                            "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "port": {
                                                            "type": "integer",
                                                            "description": "Remote port.",
                                                            "maximum": 65535,
                                                            "minimum": 0
                                                        },
                                                        "logon-user": {
                                                            "type": "string",
                                                            "description": "Logon user.",
                                                            "maxLength": 35
                                                        },
                                                        "logon-password": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Logon password."
                                                        },
                                                        "color-depth": {
                                                            "type": "string",
                                                            "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                            "enum": [
                                                                "32",
                                                                "16",
                                                                "8"
                                                            ]
                                                        },
                                                        "sso": {
                                                            "type": "string",
                                                            "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                            "enum": [
                                                                "disable",
                                                                "static",
                                                                "auto"
                                                            ]
                                                        },
                                                        "form-data": {
                                                            "description": "Form data.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "Name.",
                                                                        "maxLength": 35
                                                                    },
                                                                    "value": {
                                                                        "type": "string",
                                                                        "description": "Value.",
                                                                        "maxLength": 63
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        },
                                                        "sso-credential": {
                                                            "type": "string",
                                                            "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                            "enum": [
                                                                "sslvpn-login",
                                                                "alternative"
                                                            ]
                                                        },
                                                        "sso-username": {
                                                            "type": "string",
                                                            "description": "SSO user name.",
                                                            "maxLength": 35
                                                        },
                                                        "sso-password": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "SSO password."
                                                        },
                                                        "sso-credential-sent-once": {
                                                            "type": "string",
                                                            "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": 256
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "display-connection-tools": {
                                    "type": "string",
                                    "description": "Enable to display the web portal connection tools widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-history": {
                                    "type": "string",
                                    "description": "Enable to display the web portal user login history widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-status": {
                                    "type": "string",
                                    "description": "Enable to display the web portal status widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "heading": {
                                    "type": "string",
                                    "description": "Web portal heading message.",
                                    "maxLength": 31
                                },
                                "redir-url": {
                                    "type": "string",
                                    "description": "Client login redirect URL.",
                                    "maxLength": 255
                                },
                                "theme": {
                                    "type": "string",
                                    "description": "Web portal color scheme.   \nblue:Light blue theme.   \ngreen:Green theme.   \nneutrino:Neutrino theme.   \nmelongene:Melongene theme (eggplant color).   \nmariner:Mariner theme (dark blue color).",
                                    "enum": [
                                        "blue",
                                        "green",
                                        "neutrino",
                                        "melongene",
                                        "mariner"
                                    ]
                                },
                                "custom-lang": {
                                    "type": "string",
                                    "description": "Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.",
                                    "maxLength": 35
                                },
                                "smb-ntlmv1-auth": {
                                    "type": "string",
                                    "description": "Enable support of NTLMv1 for Samba authentication.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smbv1": {
                                    "type": "string",
                                    "description": "smbv1   \nenable:enable   \ndisable:disable",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smb-min-version": {
                                    "type": "string",
                                    "description": "SMB minimum client protocol version.   \nsmbv1:SMB version 1.   \nsmbv2:SMB version 2.   \nsmbv3:SMB version 3.",
                                    "enum": [
                                        "smbv1",
                                        "smbv2",
                                        "smbv3"
                                    ]
                                },
                                "smb-max-version": {
                                    "type": "string",
                                    "description": "SMB maximum client protocol version.   \nsmbv1:SMB version 1.   \nsmbv2:SMB version 2.   \nsmbv3:SMB version 3.",
                                    "enum": [
                                        "smbv1",
                                        "smbv2",
                                        "smbv3"
                                    ]
                                },
                                "use-sdwan": {
                                    "type": "string",
                                    "description": "Use SD-WAN rules to get output interface.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "clipboard": {
                                    "type": "string",
                                    "description": "Enable to support RDP\/VPC clipboard functionality.   \nenable:Enable support of RDP\/VNC clipboard.   \ndisable:Disable support of RDP\/VNC clipboard.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "host-check": {
                                    "type": "string",
                                    "description": "Type of host checking performed on endpoints.   \nnone:No host checking.   \nav:AntiVirus software recognized by the Windows Security Center.   \nfw:Firewall software recognized by the Windows Security Center.   \nav-fw:AntiVirus and firewall software recognized by the Windows Security Center.   \ncustom:Custom.",
                                    "enum": [
                                        "none",
                                        "av",
                                        "fw",
                                        "av-fw",
                                        "custom"
                                    ]
                                },
                                "host-check-interval": {
                                    "type": "integer",
                                    "description": "Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.",
                                    "maximum": 259200,
                                    "minimum": 120
                                },
                                "host-check-policy": {
                                    "description": "One or more policies to require the endpoint to have specific security software.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Host check software list name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "limit-user-logins": {
                                    "type": "string",
                                    "description": "Enable to limit each user to one SSL-VPN session at a time.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac-addr-check": {
                                    "type": "string",
                                    "description": "Enable\/disable MAC address host checking.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac-addr-action": {
                                    "type": "string",
                                    "description": "Client MAC address action.   \nallow:Allow connection when client MAC address is matched.   \ndeny:Deny connection when client MAC address is matched.",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ]
                                },
                                "mac-addr-check-rule": {
                                    "description": "Client MAC address check rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Client MAC address check rule name.",
                                                "maxLength": 35
                                            },
                                            "mac-addr-mask": {
                                                "type": "integer",
                                                "description": "Client MAC address mask.",
                                                "maximum": 48,
                                                "minimum": 1
                                            },
                                            "mac-addr-list": {
                                                "description": "Client MAC address list.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "addr": {
                                                            "type": "string",
                                                            "format": "mac-address",
                                                            "description": "Client MAC address."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "os-check": {
                                    "type": "string",
                                    "description": "Enable to let the FortiGate decide action based on client OS.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "os-check-list": {
                                    "description": "SSL-VPN OS checks.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 35
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "OS check options.   \ndeny:Deny all OS versions.   \nallow:Allow any OS version.   \ncheck-up-to-date:Verify OS is up-to-date.",
                                                "enum": [
                                                    "deny",
                                                    "allow",
                                                    "check-up-to-date"
                                                ]
                                            },
                                            "tolerance": {
                                                "type": "integer",
                                                "description": "OS patch level tolerance.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "latest-patch-level": {
                                                "type": "string",
                                                "description": "Latest OS patch level."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "forticlient-download": {
                                    "type": "string",
                                    "description": "Enable\/disable download option for FortiClient.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "forticlient-download-method": {
                                    "type": "string",
                                    "description": "FortiClient download method.   \ndirect:Download via direct link.   \nssl-vpn:Download via SSL-VPN.",
                                    "enum": [
                                        "direct",
                                        "ssl-vpn"
                                    ]
                                },
                                "customize-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Enable support of customized download URL for FortiClient.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "windows-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Download URL for Windows FortiClient.",
                                    "maxLength": 1023
                                },
                                "macos-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Download URL for Mac FortiClient.",
                                    "maxLength": 1023
                                },
                                "skip-check-for-unsupported-os": {
                                    "type": "string",
                                    "description": "Enable to skip host check if client OS does not support it.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "skip-check-for-browser": {
                                    "type": "string",
                                    "description": "Enable to skip host check for browser support.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hide-sso-credential": {
                                    "type": "string",
                                    "description": "Enable to prevent SSO credential being sent to client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-dns": {
                                    "description": "Split DNS for SSL-VPN.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967294,
                                                "minimum": 0
                                            },
                                            "domains": {
                                                "type": "string",
                                                "description": "Split DNS domains used for SSL-VPN clients separated by comma(,).",
                                                "maxLength": 1024
                                            },
                                            "dns-server1": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "DNS server 1."
                                            },
                                            "dns-server2": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "DNS server 2."
                                            },
                                            "ipv6-dns-server1": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 DNS server 1."
                                            },
                                            "ipv6-dns-server2": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 DNS server 2."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/portal"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Portal name.",
                                    "maxLength": 35
                                },
                                "tunnel-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv4 SSL-VPN tunnel mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-mode": {
                                    "type": "string",
                                    "description": "Method by which users of this SSL-VPN tunnel obtain IP addresses.   \nrange:Use the IP addresses available for all SSL-VPN users as defined by the SSL settings command.   \nuser-group:Use IP the addresses associated with individual users or user groups (usually from external auth servers).",
                                    "enum": [
                                        "range",
                                        "user-group"
                                    ]
                                },
                                "auto-connect": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic connect by client when system is up.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "keep-alive": {
                                    "type": "string",
                                    "description": "Enable\/disable automatic reconnect for FortiClient connections.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "save-password": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiClient saving the user's password.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-pools": {
                                    "description": "IPv4 firewall source address objects reserved for SSL-VPN tunnel mode clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "exclusive-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable all traffic go through tunnel only.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "service-restriction": {
                                    "type": "string",
                                    "description": "Enable\/disable tunnel service restriction.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv4 split tunneling.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling-routing-negate": {
                                    "type": "string",
                                    "description": "Enable to negate split tunneling routing address.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-tunneling-routing-address": {
                                    "description": "IPv4 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 1."
                                },
                                "dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 DNS server 2."
                                },
                                "dns-suffix": {
                                    "type": "string",
                                    "description": "DNS suffix.",
                                    "maxLength": 253
                                },
                                "wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 WINS server 1."
                                },
                                "wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IPv4 WINS server 1."
                                },
                                "ipv6-tunnel-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 SSL-VPN tunnel mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-pools": {
                                    "description": "IPv6 firewall source address objects reserved for SSL-VPN tunnel mode clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-exclusive-routing": {
                                    "type": "string",
                                    "description": "Enable\/disable all IPv6 traffic go through tunnel only.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-service-restriction": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 tunnel service restriction.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling": {
                                    "type": "string",
                                    "description": "Enable\/disable IPv6 split tunneling.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling-routing-negate": {
                                    "type": "string",
                                    "description": "Enable to negate IPv6 split tunneling routing address.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ipv6-split-tunneling-routing-address": {
                                    "description": "IPv6 SSL-VPN tunnel mode firewall address objects that override firewall policy destination addresses to control split-tunneling access.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-wins-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 1."
                                },
                                "ipv6-wins-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 2."
                                },
                                "web-mode": {
                                    "type": "string",
                                    "description": "Enable\/disable SSL-VPN web mode.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-bookmark": {
                                    "type": "string",
                                    "description": "Enable to display the web portal bookmark widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-bookmark": {
                                    "type": "string",
                                    "description": "Enable to allow web portal users to create their own bookmarks.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "allow-user-access": {
                                    "type": "string",
                                    "description": "Allow user access to SSL-VPN applications.   \nweb:HTTP\/HTTPS access.   \nftp:FTP access.   \nsmb:SMB\/CIFS access.   \nsftp:SFTP access.   \ntelnet:TELNET access.   \nssh:SSH access.   \nvnc:VNC access.   \nrdp:RDP access.   \nping:PING access.",
                                    "enum": [
                                        "web",
                                        "ftp",
                                        "smb",
                                        "sftp",
                                        "telnet",
                                        "ssh",
                                        "vnc",
                                        "rdp",
                                        "ping"
                                    ]
                                },
                                "user-group-bookmark": {
                                    "type": "string",
                                    "description": "Enable to allow web portal users to create bookmarks for all users in the same user group.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "bookmark-group": {
                                    "description": "Portal bookmark group.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark group name.",
                                                "maxLength": 35
                                            },
                                            "bookmarks": {
                                                "description": "Bookmark table.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Bookmark name.",
                                                            "maxLength": 35
                                                        },
                                                        "apptype": {
                                                            "type": "string",
                                                            "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                            "enum": [
                                                                "ftp",
                                                                "rdp",
                                                                "sftp",
                                                                "smb",
                                                                "ssh",
                                                                "telnet",
                                                                "vnc",
                                                                "web"
                                                            ]
                                                        },
                                                        "url": {
                                                            "type": "string",
                                                            "description": "URL parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "host": {
                                                            "type": "string",
                                                            "description": "Host name\/IP parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "folder": {
                                                            "type": "string",
                                                            "description": "Network shared file folder parameter.",
                                                            "maxLength": 128
                                                        },
                                                        "domain": {
                                                            "type": "string",
                                                            "description": "Login domain.",
                                                            "maxLength": 128
                                                        },
                                                        "additional-params": {
                                                            "type": "string",
                                                            "description": "Additional parameters.",
                                                            "maxLength": 128
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "description": "Description.",
                                                            "maxLength": 128
                                                        },
                                                        "keyboard-layout": {
                                                            "type": "string",
                                                            "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                            "enum": [
                                                                "ar-101",
                                                                "ar-102",
                                                                "ar-102-azerty",
                                                                "can-mul",
                                                                "cz",
                                                                "cz-qwerty",
                                                                "cz-pr",
                                                                "da",
                                                                "nl",
                                                                "de",
                                                                "de-ch",
                                                                "de-ibm",
                                                                "en-uk",
                                                                "en-uk-ext",
                                                                "en-us",
                                                                "en-us-dvorak",
                                                                "es",
                                                                "es-var",
                                                                "fi",
                                                                "fi-sami",
                                                                "fr",
                                                                "fr-ca",
                                                                "fr-ch",
                                                                "fr-be",
                                                                "hr",
                                                                "hu",
                                                                "hu-101",
                                                                "it",
                                                                "it-142",
                                                                "ja",
                                                                "ko",
                                                                "lt",
                                                                "lt-ibm",
                                                                "lt-std",
                                                                "lav-std",
                                                                "lav-leg",
                                                                "mk",
                                                                "mk-std",
                                                                "no",
                                                                "no-sami",
                                                                "pol-214",
                                                                "pol-pr",
                                                                "pt",
                                                                "pt-br",
                                                                "pt-br-abnt2",
                                                                "ru",
                                                                "ru-mne",
                                                                "ru-t",
                                                                "sl",
                                                                "sv",
                                                                "sv-sami",
                                                                "tuk",
                                                                "tur-f",
                                                                "tur-q",
                                                                "zh-sym-sg-us",
                                                                "zh-sym-us",
                                                                "zh-tr-hk",
                                                                "zh-tr-mo",
                                                                "zh-tr-us"
                                                            ]
                                                        },
                                                        "security": {
                                                            "type": "string",
                                                            "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                            "enum": [
                                                                "any",
                                                                "rdp",
                                                                "nla",
                                                                "tls"
                                                            ]
                                                        },
                                                        "send-preconnection-id": {
                                                            "type": "string",
                                                            "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "preconnection-id": {
                                                            "type": "integer",
                                                            "description": "The numeric ID of the RDP source (0-4294967295).",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "preconnection-blob": {
                                                            "type": "string",
                                                            "description": "An arbitrary string which identifies the RDP source.",
                                                            "maxLength": 511
                                                        },
                                                        "load-balancing-info": {
                                                            "type": "string",
                                                            "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                            "maxLength": 511
                                                        },
                                                        "restricted-admin": {
                                                            "type": "string",
                                                            "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        },
                                                        "port": {
                                                            "type": "integer",
                                                            "description": "Remote port.",
                                                            "maximum": 65535,
                                                            "minimum": 0
                                                        },
                                                        "logon-user": {
                                                            "type": "string",
                                                            "description": "Logon user.",
                                                            "maxLength": 35
                                                        },
                                                        "logon-password": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "Logon password."
                                                        },
                                                        "color-depth": {
                                                            "type": "string",
                                                            "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                            "enum": [
                                                                "32",
                                                                "16",
                                                                "8"
                                                            ]
                                                        },
                                                        "sso": {
                                                            "type": "string",
                                                            "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                            "enum": [
                                                                "disable",
                                                                "static",
                                                                "auto"
                                                            ]
                                                        },
                                                        "form-data": {
                                                            "description": "Form data.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "Name.",
                                                                        "maxLength": 35
                                                                    },
                                                                    "value": {
                                                                        "type": "string",
                                                                        "description": "Value.",
                                                                        "maxLength": 63
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        },
                                                        "sso-credential": {
                                                            "type": "string",
                                                            "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                            "enum": [
                                                                "sslvpn-login",
                                                                "alternative"
                                                            ]
                                                        },
                                                        "sso-username": {
                                                            "type": "string",
                                                            "description": "SSO user name.",
                                                            "maxLength": 35
                                                        },
                                                        "sso-password": {
                                                            "type": "string",
                                                            "format": "password",
                                                            "description": "SSO password."
                                                        },
                                                        "sso-credential-sent-once": {
                                                            "type": "string",
                                                            "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                            "enum": [
                                                                "enable",
                                                                "disable"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "maxItems": 256
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "display-connection-tools": {
                                    "type": "string",
                                    "description": "Enable to display the web portal connection tools widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-history": {
                                    "type": "string",
                                    "description": "Enable to display the web portal user login history widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "display-status": {
                                    "type": "string",
                                    "description": "Enable to display the web portal status widget.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "heading": {
                                    "type": "string",
                                    "description": "Web portal heading message.",
                                    "maxLength": 31
                                },
                                "redir-url": {
                                    "type": "string",
                                    "description": "Client login redirect URL.",
                                    "maxLength": 255
                                },
                                "theme": {
                                    "type": "string",
                                    "description": "Web portal color scheme.   \nblue:Light blue theme.   \ngreen:Green theme.   \nneutrino:Neutrino theme.   \nmelongene:Melongene theme (eggplant color).   \nmariner:Mariner theme (dark blue color).",
                                    "enum": [
                                        "blue",
                                        "green",
                                        "neutrino",
                                        "melongene",
                                        "mariner"
                                    ]
                                },
                                "custom-lang": {
                                    "type": "string",
                                    "description": "Change the web portal display language. Overrides config system global set language. You can use config system custom-language and execute system custom-language to add custom language files.",
                                    "maxLength": 35
                                },
                                "smb-ntlmv1-auth": {
                                    "type": "string",
                                    "description": "Enable support of NTLMv1 for Samba authentication.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smbv1": {
                                    "type": "string",
                                    "description": "smbv1   \nenable:enable   \ndisable:disable",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "smb-min-version": {
                                    "type": "string",
                                    "description": "SMB minimum client protocol version.   \nsmbv1:SMB version 1.   \nsmbv2:SMB version 2.   \nsmbv3:SMB version 3.",
                                    "enum": [
                                        "smbv1",
                                        "smbv2",
                                        "smbv3"
                                    ]
                                },
                                "smb-max-version": {
                                    "type": "string",
                                    "description": "SMB maximum client protocol version.   \nsmbv1:SMB version 1.   \nsmbv2:SMB version 2.   \nsmbv3:SMB version 3.",
                                    "enum": [
                                        "smbv1",
                                        "smbv2",
                                        "smbv3"
                                    ]
                                },
                                "use-sdwan": {
                                    "type": "string",
                                    "description": "Use SD-WAN rules to get output interface.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "clipboard": {
                                    "type": "string",
                                    "description": "Enable to support RDP\/VPC clipboard functionality.   \nenable:Enable support of RDP\/VNC clipboard.   \ndisable:Disable support of RDP\/VNC clipboard.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "host-check": {
                                    "type": "string",
                                    "description": "Type of host checking performed on endpoints.   \nnone:No host checking.   \nav:AntiVirus software recognized by the Windows Security Center.   \nfw:Firewall software recognized by the Windows Security Center.   \nav-fw:AntiVirus and firewall software recognized by the Windows Security Center.   \ncustom:Custom.",
                                    "enum": [
                                        "none",
                                        "av",
                                        "fw",
                                        "av-fw",
                                        "custom"
                                    ]
                                },
                                "host-check-interval": {
                                    "type": "integer",
                                    "description": "Periodic host check interval. Value of 0 means disabled and host checking only happens when the endpoint connects.",
                                    "maximum": 259200,
                                    "minimum": 120
                                },
                                "host-check-policy": {
                                    "description": "One or more policies to require the endpoint to have specific security software.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Host check software list name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "limit-user-logins": {
                                    "type": "string",
                                    "description": "Enable to limit each user to one SSL-VPN session at a time.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac-addr-check": {
                                    "type": "string",
                                    "description": "Enable\/disable MAC address host checking.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "mac-addr-action": {
                                    "type": "string",
                                    "description": "Client MAC address action.   \nallow:Allow connection when client MAC address is matched.   \ndeny:Deny connection when client MAC address is matched.",
                                    "enum": [
                                        "allow",
                                        "deny"
                                    ]
                                },
                                "mac-addr-check-rule": {
                                    "description": "Client MAC address check rule.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Client MAC address check rule name.",
                                                "maxLength": 35
                                            },
                                            "mac-addr-mask": {
                                                "type": "integer",
                                                "description": "Client MAC address mask.",
                                                "maximum": 48,
                                                "minimum": 1
                                            },
                                            "mac-addr-list": {
                                                "description": "Client MAC address list.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "addr": {
                                                            "type": "string",
                                                            "format": "mac-address",
                                                            "description": "Client MAC address."
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "os-check": {
                                    "type": "string",
                                    "description": "Enable to let the FortiGate decide action based on client OS.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "os-check-list": {
                                    "description": "SSL-VPN OS checks.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 35
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "OS check options.   \ndeny:Deny all OS versions.   \nallow:Allow any OS version.   \ncheck-up-to-date:Verify OS is up-to-date.",
                                                "enum": [
                                                    "deny",
                                                    "allow",
                                                    "check-up-to-date"
                                                ]
                                            },
                                            "tolerance": {
                                                "type": "integer",
                                                "description": "OS patch level tolerance.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "latest-patch-level": {
                                                "type": "string",
                                                "description": "Latest OS patch level."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "forticlient-download": {
                                    "type": "string",
                                    "description": "Enable\/disable download option for FortiClient.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "forticlient-download-method": {
                                    "type": "string",
                                    "description": "FortiClient download method.   \ndirect:Download via direct link.   \nssl-vpn:Download via SSL-VPN.",
                                    "enum": [
                                        "direct",
                                        "ssl-vpn"
                                    ]
                                },
                                "customize-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Enable support of customized download URL for FortiClient.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "windows-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Download URL for Windows FortiClient.",
                                    "maxLength": 1023
                                },
                                "macos-forticlient-download-url": {
                                    "type": "string",
                                    "description": "Download URL for Mac FortiClient.",
                                    "maxLength": 1023
                                },
                                "skip-check-for-unsupported-os": {
                                    "type": "string",
                                    "description": "Enable to skip host check if client OS does not support it.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "skip-check-for-browser": {
                                    "type": "string",
                                    "description": "Enable to skip host check for browser support.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hide-sso-credential": {
                                    "type": "string",
                                    "description": "Enable to prevent SSO credential being sent to client.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "split-dns": {
                                    "description": "Split DNS for SSL-VPN.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967294,
                                                "minimum": 0
                                            },
                                            "domains": {
                                                "type": "string",
                                                "description": "Split DNS domains used for SSL-VPN clients separated by comma(,).",
                                                "maxLength": 1024
                                            },
                                            "dns-server1": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "DNS server 1."
                                            },
                                            "dns-server2": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "DNS server 2."
                                            },
                                            "ipv6-dns-server1": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 DNS server 1."
                                            },
                                            "ipv6-dns-server2": {
                                                "type": "string",
                                                "format": "ipv6",
                                                "description": "IPv6 DNS server 2."
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/portal"
                ]
            }
        },
        "\/vpn.ssl.web\/realm\/{url-path}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "url-path": {
                                    "type": "string",
                                    "description": "URL path to access SSL-VPN login page.",
                                    "maxLength": 35
                                },
                                "max-concurrent-user": {
                                    "type": "integer",
                                    "description": "Maximum concurrent users (0 - 65535, 0 means unlimited).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "login-page": {
                                    "type": "string",
                                    "description": "Replacement HTML for SSL-VPN login page.",
                                    "maxLength": 32768
                                },
                                "virtual-host": {
                                    "type": "string",
                                    "description": "Virtual host name for realm.",
                                    "maxLength": 255
                                },
                                "virtual-host-only": {
                                    "type": "string",
                                    "description": "Enable\/disable enforcement of virtual host method for SSL-VPN client access.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "radius-server": {
                                    "type": "string",
                                    "description": "RADIUS server associated with realm.",
                                    "maxLength": 35
                                },
                                "nas-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address used as a NAS-IP to communicate with the RADIUS server."
                                },
                                "radius-port": {
                                    "type": "integer",
                                    "description": "RADIUS service port number (0 - 65535, 0 means user.radius.radius-port).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url-path",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/realm"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "url-path": {
                                    "type": "string",
                                    "description": "URL path to access SSL-VPN login page.",
                                    "maxLength": 35
                                },
                                "max-concurrent-user": {
                                    "type": "integer",
                                    "description": "Maximum concurrent users (0 - 65535, 0 means unlimited).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "login-page": {
                                    "type": "string",
                                    "description": "Replacement HTML for SSL-VPN login page.",
                                    "maxLength": 32768
                                },
                                "virtual-host": {
                                    "type": "string",
                                    "description": "Virtual host name for realm.",
                                    "maxLength": 255
                                },
                                "virtual-host-only": {
                                    "type": "string",
                                    "description": "Enable\/disable enforcement of virtual host method for SSL-VPN client access.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "radius-server": {
                                    "type": "string",
                                    "description": "RADIUS server associated with realm.",
                                    "maxLength": 35
                                },
                                "nas-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address used as a NAS-IP to communicate with the RADIUS server."
                                },
                                "radius-port": {
                                    "type": "integer",
                                    "description": "RADIUS service port number (0 - 65535, 0 means user.radius.radius-port).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "url-path",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/realm"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "url-path",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/realm"
                ]
            }
        },
        "\/vpn.ssl.web\/realm": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "url-path": {
                                    "type": "string",
                                    "description": "URL path to access SSL-VPN login page.",
                                    "maxLength": 35
                                },
                                "max-concurrent-user": {
                                    "type": "integer",
                                    "description": "Maximum concurrent users (0 - 65535, 0 means unlimited).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "login-page": {
                                    "type": "string",
                                    "description": "Replacement HTML for SSL-VPN login page.",
                                    "maxLength": 32768
                                },
                                "virtual-host": {
                                    "type": "string",
                                    "description": "Virtual host name for realm.",
                                    "maxLength": 255
                                },
                                "virtual-host-only": {
                                    "type": "string",
                                    "description": "Enable\/disable enforcement of virtual host method for SSL-VPN client access.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "radius-server": {
                                    "type": "string",
                                    "description": "RADIUS server associated with realm.",
                                    "maxLength": 35
                                },
                                "nas-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address used as a NAS-IP to communicate with the RADIUS server."
                                },
                                "radius-port": {
                                    "type": "integer",
                                    "description": "RADIUS service port number (0 - 65535, 0 means user.radius.radius-port).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/realm"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "url-path": {
                                    "type": "string",
                                    "description": "URL path to access SSL-VPN login page.",
                                    "maxLength": 35
                                },
                                "max-concurrent-user": {
                                    "type": "integer",
                                    "description": "Maximum concurrent users (0 - 65535, 0 means unlimited).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "login-page": {
                                    "type": "string",
                                    "description": "Replacement HTML for SSL-VPN login page.",
                                    "maxLength": 32768
                                },
                                "virtual-host": {
                                    "type": "string",
                                    "description": "Virtual host name for realm.",
                                    "maxLength": 255
                                },
                                "virtual-host-only": {
                                    "type": "string",
                                    "description": "Enable\/disable enforcement of virtual host method for SSL-VPN client access.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "radius-server": {
                                    "type": "string",
                                    "description": "RADIUS server associated with realm.",
                                    "maxLength": 35
                                },
                                "nas-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address used as a NAS-IP to communicate with the RADIUS server."
                                },
                                "radius-port": {
                                    "type": "integer",
                                    "description": "RADIUS service port number (0 - 65535, 0 means user.radius.radius-port).",
                                    "maximum": 65535,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/realm"
                ]
            }
        },
        "\/vpn.ssl.web\/user-bookmark\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User and group name.",
                                    "maxLength": 101
                                },
                                "custom-lang": {
                                    "type": "string",
                                    "description": "Personal language.",
                                    "maxLength": 35
                                },
                                "bookmarks": {
                                    "description": "Bookmark table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark name.",
                                                "maxLength": 35
                                            },
                                            "apptype": {
                                                "type": "string",
                                                "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                "enum": [
                                                    "ftp",
                                                    "rdp",
                                                    "sftp",
                                                    "smb",
                                                    "ssh",
                                                    "telnet",
                                                    "vnc",
                                                    "web"
                                                ]
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL parameter.",
                                                "maxLength": 128
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Host name\/IP parameter.",
                                                "maxLength": 128
                                            },
                                            "folder": {
                                                "type": "string",
                                                "description": "Network shared file folder parameter.",
                                                "maxLength": 128
                                            },
                                            "domain": {
                                                "type": "string",
                                                "description": "Login domain.",
                                                "maxLength": 128
                                            },
                                            "additional-params": {
                                                "type": "string",
                                                "description": "Additional parameters.",
                                                "maxLength": 128
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 128
                                            },
                                            "keyboard-layout": {
                                                "type": "string",
                                                "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                "enum": [
                                                    "ar-101",
                                                    "ar-102",
                                                    "ar-102-azerty",
                                                    "can-mul",
                                                    "cz",
                                                    "cz-qwerty",
                                                    "cz-pr",
                                                    "da",
                                                    "nl",
                                                    "de",
                                                    "de-ch",
                                                    "de-ibm",
                                                    "en-uk",
                                                    "en-uk-ext",
                                                    "en-us",
                                                    "en-us-dvorak",
                                                    "es",
                                                    "es-var",
                                                    "fi",
                                                    "fi-sami",
                                                    "fr",
                                                    "fr-ca",
                                                    "fr-ch",
                                                    "fr-be",
                                                    "hr",
                                                    "hu",
                                                    "hu-101",
                                                    "it",
                                                    "it-142",
                                                    "ja",
                                                    "ko",
                                                    "lt",
                                                    "lt-ibm",
                                                    "lt-std",
                                                    "lav-std",
                                                    "lav-leg",
                                                    "mk",
                                                    "mk-std",
                                                    "no",
                                                    "no-sami",
                                                    "pol-214",
                                                    "pol-pr",
                                                    "pt",
                                                    "pt-br",
                                                    "pt-br-abnt2",
                                                    "ru",
                                                    "ru-mne",
                                                    "ru-t",
                                                    "sl",
                                                    "sv",
                                                    "sv-sami",
                                                    "tuk",
                                                    "tur-f",
                                                    "tur-q",
                                                    "zh-sym-sg-us",
                                                    "zh-sym-us",
                                                    "zh-tr-hk",
                                                    "zh-tr-mo",
                                                    "zh-tr-us"
                                                ]
                                            },
                                            "security": {
                                                "type": "string",
                                                "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                "enum": [
                                                    "any",
                                                    "rdp",
                                                    "nla",
                                                    "tls"
                                                ]
                                            },
                                            "send-preconnection-id": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "preconnection-id": {
                                                "type": "integer",
                                                "description": "The numeric ID of the RDP source (0-4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "preconnection-blob": {
                                                "type": "string",
                                                "description": "An arbitrary string which identifies the RDP source.",
                                                "maxLength": 511
                                            },
                                            "load-balancing-info": {
                                                "type": "string",
                                                "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                "maxLength": 511
                                            },
                                            "restricted-admin": {
                                                "type": "string",
                                                "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Remote port.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "logon-user": {
                                                "type": "string",
                                                "description": "Logon user.",
                                                "maxLength": 35
                                            },
                                            "logon-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Logon password."
                                            },
                                            "color-depth": {
                                                "type": "string",
                                                "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                "enum": [
                                                    "32",
                                                    "16",
                                                    "8"
                                                ]
                                            },
                                            "sso": {
                                                "type": "string",
                                                "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                "enum": [
                                                    "disable",
                                                    "static",
                                                    "auto"
                                                ]
                                            },
                                            "form-data": {
                                                "description": "Form data.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name.",
                                                            "maxLength": 35
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value.",
                                                            "maxLength": 63
                                                        }
                                                    }
                                                },
                                                "maxItems": 10
                                            },
                                            "sso-credential": {
                                                "type": "string",
                                                "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                "enum": [
                                                    "sslvpn-login",
                                                    "alternative"
                                                ]
                                            },
                                            "sso-username": {
                                                "type": "string",
                                                "description": "SSO user name.",
                                                "maxLength": 35
                                            },
                                            "sso-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "SSO password."
                                            },
                                            "sso-credential-sent-once": {
                                                "type": "string",
                                                "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 128
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/user-bookmark"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User and group name.",
                                    "maxLength": 101
                                },
                                "custom-lang": {
                                    "type": "string",
                                    "description": "Personal language.",
                                    "maxLength": 35
                                },
                                "bookmarks": {
                                    "description": "Bookmark table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark name.",
                                                "maxLength": 35
                                            },
                                            "apptype": {
                                                "type": "string",
                                                "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                "enum": [
                                                    "ftp",
                                                    "rdp",
                                                    "sftp",
                                                    "smb",
                                                    "ssh",
                                                    "telnet",
                                                    "vnc",
                                                    "web"
                                                ]
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL parameter.",
                                                "maxLength": 128
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Host name\/IP parameter.",
                                                "maxLength": 128
                                            },
                                            "folder": {
                                                "type": "string",
                                                "description": "Network shared file folder parameter.",
                                                "maxLength": 128
                                            },
                                            "domain": {
                                                "type": "string",
                                                "description": "Login domain.",
                                                "maxLength": 128
                                            },
                                            "additional-params": {
                                                "type": "string",
                                                "description": "Additional parameters.",
                                                "maxLength": 128
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 128
                                            },
                                            "keyboard-layout": {
                                                "type": "string",
                                                "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                "enum": [
                                                    "ar-101",
                                                    "ar-102",
                                                    "ar-102-azerty",
                                                    "can-mul",
                                                    "cz",
                                                    "cz-qwerty",
                                                    "cz-pr",
                                                    "da",
                                                    "nl",
                                                    "de",
                                                    "de-ch",
                                                    "de-ibm",
                                                    "en-uk",
                                                    "en-uk-ext",
                                                    "en-us",
                                                    "en-us-dvorak",
                                                    "es",
                                                    "es-var",
                                                    "fi",
                                                    "fi-sami",
                                                    "fr",
                                                    "fr-ca",
                                                    "fr-ch",
                                                    "fr-be",
                                                    "hr",
                                                    "hu",
                                                    "hu-101",
                                                    "it",
                                                    "it-142",
                                                    "ja",
                                                    "ko",
                                                    "lt",
                                                    "lt-ibm",
                                                    "lt-std",
                                                    "lav-std",
                                                    "lav-leg",
                                                    "mk",
                                                    "mk-std",
                                                    "no",
                                                    "no-sami",
                                                    "pol-214",
                                                    "pol-pr",
                                                    "pt",
                                                    "pt-br",
                                                    "pt-br-abnt2",
                                                    "ru",
                                                    "ru-mne",
                                                    "ru-t",
                                                    "sl",
                                                    "sv",
                                                    "sv-sami",
                                                    "tuk",
                                                    "tur-f",
                                                    "tur-q",
                                                    "zh-sym-sg-us",
                                                    "zh-sym-us",
                                                    "zh-tr-hk",
                                                    "zh-tr-mo",
                                                    "zh-tr-us"
                                                ]
                                            },
                                            "security": {
                                                "type": "string",
                                                "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                "enum": [
                                                    "any",
                                                    "rdp",
                                                    "nla",
                                                    "tls"
                                                ]
                                            },
                                            "send-preconnection-id": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "preconnection-id": {
                                                "type": "integer",
                                                "description": "The numeric ID of the RDP source (0-4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "preconnection-blob": {
                                                "type": "string",
                                                "description": "An arbitrary string which identifies the RDP source.",
                                                "maxLength": 511
                                            },
                                            "load-balancing-info": {
                                                "type": "string",
                                                "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                "maxLength": 511
                                            },
                                            "restricted-admin": {
                                                "type": "string",
                                                "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Remote port.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "logon-user": {
                                                "type": "string",
                                                "description": "Logon user.",
                                                "maxLength": 35
                                            },
                                            "logon-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Logon password."
                                            },
                                            "color-depth": {
                                                "type": "string",
                                                "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                "enum": [
                                                    "32",
                                                    "16",
                                                    "8"
                                                ]
                                            },
                                            "sso": {
                                                "type": "string",
                                                "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                "enum": [
                                                    "disable",
                                                    "static",
                                                    "auto"
                                                ]
                                            },
                                            "form-data": {
                                                "description": "Form data.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name.",
                                                            "maxLength": 35
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value.",
                                                            "maxLength": 63
                                                        }
                                                    }
                                                },
                                                "maxItems": 10
                                            },
                                            "sso-credential": {
                                                "type": "string",
                                                "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                "enum": [
                                                    "sslvpn-login",
                                                    "alternative"
                                                ]
                                            },
                                            "sso-username": {
                                                "type": "string",
                                                "description": "SSO user name.",
                                                "maxLength": 35
                                            },
                                            "sso-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "SSO password."
                                            },
                                            "sso-credential-sent-once": {
                                                "type": "string",
                                                "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 128
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/user-bookmark"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/user-bookmark"
                ]
            }
        },
        "\/vpn.ssl.web\/user-bookmark": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User and group name.",
                                    "maxLength": 101
                                },
                                "custom-lang": {
                                    "type": "string",
                                    "description": "Personal language.",
                                    "maxLength": 35
                                },
                                "bookmarks": {
                                    "description": "Bookmark table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark name.",
                                                "maxLength": 35
                                            },
                                            "apptype": {
                                                "type": "string",
                                                "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                "enum": [
                                                    "ftp",
                                                    "rdp",
                                                    "sftp",
                                                    "smb",
                                                    "ssh",
                                                    "telnet",
                                                    "vnc",
                                                    "web"
                                                ]
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL parameter.",
                                                "maxLength": 128
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Host name\/IP parameter.",
                                                "maxLength": 128
                                            },
                                            "folder": {
                                                "type": "string",
                                                "description": "Network shared file folder parameter.",
                                                "maxLength": 128
                                            },
                                            "domain": {
                                                "type": "string",
                                                "description": "Login domain.",
                                                "maxLength": 128
                                            },
                                            "additional-params": {
                                                "type": "string",
                                                "description": "Additional parameters.",
                                                "maxLength": 128
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 128
                                            },
                                            "keyboard-layout": {
                                                "type": "string",
                                                "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                "enum": [
                                                    "ar-101",
                                                    "ar-102",
                                                    "ar-102-azerty",
                                                    "can-mul",
                                                    "cz",
                                                    "cz-qwerty",
                                                    "cz-pr",
                                                    "da",
                                                    "nl",
                                                    "de",
                                                    "de-ch",
                                                    "de-ibm",
                                                    "en-uk",
                                                    "en-uk-ext",
                                                    "en-us",
                                                    "en-us-dvorak",
                                                    "es",
                                                    "es-var",
                                                    "fi",
                                                    "fi-sami",
                                                    "fr",
                                                    "fr-ca",
                                                    "fr-ch",
                                                    "fr-be",
                                                    "hr",
                                                    "hu",
                                                    "hu-101",
                                                    "it",
                                                    "it-142",
                                                    "ja",
                                                    "ko",
                                                    "lt",
                                                    "lt-ibm",
                                                    "lt-std",
                                                    "lav-std",
                                                    "lav-leg",
                                                    "mk",
                                                    "mk-std",
                                                    "no",
                                                    "no-sami",
                                                    "pol-214",
                                                    "pol-pr",
                                                    "pt",
                                                    "pt-br",
                                                    "pt-br-abnt2",
                                                    "ru",
                                                    "ru-mne",
                                                    "ru-t",
                                                    "sl",
                                                    "sv",
                                                    "sv-sami",
                                                    "tuk",
                                                    "tur-f",
                                                    "tur-q",
                                                    "zh-sym-sg-us",
                                                    "zh-sym-us",
                                                    "zh-tr-hk",
                                                    "zh-tr-mo",
                                                    "zh-tr-us"
                                                ]
                                            },
                                            "security": {
                                                "type": "string",
                                                "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                "enum": [
                                                    "any",
                                                    "rdp",
                                                    "nla",
                                                    "tls"
                                                ]
                                            },
                                            "send-preconnection-id": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "preconnection-id": {
                                                "type": "integer",
                                                "description": "The numeric ID of the RDP source (0-4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "preconnection-blob": {
                                                "type": "string",
                                                "description": "An arbitrary string which identifies the RDP source.",
                                                "maxLength": 511
                                            },
                                            "load-balancing-info": {
                                                "type": "string",
                                                "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                "maxLength": 511
                                            },
                                            "restricted-admin": {
                                                "type": "string",
                                                "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Remote port.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "logon-user": {
                                                "type": "string",
                                                "description": "Logon user.",
                                                "maxLength": 35
                                            },
                                            "logon-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Logon password."
                                            },
                                            "color-depth": {
                                                "type": "string",
                                                "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                "enum": [
                                                    "32",
                                                    "16",
                                                    "8"
                                                ]
                                            },
                                            "sso": {
                                                "type": "string",
                                                "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                "enum": [
                                                    "disable",
                                                    "static",
                                                    "auto"
                                                ]
                                            },
                                            "form-data": {
                                                "description": "Form data.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name.",
                                                            "maxLength": 35
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value.",
                                                            "maxLength": 63
                                                        }
                                                    }
                                                },
                                                "maxItems": 10
                                            },
                                            "sso-credential": {
                                                "type": "string",
                                                "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                "enum": [
                                                    "sslvpn-login",
                                                    "alternative"
                                                ]
                                            },
                                            "sso-username": {
                                                "type": "string",
                                                "description": "SSO user name.",
                                                "maxLength": 35
                                            },
                                            "sso-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "SSO password."
                                            },
                                            "sso-credential-sent-once": {
                                                "type": "string",
                                                "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 128
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/user-bookmark"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "User and group name.",
                                    "maxLength": 101
                                },
                                "custom-lang": {
                                    "type": "string",
                                    "description": "Personal language.",
                                    "maxLength": 35
                                },
                                "bookmarks": {
                                    "description": "Bookmark table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark name.",
                                                "maxLength": 35
                                            },
                                            "apptype": {
                                                "type": "string",
                                                "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                "enum": [
                                                    "ftp",
                                                    "rdp",
                                                    "sftp",
                                                    "smb",
                                                    "ssh",
                                                    "telnet",
                                                    "vnc",
                                                    "web"
                                                ]
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL parameter.",
                                                "maxLength": 128
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Host name\/IP parameter.",
                                                "maxLength": 128
                                            },
                                            "folder": {
                                                "type": "string",
                                                "description": "Network shared file folder parameter.",
                                                "maxLength": 128
                                            },
                                            "domain": {
                                                "type": "string",
                                                "description": "Login domain.",
                                                "maxLength": 128
                                            },
                                            "additional-params": {
                                                "type": "string",
                                                "description": "Additional parameters.",
                                                "maxLength": 128
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 128
                                            },
                                            "keyboard-layout": {
                                                "type": "string",
                                                "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                "enum": [
                                                    "ar-101",
                                                    "ar-102",
                                                    "ar-102-azerty",
                                                    "can-mul",
                                                    "cz",
                                                    "cz-qwerty",
                                                    "cz-pr",
                                                    "da",
                                                    "nl",
                                                    "de",
                                                    "de-ch",
                                                    "de-ibm",
                                                    "en-uk",
                                                    "en-uk-ext",
                                                    "en-us",
                                                    "en-us-dvorak",
                                                    "es",
                                                    "es-var",
                                                    "fi",
                                                    "fi-sami",
                                                    "fr",
                                                    "fr-ca",
                                                    "fr-ch",
                                                    "fr-be",
                                                    "hr",
                                                    "hu",
                                                    "hu-101",
                                                    "it",
                                                    "it-142",
                                                    "ja",
                                                    "ko",
                                                    "lt",
                                                    "lt-ibm",
                                                    "lt-std",
                                                    "lav-std",
                                                    "lav-leg",
                                                    "mk",
                                                    "mk-std",
                                                    "no",
                                                    "no-sami",
                                                    "pol-214",
                                                    "pol-pr",
                                                    "pt",
                                                    "pt-br",
                                                    "pt-br-abnt2",
                                                    "ru",
                                                    "ru-mne",
                                                    "ru-t",
                                                    "sl",
                                                    "sv",
                                                    "sv-sami",
                                                    "tuk",
                                                    "tur-f",
                                                    "tur-q",
                                                    "zh-sym-sg-us",
                                                    "zh-sym-us",
                                                    "zh-tr-hk",
                                                    "zh-tr-mo",
                                                    "zh-tr-us"
                                                ]
                                            },
                                            "security": {
                                                "type": "string",
                                                "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                "enum": [
                                                    "any",
                                                    "rdp",
                                                    "nla",
                                                    "tls"
                                                ]
                                            },
                                            "send-preconnection-id": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "preconnection-id": {
                                                "type": "integer",
                                                "description": "The numeric ID of the RDP source (0-4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "preconnection-blob": {
                                                "type": "string",
                                                "description": "An arbitrary string which identifies the RDP source.",
                                                "maxLength": 511
                                            },
                                            "load-balancing-info": {
                                                "type": "string",
                                                "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                "maxLength": 511
                                            },
                                            "restricted-admin": {
                                                "type": "string",
                                                "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Remote port.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "logon-user": {
                                                "type": "string",
                                                "description": "Logon user.",
                                                "maxLength": 35
                                            },
                                            "logon-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Logon password."
                                            },
                                            "color-depth": {
                                                "type": "string",
                                                "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                "enum": [
                                                    "32",
                                                    "16",
                                                    "8"
                                                ]
                                            },
                                            "sso": {
                                                "type": "string",
                                                "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                "enum": [
                                                    "disable",
                                                    "static",
                                                    "auto"
                                                ]
                                            },
                                            "form-data": {
                                                "description": "Form data.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name.",
                                                            "maxLength": 35
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value.",
                                                            "maxLength": 63
                                                        }
                                                    }
                                                },
                                                "maxItems": 10
                                            },
                                            "sso-credential": {
                                                "type": "string",
                                                "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                "enum": [
                                                    "sslvpn-login",
                                                    "alternative"
                                                ]
                                            },
                                            "sso-username": {
                                                "type": "string",
                                                "description": "SSO user name.",
                                                "maxLength": 35
                                            },
                                            "sso-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "SSO password."
                                            },
                                            "sso-credential-sent-once": {
                                                "type": "string",
                                                "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 128
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/user-bookmark"
                ]
            }
        },
        "\/vpn.ssl.web\/user-group-bookmark\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Group name.",
                                    "maxLength": 64
                                },
                                "bookmarks": {
                                    "description": "Bookmark table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark name.",
                                                "maxLength": 35
                                            },
                                            "apptype": {
                                                "type": "string",
                                                "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                "enum": [
                                                    "ftp",
                                                    "rdp",
                                                    "sftp",
                                                    "smb",
                                                    "ssh",
                                                    "telnet",
                                                    "vnc",
                                                    "web"
                                                ]
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL parameter.",
                                                "maxLength": 128
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Host name\/IP parameter.",
                                                "maxLength": 128
                                            },
                                            "folder": {
                                                "type": "string",
                                                "description": "Network shared file folder parameter.",
                                                "maxLength": 128
                                            },
                                            "domain": {
                                                "type": "string",
                                                "description": "Login domain.",
                                                "maxLength": 128
                                            },
                                            "additional-params": {
                                                "type": "string",
                                                "description": "Additional parameters.",
                                                "maxLength": 128
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 128
                                            },
                                            "keyboard-layout": {
                                                "type": "string",
                                                "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                "enum": [
                                                    "ar-101",
                                                    "ar-102",
                                                    "ar-102-azerty",
                                                    "can-mul",
                                                    "cz",
                                                    "cz-qwerty",
                                                    "cz-pr",
                                                    "da",
                                                    "nl",
                                                    "de",
                                                    "de-ch",
                                                    "de-ibm",
                                                    "en-uk",
                                                    "en-uk-ext",
                                                    "en-us",
                                                    "en-us-dvorak",
                                                    "es",
                                                    "es-var",
                                                    "fi",
                                                    "fi-sami",
                                                    "fr",
                                                    "fr-ca",
                                                    "fr-ch",
                                                    "fr-be",
                                                    "hr",
                                                    "hu",
                                                    "hu-101",
                                                    "it",
                                                    "it-142",
                                                    "ja",
                                                    "ko",
                                                    "lt",
                                                    "lt-ibm",
                                                    "lt-std",
                                                    "lav-std",
                                                    "lav-leg",
                                                    "mk",
                                                    "mk-std",
                                                    "no",
                                                    "no-sami",
                                                    "pol-214",
                                                    "pol-pr",
                                                    "pt",
                                                    "pt-br",
                                                    "pt-br-abnt2",
                                                    "ru",
                                                    "ru-mne",
                                                    "ru-t",
                                                    "sl",
                                                    "sv",
                                                    "sv-sami",
                                                    "tuk",
                                                    "tur-f",
                                                    "tur-q",
                                                    "zh-sym-sg-us",
                                                    "zh-sym-us",
                                                    "zh-tr-hk",
                                                    "zh-tr-mo",
                                                    "zh-tr-us"
                                                ]
                                            },
                                            "security": {
                                                "type": "string",
                                                "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                "enum": [
                                                    "any",
                                                    "rdp",
                                                    "nla",
                                                    "tls"
                                                ]
                                            },
                                            "send-preconnection-id": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "preconnection-id": {
                                                "type": "integer",
                                                "description": "The numeric ID of the RDP source (0-4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "preconnection-blob": {
                                                "type": "string",
                                                "description": "An arbitrary string which identifies the RDP source.",
                                                "maxLength": 511
                                            },
                                            "load-balancing-info": {
                                                "type": "string",
                                                "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                "maxLength": 511
                                            },
                                            "restricted-admin": {
                                                "type": "string",
                                                "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Remote port.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "logon-user": {
                                                "type": "string",
                                                "description": "Logon user.",
                                                "maxLength": 35
                                            },
                                            "logon-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Logon password."
                                            },
                                            "color-depth": {
                                                "type": "string",
                                                "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                "enum": [
                                                    "32",
                                                    "16",
                                                    "8"
                                                ]
                                            },
                                            "sso": {
                                                "type": "string",
                                                "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                "enum": [
                                                    "disable",
                                                    "static",
                                                    "auto"
                                                ]
                                            },
                                            "form-data": {
                                                "description": "Form data.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name.",
                                                            "maxLength": 35
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value.",
                                                            "maxLength": 63
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "sso-credential": {
                                                "type": "string",
                                                "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                "enum": [
                                                    "sslvpn-login",
                                                    "alternative"
                                                ]
                                            },
                                            "sso-username": {
                                                "type": "string",
                                                "description": "SSO user name.",
                                                "maxLength": 35
                                            },
                                            "sso-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "SSO password."
                                            },
                                            "sso-credential-sent-once": {
                                                "type": "string",
                                                "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 128
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/user-group-bookmark"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Group name.",
                                    "maxLength": 64
                                },
                                "bookmarks": {
                                    "description": "Bookmark table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark name.",
                                                "maxLength": 35
                                            },
                                            "apptype": {
                                                "type": "string",
                                                "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                "enum": [
                                                    "ftp",
                                                    "rdp",
                                                    "sftp",
                                                    "smb",
                                                    "ssh",
                                                    "telnet",
                                                    "vnc",
                                                    "web"
                                                ]
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL parameter.",
                                                "maxLength": 128
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Host name\/IP parameter.",
                                                "maxLength": 128
                                            },
                                            "folder": {
                                                "type": "string",
                                                "description": "Network shared file folder parameter.",
                                                "maxLength": 128
                                            },
                                            "domain": {
                                                "type": "string",
                                                "description": "Login domain.",
                                                "maxLength": 128
                                            },
                                            "additional-params": {
                                                "type": "string",
                                                "description": "Additional parameters.",
                                                "maxLength": 128
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 128
                                            },
                                            "keyboard-layout": {
                                                "type": "string",
                                                "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                "enum": [
                                                    "ar-101",
                                                    "ar-102",
                                                    "ar-102-azerty",
                                                    "can-mul",
                                                    "cz",
                                                    "cz-qwerty",
                                                    "cz-pr",
                                                    "da",
                                                    "nl",
                                                    "de",
                                                    "de-ch",
                                                    "de-ibm",
                                                    "en-uk",
                                                    "en-uk-ext",
                                                    "en-us",
                                                    "en-us-dvorak",
                                                    "es",
                                                    "es-var",
                                                    "fi",
                                                    "fi-sami",
                                                    "fr",
                                                    "fr-ca",
                                                    "fr-ch",
                                                    "fr-be",
                                                    "hr",
                                                    "hu",
                                                    "hu-101",
                                                    "it",
                                                    "it-142",
                                                    "ja",
                                                    "ko",
                                                    "lt",
                                                    "lt-ibm",
                                                    "lt-std",
                                                    "lav-std",
                                                    "lav-leg",
                                                    "mk",
                                                    "mk-std",
                                                    "no",
                                                    "no-sami",
                                                    "pol-214",
                                                    "pol-pr",
                                                    "pt",
                                                    "pt-br",
                                                    "pt-br-abnt2",
                                                    "ru",
                                                    "ru-mne",
                                                    "ru-t",
                                                    "sl",
                                                    "sv",
                                                    "sv-sami",
                                                    "tuk",
                                                    "tur-f",
                                                    "tur-q",
                                                    "zh-sym-sg-us",
                                                    "zh-sym-us",
                                                    "zh-tr-hk",
                                                    "zh-tr-mo",
                                                    "zh-tr-us"
                                                ]
                                            },
                                            "security": {
                                                "type": "string",
                                                "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                "enum": [
                                                    "any",
                                                    "rdp",
                                                    "nla",
                                                    "tls"
                                                ]
                                            },
                                            "send-preconnection-id": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "preconnection-id": {
                                                "type": "integer",
                                                "description": "The numeric ID of the RDP source (0-4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "preconnection-blob": {
                                                "type": "string",
                                                "description": "An arbitrary string which identifies the RDP source.",
                                                "maxLength": 511
                                            },
                                            "load-balancing-info": {
                                                "type": "string",
                                                "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                "maxLength": 511
                                            },
                                            "restricted-admin": {
                                                "type": "string",
                                                "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Remote port.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "logon-user": {
                                                "type": "string",
                                                "description": "Logon user.",
                                                "maxLength": 35
                                            },
                                            "logon-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Logon password."
                                            },
                                            "color-depth": {
                                                "type": "string",
                                                "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                "enum": [
                                                    "32",
                                                    "16",
                                                    "8"
                                                ]
                                            },
                                            "sso": {
                                                "type": "string",
                                                "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                "enum": [
                                                    "disable",
                                                    "static",
                                                    "auto"
                                                ]
                                            },
                                            "form-data": {
                                                "description": "Form data.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name.",
                                                            "maxLength": 35
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value.",
                                                            "maxLength": 63
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "sso-credential": {
                                                "type": "string",
                                                "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                "enum": [
                                                    "sslvpn-login",
                                                    "alternative"
                                                ]
                                            },
                                            "sso-username": {
                                                "type": "string",
                                                "description": "SSO user name.",
                                                "maxLength": 35
                                            },
                                            "sso-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "SSO password."
                                            },
                                            "sso-credential-sent-once": {
                                                "type": "string",
                                                "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 128
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/user-group-bookmark"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/user-group-bookmark"
                ]
            }
        },
        "\/vpn.ssl.web\/user-group-bookmark": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Group name.",
                                    "maxLength": 64
                                },
                                "bookmarks": {
                                    "description": "Bookmark table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark name.",
                                                "maxLength": 35
                                            },
                                            "apptype": {
                                                "type": "string",
                                                "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                "enum": [
                                                    "ftp",
                                                    "rdp",
                                                    "sftp",
                                                    "smb",
                                                    "ssh",
                                                    "telnet",
                                                    "vnc",
                                                    "web"
                                                ]
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL parameter.",
                                                "maxLength": 128
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Host name\/IP parameter.",
                                                "maxLength": 128
                                            },
                                            "folder": {
                                                "type": "string",
                                                "description": "Network shared file folder parameter.",
                                                "maxLength": 128
                                            },
                                            "domain": {
                                                "type": "string",
                                                "description": "Login domain.",
                                                "maxLength": 128
                                            },
                                            "additional-params": {
                                                "type": "string",
                                                "description": "Additional parameters.",
                                                "maxLength": 128
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 128
                                            },
                                            "keyboard-layout": {
                                                "type": "string",
                                                "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                "enum": [
                                                    "ar-101",
                                                    "ar-102",
                                                    "ar-102-azerty",
                                                    "can-mul",
                                                    "cz",
                                                    "cz-qwerty",
                                                    "cz-pr",
                                                    "da",
                                                    "nl",
                                                    "de",
                                                    "de-ch",
                                                    "de-ibm",
                                                    "en-uk",
                                                    "en-uk-ext",
                                                    "en-us",
                                                    "en-us-dvorak",
                                                    "es",
                                                    "es-var",
                                                    "fi",
                                                    "fi-sami",
                                                    "fr",
                                                    "fr-ca",
                                                    "fr-ch",
                                                    "fr-be",
                                                    "hr",
                                                    "hu",
                                                    "hu-101",
                                                    "it",
                                                    "it-142",
                                                    "ja",
                                                    "ko",
                                                    "lt",
                                                    "lt-ibm",
                                                    "lt-std",
                                                    "lav-std",
                                                    "lav-leg",
                                                    "mk",
                                                    "mk-std",
                                                    "no",
                                                    "no-sami",
                                                    "pol-214",
                                                    "pol-pr",
                                                    "pt",
                                                    "pt-br",
                                                    "pt-br-abnt2",
                                                    "ru",
                                                    "ru-mne",
                                                    "ru-t",
                                                    "sl",
                                                    "sv",
                                                    "sv-sami",
                                                    "tuk",
                                                    "tur-f",
                                                    "tur-q",
                                                    "zh-sym-sg-us",
                                                    "zh-sym-us",
                                                    "zh-tr-hk",
                                                    "zh-tr-mo",
                                                    "zh-tr-us"
                                                ]
                                            },
                                            "security": {
                                                "type": "string",
                                                "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                "enum": [
                                                    "any",
                                                    "rdp",
                                                    "nla",
                                                    "tls"
                                                ]
                                            },
                                            "send-preconnection-id": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "preconnection-id": {
                                                "type": "integer",
                                                "description": "The numeric ID of the RDP source (0-4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "preconnection-blob": {
                                                "type": "string",
                                                "description": "An arbitrary string which identifies the RDP source.",
                                                "maxLength": 511
                                            },
                                            "load-balancing-info": {
                                                "type": "string",
                                                "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                "maxLength": 511
                                            },
                                            "restricted-admin": {
                                                "type": "string",
                                                "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Remote port.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "logon-user": {
                                                "type": "string",
                                                "description": "Logon user.",
                                                "maxLength": 35
                                            },
                                            "logon-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Logon password."
                                            },
                                            "color-depth": {
                                                "type": "string",
                                                "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                "enum": [
                                                    "32",
                                                    "16",
                                                    "8"
                                                ]
                                            },
                                            "sso": {
                                                "type": "string",
                                                "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                "enum": [
                                                    "disable",
                                                    "static",
                                                    "auto"
                                                ]
                                            },
                                            "form-data": {
                                                "description": "Form data.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name.",
                                                            "maxLength": 35
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value.",
                                                            "maxLength": 63
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "sso-credential": {
                                                "type": "string",
                                                "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                "enum": [
                                                    "sslvpn-login",
                                                    "alternative"
                                                ]
                                            },
                                            "sso-username": {
                                                "type": "string",
                                                "description": "SSO user name.",
                                                "maxLength": 35
                                            },
                                            "sso-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "SSO password."
                                            },
                                            "sso-credential-sent-once": {
                                                "type": "string",
                                                "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 128
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/user-group-bookmark"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Group name.",
                                    "maxLength": 64
                                },
                                "bookmarks": {
                                    "description": "Bookmark table.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Bookmark name.",
                                                "maxLength": 35
                                            },
                                            "apptype": {
                                                "type": "string",
                                                "description": "Application type.   \nftp:FTP.   \nrdp:RDP.   \nsftp:SFTP.   \nsmb:SMB\/CIFS.   \nssh:SSH.   \ntelnet:Telnet.   \nvnc:VNC.   \nweb:HTTP\/HTTPS.",
                                                "enum": [
                                                    "ftp",
                                                    "rdp",
                                                    "sftp",
                                                    "smb",
                                                    "ssh",
                                                    "telnet",
                                                    "vnc",
                                                    "web"
                                                ]
                                            },
                                            "url": {
                                                "type": "string",
                                                "description": "URL parameter.",
                                                "maxLength": 128
                                            },
                                            "host": {
                                                "type": "string",
                                                "description": "Host name\/IP parameter.",
                                                "maxLength": 128
                                            },
                                            "folder": {
                                                "type": "string",
                                                "description": "Network shared file folder parameter.",
                                                "maxLength": 128
                                            },
                                            "domain": {
                                                "type": "string",
                                                "description": "Login domain.",
                                                "maxLength": 128
                                            },
                                            "additional-params": {
                                                "type": "string",
                                                "description": "Additional parameters.",
                                                "maxLength": 128
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 128
                                            },
                                            "keyboard-layout": {
                                                "type": "string",
                                                "description": "Keyboard layout.   \nar-101:Arabic (101).   \nar-102:Arabic (102).   \nar-102-azerty:Arabic (102) AZERTY.   \ncan-mul:Canadian Multilingual Standard.   \ncz:Czech.   \ncz-qwerty:Czech (QWERTY).   \ncz-pr:Czech Programmers.   \nda:Danish.   \nnl:Dutch.   \nde:German.   \nde-ch:German, Switzerland.   \nde-ibm:German (IBM).   \nen-uk:English, United Kingdom.   \nen-uk-ext:English, United Kingdom Extended.   \nen-us:English, United States.   \nen-us-dvorak:English, United States-Dvorak.   \nes:Spanish.   \nes-var:Spanish Variation.   \nfi:Finish.   \nfi-sami:Finnish with Sami.   \nfr:French.   \nfr-ca:French, Canada.   \nfr-ch:French, Switzerland.   \nfr-be:French, Belgium.   \nhr:Croatian.   \nhu:Hungarian.   \nhu-101:Hungarian 101-Key.   \nit:Italian.   \nit-142:Italian (142).   \nja:Japanese.   \nko:Korean.   \nlt:Lithuanian.   \nlt-ibm:Lithuanian IBM.   \nlt-std:Lithuanian Standard.   \nlav-std:Latvian (Standard).   \nlav-leg:Latvian (Legacy).   \nmk:Macedonian (FYROM).   \nmk-std:Macedonia (FYROM) - Standard.   \nno:Norwegian.   \nno-sami:Norwegian with Sami.   \npol-214:Polish (214).   \npol-pr:Polish (Programmers).   \npt:Portuguese.   \npt-br:Portuguese (Brazilian ABNT).   \npt-br-abnt2:Portuguese (Brazilian ABNT2).   \nru:Russian.   \nru-mne:Russian - Mnemonic.   \nru-t:Russian (Typewriter).   \nsl:Slovenian.   \nsv:Swedish.   \nsv-sami:Swedish with Sami.   \ntuk:Turkmen.   \ntur-f:Turkish F.   \ntur-q:Turkish Q.   \nzh-sym-sg-us:Chinese (Simplified, Singapore) - US keyboard.   \nzh-sym-us:Chinese (Simplified) - US Keyboard.   \nzh-tr-hk:Chinese (Traditional, Hong Kong S.A.R.).   \nzh-tr-mo:Chinese (Traditional Macao S.A.R.) - US Keyboard.   \nzh-tr-us:Chinese (Traditional) - US keyboard.",
                                                "enum": [
                                                    "ar-101",
                                                    "ar-102",
                                                    "ar-102-azerty",
                                                    "can-mul",
                                                    "cz",
                                                    "cz-qwerty",
                                                    "cz-pr",
                                                    "da",
                                                    "nl",
                                                    "de",
                                                    "de-ch",
                                                    "de-ibm",
                                                    "en-uk",
                                                    "en-uk-ext",
                                                    "en-us",
                                                    "en-us-dvorak",
                                                    "es",
                                                    "es-var",
                                                    "fi",
                                                    "fi-sami",
                                                    "fr",
                                                    "fr-ca",
                                                    "fr-ch",
                                                    "fr-be",
                                                    "hr",
                                                    "hu",
                                                    "hu-101",
                                                    "it",
                                                    "it-142",
                                                    "ja",
                                                    "ko",
                                                    "lt",
                                                    "lt-ibm",
                                                    "lt-std",
                                                    "lav-std",
                                                    "lav-leg",
                                                    "mk",
                                                    "mk-std",
                                                    "no",
                                                    "no-sami",
                                                    "pol-214",
                                                    "pol-pr",
                                                    "pt",
                                                    "pt-br",
                                                    "pt-br-abnt2",
                                                    "ru",
                                                    "ru-mne",
                                                    "ru-t",
                                                    "sl",
                                                    "sv",
                                                    "sv-sami",
                                                    "tuk",
                                                    "tur-f",
                                                    "tur-q",
                                                    "zh-sym-sg-us",
                                                    "zh-sym-us",
                                                    "zh-tr-hk",
                                                    "zh-tr-mo",
                                                    "zh-tr-us"
                                                ]
                                            },
                                            "security": {
                                                "type": "string",
                                                "description": "Security mode for RDP connection.   \nany:Allow the server to choose the type of security.   \nrdp:Standard RDP encryption.   \nnla:Network Level Authentication.   \ntls:TLS encryption.",
                                                "enum": [
                                                    "any",
                                                    "rdp",
                                                    "nla",
                                                    "tls"
                                                ]
                                            },
                                            "send-preconnection-id": {
                                                "type": "string",
                                                "description": "Enable\/disable sending of preconnection ID.   \nenable:Enable sending of preconnection ID.   \ndisable:Disable sending of preconnection ID.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "preconnection-id": {
                                                "type": "integer",
                                                "description": "The numeric ID of the RDP source (0-4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "preconnection-blob": {
                                                "type": "string",
                                                "description": "An arbitrary string which identifies the RDP source.",
                                                "maxLength": 511
                                            },
                                            "load-balancing-info": {
                                                "type": "string",
                                                "description": "The load balancing information or cookie which should be provided to the connection broker.",
                                                "maxLength": 511
                                            },
                                            "restricted-admin": {
                                                "type": "string",
                                                "description": "Enable\/disable restricted admin mode for RDP.   \nenable:Enable restricted admin mode for RDP.   \ndisable:Disable restricted admin mode for RDP.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "port": {
                                                "type": "integer",
                                                "description": "Remote port.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "logon-user": {
                                                "type": "string",
                                                "description": "Logon user.",
                                                "maxLength": 35
                                            },
                                            "logon-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "Logon password."
                                            },
                                            "color-depth": {
                                                "type": "string",
                                                "description": "Color depth per pixel.   \n32:32bits per pixel.   \n16:16bits per pixel.   \n8:8bits per pixel.",
                                                "enum": [
                                                    "32",
                                                    "16",
                                                    "8"
                                                ]
                                            },
                                            "sso": {
                                                "type": "string",
                                                "description": "Single Sign-On.   \ndisable:Disable SSO.   \nstatic:Static SSO.   \nauto:Auto SSO.",
                                                "enum": [
                                                    "disable",
                                                    "static",
                                                    "auto"
                                                ]
                                            },
                                            "form-data": {
                                                "description": "Form data.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name.",
                                                            "maxLength": 35
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value.",
                                                            "maxLength": 63
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "sso-credential": {
                                                "type": "string",
                                                "description": "Single sign-on credentials.   \nsslvpn-login:SSL-VPN login.   \nalternative:Alternative.",
                                                "enum": [
                                                    "sslvpn-login",
                                                    "alternative"
                                                ]
                                            },
                                            "sso-username": {
                                                "type": "string",
                                                "description": "SSO user name.",
                                                "maxLength": 35
                                            },
                                            "sso-password": {
                                                "type": "string",
                                                "format": "password",
                                                "description": "SSO password."
                                            },
                                            "sso-credential-sent-once": {
                                                "type": "string",
                                                "description": "Single sign-on credentials are only sent once to remote server.   \nenable:Single sign-on credentials are only sent once to remote server.   \ndisable:Single sign-on credentials are sent to remote server for every HTTP request.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": 128
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ssl.web\/user-group-bookmark"
                ]
            }
        },
        "\/vpn.ssl\/settings": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable SSL-VPN.   \nenable:Enable SSL-VPN.   \ndisable:Disable SSL-VPN.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "reqclientcert": {
                                    "type": "string",
                                    "description": "Enable\/disable to require client certificates for all SSL-VPN users.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-peer": {
                                    "type": "string",
                                    "description": "Name of user peer.",
                                    "maxLength": 35
                                },
                                "ssl-max-proto-ver": {
                                    "type": "string",
                                    "description": "SSL maximum protocol version.   \ntls1-0:TLS version 1.0.   \ntls1-1:TLS version 1.1.   \ntls1-2:TLS version 1.2.   \ntls1-3:TLS version 1.3.",
                                    "enum": [
                                        "tls1-0",
                                        "tls1-1",
                                        "tls1-2",
                                        "tls1-3"
                                    ]
                                },
                                "ssl-min-proto-ver": {
                                    "type": "string",
                                    "description": "SSL minimum protocol version.   \ntls1-0:TLS version 1.0.   \ntls1-1:TLS version 1.1.   \ntls1-2:TLS version 1.2.   \ntls1-3:TLS version 1.3.",
                                    "enum": [
                                        "tls1-0",
                                        "tls1-1",
                                        "tls1-2",
                                        "tls1-3"
                                    ]
                                },
                                "banned-cipher": {
                                    "type": "string",
                                    "description": "Select one or more cipher technologies that cannot be used in SSL-VPN negotiations. Only applies to TLS 1.2 and below.   \nRSA:Ban the use of cipher suites using RSA key.   \nDHE:Ban the use of cipher suites using authenticated ephemeral DH key agreement.   \nECDHE:Ban the use of cipher suites using authenticated ephemeral ECDH key agreement.   \nDSS:Ban the use of cipher suites using DSS authentication.   \nECDSA:Ban the use of cipher suites using ECDSA authentication.   \nAES:Ban the use of cipher suites using either 128 or 256 bit AES.   \nAESGCM:Ban the use of cipher suites AES in Galois Counter Mode (GCM).   \nCAMELLIA:Ban the use of cipher suites using either 128 or 256 bit CAMELLIA.   \n3DES:Ban the use of cipher suites using triple DES   \nSHA1:Ban the use of cipher suites using HMAC-SHA1.   \nSHA256:Ban the use of cipher suites using HMAC-SHA256.   \nSHA384:Ban the use of cipher suites using HMAC-SHA384.   \nSTATIC:Ban the use of cipher suites using static keys.   \nCHACHA20:Ban the use of cipher suites using ChaCha20.   \nARIA:Ban the use of cipher suites using ARIA.   \nAESCCM:Ban the use of cipher suites using AESCCM.",
                                    "enum": [
                                        "RSA",
                                        "DHE",
                                        "ECDHE",
                                        "DSS",
                                        "ECDSA",
                                        "AES",
                                        "AESGCM",
                                        "CAMELLIA",
                                        "3DES",
                                        "SHA1",
                                        "SHA256",
                                        "SHA384",
                                        "STATIC",
                                        "CHACHA20",
                                        "ARIA",
                                        "AESCCM"
                                    ]
                                },
                                "ciphersuite": {
                                    "type": "string",
                                    "description": "Select one or more TLS 1.3 ciphersuites to enable. Does not affect ciphers in TLS 1.2 and below. At least one must be enabled. To disable all, set ssl-max-proto-ver to tls1-2 or below.   \nTLS-AES-128-GCM-SHA256:Enable TLS-AES-128-GCM-SHA256 in TLS 1.3.   \nTLS-AES-256-GCM-SHA384:Enable TLS-AES-256-GCM-SHA384 in TLS 1.3.   \nTLS-CHACHA20-POLY1305-SHA256:Enable TLS-CHACHA20-POLY1305-SHA256 in TLS 1.3.   \nTLS-AES-128-CCM-SHA256:Enable TLS-AES-128-CCM-SHA256 in TLS 1.3.   \nTLS-AES-128-CCM-8-SHA256:Enable TLS-AES-128-CCM-8-SHA256 in TLS 1.3.",
                                    "enum": [
                                        "TLS-AES-128-GCM-SHA256",
                                        "TLS-AES-256-GCM-SHA384",
                                        "TLS-CHACHA20-POLY1305-SHA256",
                                        "TLS-AES-128-CCM-SHA256",
                                        "TLS-AES-128-CCM-8-SHA256"
                                    ]
                                },
                                "ssl-insert-empty-fragment": {
                                    "type": "string",
                                    "description": "Enable\/disable insertion of empty fragment.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "https-redirect": {
                                    "type": "string",
                                    "description": "Enable\/disable redirect of port 80 to SSL-VPN port.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "x-content-type-options": {
                                    "type": "string",
                                    "description": "Add HTTP X-Content-Type-Options header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ssl-client-renegotiation": {
                                    "type": "string",
                                    "description": "Enable\/disable to allow client renegotiation by the server if the tunnel goes down.   \ndisable:Abort any SSL connection that attempts to renegotiate.   \nenable:Allow a SSL client to renegotiate.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "force-two-factor-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable only PKI users with two-factor authentication for SSL-VPNs.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "unsafe-legacy-renegotiation": {
                                    "type": "string",
                                    "description": "Enable\/disable unsafe legacy re-negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "servercert": {
                                    "type": "string",
                                    "description": "Name of the server certificate to be used for SSL-VPNs.",
                                    "maxLength": 35
                                },
                                "algorithm": {
                                    "type": "string",
                                    "description": "Force the SSL-VPN security level. High allows only high. Medium allows medium and high. Low allows any.   \nhigh:High algorithms.   \nmedium:High and medium algorithms.   \ndefault:default   \nlow:All algorithms.",
                                    "enum": [
                                        "high",
                                        "medium",
                                        "default",
                                        "low"
                                    ]
                                },
                                "idle-timeout": {
                                    "type": "integer",
                                    "description": "SSL-VPN disconnects if idle for specified time in seconds.",
                                    "maximum": 259200,
                                    "minimum": 0
                                },
                                "auth-timeout": {
                                    "type": "integer",
                                    "description": "SSL-VPN authentication timeout (1 - 259200 sec (3 days), 0 for no timeout).",
                                    "maximum": 259200,
                                    "minimum": 0
                                },
                                "login-attempt-limit": {
                                    "type": "integer",
                                    "description": "SSL-VPN maximum login attempt times before block (0 - 10, default = 2, 0 = no limit).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "login-block-time": {
                                    "type": "integer",
                                    "description": "Time for which a user is blocked from logging in after too many failed login attempts (0 - 86400 sec, default = 60).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "login-timeout": {
                                    "type": "integer",
                                    "description": "SSLVPN maximum login timeout (10 - 180 sec, default = 30).",
                                    "maximum": 180,
                                    "minimum": 10
                                },
                                "dtls-hello-timeout": {
                                    "type": "integer",
                                    "description": "SSLVPN maximum DTLS hello timeout (10 - 60 sec, default = 10).",
                                    "maximum": 60,
                                    "minimum": 10
                                },
                                "tunnel-ip-pools": {
                                    "description": "Names of the IPv4 IP Pool firewall objects that define the IP addresses reserved for remote clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "tunnel-ipv6-pools": {
                                    "description": "Names of the IPv6 IP Pool firewall objects that define the IP addresses reserved for remote clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dns-suffix": {
                                    "type": "string",
                                    "description": "DNS suffix used for SSL-VPN clients.",
                                    "maxLength": 253
                                },
                                "dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "DNS server 1."
                                },
                                "dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "DNS server 2."
                                },
                                "wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 1."
                                },
                                "wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 2."
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-wins-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 1."
                                },
                                "ipv6-wins-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 2."
                                },
                                "url-obscuration": {
                                    "type": "string",
                                    "description": "Enable\/disable to obscure the host name of the URL of the web browser display.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "http-compression": {
                                    "type": "string",
                                    "description": "Enable\/disable to allow HTTP compression over SSL-VPN tunnels.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "http-only-cookie": {
                                    "type": "string",
                                    "description": "Enable\/disable SSL-VPN support for HttpOnly cookies.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "deflate-compression-level": {
                                    "type": "integer",
                                    "description": "Compression level (0~9).",
                                    "maximum": 9,
                                    "minimum": 0
                                },
                                "deflate-min-data-size": {
                                    "type": "integer",
                                    "description": "Minimum amount of data that triggers compression (200 - 65535 bytes).",
                                    "maximum": 65535,
                                    "minimum": 200
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "SSL-VPN access port (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "port-precedence": {
                                    "type": "string",
                                    "description": "Enable\/disable, Enable means that if SSL-VPN connections are allowed on an interface admin GUI connections are blocked on that interface.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-tunnel-static-route": {
                                    "type": "string",
                                    "description": "Enable\/disable to auto-create static routes for the SSL-VPN tunnel IP addresses.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "header-x-forwarded-for": {
                                    "type": "string",
                                    "description": "Forward the same, add, or remove HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "source-interface": {
                                    "description": "SSL-VPN source interface of incoming traffic.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "source-address": {
                                    "description": "Source address of incoming traffic.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "source-address-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negated source address match.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "source-address6": {
                                    "description": "IPv6 source address of incoming traffic.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "IPv6 address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "source-address6-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negated source IPv6 address match.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "default-portal": {
                                    "type": "string",
                                    "description": "Default SSL-VPN portal.",
                                    "maxLength": 35
                                },
                                "authentication-rule": {
                                    "description": "Authentication rule for SSL-VPN.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID (0 - 4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "source-interface": {
                                                "description": "SSL-VPN source interface of incoming traffic.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Interface name.",
                                                            "maxLength": 35
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "source-address": {
                                                "description": "Source address of incoming traffic.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "source-address-negate": {
                                                "type": "string",
                                                "description": "Enable\/disable negated source address match.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "source-address6": {
                                                "description": "IPv6 source address of incoming traffic.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "IPv6 address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "source-address6-negate": {
                                                "type": "string",
                                                "description": "Enable\/disable negated source IPv6 address match.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "users": {
                                                "description": "User name.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "User name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "groups": {
                                                "description": "User groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "portal": {
                                                "type": "string",
                                                "description": "SSL-VPN portal.",
                                                "maxLength": 35
                                            },
                                            "realm": {
                                                "type": "string",
                                                "description": "SSL-VPN realm.",
                                                "maxLength": 35
                                            },
                                            "client-cert": {
                                                "type": "string",
                                                "description": "Enable\/disable SSL-VPN client certificate restrictive.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "user-peer": {
                                                "type": "string",
                                                "description": "Name of user peer.",
                                                "maxLength": 35
                                            },
                                            "cipher": {
                                                "type": "string",
                                                "description": "SSL-VPN cipher strength.   \nany:Any cipher strength.   \nhigh:High cipher strength (>= 168 bits).   \nmedium:Medium cipher strength (>= 128 bits).",
                                                "enum": [
                                                    "any",
                                                    "high",
                                                    "medium"
                                                ]
                                            },
                                            "auth": {
                                                "type": "string",
                                                "description": "SSL-VPN authentication method restriction.   \nany:Any   \nlocal:Local   \nradius:RADIUS   \ntacacs+:TACACS+   \nldap:LDAP",
                                                "enum": [
                                                    "any",
                                                    "local",
                                                    "radius",
                                                    "tacacs+",
                                                    "ldap"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dtls-tunnel": {
                                    "type": "string",
                                    "description": "Enable\/disable DTLS to prevent eavesdropping, tampering, or message forgery.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dtls-max-proto-ver": {
                                    "type": "string",
                                    "description": "DTLS maximum protocol version.   \ndtls1-0:DTLS version 1.0.   \ndtls1-2:DTLS version 1.2.",
                                    "enum": [
                                        "dtls1-0",
                                        "dtls1-2"
                                    ]
                                },
                                "dtls-min-proto-ver": {
                                    "type": "string",
                                    "description": "DTLS minimum protocol version.   \ndtls1-0:DTLS version 1.0.   \ndtls1-2:DTLS version 1.2.",
                                    "enum": [
                                        "dtls1-0",
                                        "dtls1-2"
                                    ]
                                },
                                "check-referer": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of referer field in HTTP request header.   \nenable:Enable verification of referer field in HTTP request header.   \ndisable:Disable verification of referer field in HTTP request header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "http-request-header-timeout": {
                                    "type": "integer",
                                    "description": "SSL-VPN session is disconnected if an HTTP request header is not received within this time (1 - 60 sec, default = 20).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "http-request-body-timeout": {
                                    "type": "integer",
                                    "description": "SSL-VPN session is disconnected if an HTTP request body is not received within this time (1 - 60 sec, default = 20).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "auth-session-check-source-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable checking of source IP for authentication session.   \nenable:Enable checking of source IP for authentication session.   \ndisable:Disable checking of source IP for authentication session.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "tunnel-connect-without-reauth": {
                                    "type": "string",
                                    "description": "Enable\/disable tunnel connection without re-authorization if previous connection dropped.   \nenable:Enable tunnel connection without re-authorization.   \ndisable:Disable tunnel connection without re-authorization.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "tunnel-user-session-timeout": {
                                    "type": "integer",
                                    "description": "Time out value to clean up user session after tunnel connection is dropped (1 - 255 sec, default=30).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "hsts-include-subdomains": {
                                    "type": "string",
                                    "description": "Add HSTS includeSubDomains response header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "transform-backward-slashes": {
                                    "type": "string",
                                    "description": "Transform backward slashes to forward slashes in URLs.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "encode-2f-sequence": {
                                    "type": "string",
                                    "description": "Encode \\2F sequence to forward slash in URLs.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "encrypt-and-store-password": {
                                    "type": "string",
                                    "description": "Encrypt and store user passwords for SSL-VPN web sessions.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "client-sigalgs": {
                                    "type": "string",
                                    "description": "Set signature algorithms related to client authentication. Affects TLS version <= 1.2 only.   \nno-rsa-pss:Disable RSA-PSS signature algorithms for client authentication.   \nall:Enable all supported signature algorithms for client authentication.",
                                    "enum": [
                                        "no-rsa-pss",
                                        "all"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn.ssl\/settings"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable SSL-VPN.   \nenable:Enable SSL-VPN.   \ndisable:Disable SSL-VPN.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "reqclientcert": {
                                    "type": "string",
                                    "description": "Enable\/disable to require client certificates for all SSL-VPN users.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-peer": {
                                    "type": "string",
                                    "description": "Name of user peer.",
                                    "maxLength": 35
                                },
                                "ssl-max-proto-ver": {
                                    "type": "string",
                                    "description": "SSL maximum protocol version.   \ntls1-0:TLS version 1.0.   \ntls1-1:TLS version 1.1.   \ntls1-2:TLS version 1.2.   \ntls1-3:TLS version 1.3.",
                                    "enum": [
                                        "tls1-0",
                                        "tls1-1",
                                        "tls1-2",
                                        "tls1-3"
                                    ]
                                },
                                "ssl-min-proto-ver": {
                                    "type": "string",
                                    "description": "SSL minimum protocol version.   \ntls1-0:TLS version 1.0.   \ntls1-1:TLS version 1.1.   \ntls1-2:TLS version 1.2.   \ntls1-3:TLS version 1.3.",
                                    "enum": [
                                        "tls1-0",
                                        "tls1-1",
                                        "tls1-2",
                                        "tls1-3"
                                    ]
                                },
                                "banned-cipher": {
                                    "type": "string",
                                    "description": "Select one or more cipher technologies that cannot be used in SSL-VPN negotiations. Only applies to TLS 1.2 and below.   \nRSA:Ban the use of cipher suites using RSA key.   \nDHE:Ban the use of cipher suites using authenticated ephemeral DH key agreement.   \nECDHE:Ban the use of cipher suites using authenticated ephemeral ECDH key agreement.   \nDSS:Ban the use of cipher suites using DSS authentication.   \nECDSA:Ban the use of cipher suites using ECDSA authentication.   \nAES:Ban the use of cipher suites using either 128 or 256 bit AES.   \nAESGCM:Ban the use of cipher suites AES in Galois Counter Mode (GCM).   \nCAMELLIA:Ban the use of cipher suites using either 128 or 256 bit CAMELLIA.   \n3DES:Ban the use of cipher suites using triple DES   \nSHA1:Ban the use of cipher suites using HMAC-SHA1.   \nSHA256:Ban the use of cipher suites using HMAC-SHA256.   \nSHA384:Ban the use of cipher suites using HMAC-SHA384.   \nSTATIC:Ban the use of cipher suites using static keys.   \nCHACHA20:Ban the use of cipher suites using ChaCha20.   \nARIA:Ban the use of cipher suites using ARIA.   \nAESCCM:Ban the use of cipher suites using AESCCM.",
                                    "enum": [
                                        "RSA",
                                        "DHE",
                                        "ECDHE",
                                        "DSS",
                                        "ECDSA",
                                        "AES",
                                        "AESGCM",
                                        "CAMELLIA",
                                        "3DES",
                                        "SHA1",
                                        "SHA256",
                                        "SHA384",
                                        "STATIC",
                                        "CHACHA20",
                                        "ARIA",
                                        "AESCCM"
                                    ]
                                },
                                "ciphersuite": {
                                    "type": "string",
                                    "description": "Select one or more TLS 1.3 ciphersuites to enable. Does not affect ciphers in TLS 1.2 and below. At least one must be enabled. To disable all, set ssl-max-proto-ver to tls1-2 or below.   \nTLS-AES-128-GCM-SHA256:Enable TLS-AES-128-GCM-SHA256 in TLS 1.3.   \nTLS-AES-256-GCM-SHA384:Enable TLS-AES-256-GCM-SHA384 in TLS 1.3.   \nTLS-CHACHA20-POLY1305-SHA256:Enable TLS-CHACHA20-POLY1305-SHA256 in TLS 1.3.   \nTLS-AES-128-CCM-SHA256:Enable TLS-AES-128-CCM-SHA256 in TLS 1.3.   \nTLS-AES-128-CCM-8-SHA256:Enable TLS-AES-128-CCM-8-SHA256 in TLS 1.3.",
                                    "enum": [
                                        "TLS-AES-128-GCM-SHA256",
                                        "TLS-AES-256-GCM-SHA384",
                                        "TLS-CHACHA20-POLY1305-SHA256",
                                        "TLS-AES-128-CCM-SHA256",
                                        "TLS-AES-128-CCM-8-SHA256"
                                    ]
                                },
                                "ssl-insert-empty-fragment": {
                                    "type": "string",
                                    "description": "Enable\/disable insertion of empty fragment.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "https-redirect": {
                                    "type": "string",
                                    "description": "Enable\/disable redirect of port 80 to SSL-VPN port.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "x-content-type-options": {
                                    "type": "string",
                                    "description": "Add HTTP X-Content-Type-Options header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ssl-client-renegotiation": {
                                    "type": "string",
                                    "description": "Enable\/disable to allow client renegotiation by the server if the tunnel goes down.   \ndisable:Abort any SSL connection that attempts to renegotiate.   \nenable:Allow a SSL client to renegotiate.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "force-two-factor-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable only PKI users with two-factor authentication for SSL-VPNs.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "unsafe-legacy-renegotiation": {
                                    "type": "string",
                                    "description": "Enable\/disable unsafe legacy re-negotiation.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "servercert": {
                                    "type": "string",
                                    "description": "Name of the server certificate to be used for SSL-VPNs.",
                                    "maxLength": 35
                                },
                                "algorithm": {
                                    "type": "string",
                                    "description": "Force the SSL-VPN security level. High allows only high. Medium allows medium and high. Low allows any.   \nhigh:High algorithms.   \nmedium:High and medium algorithms.   \ndefault:default   \nlow:All algorithms.",
                                    "enum": [
                                        "high",
                                        "medium",
                                        "default",
                                        "low"
                                    ]
                                },
                                "idle-timeout": {
                                    "type": "integer",
                                    "description": "SSL-VPN disconnects if idle for specified time in seconds.",
                                    "maximum": 259200,
                                    "minimum": 0
                                },
                                "auth-timeout": {
                                    "type": "integer",
                                    "description": "SSL-VPN authentication timeout (1 - 259200 sec (3 days), 0 for no timeout).",
                                    "maximum": 259200,
                                    "minimum": 0
                                },
                                "login-attempt-limit": {
                                    "type": "integer",
                                    "description": "SSL-VPN maximum login attempt times before block (0 - 10, default = 2, 0 = no limit).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "login-block-time": {
                                    "type": "integer",
                                    "description": "Time for which a user is blocked from logging in after too many failed login attempts (0 - 86400 sec, default = 60).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "login-timeout": {
                                    "type": "integer",
                                    "description": "SSLVPN maximum login timeout (10 - 180 sec, default = 30).",
                                    "maximum": 180,
                                    "minimum": 10
                                },
                                "dtls-hello-timeout": {
                                    "type": "integer",
                                    "description": "SSLVPN maximum DTLS hello timeout (10 - 60 sec, default = 10).",
                                    "maximum": 60,
                                    "minimum": 10
                                },
                                "tunnel-ip-pools": {
                                    "description": "Names of the IPv4 IP Pool firewall objects that define the IP addresses reserved for remote clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "tunnel-ipv6-pools": {
                                    "description": "Names of the IPv6 IP Pool firewall objects that define the IP addresses reserved for remote clients.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dns-suffix": {
                                    "type": "string",
                                    "description": "DNS suffix used for SSL-VPN clients.",
                                    "maxLength": 253
                                },
                                "dns-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "DNS server 1."
                                },
                                "dns-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "DNS server 2."
                                },
                                "wins-server1": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 1."
                                },
                                "wins-server2": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WINS server 2."
                                },
                                "ipv6-dns-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 1."
                                },
                                "ipv6-dns-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 DNS server 2."
                                },
                                "ipv6-wins-server1": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 1."
                                },
                                "ipv6-wins-server2": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "IPv6 WINS server 2."
                                },
                                "url-obscuration": {
                                    "type": "string",
                                    "description": "Enable\/disable to obscure the host name of the URL of the web browser display.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "http-compression": {
                                    "type": "string",
                                    "description": "Enable\/disable to allow HTTP compression over SSL-VPN tunnels.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "http-only-cookie": {
                                    "type": "string",
                                    "description": "Enable\/disable SSL-VPN support for HttpOnly cookies.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "deflate-compression-level": {
                                    "type": "integer",
                                    "description": "Compression level (0~9).",
                                    "maximum": 9,
                                    "minimum": 0
                                },
                                "deflate-min-data-size": {
                                    "type": "integer",
                                    "description": "Minimum amount of data that triggers compression (200 - 65535 bytes).",
                                    "maximum": 65535,
                                    "minimum": 200
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "SSL-VPN access port (1 - 65535).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "port-precedence": {
                                    "type": "string",
                                    "description": "Enable\/disable, Enable means that if SSL-VPN connections are allowed on an interface admin GUI connections are blocked on that interface.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "auto-tunnel-static-route": {
                                    "type": "string",
                                    "description": "Enable\/disable to auto-create static routes for the SSL-VPN tunnel IP addresses.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "header-x-forwarded-for": {
                                    "type": "string",
                                    "description": "Forward the same, add, or remove HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "source-interface": {
                                    "description": "SSL-VPN source interface of incoming traffic.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "source-address": {
                                    "description": "Source address of incoming traffic.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "source-address-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negated source address match.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "source-address6": {
                                    "description": "IPv6 source address of incoming traffic.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "IPv6 address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "source-address6-negate": {
                                    "type": "string",
                                    "description": "Enable\/disable negated source IPv6 address match.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "default-portal": {
                                    "type": "string",
                                    "description": "Default SSL-VPN portal.",
                                    "maxLength": 35
                                },
                                "authentication-rule": {
                                    "description": "Authentication rule for SSL-VPN.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID (0 - 4294967295).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "source-interface": {
                                                "description": "SSL-VPN source interface of incoming traffic.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Interface name.",
                                                            "maxLength": 35
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "source-address": {
                                                "description": "Source address of incoming traffic.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "source-address-negate": {
                                                "type": "string",
                                                "description": "Enable\/disable negated source address match.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "source-address6": {
                                                "description": "IPv6 source address of incoming traffic.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "IPv6 address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "source-address6-negate": {
                                                "type": "string",
                                                "description": "Enable\/disable negated source IPv6 address match.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "users": {
                                                "description": "User name.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "User name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "groups": {
                                                "description": "User groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Group name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "portal": {
                                                "type": "string",
                                                "description": "SSL-VPN portal.",
                                                "maxLength": 35
                                            },
                                            "realm": {
                                                "type": "string",
                                                "description": "SSL-VPN realm.",
                                                "maxLength": 35
                                            },
                                            "client-cert": {
                                                "type": "string",
                                                "description": "Enable\/disable SSL-VPN client certificate restrictive.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "user-peer": {
                                                "type": "string",
                                                "description": "Name of user peer.",
                                                "maxLength": 35
                                            },
                                            "cipher": {
                                                "type": "string",
                                                "description": "SSL-VPN cipher strength.   \nany:Any cipher strength.   \nhigh:High cipher strength (>= 168 bits).   \nmedium:Medium cipher strength (>= 128 bits).",
                                                "enum": [
                                                    "any",
                                                    "high",
                                                    "medium"
                                                ]
                                            },
                                            "auth": {
                                                "type": "string",
                                                "description": "SSL-VPN authentication method restriction.   \nany:Any   \nlocal:Local   \nradius:RADIUS   \ntacacs+:TACACS+   \nldap:LDAP",
                                                "enum": [
                                                    "any",
                                                    "local",
                                                    "radius",
                                                    "tacacs+",
                                                    "ldap"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "dtls-tunnel": {
                                    "type": "string",
                                    "description": "Enable\/disable DTLS to prevent eavesdropping, tampering, or message forgery.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dtls-max-proto-ver": {
                                    "type": "string",
                                    "description": "DTLS maximum protocol version.   \ndtls1-0:DTLS version 1.0.   \ndtls1-2:DTLS version 1.2.",
                                    "enum": [
                                        "dtls1-0",
                                        "dtls1-2"
                                    ]
                                },
                                "dtls-min-proto-ver": {
                                    "type": "string",
                                    "description": "DTLS minimum protocol version.   \ndtls1-0:DTLS version 1.0.   \ndtls1-2:DTLS version 1.2.",
                                    "enum": [
                                        "dtls1-0",
                                        "dtls1-2"
                                    ]
                                },
                                "check-referer": {
                                    "type": "string",
                                    "description": "Enable\/disable verification of referer field in HTTP request header.   \nenable:Enable verification of referer field in HTTP request header.   \ndisable:Disable verification of referer field in HTTP request header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "http-request-header-timeout": {
                                    "type": "integer",
                                    "description": "SSL-VPN session is disconnected if an HTTP request header is not received within this time (1 - 60 sec, default = 20).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "http-request-body-timeout": {
                                    "type": "integer",
                                    "description": "SSL-VPN session is disconnected if an HTTP request body is not received within this time (1 - 60 sec, default = 20).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "auth-session-check-source-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable checking of source IP for authentication session.   \nenable:Enable checking of source IP for authentication session.   \ndisable:Disable checking of source IP for authentication session.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "tunnel-connect-without-reauth": {
                                    "type": "string",
                                    "description": "Enable\/disable tunnel connection without re-authorization if previous connection dropped.   \nenable:Enable tunnel connection without re-authorization.   \ndisable:Disable tunnel connection without re-authorization.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "tunnel-user-session-timeout": {
                                    "type": "integer",
                                    "description": "Time out value to clean up user session after tunnel connection is dropped (1 - 255 sec, default=30).",
                                    "maximum": 255,
                                    "minimum": 1
                                },
                                "hsts-include-subdomains": {
                                    "type": "string",
                                    "description": "Add HSTS includeSubDomains response header.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "transform-backward-slashes": {
                                    "type": "string",
                                    "description": "Transform backward slashes to forward slashes in URLs.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "encode-2f-sequence": {
                                    "type": "string",
                                    "description": "Encode \\2F sequence to forward slash in URLs.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "encrypt-and-store-password": {
                                    "type": "string",
                                    "description": "Encrypt and store user passwords for SSL-VPN web sessions.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "client-sigalgs": {
                                    "type": "string",
                                    "description": "Set signature algorithms related to client authentication. Affects TLS version <= 1.2 only.   \nno-rsa-pss:Disable RSA-PSS signature algorithms for client authentication.   \nall:Enable all supported signature algorithms for client authentication.",
                                    "enum": [
                                        "no-rsa-pss",
                                        "all"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn.ssl\/settings"
                ]
            }
        },
        "\/vpn\/l2tp": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiGate as a L2TP gateway.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End IP."
                                },
                                "sip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start IP."
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group.",
                                    "maxLength": 35
                                },
                                "enforce-ipsec": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec enforcement.   \nenable:Enable enforce-ipsec   \ndisable:Disable enforce-ipsec",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "lcp-echo-interval": {
                                    "type": "integer",
                                    "description": "Time in seconds between PPPoE Link Control Protocol (LCP) echo requests.",
                                    "maximum": 32767,
                                    "minimum": 0
                                },
                                "lcp-max-echo-fails": {
                                    "type": "integer",
                                    "description": "Maximum number of missed LCP echo messages before disconnect.",
                                    "maximum": 32767,
                                    "minimum": 0
                                },
                                "compress": {
                                    "type": "string",
                                    "description": "Enable\/disable data compression.   \nenable:Enable compress   \ndisable:Disable compress",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn\/l2tp"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiGate as a L2TP gateway.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End IP."
                                },
                                "sip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start IP."
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group.",
                                    "maxLength": 35
                                },
                                "enforce-ipsec": {
                                    "type": "string",
                                    "description": "Enable\/disable IPsec enforcement.   \nenable:Enable enforce-ipsec   \ndisable:Disable enforce-ipsec",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "lcp-echo-interval": {
                                    "type": "integer",
                                    "description": "Time in seconds between PPPoE Link Control Protocol (LCP) echo requests.",
                                    "maximum": 32767,
                                    "minimum": 0
                                },
                                "lcp-max-echo-fails": {
                                    "type": "integer",
                                    "description": "Maximum number of missed LCP echo messages before disconnect.",
                                    "maximum": 32767,
                                    "minimum": 0
                                },
                                "compress": {
                                    "type": "string",
                                    "description": "Enable\/disable data compression.   \nenable:Enable compress   \ndisable:Disable compress",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn\/l2tp"
                ]
            }
        },
        "\/vpn\/ocvpn": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable Overlay Controller cloud assisted VPN.   \nenable:Enable Overlay Controller VPN.   \ndisable:Disable Overlay Controller VPN.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "role": {
                                    "type": "string",
                                    "description": "Set device role.   \nspoke:Register device as static spoke.   \nprimary-hub:Register device as primary hub.   \nsecondary-hub:Register device as secondary hub.",
                                    "enum": [
                                        "spoke",
                                        "primary-hub",
                                        "secondary-hub"
                                    ]
                                },
                                "multipath": {
                                    "type": "string",
                                    "description": "Enable\/disable multipath redundancy.   \nenable:Enable multipath redundancy.   \ndisable:Disable multipath redundancy.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable adding OCVPN tunnels to SDWAN.   \nenable:Enable adding OCVPN tunnels to SDWAN.   \ndisable:Disable adding OCVPN tunnels to SDWAN.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "wan-interface": {
                                    "description": "FortiGate WAN interfaces to use with OCVPN.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ip-allocation-block": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Class B subnet reserved for private IP address assignment."
                                },
                                "overlays": {
                                    "description": "Network overlays to register with Overlay Controller VPN service.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "overlay-name": {
                                                "type": "string",
                                                "description": "Overlay name.",
                                                "maxLength": 63
                                            },
                                            "inter-overlay": {
                                                "type": "string",
                                                "description": "Allow or deny traffic from other overlays.   \nallow:Allow traffic from other overlays.   \ndeny:Deny traffic from other overlays.",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ]
                                            },
                                            "assign-ip": {
                                                "type": "string",
                                                "description": "Enable\/disable mode-cfg address assignment.   \nenable:Enable client IPv4 address assignment.   \ndisable:Disable client IPv4 address assignment.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "ipv4-start-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Start of IPv4 range."
                                            },
                                            "ipv4-end-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "End of IPv4 range."
                                            },
                                            "subnets": {
                                                "description": "Internal subnets to register with OCVPN service.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": "Subnet type.   \nsubnet:Configure participating subnet IP and mask.   \ninterface:Configure participating LAN interface.",
                                                            "enum": [
                                                                "subnet",
                                                                "interface"
                                                            ]
                                                        },
                                                        "subnet": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "IPv4 address and subnet mask."
                                                        },
                                                        "interface": {
                                                            "type": "string",
                                                            "description": "LAN interface.",
                                                            "maxLength": 15
                                                        }
                                                    }
                                                },
                                                "maxItems": 64
                                            }
                                        }
                                    },
                                    "maxItems": 10
                                },
                                "forticlient-access": {
                                    "description": "Configure FortiClient settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable FortiClient to access OCVPN networks.   \nenable:Enable FortiClient access to OCVPN overlays.   \ndisable:Disable FortiClient access to OCVPN overlays.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "psksecret": {
                                                "type": "string",
                                                "description": "Pre-shared secret for FortiClient PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                            },
                                            "auth-groups": {
                                                "description": "FortiClient user authentication groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Group name.",
                                                            "maxLength": 35
                                                        },
                                                        "auth-group": {
                                                            "type": "string",
                                                            "description": "Authentication user group for FortiClient access.",
                                                            "maxLength": 35
                                                        },
                                                        "overlays": {
                                                            "description": "OCVPN overlays to allow access to.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "overlay-name": {
                                                                        "type": "string",
                                                                        "description": "Overlay name.",
                                                                        "maxLength": 79
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "auto-discovery": {
                                    "type": "string",
                                    "description": "Enable\/disable auto-discovery shortcuts.   \nenable:Enable ADVPN auto-discovery shortcuts.   \ndisable:Disable ADVPN auto-discovery shortcuts.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "poll-interval": {
                                    "type": "integer",
                                    "description": "Overlay Controller VPN polling interval.",
                                    "maximum": 120,
                                    "minimum": 30
                                },
                                "eap": {
                                    "type": "string",
                                    "description": "Enable\/disable EAP client authentication.   \nenable:Enable EAP client authentication.   \ndisable:Disable EAP client authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eap-users": {
                                    "type": "string",
                                    "description": "EAP authentication user group.",
                                    "maxLength": 35
                                },
                                "nat": {
                                    "type": "string",
                                    "description": "Enable\/disable inter-overlay source NAT.   \nenable:Enable inter-overlay source NAT.   \ndisable:Disable inter-overlay source NAT.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn\/ocvpn"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable Overlay Controller cloud assisted VPN.   \nenable:Enable Overlay Controller VPN.   \ndisable:Disable Overlay Controller VPN.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "role": {
                                    "type": "string",
                                    "description": "Set device role.   \nspoke:Register device as static spoke.   \nprimary-hub:Register device as primary hub.   \nsecondary-hub:Register device as secondary hub.",
                                    "enum": [
                                        "spoke",
                                        "primary-hub",
                                        "secondary-hub"
                                    ]
                                },
                                "multipath": {
                                    "type": "string",
                                    "description": "Enable\/disable multipath redundancy.   \nenable:Enable multipath redundancy.   \ndisable:Disable multipath redundancy.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable adding OCVPN tunnels to SDWAN.   \nenable:Enable adding OCVPN tunnels to SDWAN.   \ndisable:Disable adding OCVPN tunnels to SDWAN.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "wan-interface": {
                                    "description": "FortiGate WAN interfaces to use with OCVPN.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Interface name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ip-allocation-block": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Class B subnet reserved for private IP address assignment."
                                },
                                "overlays": {
                                    "description": "Network overlays to register with Overlay Controller VPN service.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "overlay-name": {
                                                "type": "string",
                                                "description": "Overlay name.",
                                                "maxLength": 63
                                            },
                                            "inter-overlay": {
                                                "type": "string",
                                                "description": "Allow or deny traffic from other overlays.   \nallow:Allow traffic from other overlays.   \ndeny:Deny traffic from other overlays.",
                                                "enum": [
                                                    "allow",
                                                    "deny"
                                                ]
                                            },
                                            "assign-ip": {
                                                "type": "string",
                                                "description": "Enable\/disable mode-cfg address assignment.   \nenable:Enable client IPv4 address assignment.   \ndisable:Disable client IPv4 address assignment.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "ipv4-start-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "Start of IPv4 range."
                                            },
                                            "ipv4-end-ip": {
                                                "type": "string",
                                                "format": "ipv4",
                                                "description": "End of IPv4 range."
                                            },
                                            "subnets": {
                                                "description": "Internal subnets to register with OCVPN service.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "description": "Subnet type.   \nsubnet:Configure participating subnet IP and mask.   \ninterface:Configure participating LAN interface.",
                                                            "enum": [
                                                                "subnet",
                                                                "interface"
                                                            ]
                                                        },
                                                        "subnet": {
                                                            "type": "string",
                                                            "format": "ipv4",
                                                            "description": "IPv4 address and subnet mask."
                                                        },
                                                        "interface": {
                                                            "type": "string",
                                                            "description": "LAN interface.",
                                                            "maxLength": 15
                                                        }
                                                    }
                                                },
                                                "maxItems": 64
                                            }
                                        }
                                    },
                                    "maxItems": 10
                                },
                                "forticlient-access": {
                                    "description": "Configure FortiClient settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable FortiClient to access OCVPN networks.   \nenable:Enable FortiClient access to OCVPN overlays.   \ndisable:Disable FortiClient access to OCVPN overlays.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "psksecret": {
                                                "type": "string",
                                                "description": "Pre-shared secret for FortiClient PSK authentication (ASCII string or hexadecimal encoded with a leading 0x)."
                                            },
                                            "auth-groups": {
                                                "description": "FortiClient user authentication groups.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Group name.",
                                                            "maxLength": 35
                                                        },
                                                        "auth-group": {
                                                            "type": "string",
                                                            "description": "Authentication user group for FortiClient access.",
                                                            "maxLength": 35
                                                        },
                                                        "overlays": {
                                                            "description": "OCVPN overlays to allow access to.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "overlay-name": {
                                                                        "type": "string",
                                                                        "description": "Overlay name.",
                                                                        "maxLength": 79
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": null
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "auto-discovery": {
                                    "type": "string",
                                    "description": "Enable\/disable auto-discovery shortcuts.   \nenable:Enable ADVPN auto-discovery shortcuts.   \ndisable:Disable ADVPN auto-discovery shortcuts.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "poll-interval": {
                                    "type": "integer",
                                    "description": "Overlay Controller VPN polling interval.",
                                    "maximum": 120,
                                    "minimum": 30
                                },
                                "eap": {
                                    "type": "string",
                                    "description": "Enable\/disable EAP client authentication.   \nenable:Enable EAP client authentication.   \ndisable:Disable EAP client authentication.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "eap-users": {
                                    "type": "string",
                                    "description": "EAP authentication user group.",
                                    "maxLength": 35
                                },
                                "nat": {
                                    "type": "string",
                                    "description": "Enable\/disable inter-overlay source NAT.   \nenable:Enable inter-overlay source NAT.   \ndisable:Disable inter-overlay source NAT.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn\/ocvpn"
                ]
            }
        },
        "\/vpn\/pptp": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiGate as a PPTP gateway.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-mode": {
                                    "type": "string",
                                    "description": "IP assignment mode for PPTP client.   \nrange:PPTP client IP from manual config (range from sip to eip).   \nusrgrp:PPTP client IP from user-group defined server.",
                                    "enum": [
                                        "range",
                                        "usrgrp"
                                    ]
                                },
                                "eip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End IP."
                                },
                                "sip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start IP."
                                },
                                "local-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local IP to be used for peer's remote IP."
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group.",
                                    "maxLength": 35
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vpn\/pptp"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: vpngrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiGate as a PPTP gateway.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ip-mode": {
                                    "type": "string",
                                    "description": "IP assignment mode for PPTP client.   \nrange:PPTP client IP from manual config (range from sip to eip).   \nusrgrp:PPTP client IP from user-group defined server.",
                                    "enum": [
                                        "range",
                                        "usrgrp"
                                    ]
                                },
                                "eip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "End IP."
                                },
                                "sip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Start IP."
                                },
                                "local-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Local IP to be used for peer's remote IP."
                                },
                                "usrgrp": {
                                    "type": "string",
                                    "description": "User group.",
                                    "maxLength": 35
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "vpn\/pptp"
                ]
            }
        }
    }
}