{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS CMDB"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/cmdb",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "tags": [
        {
            "name": "web-proxy\/debug-url",
            "description": "Configure debug URL addresses."
        },
        {
            "name": "web-proxy\/explicit",
            "description": "Configure explicit Web proxy settings."
        },
        {
            "name": "web-proxy\/forward-server",
            "description": "Configure forward-server addresses."
        },
        {
            "name": "web-proxy\/forward-server-group",
            "description": "Configure a forward server group consisting or multiple forward servers. Supports failover and load balancing."
        },
        {
            "name": "web-proxy\/global",
            "description": "Configure Web proxy global settings."
        },
        {
            "name": "web-proxy\/profile",
            "description": "Configure web proxy profiles."
        },
        {
            "name": "web-proxy\/url-match",
            "description": "Exempt URLs from web proxy forwarding and caching."
        },
        {
            "name": "web-proxy\/wisp",
            "description": "Configure Wireless Internet service provider (WISP) servers."
        }
    ],
    "paths": {
        "\/web-proxy\/debug-url\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Debug URL name.",
                                    "maxLength": 63
                                },
                                "url-pattern": {
                                    "type": "string",
                                    "description": "URL exemption pattern.",
                                    "maxLength": 511
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this URL exemption.   \nenable:Enable this URL exemption.   \ndisable:Disable this URL exemption.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exact": {
                                    "type": "string",
                                    "description": "Enable\/disable matching the exact path.   \nenable:Enable matching the exact path.   \ndisable:Disable matching the exact path.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/debug-url"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Debug URL name.",
                                    "maxLength": 63
                                },
                                "url-pattern": {
                                    "type": "string",
                                    "description": "URL exemption pattern.",
                                    "maxLength": 511
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this URL exemption.   \nenable:Enable this URL exemption.   \ndisable:Disable this URL exemption.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exact": {
                                    "type": "string",
                                    "description": "Enable\/disable matching the exact path.   \nenable:Enable matching the exact path.   \ndisable:Disable matching the exact path.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/debug-url"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/debug-url"
                ]
            }
        },
        "\/web-proxy\/debug-url": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Debug URL name.",
                                    "maxLength": 63
                                },
                                "url-pattern": {
                                    "type": "string",
                                    "description": "URL exemption pattern.",
                                    "maxLength": 511
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this URL exemption.   \nenable:Enable this URL exemption.   \ndisable:Disable this URL exemption.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exact": {
                                    "type": "string",
                                    "description": "Enable\/disable matching the exact path.   \nenable:Enable matching the exact path.   \ndisable:Disable matching the exact path.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/debug-url"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Debug URL name.",
                                    "maxLength": 63
                                },
                                "url-pattern": {
                                    "type": "string",
                                    "description": "URL exemption pattern.",
                                    "maxLength": 511
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable this URL exemption.   \nenable:Enable this URL exemption.   \ndisable:Disable this URL exemption.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "exact": {
                                    "type": "string",
                                    "description": "Enable\/disable matching the exact path.   \nenable:Enable matching the exact path.   \ndisable:Disable matching the exact path.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "web-proxy\/debug-url"
                ]
            }
        },
        "\/web-proxy\/explicit": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable the explicit Web proxy for HTTP and HTTPS session.   \nenable:Enable the explicit web proxy.   \ndisable:Disable the explicit web proxy.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ftp-over-http": {
                                    "type": "string",
                                    "description": "Enable to proxy FTP-over-HTTP sessions sent from a web browser.   \nenable:Enable FTP-over-HTTP sessions.   \ndisable:Disable FTP-over-HTTP sessions.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "socks": {
                                    "type": "string",
                                    "description": "Enable\/disable the SOCKS proxy.   \nenable:Enable the SOCKS proxy.   \ndisable:Disable the SOCKS proxy.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "http-incoming-port": {
                                    "type": "string",
                                    "description": "Accept incoming HTTP requests on one or more ports (0 - 65535, default = 8080)."
                                },
                                "https-incoming-port": {
                                    "type": "string",
                                    "description": "Accept incoming HTTPS requests on one or more ports (0 - 65535, default = 0, use the same as HTTP)."
                                },
                                "ftp-incoming-port": {
                                    "type": "string",
                                    "description": "Accept incoming FTP-over-HTTP requests on one or more ports (0 - 65535, default = 0; use the same as HTTP)."
                                },
                                "socks-incoming-port": {
                                    "type": "string",
                                    "description": "Accept incoming SOCKS proxy requests on one or more ports (0 - 65535, default = 0; use the same as HTTP)."
                                },
                                "incoming-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Restrict the explicit HTTP proxy to only accept sessions from this IP address. An interface must have this IP address."
                                },
                                "outgoing-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Outgoing HTTP requests will have this IP address as their source address. An interface must have this IP address."
                                },
                                "ipv6-status": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing an IPv6 web proxy destination in policies and all IPv6 related entries in this command.   \nenable:Enable allowing an IPv6 web proxy destination.   \ndisable:Disable allowing an IPv6 web proxy destination.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "incoming-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Restrict the explicit web proxy to only accept sessions from this IPv6 address. An interface must have this IPv6 address."
                                },
                                "outgoing-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Outgoing HTTP requests will leave this IPv6. Multiple interfaces can be specified. Interfaces must have these IPv6 addresses."
                                },
                                "strict-guest": {
                                    "type": "string",
                                    "description": "Enable\/disable strict guest user checking by the explicit web proxy.   \nenable:Enable strict guest user checking.   \ndisable:Disable strict guest user checking.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "pref-dns-result": {
                                    "type": "string",
                                    "description": "Prefer resolving addresses using the configured IPv4 or IPv6 DNS server (default = ipv4).   \nipv4:Prefer the IPv4 DNS server.   \nipv6:Prefer the IPv6 DNS server.",
                                    "enum": [
                                        "ipv4",
                                        "ipv6"
                                    ]
                                },
                                "unknown-http-version": {
                                    "type": "string",
                                    "description": "How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1.   \nreject:Reject or tear down HTTP sessions that do not use HTTP 0.9, 1.0, or 1.1.   \ntunnel:Pass HTTP traffic that does not use HTTP 0.9, 1.0, or 1.1 without applying HTTP protocol optimization, byte-caching, or web caching. TCP protocol optimization is applied.   \nbest-effort:Assume all HTTP sessions comply with HTTP 0.9, 1.0, or 1.1. If a session uses a different HTTP version, it may not parse correctly and the connection may be lost.",
                                    "enum": [
                                        "reject",
                                        "tunnel",
                                        "best-effort"
                                    ]
                                },
                                "realm": {
                                    "type": "string",
                                    "description": "Authentication realm used to identify the explicit web proxy (maximum of 63 characters).",
                                    "maxLength": 63
                                },
                                "sec-default-action": {
                                    "type": "string",
                                    "description": "Accept or deny explicit web proxy sessions when no web proxy firewall policy exists.   \naccept:Accept requests. All explicit web proxy traffic is accepted whether there is an explicit web proxy policy or not.   \ndeny:Deny requests unless there is a matching explicit web proxy policy.",
                                    "enum": [
                                        "accept",
                                        "deny"
                                    ]
                                },
                                "https-replacement-message": {
                                    "type": "string",
                                    "description": "Enable\/disable sending the client a replacement message for HTTPS requests.   \nenable:Display a replacement message for HTTPS requests.   \ndisable:Do not display a replacement message for HTTPS requests.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "message-upon-server-error": {
                                    "type": "string",
                                    "description": "Enable\/disable displaying a replacement message when a server error is detected.   \nenable:Display a replacement message when a server error is detected.   \ndisable:Do not display a replacement message when a server error is detected.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "pac-file-server-status": {
                                    "type": "string",
                                    "description": "Enable\/disable Proxy Auto-Configuration (PAC) for users of this explicit proxy profile.   \nenable:Enable Proxy Auto-Configuration (PAC).   \ndisable:Disable Proxy Auto-Configuration (PAC).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "pac-file-url": {
                                    "type": "string",
                                    "description": "PAC file access URL."
                                },
                                "pac-file-server-port": {
                                    "type": "string",
                                    "description": "Port number that PAC traffic from client web browsers uses to connect to the explicit web proxy (0 - 65535, default = 0; use the same as HTTP)."
                                },
                                "pac-file-name": {
                                    "type": "string",
                                    "description": "Pac file name.",
                                    "maxLength": 63
                                },
                                "pac-file-data": {
                                    "type": "string",
                                    "description": "PAC file contents enclosed in quotes (maximum of 256K bytes)."
                                },
                                "pac-policy": {
                                    "description": "PAC policies.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "policyid": {
                                                "type": "integer",
                                                "description": "Policy ID.",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable policy.   \nenable:Enable policy.   \ndisable:Disable policy.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "srcaddr": {
                                                "description": "Source address objects.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "srcaddr6": {
                                                "description": "Source address6 objects.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "dstaddr": {
                                                "description": "Destination address objects.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "pac-file-name": {
                                                "type": "string",
                                                "description": "Pac file name.",
                                                "maxLength": 63
                                            },
                                            "pac-file-data": {
                                                "type": "string",
                                                "description": "PAC file contents enclosed in quotes (maximum of 256K bytes)."
                                            },
                                            "comments": {
                                                "type": "string",
                                                "description": "Optional comments.",
                                                "maxLength": 1023
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ssl-algorithm": {
                                    "type": "string",
                                    "description": "Relative strength of encryption algorithms accepted in HTTPS deep scan: high, medium, or low.   \nhigh:High encrption. Allow only AES and ChaCha.   \nmedium:Medium encryption. Allow AES, ChaCha, 3DES, and RC4.   \nlow:Low encryption. Allow AES, ChaCha, 3DES, RC4, and DES.",
                                    "enum": [
                                        "high",
                                        "medium",
                                        "low"
                                    ]
                                },
                                "trace-auth-no-rsp": {
                                    "type": "string",
                                    "description": "Enable\/disable logging timed-out authentication requests.   \nenable:Enable logging timed-out authentication requests.   \ndisable:Disable logging timed-out authentication requests.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/explicit"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable the explicit Web proxy for HTTP and HTTPS session.   \nenable:Enable the explicit web proxy.   \ndisable:Disable the explicit web proxy.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ftp-over-http": {
                                    "type": "string",
                                    "description": "Enable to proxy FTP-over-HTTP sessions sent from a web browser.   \nenable:Enable FTP-over-HTTP sessions.   \ndisable:Disable FTP-over-HTTP sessions.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "socks": {
                                    "type": "string",
                                    "description": "Enable\/disable the SOCKS proxy.   \nenable:Enable the SOCKS proxy.   \ndisable:Disable the SOCKS proxy.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "http-incoming-port": {
                                    "type": "string",
                                    "description": "Accept incoming HTTP requests on one or more ports (0 - 65535, default = 8080)."
                                },
                                "https-incoming-port": {
                                    "type": "string",
                                    "description": "Accept incoming HTTPS requests on one or more ports (0 - 65535, default = 0, use the same as HTTP)."
                                },
                                "ftp-incoming-port": {
                                    "type": "string",
                                    "description": "Accept incoming FTP-over-HTTP requests on one or more ports (0 - 65535, default = 0; use the same as HTTP)."
                                },
                                "socks-incoming-port": {
                                    "type": "string",
                                    "description": "Accept incoming SOCKS proxy requests on one or more ports (0 - 65535, default = 0; use the same as HTTP)."
                                },
                                "incoming-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Restrict the explicit HTTP proxy to only accept sessions from this IP address. An interface must have this IP address."
                                },
                                "outgoing-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Outgoing HTTP requests will have this IP address as their source address. An interface must have this IP address."
                                },
                                "ipv6-status": {
                                    "type": "string",
                                    "description": "Enable\/disable allowing an IPv6 web proxy destination in policies and all IPv6 related entries in this command.   \nenable:Enable allowing an IPv6 web proxy destination.   \ndisable:Disable allowing an IPv6 web proxy destination.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "incoming-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Restrict the explicit web proxy to only accept sessions from this IPv6 address. An interface must have this IPv6 address."
                                },
                                "outgoing-ip6": {
                                    "type": "string",
                                    "format": "ipv6",
                                    "description": "Outgoing HTTP requests will leave this IPv6. Multiple interfaces can be specified. Interfaces must have these IPv6 addresses."
                                },
                                "strict-guest": {
                                    "type": "string",
                                    "description": "Enable\/disable strict guest user checking by the explicit web proxy.   \nenable:Enable strict guest user checking.   \ndisable:Disable strict guest user checking.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "pref-dns-result": {
                                    "type": "string",
                                    "description": "Prefer resolving addresses using the configured IPv4 or IPv6 DNS server (default = ipv4).   \nipv4:Prefer the IPv4 DNS server.   \nipv6:Prefer the IPv6 DNS server.",
                                    "enum": [
                                        "ipv4",
                                        "ipv6"
                                    ]
                                },
                                "unknown-http-version": {
                                    "type": "string",
                                    "description": "How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1.   \nreject:Reject or tear down HTTP sessions that do not use HTTP 0.9, 1.0, or 1.1.   \ntunnel:Pass HTTP traffic that does not use HTTP 0.9, 1.0, or 1.1 without applying HTTP protocol optimization, byte-caching, or web caching. TCP protocol optimization is applied.   \nbest-effort:Assume all HTTP sessions comply with HTTP 0.9, 1.0, or 1.1. If a session uses a different HTTP version, it may not parse correctly and the connection may be lost.",
                                    "enum": [
                                        "reject",
                                        "tunnel",
                                        "best-effort"
                                    ]
                                },
                                "realm": {
                                    "type": "string",
                                    "description": "Authentication realm used to identify the explicit web proxy (maximum of 63 characters).",
                                    "maxLength": 63
                                },
                                "sec-default-action": {
                                    "type": "string",
                                    "description": "Accept or deny explicit web proxy sessions when no web proxy firewall policy exists.   \naccept:Accept requests. All explicit web proxy traffic is accepted whether there is an explicit web proxy policy or not.   \ndeny:Deny requests unless there is a matching explicit web proxy policy.",
                                    "enum": [
                                        "accept",
                                        "deny"
                                    ]
                                },
                                "https-replacement-message": {
                                    "type": "string",
                                    "description": "Enable\/disable sending the client a replacement message for HTTPS requests.   \nenable:Display a replacement message for HTTPS requests.   \ndisable:Do not display a replacement message for HTTPS requests.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "message-upon-server-error": {
                                    "type": "string",
                                    "description": "Enable\/disable displaying a replacement message when a server error is detected.   \nenable:Display a replacement message when a server error is detected.   \ndisable:Do not display a replacement message when a server error is detected.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "pac-file-server-status": {
                                    "type": "string",
                                    "description": "Enable\/disable Proxy Auto-Configuration (PAC) for users of this explicit proxy profile.   \nenable:Enable Proxy Auto-Configuration (PAC).   \ndisable:Disable Proxy Auto-Configuration (PAC).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "pac-file-url": {
                                    "type": "string",
                                    "description": "PAC file access URL."
                                },
                                "pac-file-server-port": {
                                    "type": "string",
                                    "description": "Port number that PAC traffic from client web browsers uses to connect to the explicit web proxy (0 - 65535, default = 0; use the same as HTTP)."
                                },
                                "pac-file-name": {
                                    "type": "string",
                                    "description": "Pac file name.",
                                    "maxLength": 63
                                },
                                "pac-file-data": {
                                    "type": "string",
                                    "description": "PAC file contents enclosed in quotes (maximum of 256K bytes)."
                                },
                                "pac-policy": {
                                    "description": "PAC policies.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "policyid": {
                                                "type": "integer",
                                                "description": "Policy ID.",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable policy.   \nenable:Enable policy.   \ndisable:Disable policy.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "srcaddr": {
                                                "description": "Source address objects.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "srcaddr6": {
                                                "description": "Source address6 objects.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "dstaddr": {
                                                "description": "Destination address objects.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "pac-file-name": {
                                                "type": "string",
                                                "description": "Pac file name.",
                                                "maxLength": 63
                                            },
                                            "pac-file-data": {
                                                "type": "string",
                                                "description": "PAC file contents enclosed in quotes (maximum of 256K bytes)."
                                            },
                                            "comments": {
                                                "type": "string",
                                                "description": "Optional comments.",
                                                "maxLength": 1023
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ssl-algorithm": {
                                    "type": "string",
                                    "description": "Relative strength of encryption algorithms accepted in HTTPS deep scan: high, medium, or low.   \nhigh:High encrption. Allow only AES and ChaCha.   \nmedium:Medium encryption. Allow AES, ChaCha, 3DES, and RC4.   \nlow:Low encryption. Allow AES, ChaCha, 3DES, RC4, and DES.",
                                    "enum": [
                                        "high",
                                        "medium",
                                        "low"
                                    ]
                                },
                                "trace-auth-no-rsp": {
                                    "type": "string",
                                    "description": "Enable\/disable logging timed-out authentication requests.   \nenable:Enable logging timed-out authentication requests.   \ndisable:Disable logging timed-out authentication requests.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "web-proxy\/explicit"
                ]
            }
        },
        "\/web-proxy\/forward-server\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 63
                                },
                                "addr-type": {
                                    "type": "string",
                                    "description": "Address type of the forwarding proxy server: IP or FQDN.   \nip:Use an IP address for the forwarding proxy server.   \nfqdn:Use the FQDN for the forwarding proxy server.",
                                    "enum": [
                                        "ip",
                                        "fqdn"
                                    ]
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Forward proxy server IP address."
                                },
                                "fqdn": {
                                    "type": "string",
                                    "description": "Forward server Fully Qualified Domain Name (FQDN).",
                                    "maxLength": 255
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port number that the forwarding server expects to receive HTTP sessions on (1 - 65535, default = 3128).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "healthcheck": {
                                    "type": "string",
                                    "description": "Enable\/disable forward server health checking. Attempts to connect through the remote forwarding server to a destination to verify that the forwarding server is operating normally.   \ndisable:Disable health checking.   \nenable:Enable health checking.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "monitor": {
                                    "type": "string",
                                    "description": "URL for forward server health check monitoring (default = http:\/\/www.google.com).",
                                    "maxLength": 255
                                },
                                "server-down-option": {
                                    "type": "string",
                                    "description": "Action to take when the forward server is found to be down: block sessions until the server is back up or pass sessions to their destination.   \nblock:Block sessions until the server is back up.   \npass:Pass sessions to their destination bypassing the forward server.",
                                    "enum": [
                                        "block",
                                        "pass"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "HTTP authentication user name.",
                                    "maxLength": 64
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "HTTP authentication password."
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/forward-server"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 63
                                },
                                "addr-type": {
                                    "type": "string",
                                    "description": "Address type of the forwarding proxy server: IP or FQDN.   \nip:Use an IP address for the forwarding proxy server.   \nfqdn:Use the FQDN for the forwarding proxy server.",
                                    "enum": [
                                        "ip",
                                        "fqdn"
                                    ]
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Forward proxy server IP address."
                                },
                                "fqdn": {
                                    "type": "string",
                                    "description": "Forward server Fully Qualified Domain Name (FQDN).",
                                    "maxLength": 255
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port number that the forwarding server expects to receive HTTP sessions on (1 - 65535, default = 3128).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "healthcheck": {
                                    "type": "string",
                                    "description": "Enable\/disable forward server health checking. Attempts to connect through the remote forwarding server to a destination to verify that the forwarding server is operating normally.   \ndisable:Disable health checking.   \nenable:Enable health checking.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "monitor": {
                                    "type": "string",
                                    "description": "URL for forward server health check monitoring (default = http:\/\/www.google.com).",
                                    "maxLength": 255
                                },
                                "server-down-option": {
                                    "type": "string",
                                    "description": "Action to take when the forward server is found to be down: block sessions until the server is back up or pass sessions to their destination.   \nblock:Block sessions until the server is back up.   \npass:Pass sessions to their destination bypassing the forward server.",
                                    "enum": [
                                        "block",
                                        "pass"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "HTTP authentication user name.",
                                    "maxLength": 64
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "HTTP authentication password."
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/forward-server"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/forward-server"
                ]
            }
        },
        "\/web-proxy\/forward-server": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 63
                                },
                                "addr-type": {
                                    "type": "string",
                                    "description": "Address type of the forwarding proxy server: IP or FQDN.   \nip:Use an IP address for the forwarding proxy server.   \nfqdn:Use the FQDN for the forwarding proxy server.",
                                    "enum": [
                                        "ip",
                                        "fqdn"
                                    ]
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Forward proxy server IP address."
                                },
                                "fqdn": {
                                    "type": "string",
                                    "description": "Forward server Fully Qualified Domain Name (FQDN).",
                                    "maxLength": 255
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port number that the forwarding server expects to receive HTTP sessions on (1 - 65535, default = 3128).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "healthcheck": {
                                    "type": "string",
                                    "description": "Enable\/disable forward server health checking. Attempts to connect through the remote forwarding server to a destination to verify that the forwarding server is operating normally.   \ndisable:Disable health checking.   \nenable:Enable health checking.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "monitor": {
                                    "type": "string",
                                    "description": "URL for forward server health check monitoring (default = http:\/\/www.google.com).",
                                    "maxLength": 255
                                },
                                "server-down-option": {
                                    "type": "string",
                                    "description": "Action to take when the forward server is found to be down: block sessions until the server is back up or pass sessions to their destination.   \nblock:Block sessions until the server is back up.   \npass:Pass sessions to their destination bypassing the forward server.",
                                    "enum": [
                                        "block",
                                        "pass"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "HTTP authentication user name.",
                                    "maxLength": 64
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "HTTP authentication password."
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/forward-server"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 63
                                },
                                "addr-type": {
                                    "type": "string",
                                    "description": "Address type of the forwarding proxy server: IP or FQDN.   \nip:Use an IP address for the forwarding proxy server.   \nfqdn:Use the FQDN for the forwarding proxy server.",
                                    "enum": [
                                        "ip",
                                        "fqdn"
                                    ]
                                },
                                "ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Forward proxy server IP address."
                                },
                                "fqdn": {
                                    "type": "string",
                                    "description": "Forward server Fully Qualified Domain Name (FQDN).",
                                    "maxLength": 255
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Port number that the forwarding server expects to receive HTTP sessions on (1 - 65535, default = 3128).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "healthcheck": {
                                    "type": "string",
                                    "description": "Enable\/disable forward server health checking. Attempts to connect through the remote forwarding server to a destination to verify that the forwarding server is operating normally.   \ndisable:Disable health checking.   \nenable:Enable health checking.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "monitor": {
                                    "type": "string",
                                    "description": "URL for forward server health check monitoring (default = http:\/\/www.google.com).",
                                    "maxLength": 255
                                },
                                "server-down-option": {
                                    "type": "string",
                                    "description": "Action to take when the forward server is found to be down: block sessions until the server is back up or pass sessions to their destination.   \nblock:Block sessions until the server is back up.   \npass:Pass sessions to their destination bypassing the forward server.",
                                    "enum": [
                                        "block",
                                        "pass"
                                    ]
                                },
                                "username": {
                                    "type": "string",
                                    "description": "HTTP authentication user name.",
                                    "maxLength": 64
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "HTTP authentication password."
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "web-proxy\/forward-server"
                ]
            }
        },
        "\/web-proxy\/forward-server-group\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Configure a forward server group consisting one or multiple forward servers. Supports failover and load balancing.",
                                    "maxLength": 63
                                },
                                "affinity": {
                                    "type": "string",
                                    "description": "Enable\/disable affinity, attaching a source-ip's traffic to the assigned forwarding server until the forward-server-affinity-timeout is reached (under web-proxy global).   \nenable:Enable affinity.   \ndisable:Disable affinity.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ldb-method": {
                                    "type": "string",
                                    "description": "Load balance method: weighted or least-session.   \nweighted:Load balance traffic to forward servers based on assigned weights. Weights are ratios of total number of sessions.   \nleast-session:Send new sessions to the server with lowest session count.   \nactive-passive:Send new sessions to the next active server in the list. Servers are selected with highest weight first and then in order as they are configured. Traffic switches back to the first server upon failure recovery.",
                                    "enum": [
                                        "weighted",
                                        "least-session",
                                        "active-passive"
                                    ]
                                },
                                "group-down-option": {
                                    "type": "string",
                                    "description": "Action to take when all of the servers in the forward server group are down: block sessions until at least one server is back up or pass sessions to their destination.   \nblock:Block sessions until at least one server in the group is back up.   \npass:Pass sessions to their destination bypassing servers in the forward server group.",
                                    "enum": [
                                        "block",
                                        "pass"
                                    ]
                                },
                                "server-list": {
                                    "description": "Add web forward servers to a list to form a server group. Optionally assign weights to each server.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Forward server name.",
                                                "maxLength": 63
                                            },
                                            "weight": {
                                                "type": "integer",
                                                "description": "Optionally assign a weight of the forwarding server for weighted load balancing (1 - 100, default = 10)",
                                                "maximum": 100,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/forward-server-group"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Configure a forward server group consisting one or multiple forward servers. Supports failover and load balancing.",
                                    "maxLength": 63
                                },
                                "affinity": {
                                    "type": "string",
                                    "description": "Enable\/disable affinity, attaching a source-ip's traffic to the assigned forwarding server until the forward-server-affinity-timeout is reached (under web-proxy global).   \nenable:Enable affinity.   \ndisable:Disable affinity.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ldb-method": {
                                    "type": "string",
                                    "description": "Load balance method: weighted or least-session.   \nweighted:Load balance traffic to forward servers based on assigned weights. Weights are ratios of total number of sessions.   \nleast-session:Send new sessions to the server with lowest session count.   \nactive-passive:Send new sessions to the next active server in the list. Servers are selected with highest weight first and then in order as they are configured. Traffic switches back to the first server upon failure recovery.",
                                    "enum": [
                                        "weighted",
                                        "least-session",
                                        "active-passive"
                                    ]
                                },
                                "group-down-option": {
                                    "type": "string",
                                    "description": "Action to take when all of the servers in the forward server group are down: block sessions until at least one server is back up or pass sessions to their destination.   \nblock:Block sessions until at least one server in the group is back up.   \npass:Pass sessions to their destination bypassing servers in the forward server group.",
                                    "enum": [
                                        "block",
                                        "pass"
                                    ]
                                },
                                "server-list": {
                                    "description": "Add web forward servers to a list to form a server group. Optionally assign weights to each server.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Forward server name.",
                                                "maxLength": 63
                                            },
                                            "weight": {
                                                "type": "integer",
                                                "description": "Optionally assign a weight of the forwarding server for weighted load balancing (1 - 100, default = 10)",
                                                "maximum": 100,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/forward-server-group"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/forward-server-group"
                ]
            }
        },
        "\/web-proxy\/forward-server-group": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Configure a forward server group consisting one or multiple forward servers. Supports failover and load balancing.",
                                    "maxLength": 63
                                },
                                "affinity": {
                                    "type": "string",
                                    "description": "Enable\/disable affinity, attaching a source-ip's traffic to the assigned forwarding server until the forward-server-affinity-timeout is reached (under web-proxy global).   \nenable:Enable affinity.   \ndisable:Disable affinity.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ldb-method": {
                                    "type": "string",
                                    "description": "Load balance method: weighted or least-session.   \nweighted:Load balance traffic to forward servers based on assigned weights. Weights are ratios of total number of sessions.   \nleast-session:Send new sessions to the server with lowest session count.   \nactive-passive:Send new sessions to the next active server in the list. Servers are selected with highest weight first and then in order as they are configured. Traffic switches back to the first server upon failure recovery.",
                                    "enum": [
                                        "weighted",
                                        "least-session",
                                        "active-passive"
                                    ]
                                },
                                "group-down-option": {
                                    "type": "string",
                                    "description": "Action to take when all of the servers in the forward server group are down: block sessions until at least one server is back up or pass sessions to their destination.   \nblock:Block sessions until at least one server in the group is back up.   \npass:Pass sessions to their destination bypassing servers in the forward server group.",
                                    "enum": [
                                        "block",
                                        "pass"
                                    ]
                                },
                                "server-list": {
                                    "description": "Add web forward servers to a list to form a server group. Optionally assign weights to each server.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Forward server name.",
                                                "maxLength": 63
                                            },
                                            "weight": {
                                                "type": "integer",
                                                "description": "Optionally assign a weight of the forwarding server for weighted load balancing (1 - 100, default = 10)",
                                                "maximum": 100,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/forward-server-group"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Configure a forward server group consisting one or multiple forward servers. Supports failover and load balancing.",
                                    "maxLength": 63
                                },
                                "affinity": {
                                    "type": "string",
                                    "description": "Enable\/disable affinity, attaching a source-ip's traffic to the assigned forwarding server until the forward-server-affinity-timeout is reached (under web-proxy global).   \nenable:Enable affinity.   \ndisable:Disable affinity.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ldb-method": {
                                    "type": "string",
                                    "description": "Load balance method: weighted or least-session.   \nweighted:Load balance traffic to forward servers based on assigned weights. Weights are ratios of total number of sessions.   \nleast-session:Send new sessions to the server with lowest session count.   \nactive-passive:Send new sessions to the next active server in the list. Servers are selected with highest weight first and then in order as they are configured. Traffic switches back to the first server upon failure recovery.",
                                    "enum": [
                                        "weighted",
                                        "least-session",
                                        "active-passive"
                                    ]
                                },
                                "group-down-option": {
                                    "type": "string",
                                    "description": "Action to take when all of the servers in the forward server group are down: block sessions until at least one server is back up or pass sessions to their destination.   \nblock:Block sessions until at least one server in the group is back up.   \npass:Pass sessions to their destination bypassing servers in the forward server group.",
                                    "enum": [
                                        "block",
                                        "pass"
                                    ]
                                },
                                "server-list": {
                                    "description": "Add web forward servers to a list to form a server group. Optionally assign weights to each server.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Forward server name.",
                                                "maxLength": 63
                                            },
                                            "weight": {
                                                "type": "integer",
                                                "description": "Optionally assign a weight of the forwarding server for weighted load balancing (1 - 100, default = 10)",
                                                "maximum": 100,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "web-proxy\/forward-server-group"
                ]
            }
        },
        "\/web-proxy\/global": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "ssl-cert": {
                                    "type": "string",
                                    "description": "SSL certificate for SSL interception.",
                                    "maxLength": 35
                                },
                                "ssl-ca-cert": {
                                    "type": "string",
                                    "description": "SSL CA certificate for SSL interception.",
                                    "maxLength": 35
                                },
                                "fast-policy-match": {
                                    "type": "string",
                                    "description": "Enable\/disable fast matching algorithm for explicit and transparent proxy policy.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "proxy-fqdn": {
                                    "type": "string",
                                    "description": "Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.",
                                    "maxLength": 255
                                },
                                "max-request-length": {
                                    "type": "integer",
                                    "description": "Maximum length of HTTP request line (2 - 64 Kbytes, default = 8).",
                                    "maximum": 64,
                                    "minimum": 2
                                },
                                "max-message-length": {
                                    "type": "integer",
                                    "description": "Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).",
                                    "maximum": 256,
                                    "minimum": 16
                                },
                                "strict-web-check": {
                                    "type": "string",
                                    "description": "Enable\/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1.   \nenable:Enable strict web checking.   \ndisable:Disable strict web checking.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "forward-proxy-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable forwarding proxy authentication headers.   \nenable:Enable forwarding proxy authentication headers.   \ndisable:Disable forwarding proxy authentication headers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "forward-server-affinity-timeout": {
                                    "type": "integer",
                                    "description": "Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).",
                                    "maximum": 60,
                                    "minimum": 6
                                },
                                "max-waf-body-cache-length": {
                                    "type": "integer",
                                    "description": "Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).",
                                    "maximum": 1024,
                                    "minimum": 10
                                },
                                "webproxy-profile": {
                                    "type": "string",
                                    "description": "Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.",
                                    "maxLength": 63
                                },
                                "learn-client-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable learning the client's IP address from headers.   \nenable:Enable learning the client's IP address from headers.   \ndisable:Disable learning the client's IP address from headers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "learn-client-ip-from-header": {
                                    "type": "string",
                                    "description": "Learn client IP address from the specified headers.   \ntrue-client-ip:Learn the client IP address from the True-Client-IP header.   \nx-real-ip:Learn the client IP address from the X-Real-IP header.   \nx-forwarded-for:Learn the client IP address from the X-Forwarded-For header.",
                                    "enum": [
                                        "true-client-ip",
                                        "x-real-ip",
                                        "x-forwarded-for"
                                    ]
                                },
                                "learn-client-ip-srcaddr": {
                                    "description": "Source address name (srcaddr or srcaddr6 must be set).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "learn-client-ip-srcaddr6": {
                                    "description": "IPv6 Source address name (srcaddr or srcaddr6 must be set).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/global"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "ssl-cert": {
                                    "type": "string",
                                    "description": "SSL certificate for SSL interception.",
                                    "maxLength": 35
                                },
                                "ssl-ca-cert": {
                                    "type": "string",
                                    "description": "SSL CA certificate for SSL interception.",
                                    "maxLength": 35
                                },
                                "fast-policy-match": {
                                    "type": "string",
                                    "description": "Enable\/disable fast matching algorithm for explicit and transparent proxy policy.   \nenable:Enable setting.   \ndisable:Disable setting.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "proxy-fqdn": {
                                    "type": "string",
                                    "description": "Fully Qualified Domain Name (FQDN) that clients connect to (default = default.fqdn) to connect to the explicit web proxy.",
                                    "maxLength": 255
                                },
                                "max-request-length": {
                                    "type": "integer",
                                    "description": "Maximum length of HTTP request line (2 - 64 Kbytes, default = 8).",
                                    "maximum": 64,
                                    "minimum": 2
                                },
                                "max-message-length": {
                                    "type": "integer",
                                    "description": "Maximum length of HTTP message, not including body (16 - 256 Kbytes, default = 32).",
                                    "maximum": 256,
                                    "minimum": 16
                                },
                                "strict-web-check": {
                                    "type": "string",
                                    "description": "Enable\/disable strict web checking to block web sites that send incorrect headers that don't conform to HTTP 1.1.   \nenable:Enable strict web checking.   \ndisable:Disable strict web checking.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "forward-proxy-auth": {
                                    "type": "string",
                                    "description": "Enable\/disable forwarding proxy authentication headers.   \nenable:Enable forwarding proxy authentication headers.   \ndisable:Disable forwarding proxy authentication headers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "forward-server-affinity-timeout": {
                                    "type": "integer",
                                    "description": "Period of time before the source IP's traffic is no longer assigned to the forwarding server (6 - 60 min, default = 30).",
                                    "maximum": 60,
                                    "minimum": 6
                                },
                                "max-waf-body-cache-length": {
                                    "type": "integer",
                                    "description": "Maximum length of HTTP messages processed by Web Application Firewall (WAF) (10 - 1024 Kbytes, default = 32).",
                                    "maximum": 1024,
                                    "minimum": 10
                                },
                                "webproxy-profile": {
                                    "type": "string",
                                    "description": "Name of the web proxy profile to apply when explicit proxy traffic is allowed by default and traffic is accepted that does not match an explicit proxy policy.",
                                    "maxLength": 63
                                },
                                "learn-client-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable learning the client's IP address from headers.   \nenable:Enable learning the client's IP address from headers.   \ndisable:Disable learning the client's IP address from headers.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "learn-client-ip-from-header": {
                                    "type": "string",
                                    "description": "Learn client IP address from the specified headers.   \ntrue-client-ip:Learn the client IP address from the True-Client-IP header.   \nx-real-ip:Learn the client IP address from the X-Real-IP header.   \nx-forwarded-for:Learn the client IP address from the X-Forwarded-For header.",
                                    "enum": [
                                        "true-client-ip",
                                        "x-real-ip",
                                        "x-forwarded-for"
                                    ]
                                },
                                "learn-client-ip-srcaddr": {
                                    "description": "Source address name (srcaddr or srcaddr6 must be set).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "learn-client-ip-srcaddr6": {
                                    "description": "IPv6 Source address name (srcaddr or srcaddr6 must be set).",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Address name.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "web-proxy\/global"
                ]
            }
        },
        "\/web-proxy\/profile\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Profile name.",
                                    "maxLength": 63
                                },
                                "header-client-ip": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP client-IP header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-via-request": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP via header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-via-response": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP via header in forwarded responses: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-forwarded-for": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-forwarded-for header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-front-end-https": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP front-end-HTTPS header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-authenticated-user": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-authenticated-user header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-authenticated-groups": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-authenticated-groups header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "strip-encoding": {
                                    "type": "string",
                                    "description": "Enable\/disable stripping unsupported encoding from the request header.   \nenable:Enable stripping of unsupported encoding from the request header.   \ndisable:Disable stripping of unsupported encoding from the request header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-header-change": {
                                    "type": "string",
                                    "description": "Enable\/disable logging HTTP header changes.   \nenable:Enable Enable\/disable logging HTTP header changes.   \ndisable:Disable Enable\/disable logging HTTP header changes.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "headers": {
                                    "description": "Configure HTTP forwarded requests headers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "HTTP forwarded header id.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "HTTP forwarded header name.",
                                                "maxLength": 79
                                            },
                                            "dstaddr": {
                                                "description": "Destination address and address group names.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "dstaddr6": {
                                                "description": "Destination address and address group names (IPv6).",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action when the HTTP header is forwarded.   \nadd-to-request:Add the HTTP header to request.   \nadd-to-response:Add the HTTP header to response.   \nremove-from-request:Remove the HTTP header from request.   \nremove-from-response:Remove the HTTP header from response.",
                                                "enum": [
                                                    "add-to-request",
                                                    "add-to-response",
                                                    "remove-from-request",
                                                    "remove-from-response"
                                                ]
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "HTTP header content.",
                                                "maxLength": 255
                                            },
                                            "base64-encoding": {
                                                "type": "string",
                                                "description": "Enable\/disable use of base64 encoding of HTTP content.   \ndisable:Disable use of base64 encoding of HTTP content.   \nenable:Enable use of base64 encoding of HTTP content.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "add-option": {
                                                "type": "string",
                                                "description": "Configure options to append content to existing HTTP header or add new HTTP header.   \nappend:Append content to existing HTTP header or create new header if HTTP header is not found.   \nnew-on-not-found:Create new header only if existing HTTP header is not found.   \nnew:Create new header regardless if existing HTTP header is found or not.",
                                                "enum": [
                                                    "append",
                                                    "new-on-not-found",
                                                    "new"
                                                ]
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "description": "Configure protocol(s) to take add-option action on (HTTP, HTTPS, or both).   \nhttps:Perform add-option action on HTTPS.   \nhttp:Perform add-option action on HTTP.",
                                                "enum": [
                                                    "https",
                                                    "http"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/profile"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Profile name.",
                                    "maxLength": 63
                                },
                                "header-client-ip": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP client-IP header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-via-request": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP via header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-via-response": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP via header in forwarded responses: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-forwarded-for": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-forwarded-for header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-front-end-https": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP front-end-HTTPS header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-authenticated-user": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-authenticated-user header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-authenticated-groups": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-authenticated-groups header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "strip-encoding": {
                                    "type": "string",
                                    "description": "Enable\/disable stripping unsupported encoding from the request header.   \nenable:Enable stripping of unsupported encoding from the request header.   \ndisable:Disable stripping of unsupported encoding from the request header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-header-change": {
                                    "type": "string",
                                    "description": "Enable\/disable logging HTTP header changes.   \nenable:Enable Enable\/disable logging HTTP header changes.   \ndisable:Disable Enable\/disable logging HTTP header changes.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "headers": {
                                    "description": "Configure HTTP forwarded requests headers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "HTTP forwarded header id.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "HTTP forwarded header name.",
                                                "maxLength": 79
                                            },
                                            "dstaddr": {
                                                "description": "Destination address and address group names.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "dstaddr6": {
                                                "description": "Destination address and address group names (IPv6).",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action when the HTTP header is forwarded.   \nadd-to-request:Add the HTTP header to request.   \nadd-to-response:Add the HTTP header to response.   \nremove-from-request:Remove the HTTP header from request.   \nremove-from-response:Remove the HTTP header from response.",
                                                "enum": [
                                                    "add-to-request",
                                                    "add-to-response",
                                                    "remove-from-request",
                                                    "remove-from-response"
                                                ]
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "HTTP header content.",
                                                "maxLength": 255
                                            },
                                            "base64-encoding": {
                                                "type": "string",
                                                "description": "Enable\/disable use of base64 encoding of HTTP content.   \ndisable:Disable use of base64 encoding of HTTP content.   \nenable:Enable use of base64 encoding of HTTP content.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "add-option": {
                                                "type": "string",
                                                "description": "Configure options to append content to existing HTTP header or add new HTTP header.   \nappend:Append content to existing HTTP header or create new header if HTTP header is not found.   \nnew-on-not-found:Create new header only if existing HTTP header is not found.   \nnew:Create new header regardless if existing HTTP header is found or not.",
                                                "enum": [
                                                    "append",
                                                    "new-on-not-found",
                                                    "new"
                                                ]
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "description": "Configure protocol(s) to take add-option action on (HTTP, HTTPS, or both).   \nhttps:Perform add-option action on HTTPS.   \nhttp:Perform add-option action on HTTP.",
                                                "enum": [
                                                    "https",
                                                    "http"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/profile"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/profile"
                ]
            }
        },
        "\/web-proxy\/profile": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Profile name.",
                                    "maxLength": 63
                                },
                                "header-client-ip": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP client-IP header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-via-request": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP via header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-via-response": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP via header in forwarded responses: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-forwarded-for": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-forwarded-for header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-front-end-https": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP front-end-HTTPS header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-authenticated-user": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-authenticated-user header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-authenticated-groups": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-authenticated-groups header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "strip-encoding": {
                                    "type": "string",
                                    "description": "Enable\/disable stripping unsupported encoding from the request header.   \nenable:Enable stripping of unsupported encoding from the request header.   \ndisable:Disable stripping of unsupported encoding from the request header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-header-change": {
                                    "type": "string",
                                    "description": "Enable\/disable logging HTTP header changes.   \nenable:Enable Enable\/disable logging HTTP header changes.   \ndisable:Disable Enable\/disable logging HTTP header changes.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "headers": {
                                    "description": "Configure HTTP forwarded requests headers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "HTTP forwarded header id.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "HTTP forwarded header name.",
                                                "maxLength": 79
                                            },
                                            "dstaddr": {
                                                "description": "Destination address and address group names.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "dstaddr6": {
                                                "description": "Destination address and address group names (IPv6).",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action when the HTTP header is forwarded.   \nadd-to-request:Add the HTTP header to request.   \nadd-to-response:Add the HTTP header to response.   \nremove-from-request:Remove the HTTP header from request.   \nremove-from-response:Remove the HTTP header from response.",
                                                "enum": [
                                                    "add-to-request",
                                                    "add-to-response",
                                                    "remove-from-request",
                                                    "remove-from-response"
                                                ]
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "HTTP header content.",
                                                "maxLength": 255
                                            },
                                            "base64-encoding": {
                                                "type": "string",
                                                "description": "Enable\/disable use of base64 encoding of HTTP content.   \ndisable:Disable use of base64 encoding of HTTP content.   \nenable:Enable use of base64 encoding of HTTP content.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "add-option": {
                                                "type": "string",
                                                "description": "Configure options to append content to existing HTTP header or add new HTTP header.   \nappend:Append content to existing HTTP header or create new header if HTTP header is not found.   \nnew-on-not-found:Create new header only if existing HTTP header is not found.   \nnew:Create new header regardless if existing HTTP header is found or not.",
                                                "enum": [
                                                    "append",
                                                    "new-on-not-found",
                                                    "new"
                                                ]
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "description": "Configure protocol(s) to take add-option action on (HTTP, HTTPS, or both).   \nhttps:Perform add-option action on HTTPS.   \nhttp:Perform add-option action on HTTP.",
                                                "enum": [
                                                    "https",
                                                    "http"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/profile"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Profile name.",
                                    "maxLength": 63
                                },
                                "header-client-ip": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP client-IP header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-via-request": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP via header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-via-response": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP via header in forwarded responses: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-forwarded-for": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-forwarded-for header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-front-end-https": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP front-end-HTTPS header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-authenticated-user": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-authenticated-user header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "header-x-authenticated-groups": {
                                    "type": "string",
                                    "description": "Action to take on the HTTP x-authenticated-groups header in forwarded requests: forwards (pass), adds, or removes the HTTP header.   \npass:Forward the same HTTP header.   \nadd:Add the HTTP header.   \nremove:Remove the HTTP header.",
                                    "enum": [
                                        "pass",
                                        "add",
                                        "remove"
                                    ]
                                },
                                "strip-encoding": {
                                    "type": "string",
                                    "description": "Enable\/disable stripping unsupported encoding from the request header.   \nenable:Enable stripping of unsupported encoding from the request header.   \ndisable:Disable stripping of unsupported encoding from the request header.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-header-change": {
                                    "type": "string",
                                    "description": "Enable\/disable logging HTTP header changes.   \nenable:Enable Enable\/disable logging HTTP header changes.   \ndisable:Disable Enable\/disable logging HTTP header changes.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "headers": {
                                    "description": "Configure HTTP forwarded requests headers.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "HTTP forwarded header id.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "HTTP forwarded header name.",
                                                "maxLength": 79
                                            },
                                            "dstaddr": {
                                                "description": "Destination address and address group names.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "dstaddr6": {
                                                "description": "Destination address and address group names (IPv6).",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Address name.",
                                                            "maxLength": 79
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "action": {
                                                "type": "string",
                                                "description": "Action when the HTTP header is forwarded.   \nadd-to-request:Add the HTTP header to request.   \nadd-to-response:Add the HTTP header to response.   \nremove-from-request:Remove the HTTP header from request.   \nremove-from-response:Remove the HTTP header from response.",
                                                "enum": [
                                                    "add-to-request",
                                                    "add-to-response",
                                                    "remove-from-request",
                                                    "remove-from-response"
                                                ]
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "HTTP header content.",
                                                "maxLength": 255
                                            },
                                            "base64-encoding": {
                                                "type": "string",
                                                "description": "Enable\/disable use of base64 encoding of HTTP content.   \ndisable:Disable use of base64 encoding of HTTP content.   \nenable:Enable use of base64 encoding of HTTP content.",
                                                "enum": [
                                                    "disable",
                                                    "enable"
                                                ]
                                            },
                                            "add-option": {
                                                "type": "string",
                                                "description": "Configure options to append content to existing HTTP header or add new HTTP header.   \nappend:Append content to existing HTTP header or create new header if HTTP header is not found.   \nnew-on-not-found:Create new header only if existing HTTP header is not found.   \nnew:Create new header regardless if existing HTTP header is found or not.",
                                                "enum": [
                                                    "append",
                                                    "new-on-not-found",
                                                    "new"
                                                ]
                                            },
                                            "protocol": {
                                                "type": "string",
                                                "description": "Configure protocol(s) to take add-option action on (HTTP, HTTPS, or both).   \nhttps:Perform add-option action on HTTPS.   \nhttp:Perform add-option action on HTTP.",
                                                "enum": [
                                                    "https",
                                                    "http"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "web-proxy\/profile"
                ]
            }
        },
        "\/web-proxy\/url-match\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Configure a name for the URL to be exempted.",
                                    "maxLength": 63
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching.   \nenable:Enable exempting the matching URLs.   \ndisable:Disable exempting the matching URLs.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "url-pattern": {
                                    "type": "string",
                                    "description": "URL pattern to be exempted from web proxy forwarding and caching.",
                                    "maxLength": 511
                                },
                                "forward-server": {
                                    "type": "string",
                                    "description": "Forward server name.",
                                    "maxLength": 63
                                },
                                "cache-exemption": {
                                    "type": "string",
                                    "description": "Enable\/disable exempting this URL pattern from caching.   \nenable:Enable exempting this URL pattern from caching.   \ndisable:Disable exempting this URL pattern from caching.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/url-match"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Configure a name for the URL to be exempted.",
                                    "maxLength": 63
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching.   \nenable:Enable exempting the matching URLs.   \ndisable:Disable exempting the matching URLs.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "url-pattern": {
                                    "type": "string",
                                    "description": "URL pattern to be exempted from web proxy forwarding and caching.",
                                    "maxLength": 511
                                },
                                "forward-server": {
                                    "type": "string",
                                    "description": "Forward server name.",
                                    "maxLength": 63
                                },
                                "cache-exemption": {
                                    "type": "string",
                                    "description": "Enable\/disable exempting this URL pattern from caching.   \nenable:Enable exempting this URL pattern from caching.   \ndisable:Disable exempting this URL pattern from caching.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/url-match"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/url-match"
                ]
            }
        },
        "\/web-proxy\/url-match": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Configure a name for the URL to be exempted.",
                                    "maxLength": 63
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching.   \nenable:Enable exempting the matching URLs.   \ndisable:Disable exempting the matching URLs.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "url-pattern": {
                                    "type": "string",
                                    "description": "URL pattern to be exempted from web proxy forwarding and caching.",
                                    "maxLength": 511
                                },
                                "forward-server": {
                                    "type": "string",
                                    "description": "Forward server name.",
                                    "maxLength": 63
                                },
                                "cache-exemption": {
                                    "type": "string",
                                    "description": "Enable\/disable exempting this URL pattern from caching.   \nenable:Enable exempting this URL pattern from caching.   \ndisable:Disable exempting this URL pattern from caching.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/url-match"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Configure a name for the URL to be exempted.",
                                    "maxLength": 63
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable exempting the URLs matching the URL pattern from web proxy forwarding and caching.   \nenable:Enable exempting the matching URLs.   \ndisable:Disable exempting the matching URLs.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "url-pattern": {
                                    "type": "string",
                                    "description": "URL pattern to be exempted from web proxy forwarding and caching.",
                                    "maxLength": 511
                                },
                                "forward-server": {
                                    "type": "string",
                                    "description": "Forward server name.",
                                    "maxLength": 63
                                },
                                "cache-exemption": {
                                    "type": "string",
                                    "description": "Enable\/disable exempting this URL pattern from caching.   \nenable:Enable exempting this URL pattern from caching.   \ndisable:Disable exempting this URL pattern from caching.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "web-proxy\/url-match"
                ]
            }
        },
        "\/web-proxy\/wisp\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "outgoing-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WISP outgoing IP address."
                                },
                                "server-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WISP server IP address."
                                },
                                "server-port": {
                                    "type": "integer",
                                    "description": "WISP server port (1 - 65535, default = 15868).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "max-connections": {
                                    "type": "integer",
                                    "description": "Maximum number of web proxy WISP connections (4 - 4096, default = 64).",
                                    "maximum": 4096,
                                    "minimum": 4
                                },
                                "timeout": {
                                    "type": "integer",
                                    "description": "Period of time before WISP requests time out (1 - 15 sec, default = 5).",
                                    "maximum": 15,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/wisp"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "outgoing-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WISP outgoing IP address."
                                },
                                "server-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WISP server IP address."
                                },
                                "server-port": {
                                    "type": "integer",
                                    "description": "WISP server port (1 - 65535, default = 15868).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "max-connections": {
                                    "type": "integer",
                                    "description": "Maximum number of web proxy WISP connections (4 - 4096, default = 64).",
                                    "maximum": 4096,
                                    "minimum": 4
                                },
                                "timeout": {
                                    "type": "integer",
                                    "description": "Period of time before WISP requests time out (1 - 15 sec, default = 5).",
                                    "maximum": 15,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "web-proxy\/wisp"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/wisp"
                ]
            }
        },
        "\/web-proxy\/wisp": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "outgoing-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WISP outgoing IP address."
                                },
                                "server-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WISP server IP address."
                                },
                                "server-port": {
                                    "type": "integer",
                                    "description": "WISP server port (1 - 65535, default = 15868).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "max-connections": {
                                    "type": "integer",
                                    "description": "Maximum number of web proxy WISP connections (4 - 4096, default = 64).",
                                    "maximum": 4096,
                                    "minimum": 4
                                },
                                "timeout": {
                                    "type": "integer",
                                    "description": "Period of time before WISP requests time out (1 - 15 sec, default = 5).",
                                    "maximum": 15,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "web-proxy\/wisp"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: netgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Server name.",
                                    "maxLength": 35
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 255
                                },
                                "outgoing-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WISP outgoing IP address."
                                },
                                "server-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "WISP server IP address."
                                },
                                "server-port": {
                                    "type": "integer",
                                    "description": "WISP server port (1 - 65535, default = 15868).",
                                    "maximum": 65535,
                                    "minimum": 1
                                },
                                "max-connections": {
                                    "type": "integer",
                                    "description": "Maximum number of web proxy WISP connections (4 - 4096, default = 64).",
                                    "maximum": 4096,
                                    "minimum": 4
                                },
                                "timeout": {
                                    "type": "integer",
                                    "description": "Period of time before WISP requests time out (1 - 15 sec, default = 5).",
                                    "maximum": 15,
                                    "minimum": 1
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "web-proxy\/wisp"
                ]
            }
        }
    }
}