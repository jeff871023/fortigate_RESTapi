{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS CMDB"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/cmdb",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "tags": [
        {
            "name": "log.disk\/filter",
            "description": "Configure filters for local disk logging. Use these filters to determine the log messages to record according to severity and type."
        },
        {
            "name": "log.disk\/setting",
            "description": "Settings for local disk logging."
        },
        {
            "name": "log.fortianalyzer-cloud\/filter",
            "description": "Filters for FortiAnalyzer Cloud."
        },
        {
            "name": "log.fortianalyzer-cloud\/override-filter",
            "description": "Override filters for FortiAnalyzer Cloud."
        },
        {
            "name": "log.fortianalyzer-cloud\/override-setting",
            "description": "Override FortiAnalyzer Cloud settings."
        },
        {
            "name": "log.fortianalyzer-cloud\/setting",
            "description": "Global FortiAnalyzer Cloud settings."
        },
        {
            "name": "log.fortianalyzer\/filter",
            "description": "Filters for FortiAnalyzer."
        },
        {
            "name": "log.fortianalyzer\/override-filter",
            "description": "Override filters for FortiAnalyzer."
        },
        {
            "name": "log.fortianalyzer\/override-setting",
            "description": "Override FortiAnalyzer settings."
        },
        {
            "name": "log.fortianalyzer\/setting",
            "description": "Global FortiAnalyzer settings."
        },
        {
            "name": "log.fortianalyzer2\/filter",
            "description": "Filters for FortiAnalyzer."
        },
        {
            "name": "log.fortianalyzer2\/override-filter",
            "description": "Override filters for FortiAnalyzer."
        },
        {
            "name": "log.fortianalyzer2\/override-setting",
            "description": "Override FortiAnalyzer settings."
        },
        {
            "name": "log.fortianalyzer2\/setting",
            "description": "Global FortiAnalyzer settings."
        },
        {
            "name": "log.fortianalyzer3\/filter",
            "description": "Filters for FortiAnalyzer."
        },
        {
            "name": "log.fortianalyzer3\/override-filter",
            "description": "Override filters for FortiAnalyzer."
        },
        {
            "name": "log.fortianalyzer3\/override-setting",
            "description": "Override FortiAnalyzer settings."
        },
        {
            "name": "log.fortianalyzer3\/setting",
            "description": "Global FortiAnalyzer settings."
        },
        {
            "name": "log.fortiguard\/filter",
            "description": "Filters for FortiCloud."
        },
        {
            "name": "log.fortiguard\/override-filter",
            "description": "Override filters for FortiCloud."
        },
        {
            "name": "log.fortiguard\/override-setting",
            "description": "Override global FortiCloud logging settings for this VDOM."
        },
        {
            "name": "log.fortiguard\/setting",
            "description": "Configure logging to FortiCloud."
        },
        {
            "name": "log.memory\/filter",
            "description": "Filters for memory buffer."
        },
        {
            "name": "log.memory\/global-setting",
            "description": "Global settings for memory logging."
        },
        {
            "name": "log.memory\/setting",
            "description": "Settings for memory buffer."
        },
        {
            "name": "log.null-device\/filter",
            "description": "Filters for null device logging."
        },
        {
            "name": "log.null-device\/setting",
            "description": "Settings for null device logging."
        },
        {
            "name": "log.syslogd\/filter",
            "description": "Filters for remote system server."
        },
        {
            "name": "log.syslogd\/override-filter",
            "description": "Override filters for remote system server."
        },
        {
            "name": "log.syslogd\/override-setting",
            "description": "Override settings for remote syslog server."
        },
        {
            "name": "log.syslogd\/setting",
            "description": "Global settings for remote syslog server."
        },
        {
            "name": "log.syslogd2\/filter",
            "description": "Filters for remote system server."
        },
        {
            "name": "log.syslogd2\/override-filter",
            "description": "Override filters for remote system server."
        },
        {
            "name": "log.syslogd2\/override-setting",
            "description": "Override settings for remote syslog server."
        },
        {
            "name": "log.syslogd2\/setting",
            "description": "Global settings for remote syslog server."
        },
        {
            "name": "log.syslogd3\/filter",
            "description": "Filters for remote system server."
        },
        {
            "name": "log.syslogd3\/override-filter",
            "description": "Override filters for remote system server."
        },
        {
            "name": "log.syslogd3\/override-setting",
            "description": "Override settings for remote syslog server."
        },
        {
            "name": "log.syslogd3\/setting",
            "description": "Global settings for remote syslog server."
        },
        {
            "name": "log.syslogd4\/filter",
            "description": "Filters for remote system server."
        },
        {
            "name": "log.syslogd4\/override-filter",
            "description": "Override filters for remote system server."
        },
        {
            "name": "log.syslogd4\/override-setting",
            "description": "Override settings for remote syslog server."
        },
        {
            "name": "log.syslogd4\/setting",
            "description": "Global settings for remote syslog server."
        },
        {
            "name": "log.webtrends\/filter",
            "description": "Filters for WebTrends."
        },
        {
            "name": "log.webtrends\/setting",
            "description": "Settings for WebTrends."
        },
        {
            "name": "log\/custom-field",
            "description": "Configure custom log fields."
        },
        {
            "name": "log\/eventfilter",
            "description": "Configure log event filters."
        },
        {
            "name": "log\/gui-display",
            "description": "Configure how log messages are displayed on the GUI."
        },
        {
            "name": "log\/setting",
            "description": "Configure general log settings."
        },
        {
            "name": "log\/threat-weight",
            "description": "Configure threat weight settings."
        }
    ],
    "paths": {
        "\/log.disk\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Log to disk every message above and including this severity level.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Disk log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.disk\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Log to disk every message above and including this severity level.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Disk log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.disk\/filter"
                ]
            }
        },
        "\/log.disk\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable local disk logging.   \nenable:Log to local disk.   \ndisable:Do not log to local disk.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archiving to the local disk.   \nenable:Enable IPS packet archiving.   \ndisable:Disable IPS packet archiving.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "max-log-file-size": {
                                    "type": "integer",
                                    "description": "Maximum log file size before rolling (1 - 100 Mbytes).",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "max-policy-packet-capture-size": {
                                    "type": "integer",
                                    "description": "Maximum size of policy sniffer in MB (0 means unlimited).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "roll-schedule": {
                                    "type": "string",
                                    "description": "Frequency to check log file for rolling.   \ndaily:Check the log file once a day.   \nweekly:Check the log file once a week.",
                                    "enum": [
                                        "daily",
                                        "weekly"
                                    ]
                                },
                                "roll-day": {
                                    "type": "string",
                                    "description": "Day of week on which to roll log file.   \nsunday:Sunday   \nmonday:Monday   \ntuesday:Tuesday   \nwednesday:Wednesday   \nthursday:Thursday   \nfriday:Friday   \nsaturday:Saturday",
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "roll-time": {
                                    "type": "string",
                                    "description": "Time of day to roll the log file (hh:mm)."
                                },
                                "diskfull": {
                                    "type": "string",
                                    "description": "Action to take when disk is full. The system can overwrite the oldest log messages or stop logging when the disk is full (default = overwrite).   \noverwrite:Overwrite the oldest logs when the log disk is full.   \nnolog:Stop logging when the log disk is full.",
                                    "enum": [
                                        "overwrite",
                                        "nolog"
                                    ]
                                },
                                "log-quota": {
                                    "type": "integer",
                                    "description": "Disk log quota (MB).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "dlp-archive-quota": {
                                    "type": "integer",
                                    "description": "DLP archive quota (MB).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "report-quota": {
                                    "type": "integer",
                                    "description": "Report quota (MB).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "maximum-log-age": {
                                    "type": "integer",
                                    "description": "Delete log files older than (days).",
                                    "maximum": 3650,
                                    "minimum": 0
                                },
                                "upload": {
                                    "type": "string",
                                    "description": "Enable\/disable uploading log files when they are rolled.   \nenable:Enable uploading log files when they are rolled.   \ndisable:Disable uploading log files when they are rolled.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "upload-destination": {
                                    "type": "string",
                                    "description": "The type of server to upload log files to. Only FTP is currently supported.   \nftp-server:Upload rolled log files to an FTP server.",
                                    "enum": [
                                        "ftp-server"
                                    ]
                                },
                                "uploadip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address of the FTP server to upload log files to."
                                },
                                "uploadport": {
                                    "type": "integer",
                                    "description": "TCP port to use for communicating with the FTP server (default = 21).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address to use for uploading disk log files."
                                },
                                "uploaduser": {
                                    "type": "string",
                                    "description": "Username required to log into the FTP server to upload disk log files.",
                                    "maxLength": 35
                                },
                                "uploadpass": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password required to log into the FTP server to upload disk log files."
                                },
                                "uploaddir": {
                                    "type": "string",
                                    "description": "The remote directory on the FTP server to upload log files to.",
                                    "maxLength": 63
                                },
                                "uploadtype": {
                                    "type": "string",
                                    "description": "Types of log files to upload. Separate multiple entries with a space.   \ntraffic:Upload traffic log.   \nevent:Upload event log.   \nvirus:Upload anti-virus log.   \nwebfilter:Upload web filter log.   \nIPS:Upload IPS log.   \nemailfilter:Upload spam filter log.   \ndlp-archive:Upload DLP archive.   \nanomaly:Upload anomaly log.   \nvoip:Upload VoIP log.   \ndlp:Upload DLP log.   \napp-ctrl:Upload application control log.   \nwaf:Upload web application firewall log.   \ndns:Upload DNS log.   \nssh:Upload SSH log.   \nssl:Upload SSL log.   \ncifs:Upload CIFS log.   \nfile-filter:Upload file-filter log.   \nicap:Upload ICAP log.",
                                    "enum": [
                                        "traffic",
                                        "event",
                                        "virus",
                                        "webfilter",
                                        "IPS",
                                        "emailfilter",
                                        "dlp-archive",
                                        "anomaly",
                                        "voip",
                                        "dlp",
                                        "app-ctrl",
                                        "waf",
                                        "dns",
                                        "ssh",
                                        "ssl",
                                        "cifs",
                                        "file-filter",
                                        "icap"
                                    ]
                                },
                                "uploadsched": {
                                    "type": "string",
                                    "description": "Set the schedule for uploading log files to the FTP server (default = disable = upload when rolling).   \ndisable:Upload when rolling.   \nenable:Scheduled upload.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "uploadtime": {
                                    "type": "string",
                                    "description": "Time of day at which log files are uploaded if uploadsched is enabled (hh:mm or hh)."
                                },
                                "upload-delete-files": {
                                    "type": "string",
                                    "description": "Delete log files after uploading (default = enable).   \nenable:Delete log files after uploading.   \ndisable:Do not delete log files after uploading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "upload-ssl-conn": {
                                    "type": "string",
                                    "description": "Enable\/disable encrypted FTPS communication to upload log files.   \ndefault:FTPS with high and medium encryption algorithms.   \nhigh:FTPS with high encryption algorithms.   \nlow:FTPS with low encryption algorithms.   \ndisable:Disable FTPS communication.",
                                    "enum": [
                                        "default",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "full-first-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full first warning threshold as a percent (1 - 98, default = 75).",
                                    "maximum": 98,
                                    "minimum": 1
                                },
                                "full-second-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full second warning threshold as a percent (2 - 99, default = 90).",
                                    "maximum": 99,
                                    "minimum": 2
                                },
                                "full-final-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full final warning threshold as a percent (3 - 100, default = 95).",
                                    "maximum": 100,
                                    "minimum": 3
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.disk\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable local disk logging.   \nenable:Log to local disk.   \ndisable:Do not log to local disk.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archiving to the local disk.   \nenable:Enable IPS packet archiving.   \ndisable:Disable IPS packet archiving.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "max-log-file-size": {
                                    "type": "integer",
                                    "description": "Maximum log file size before rolling (1 - 100 Mbytes).",
                                    "maximum": 100,
                                    "minimum": 1
                                },
                                "max-policy-packet-capture-size": {
                                    "type": "integer",
                                    "description": "Maximum size of policy sniffer in MB (0 means unlimited).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "roll-schedule": {
                                    "type": "string",
                                    "description": "Frequency to check log file for rolling.   \ndaily:Check the log file once a day.   \nweekly:Check the log file once a week.",
                                    "enum": [
                                        "daily",
                                        "weekly"
                                    ]
                                },
                                "roll-day": {
                                    "type": "string",
                                    "description": "Day of week on which to roll log file.   \nsunday:Sunday   \nmonday:Monday   \ntuesday:Tuesday   \nwednesday:Wednesday   \nthursday:Thursday   \nfriday:Friday   \nsaturday:Saturday",
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "roll-time": {
                                    "type": "string",
                                    "description": "Time of day to roll the log file (hh:mm)."
                                },
                                "diskfull": {
                                    "type": "string",
                                    "description": "Action to take when disk is full. The system can overwrite the oldest log messages or stop logging when the disk is full (default = overwrite).   \noverwrite:Overwrite the oldest logs when the log disk is full.   \nnolog:Stop logging when the log disk is full.",
                                    "enum": [
                                        "overwrite",
                                        "nolog"
                                    ]
                                },
                                "log-quota": {
                                    "type": "integer",
                                    "description": "Disk log quota (MB).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "dlp-archive-quota": {
                                    "type": "integer",
                                    "description": "DLP archive quota (MB).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "report-quota": {
                                    "type": "integer",
                                    "description": "Report quota (MB).",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "maximum-log-age": {
                                    "type": "integer",
                                    "description": "Delete log files older than (days).",
                                    "maximum": 3650,
                                    "minimum": 0
                                },
                                "upload": {
                                    "type": "string",
                                    "description": "Enable\/disable uploading log files when they are rolled.   \nenable:Enable uploading log files when they are rolled.   \ndisable:Disable uploading log files when they are rolled.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "upload-destination": {
                                    "type": "string",
                                    "description": "The type of server to upload log files to. Only FTP is currently supported.   \nftp-server:Upload rolled log files to an FTP server.",
                                    "enum": [
                                        "ftp-server"
                                    ]
                                },
                                "uploadip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "IP address of the FTP server to upload log files to."
                                },
                                "uploadport": {
                                    "type": "integer",
                                    "description": "TCP port to use for communicating with the FTP server (default = 21).",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address to use for uploading disk log files."
                                },
                                "uploaduser": {
                                    "type": "string",
                                    "description": "Username required to log into the FTP server to upload disk log files.",
                                    "maxLength": 35
                                },
                                "uploadpass": {
                                    "type": "string",
                                    "format": "password",
                                    "description": "Password required to log into the FTP server to upload disk log files."
                                },
                                "uploaddir": {
                                    "type": "string",
                                    "description": "The remote directory on the FTP server to upload log files to.",
                                    "maxLength": 63
                                },
                                "uploadtype": {
                                    "type": "string",
                                    "description": "Types of log files to upload. Separate multiple entries with a space.   \ntraffic:Upload traffic log.   \nevent:Upload event log.   \nvirus:Upload anti-virus log.   \nwebfilter:Upload web filter log.   \nIPS:Upload IPS log.   \nemailfilter:Upload spam filter log.   \ndlp-archive:Upload DLP archive.   \nanomaly:Upload anomaly log.   \nvoip:Upload VoIP log.   \ndlp:Upload DLP log.   \napp-ctrl:Upload application control log.   \nwaf:Upload web application firewall log.   \ndns:Upload DNS log.   \nssh:Upload SSH log.   \nssl:Upload SSL log.   \ncifs:Upload CIFS log.   \nfile-filter:Upload file-filter log.   \nicap:Upload ICAP log.",
                                    "enum": [
                                        "traffic",
                                        "event",
                                        "virus",
                                        "webfilter",
                                        "IPS",
                                        "emailfilter",
                                        "dlp-archive",
                                        "anomaly",
                                        "voip",
                                        "dlp",
                                        "app-ctrl",
                                        "waf",
                                        "dns",
                                        "ssh",
                                        "ssl",
                                        "cifs",
                                        "file-filter",
                                        "icap"
                                    ]
                                },
                                "uploadsched": {
                                    "type": "string",
                                    "description": "Set the schedule for uploading log files to the FTP server (default = disable = upload when rolling).   \ndisable:Upload when rolling.   \nenable:Scheduled upload.",
                                    "enum": [
                                        "disable",
                                        "enable"
                                    ]
                                },
                                "uploadtime": {
                                    "type": "string",
                                    "description": "Time of day at which log files are uploaded if uploadsched is enabled (hh:mm or hh)."
                                },
                                "upload-delete-files": {
                                    "type": "string",
                                    "description": "Delete log files after uploading (default = enable).   \nenable:Delete log files after uploading.   \ndisable:Do not delete log files after uploading.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "upload-ssl-conn": {
                                    "type": "string",
                                    "description": "Enable\/disable encrypted FTPS communication to upload log files.   \ndefault:FTPS with high and medium encryption algorithms.   \nhigh:FTPS with high encryption algorithms.   \nlow:FTPS with low encryption algorithms.   \ndisable:Disable FTPS communication.",
                                    "enum": [
                                        "default",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "full-first-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full first warning threshold as a percent (1 - 98, default = 75).",
                                    "maximum": 98,
                                    "minimum": 1
                                },
                                "full-second-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full second warning threshold as a percent (2 - 99, default = 90).",
                                    "maximum": 99,
                                    "minimum": 2
                                },
                                "full-final-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full final warning threshold as a percent (3 - 100, default = 95).",
                                    "maximum": 100,
                                    "minimum": 3
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.disk\/setting"
                ]
            }
        },
        "\/log.fortianalyzer-cloud\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer Cloud log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer-cloud\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer Cloud log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer-cloud\/filter"
                ]
            }
        },
        "\/log.fortianalyzer-cloud\/override-filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer Cloud log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer-cloud\/override-filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer Cloud log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer-cloud\/override-filter"
                ]
            }
        },
        "\/log.fortianalyzer-cloud\/override-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer-cloud\/override-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer-cloud\/override-setting"
                ]
            }
        },
        "\/log.fortianalyzer-cloud\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer-cloud\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer-cloud\/setting"
                ]
            }
        },
        "\/log.fortianalyzer\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer\/filter"
                ]
            }
        },
        "\/log.fortianalyzer\/override-filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer\/override-filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer\/override-filter"
                ]
            }
        },
        "\/log.fortianalyzer\/override-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "use-management-vdom": {
                                    "type": "string",
                                    "description": "Enable\/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \nenable:Enable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \ndisable:Disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer\/override-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "use-management-vdom": {
                                    "type": "string",
                                    "description": "Enable\/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \nenable:Enable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \ndisable:Disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer\/override-setting"
                ]
            }
        },
        "\/log.fortianalyzer\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer\/setting"
                ]
            }
        },
        "\/log.fortianalyzer2\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Log every message above and including this severity level.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer 2 log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer2\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Log every message above and including this severity level.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer 2 log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer2\/filter"
                ]
            }
        },
        "\/log.fortianalyzer2\/override-filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Log every message above and including this severity level.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer 2 log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer2\/override-filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Log every message above and including this severity level.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer 2 log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer2\/override-filter"
                ]
            }
        },
        "\/log.fortianalyzer2\/override-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "use-management-vdom": {
                                    "type": "string",
                                    "description": "Enable\/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \nenable:Enable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \ndisable:Disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer2\/override-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "use-management-vdom": {
                                    "type": "string",
                                    "description": "Enable\/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \nenable:Enable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \ndisable:Disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer2\/override-setting"
                ]
            }
        },
        "\/log.fortianalyzer2\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer2\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer2\/setting"
                ]
            }
        },
        "\/log.fortianalyzer3\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer 3 log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer3\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer 3 log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer3\/filter"
                ]
            }
        },
        "\/log.fortianalyzer3\/override-filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer 3 log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer3\/override-filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "dlp-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable DLP archive logging.   \nenable:Enable DLP archive logging.   \ndisable:Disable DLP archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiAnalyzer 3 log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer3\/override-filter"
                ]
            }
        },
        "\/log.fortianalyzer3\/override-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "use-management-vdom": {
                                    "type": "string",
                                    "description": "Enable\/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \nenable:Enable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \ndisable:Disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer3\/override-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "use-management-vdom": {
                                    "type": "string",
                                    "description": "Enable\/disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \nenable:Enable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.   \ndisable:Disable use of management VDOM IP address as source IP for logs sent to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer3\/override-setting"
                ]
            }
        },
        "\/log.fortianalyzer3\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortianalyzer3\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: secfabgrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiAnalyzer.   \nenable:Enable logging to FortiAnalyzer.   \ndisable:Disable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ips-archive": {
                                    "type": "string",
                                    "description": "Enable\/disable IPS packet archive logging.   \nenable:Enable IPS packet archive logging.   \ndisable:Disable IPS packet archive logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "The remote FortiAnalyzer.",
                                    "maxLength": 127
                                },
                                "certificate-verification": {
                                    "type": "string",
                                    "description": "Enable\/disable identity verification of FortiAnalyzer by use of certificate.   \nenable:Enable identity verification of FortiAnalyzer by use of certificate.   \ndisable:Disable identity verification of FortiAnalyzer by use of certificate.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "serial": {
                                    "description": "Serial numbers of the FortiAnalyzer.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Serial Number.",
                                                "maxLength": 79
                                            }
                                        }
                                    },
                                    "maxItems": 8
                                },
                                "access-config": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiAnalyzer access to configuration and data.   \nenable:Enable FortiAnalyzer access to configuration and data.   \ndisable:Disable FortiAnalyzer access to configuration and data.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "hmac-algorithm": {
                                    "type": "string",
                                    "description": "FortiAnalyzer IPsec tunnel HMAC algorithm.   \nsha256:Use SHA256 as HMAC algorithm.   \nsha1:Step down to SHA1 as the HMAC algorithm.",
                                    "enum": [
                                        "sha256",
                                        "sha1"
                                    ]
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiAnalyzer.   \nhigh-medium:Encrypt logs using high and medium encryption algorithms.   \nhigh:Encrypt logs using high encryption algorithms.   \nlow:Encrypt logs using all encryption algorithms.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer connection time-out in seconds (for status and log buffer).",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "monitor-keepalive-period": {
                                    "type": "integer",
                                    "description": "Time between OFTP keepalives in seconds (for status and log buffer).",
                                    "maximum": 120,
                                    "minimum": 1
                                },
                                "monitor-failure-retry-period": {
                                    "type": "integer",
                                    "description": "Time between FortiAnalyzer connection retries in seconds (for status and log buffer).",
                                    "maximum": 86400,
                                    "minimum": 1
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with FortiAnalyzer.",
                                    "maxLength": 35
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IPv4 or IPv6 address used to communicate with FortiAnalyzer.",
                                    "maxLength": 63
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to hard disk and then uploading to FortiAnalyzer.   \nstore-and-upload:Log to hard disk and then upload to FortiAnalyzer.   \nrealtime:Log directly to FortiAnalyzer in real time.   \n1-minute:Log directly to FortiAnalyzer at least every 1 minute.   \n5-minute:Log directly to FortiAnalyzer at least every 5 minutes.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency to upload log files to FortiAnalyzer.   \ndaily:Upload log files to FortiAnalyzer once a day.   \nweekly:Upload log files to FortiAnalyzer once a week.   \nmonthly:Upload log files to FortiAnalyzer once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week (month) to upload logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time to upload logs (hh:mm)."
                                },
                                "reliable": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable logging to FortiAnalyzer.   \nenable:Enable reliable logging to FortiAnalyzer.   \ndisable:Disable reliable logging to FortiAnalyzer.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiAnalyzer log transmission priority to default.   \nlow:Set FortiAnalyzer log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiAnalyzer maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortianalyzer3\/setting"
                ]
            }
        },
        "\/log.fortiguard\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiCloud log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortiguard\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiCloud log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortiguard\/filter"
                ]
            }
        },
        "\/log.fortiguard\/override-filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiCloud log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortiguard\/override-filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "FortiCloud log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortiguard\/override-filter"
                ]
            }
        },
        "\/log.fortiguard\/override-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "override": {
                                    "type": "string",
                                    "description": "Overriding FortiCloud settings for this VDOM or use global settings.   \nenable:Override FortiCloud logging settings.   \ndisable:Use global FortiCloud logging settings.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiCloud.   \nenable:Enable logging to FortiCloud.   \ndisable:Disable logging to FortiCloud.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Configure how log messages are sent to FortiCloud.   \nstore-and-upload:Log to the hard disk and then upload logs to FortiCloud.   \nrealtime:Log directly to FortiCloud in real time.   \n1-minute:Log directly to FortiCloud at 1-minute intervals.   \n5-minute:Log directly to FortiCloud at 5-minute intervals.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency of uploading log files to FortiCloud.   \ndaily:Upload log files to FortiCloud once a day.   \nweekly:Upload log files to FortiCloud once a week.   \nmonthly:Upload log files to FortiCloud once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week to roll logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time of day to roll logs (hh:mm)."
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiCloud log transmission priority to default.   \nlow:Set FortiCloud log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiCloud maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortiguard\/override-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "override": {
                                    "type": "string",
                                    "description": "Overriding FortiCloud settings for this VDOM or use global settings.   \nenable:Override FortiCloud logging settings.   \ndisable:Use global FortiCloud logging settings.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiCloud.   \nenable:Enable logging to FortiCloud.   \ndisable:Disable logging to FortiCloud.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Configure how log messages are sent to FortiCloud.   \nstore-and-upload:Log to the hard disk and then upload logs to FortiCloud.   \nrealtime:Log directly to FortiCloud in real time.   \n1-minute:Log directly to FortiCloud at 1-minute intervals.   \n5-minute:Log directly to FortiCloud at 5-minute intervals.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency of uploading log files to FortiCloud.   \ndaily:Upload log files to FortiCloud once a day.   \nweekly:Upload log files to FortiCloud once a week.   \nmonthly:Upload log files to FortiCloud once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week to roll logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time of day to roll logs (hh:mm)."
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiCloud log transmission priority to default.   \nlow:Set FortiCloud log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiCloud maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortiguard\/override-setting"
                ]
            }
        },
        "\/log.fortiguard\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiCloud.   \nenable:Enable logging to FortiCloud.   \ndisable:Disable logging to FortiCloud.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Configure how log messages are sent to FortiCloud.   \nstore-and-upload:Log to the hard disk and then upload logs to FortiCloud.   \nrealtime:Log directly to FortiCloud in real time.   \n1-minute:Log directly to FortiCloud at 1-minute intervals.   \n5-minute:Log directly to FortiCloud at 5-minute intervals.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency of uploading log files to FortiCloud.   \ndaily:Upload log files to FortiCloud once a day.   \nweekly:Upload log files to FortiCloud once a week.   \nmonthly:Upload log files to FortiCloud once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week to roll logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time of day to roll logs (hh:mm)."
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiCloud log transmission priority to default.   \nlow:Set FortiCloud log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiCloud maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiCloud.   \nhigh-medium:Encrypt logs using high and medium encryption.   \nhigh:Encrypt logs using high encryption.   \nlow:Encrypt logs using low encryption.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiGate Cloud connection timeout in seconds.",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address used to connect FortiCloud."
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.fortiguard\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to FortiCloud.   \nenable:Enable logging to FortiCloud.   \ndisable:Disable logging to FortiCloud.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "upload-option": {
                                    "type": "string",
                                    "description": "Configure how log messages are sent to FortiCloud.   \nstore-and-upload:Log to the hard disk and then upload logs to FortiCloud.   \nrealtime:Log directly to FortiCloud in real time.   \n1-minute:Log directly to FortiCloud at 1-minute intervals.   \n5-minute:Log directly to FortiCloud at 5-minute intervals.",
                                    "enum": [
                                        "store-and-upload",
                                        "realtime",
                                        "1-minute",
                                        "5-minute"
                                    ]
                                },
                                "upload-interval": {
                                    "type": "string",
                                    "description": "Frequency of uploading log files to FortiCloud.   \ndaily:Upload log files to FortiCloud once a day.   \nweekly:Upload log files to FortiCloud once a week.   \nmonthly:Upload log files to FortiCloud once a month.",
                                    "enum": [
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "upload-day": {
                                    "type": "string",
                                    "description": "Day of week to roll logs."
                                },
                                "upload-time": {
                                    "type": "string",
                                    "description": "Time of day to roll logs (hh:mm)."
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set FortiCloud log transmission priority to default.   \nlow:Set FortiCloud log transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "FortiCloud maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Configure the level of SSL protection for secure communication with FortiCloud.   \nhigh-medium:Encrypt logs using high and medium encryption.   \nhigh:Encrypt logs using high encryption.   \nlow:Encrypt logs using low encryption.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "conn-timeout": {
                                    "type": "integer",
                                    "description": "FortiGate Cloud connection timeout in seconds.",
                                    "maximum": 3600,
                                    "minimum": 1
                                },
                                "source-ip": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "Source IP address used to connect FortiCloud."
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.fortiguard\/setting"
                ]
            }
        },
        "\/log.memory\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Log every message above and including this severity level.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Memory log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.memory\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Log every message above and including this severity level.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Memory log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.memory\/filter"
                ]
            }
        },
        "\/log.memory\/global-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "max-size": {
                                    "type": "integer",
                                    "description": "Maximum amount of memory that can be used for memory logging in bytes.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "full-first-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full first warning threshold as a percent (1 - 98, default = 75).",
                                    "maximum": 98,
                                    "minimum": 1
                                },
                                "full-second-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full second warning threshold as a percent (2 - 99, default = 90).",
                                    "maximum": 99,
                                    "minimum": 2
                                },
                                "full-final-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full final warning threshold as a percent (3 - 100, default = 95).",
                                    "maximum": 100,
                                    "minimum": 3
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.memory\/global-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "max-size": {
                                    "type": "integer",
                                    "description": "Maximum amount of memory that can be used for memory logging in bytes.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "full-first-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full first warning threshold as a percent (1 - 98, default = 75).",
                                    "maximum": 98,
                                    "minimum": 1
                                },
                                "full-second-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full second warning threshold as a percent (2 - 99, default = 90).",
                                    "maximum": 99,
                                    "minimum": 2
                                },
                                "full-final-warning-threshold": {
                                    "type": "integer",
                                    "description": "Log full final warning threshold as a percent (3 - 100, default = 95).",
                                    "maximum": 100,
                                    "minimum": 3
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.memory\/global-setting"
                ]
            }
        },
        "\/log.memory\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to the FortiGate's memory.   \nenable:Enable logging to memory.   \ndisable:Disable logging to memory.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.memory\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to the FortiGate's memory.   \nenable:Enable logging to memory.   \ndisable:Disable logging to memory.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.memory\/setting"
                ]
            }
        },
        "\/log.null-device\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Null-device log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.null-device\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Null-device log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.null-device\/filter"
                ]
            }
        },
        "\/log.null-device\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable statistics collection for when no external logging destination, such as FortiAnalyzer, is present (data is not saved).   \nenable:Enable statistics collection for when no external logging destination, such as FortiAnalyzer, is present (data is not saved).   \ndisable:Disable statistics collection for when no external logging destination, such as FortiAnalyzer, is present (data is not saved).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.null-device\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable statistics collection for when no external logging destination, such as FortiAnalyzer, is present (data is not saved).   \nenable:Enable statistics collection for when no external logging destination, such as FortiAnalyzer, is present (data is not saved).   \ndisable:Disable statistics collection for when no external logging destination, such as FortiAnalyzer, is present (data is not saved).",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.null-device\/setting"
                ]
            }
        },
        "\/log.syslogd\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd\/filter"
                ]
            }
        },
        "\/log.syslogd\/override-filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd\/override-filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd\/override-filter"
                ]
            }
        },
        "\/log.syslogd\/override-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd\/override-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd\/override-setting"
                ]
            }
        },
        "\/log.syslogd\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd\/setting"
                ]
            }
        },
        "\/log.syslogd2\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 2 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd2\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 2 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd2\/filter"
                ]
            }
        },
        "\/log.syslogd2\/override-filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 2 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd2\/override-filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 2 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd2\/override-filter"
                ]
            }
        },
        "\/log.syslogd2\/override-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd2\/override-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd2\/override-setting"
                ]
            }
        },
        "\/log.syslogd2\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd2\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd2\/setting"
                ]
            }
        },
        "\/log.syslogd3\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 3 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd3\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 3 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd3\/filter"
                ]
            }
        },
        "\/log.syslogd3\/override-filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 3 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd3\/override-filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 3 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd3\/override-filter"
                ]
            }
        },
        "\/log.syslogd3\/override-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd3\/override-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd3\/override-setting"
                ]
            }
        },
        "\/log.syslogd3\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd3\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd3\/setting"
                ]
            }
        },
        "\/log.syslogd4\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 4 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd4\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 4 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd4\/filter"
                ]
            }
        },
        "\/log.syslogd4\/override-filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 4 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd4\/override-filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Syslog 4 filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd4\/override-filter"
                ]
            }
        },
        "\/log.syslogd4\/override-setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd4\/override-setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd4\/override-setting"
                ]
            }
        },
        "\/log.syslogd4\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.syslogd4\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable remote syslog logging.   \nenable:Log to remote syslog server.   \ndisable:Do not log to remote syslog server.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of remote syslog server.",
                                    "maxLength": 127
                                },
                                "mode": {
                                    "type": "string",
                                    "description": "Remote syslog logging over UDP\/Reliable TCP.   \nudp:Enable syslogging over UDP.   \nlegacy-reliable:Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).   \nreliable:Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
                                    "enum": [
                                        "udp",
                                        "legacy-reliable",
                                        "reliable"
                                    ]
                                },
                                "port": {
                                    "type": "integer",
                                    "description": "Server listen port.",
                                    "maximum": 65535,
                                    "minimum": 0
                                },
                                "facility": {
                                    "type": "string",
                                    "description": "Remote syslog facility.   \nkernel:Kernel messages.   \nuser:Random user-level messages.   \nmail:Mail system.   \ndaemon:System daemons.   \nauth:Security\/authorization messages.   \nsyslog:Messages generated internally by syslog.   \nlpr:Line printer subsystem.   \nnews:Network news subsystem.   \nuucp:Network news subsystem.   \ncron:Clock daemon.   \nauthpriv:Security\/authorization messages (private).   \nftp:FTP daemon.   \nntp:NTP daemon.   \naudit:Log audit.   \nalert:Log alert.   \nclock:Clock daemon.   \nlocal0:Reserved for local use.   \nlocal1:Reserved for local use.   \nlocal2:Reserved for local use.   \nlocal3:Reserved for local use.   \nlocal4:Reserved for local use.   \nlocal5:Reserved for local use.   \nlocal6:Reserved for local use.   \nlocal7:Reserved for local use.",
                                    "enum": [
                                        "kernel",
                                        "user",
                                        "mail",
                                        "daemon",
                                        "auth",
                                        "syslog",
                                        "lpr",
                                        "news",
                                        "uucp",
                                        "cron",
                                        "authpriv",
                                        "ftp",
                                        "ntp",
                                        "audit",
                                        "alert",
                                        "clock",
                                        "local0",
                                        "local1",
                                        "local2",
                                        "local3",
                                        "local4",
                                        "local5",
                                        "local6",
                                        "local7"
                                    ]
                                },
                                "source-ip": {
                                    "type": "string",
                                    "description": "Source IP address of syslog.",
                                    "maxLength": 63
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Log format.   \ndefault:Syslog format.   \ncsv:CSV (Comma Separated Values) format.   \ncef:CEF (Common Event Format) format.   \nrfc5424:Syslog RFC5424 format.",
                                    "enum": [
                                        "default",
                                        "csv",
                                        "cef",
                                        "rfc5424"
                                    ]
                                },
                                "priority": {
                                    "type": "string",
                                    "description": "Set log transmission priority.   \ndefault:Set Syslog transmission priority to default.   \nlow:Set Syslog transmission priority to low.",
                                    "enum": [
                                        "default",
                                        "low"
                                    ]
                                },
                                "max-log-rate": {
                                    "type": "integer",
                                    "description": "Syslog maximum log rate in MBps (0 = unlimited).",
                                    "maximum": 100000,
                                    "minimum": 0
                                },
                                "enc-algorithm": {
                                    "type": "string",
                                    "description": "Enable\/disable reliable syslogging with TLS encryption.   \nhigh-medium:SSL communication with high and medium encryption algorithms.   \nhigh:SSL communication with high encryption algorithms.   \nlow:SSL communication with low encryption algorithms.   \ndisable:Disable SSL communication.",
                                    "enum": [
                                        "high-medium",
                                        "high",
                                        "low",
                                        "disable"
                                    ]
                                },
                                "ssl-min-proto-version": {
                                    "type": "string",
                                    "description": "Minimum supported protocol version for SSL\/TLS connections (default is to follow system global setting).   \ndefault:Follow system global setting.   \nSSLv3:SSLv3.   \nTLSv1:TLSv1.   \nTLSv1-1:TLSv1.1.   \nTLSv1-2:TLSv1.2.",
                                    "enum": [
                                        "default",
                                        "SSLv3",
                                        "TLSv1",
                                        "TLSv1-1",
                                        "TLSv1-2"
                                    ]
                                },
                                "certificate": {
                                    "type": "string",
                                    "description": "Certificate used to communicate with Syslog server.",
                                    "maxLength": 35
                                },
                                "custom-field-name": {
                                    "description": "Custom field name for CEF format logging.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Field name.",
                                                "maxLength": 35
                                            },
                                            "custom": {
                                                "type": "string",
                                                "description": "Field custom name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "interface-select-method": {
                                    "type": "string",
                                    "description": "Specify how to select outgoing interface to reach server.   \nauto:Set outgoing interface automatically.   \nsdwan:Set outgoing interface by SD-WAN or policy routing rules.   \nspecify:Set outgoing interface manually.",
                                    "enum": [
                                        "auto",
                                        "sdwan",
                                        "specify"
                                    ]
                                },
                                "interface": {
                                    "type": "string",
                                    "description": "Specify outgoing interface to reach server.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.syslogd4\/setting"
                ]
            }
        },
        "\/log.webtrends\/filter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log to WebTrends.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Webtrends log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.webtrends\/filter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "severity": {
                                    "type": "string",
                                    "description": "Lowest severity level to log to WebTrends.   \nemergency:Emergency level.   \nalert:Alert level.   \ncritical:Critical level.   \nerror:Error level.   \nwarning:Warning level.   \nnotification:Notification level.   \ninformation:Information level.   \ndebug:Debug level.",
                                    "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notification",
                                        "information",
                                        "debug"
                                    ]
                                },
                                "forward-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable forward traffic logging.   \nenable:Enable forward traffic logging.   \ndisable:Disable forward traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable local in or out traffic logging.   \nenable:Enable local in or out traffic logging.   \ndisable:Disable local in or out traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "multicast-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable multicast traffic logging.   \nenable:Enable multicast traffic logging.   \ndisable:Disable multicast traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sniffer-traffic": {
                                    "type": "string",
                                    "description": "Enable\/disable sniffer traffic logging.   \nenable:Enable sniffer traffic logging.   \ndisable:Disable sniffer traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "anomaly": {
                                    "type": "string",
                                    "description": "Enable\/disable anomaly logging.   \nenable:Enable anomaly logging.   \ndisable:Disable anomaly logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "voip": {
                                    "type": "string",
                                    "description": "Enable\/disable VoIP logging.   \nenable:Enable VoIP logging.   \ndisable:Disable VoIP logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "filter": {
                                    "type": "string",
                                    "description": "Webtrends log filter.",
                                    "maxLength": 1023
                                },
                                "filter-type": {
                                    "type": "string",
                                    "description": "Include\/exclude logs that match the filter.   \ninclude:Include logs that match the filter.   \nexclude:Exclude logs that match the filter.",
                                    "enum": [
                                        "include",
                                        "exclude"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.webtrends\/filter"
                ]
            }
        },
        "\/log.webtrends\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to WebTrends.   \nenable:Enable logging to WebTrends.   \ndisable:Disble logging to WebTrends.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of the remote WebTrends server.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log.webtrends\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable logging to WebTrends.   \nenable:Enable logging to WebTrends.   \ndisable:Disble logging to WebTrends.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "server": {
                                    "type": "string",
                                    "description": "Address of the remote WebTrends server.",
                                    "maxLength": 63
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log.webtrends\/setting"
                ]
            }
        },
        "\/log\/custom-field\/{id}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "field ID <string>.",
                                    "maxLength": 35
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Field name (max: 15 characters).",
                                    "maxLength": 15
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Field value (max: 15 characters).",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "log\/custom-field"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "field ID <string>.",
                                    "maxLength": 35
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Field name (max: 15 characters).",
                                    "maxLength": 15
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Field value (max: 15 characters).",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "log\/custom-field"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log\/custom-field"
                ]
            }
        },
        "\/log\/custom-field": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "field ID <string>.",
                                    "maxLength": 35
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Field name (max: 15 characters).",
                                    "maxLength": 15
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Field value (max: 15 characters).",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log\/custom-field"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "field ID <string>.",
                                    "maxLength": 35
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Field name (max: 15 characters).",
                                    "maxLength": 15
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Field value (max: 15 characters).",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log\/custom-field"
                ]
            }
        },
        "\/log\/eventfilter": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "event": {
                                    "type": "string",
                                    "description": "Enable\/disable event logging.   \nenable:Enable event logging.   \ndisable:Disable event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "system": {
                                    "type": "string",
                                    "description": "Enable\/disable system event logging.   \nenable:Enable system event logging.   \ndisable:Disable system event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "vpn": {
                                    "type": "string",
                                    "description": "Enable\/disable VPN event logging.   \nenable:Enable VPN event logging.   \ndisable:Disable VPN event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user": {
                                    "type": "string",
                                    "description": "Enable\/disable user authentication event logging.   \nenable:Enable user authentication event logging.   \ndisable:Disable user authentication event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "router": {
                                    "type": "string",
                                    "description": "Enable\/disable router event logging.   \nenable:Enable router event logging.   \ndisable:Disable router event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "wireless-activity": {
                                    "type": "string",
                                    "description": "Enable\/disable wireless event logging.   \nenable:Enable wireless event logging.   \ndisable:Disable wireless event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "wan-opt": {
                                    "type": "string",
                                    "description": "Enable\/disable WAN optimization event logging.   \nenable:Enable WAN optimization event logging.   \ndisable:Disable WAN optimization event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "endpoint": {
                                    "type": "string",
                                    "description": "Enable\/disable endpoint event logging.   \nenable:Enable endpoint event logging.   \ndisable:Disable endpoint event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ha": {
                                    "type": "string",
                                    "description": "Enable\/disable ha event logging.   \nenable:Enable ha event logging.   \ndisable:Disable ha event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "security-rating": {
                                    "type": "string",
                                    "description": "Enable\/disable Security Rating result logging.   \nenable:Enable Security Fabric audit result logging.   \ndisable:Disable Security Fabric audit result logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fortiextender": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiExtender logging.   \nenable:Enable Forti-Extender logging.   \ndisable:Disable Forti-Extender logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "connector": {
                                    "type": "string",
                                    "description": "Enable\/disable SDN connector logging.   \nenable:Enable SDN connector logging.   \ndisable:Disable SDN connector logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable SD-WAN logging.   \nenable:Enable SD-WAN logging.   \ndisable:Disable SD-WAN logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "switch-controller": {
                                    "type": "string",
                                    "description": "Enable\/disable Switch-Controller logging.   \nenable:Enable Switch-Controller logging.   \ndisable:Disable Switch-Controller logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log\/eventfilter"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "event": {
                                    "type": "string",
                                    "description": "Enable\/disable event logging.   \nenable:Enable event logging.   \ndisable:Disable event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "system": {
                                    "type": "string",
                                    "description": "Enable\/disable system event logging.   \nenable:Enable system event logging.   \ndisable:Disable system event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "vpn": {
                                    "type": "string",
                                    "description": "Enable\/disable VPN event logging.   \nenable:Enable VPN event logging.   \ndisable:Disable VPN event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user": {
                                    "type": "string",
                                    "description": "Enable\/disable user authentication event logging.   \nenable:Enable user authentication event logging.   \ndisable:Disable user authentication event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "router": {
                                    "type": "string",
                                    "description": "Enable\/disable router event logging.   \nenable:Enable router event logging.   \ndisable:Disable router event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "wireless-activity": {
                                    "type": "string",
                                    "description": "Enable\/disable wireless event logging.   \nenable:Enable wireless event logging.   \ndisable:Disable wireless event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "wan-opt": {
                                    "type": "string",
                                    "description": "Enable\/disable WAN optimization event logging.   \nenable:Enable WAN optimization event logging.   \ndisable:Disable WAN optimization event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "endpoint": {
                                    "type": "string",
                                    "description": "Enable\/disable endpoint event logging.   \nenable:Enable endpoint event logging.   \ndisable:Disable endpoint event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "ha": {
                                    "type": "string",
                                    "description": "Enable\/disable ha event logging.   \nenable:Enable ha event logging.   \ndisable:Disable ha event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "security-rating": {
                                    "type": "string",
                                    "description": "Enable\/disable Security Rating result logging.   \nenable:Enable Security Fabric audit result logging.   \ndisable:Disable Security Fabric audit result logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fortiextender": {
                                    "type": "string",
                                    "description": "Enable\/disable FortiExtender logging.   \nenable:Enable Forti-Extender logging.   \ndisable:Disable Forti-Extender logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "connector": {
                                    "type": "string",
                                    "description": "Enable\/disable SDN connector logging.   \nenable:Enable SDN connector logging.   \ndisable:Disable SDN connector logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "sdwan": {
                                    "type": "string",
                                    "description": "Enable\/disable SD-WAN logging.   \nenable:Enable SD-WAN logging.   \ndisable:Disable SD-WAN logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "switch-controller": {
                                    "type": "string",
                                    "description": "Enable\/disable Switch-Controller logging.   \nenable:Enable Switch-Controller logging.   \ndisable:Disable Switch-Controller logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log\/eventfilter"
                ]
            }
        },
        "\/log\/gui-display": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "resolve-hosts": {
                                    "type": "string",
                                    "description": "Enable\/disable resolving IP addresses to hostname in log messages on the GUI using reverse DNS lookup   \nenable:Enable resolving IP addresses to hostnames.   \ndisable:Disable resolving IP addresses to hostnames.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "resolve-apps": {
                                    "type": "string",
                                    "description": "Resolve unknown applications on the GUI using Fortinet's remote application database.   \nenable:Enable unknown applications on the GUI.   \ndisable:Disable unknown applications on the GUI.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fortiview-unscanned-apps": {
                                    "type": "string",
                                    "description": "Enable\/disable showing unscanned traffic in FortiView application charts.   \nenable:Enable showing unscanned traffic.   \ndisable:Disable showing unscanned traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log\/gui-display"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "resolve-hosts": {
                                    "type": "string",
                                    "description": "Enable\/disable resolving IP addresses to hostname in log messages on the GUI using reverse DNS lookup   \nenable:Enable resolving IP addresses to hostnames.   \ndisable:Disable resolving IP addresses to hostnames.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "resolve-apps": {
                                    "type": "string",
                                    "description": "Resolve unknown applications on the GUI using Fortinet's remote application database.   \nenable:Enable unknown applications on the GUI.   \ndisable:Disable unknown applications on the GUI.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fortiview-unscanned-apps": {
                                    "type": "string",
                                    "description": "Enable\/disable showing unscanned traffic in FortiView application charts.   \nenable:Enable showing unscanned traffic.   \ndisable:Disable showing unscanned traffic.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log\/gui-display"
                ]
            }
        },
        "\/log\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "resolve-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable adding resolved domain names to traffic logs if possible.   \nenable:Enable adding resolved domain names to traffic logs.   \ndisable:Disable adding resolved domain names to traffic logs.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "resolve-port": {
                                    "type": "string",
                                    "description": "Enable\/disable adding resolved service names to traffic logs.   \nenable:Enable adding resolved service names to traffic logs.   \ndisable:Disable adding resolved service names to traffic logs.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-user-in-upper": {
                                    "type": "string",
                                    "description": "Enable\/disable logs with user-in-upper.   \nenable:Enable logs with user-in-upper.   \ndisable:Disable logs with user-in-upper.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fwpolicy-implicit-log": {
                                    "type": "string",
                                    "description": "Enable\/disable implicit firewall policy logging.   \nenable:Enable implicit firewall policy logging.   \ndisable:Disable implicit firewall policy logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fwpolicy6-implicit-log": {
                                    "type": "string",
                                    "description": "Enable\/disable implicit firewall policy6 logging.   \nenable:Enable implicit firewall policy6 logging.   \ndisable:Disable implicit firewall policy6 logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-invalid-packet": {
                                    "type": "string",
                                    "description": "Enable\/disable invalid packet traffic logging.   \nenable:Enable invalid packet traffic logging.   \ndisable:Disable invalid packet traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-in-allow": {
                                    "type": "string",
                                    "description": "Enable\/disable local-in-allow logging.   \nenable:Enable local-in-allow logging.   \ndisable:Disable local-in-allow logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-in-deny-unicast": {
                                    "type": "string",
                                    "description": "Enable\/disable local-in-deny-unicast logging.   \nenable:Enable local-in-deny-unicast logging.   \ndisable:Disable local-in-deny-unicast logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-in-deny-broadcast": {
                                    "type": "string",
                                    "description": "Enable\/disable local-in-deny-broadcast logging.   \nenable:Enable local-in-deny-broadcast logging.   \ndisable:Disable local-in-deny-broadcast logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-out": {
                                    "type": "string",
                                    "description": "Enable\/disable local-out logging.   \nenable:Enable local-out logging.   \ndisable:Disable local-out logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "daemon-log": {
                                    "type": "string",
                                    "description": "Enable\/disable daemon logging.   \nenable:Enable daemon logging.   \ndisable:Disable daemon logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "neighbor-event": {
                                    "type": "string",
                                    "description": "Enable\/disable neighbor event logging.   \nenable:Enable neighbor event logging.   \ndisable:Disable neighbor event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "brief-traffic-format": {
                                    "type": "string",
                                    "description": "Enable\/disable brief format traffic logging.   \nenable:Enable brief format traffic logging.   \ndisable:Disable brief format traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-anonymize": {
                                    "type": "string",
                                    "description": "Enable\/disable anonymizing user names in log messages.   \nenable:Enable anonymizing user names in log messages.   \ndisable:Disable anonymizing user names in log messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "expolicy-implicit-log": {
                                    "type": "string",
                                    "description": "Enable\/disable explicit proxy firewall implicit policy logging.   \nenable:Enable explicit proxy firewall implicit policy logging.   \ndisable:Disable explicit proxy firewall implicit policy logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-policy-comment": {
                                    "type": "string",
                                    "description": "Enable\/disable inserting policy comments into traffic logs.   \nenable:Enable inserting policy comments into traffic logs.   \ndisable:Disable inserting policy comments into traffic logs.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "faz-override": {
                                    "type": "string",
                                    "description": "Enable\/disable override FortiAnalyzer settings.   \nenable:Enable override FortiAnalyzer settings.   \ndisable:Disable override FortiAnalyzer settings.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "syslog-override": {
                                    "type": "string",
                                    "description": "Enable\/disable override Syslog settings.   \nenable:Enable override Syslog settings.   \ndisable:Disable override Syslog settings.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "custom-log-fields": {
                                    "description": "Custom fields to append to all log messages.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field-id": {
                                                "type": "string",
                                                "description": "Custom log field.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": 5
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "resolve-ip": {
                                    "type": "string",
                                    "description": "Enable\/disable adding resolved domain names to traffic logs if possible.   \nenable:Enable adding resolved domain names to traffic logs.   \ndisable:Disable adding resolved domain names to traffic logs.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "resolve-port": {
                                    "type": "string",
                                    "description": "Enable\/disable adding resolved service names to traffic logs.   \nenable:Enable adding resolved service names to traffic logs.   \ndisable:Disable adding resolved service names to traffic logs.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-user-in-upper": {
                                    "type": "string",
                                    "description": "Enable\/disable logs with user-in-upper.   \nenable:Enable logs with user-in-upper.   \ndisable:Disable logs with user-in-upper.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fwpolicy-implicit-log": {
                                    "type": "string",
                                    "description": "Enable\/disable implicit firewall policy logging.   \nenable:Enable implicit firewall policy logging.   \ndisable:Disable implicit firewall policy logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fwpolicy6-implicit-log": {
                                    "type": "string",
                                    "description": "Enable\/disable implicit firewall policy6 logging.   \nenable:Enable implicit firewall policy6 logging.   \ndisable:Disable implicit firewall policy6 logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-invalid-packet": {
                                    "type": "string",
                                    "description": "Enable\/disable invalid packet traffic logging.   \nenable:Enable invalid packet traffic logging.   \ndisable:Disable invalid packet traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-in-allow": {
                                    "type": "string",
                                    "description": "Enable\/disable local-in-allow logging.   \nenable:Enable local-in-allow logging.   \ndisable:Disable local-in-allow logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-in-deny-unicast": {
                                    "type": "string",
                                    "description": "Enable\/disable local-in-deny-unicast logging.   \nenable:Enable local-in-deny-unicast logging.   \ndisable:Disable local-in-deny-unicast logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-in-deny-broadcast": {
                                    "type": "string",
                                    "description": "Enable\/disable local-in-deny-broadcast logging.   \nenable:Enable local-in-deny-broadcast logging.   \ndisable:Disable local-in-deny-broadcast logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "local-out": {
                                    "type": "string",
                                    "description": "Enable\/disable local-out logging.   \nenable:Enable local-out logging.   \ndisable:Disable local-out logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "daemon-log": {
                                    "type": "string",
                                    "description": "Enable\/disable daemon logging.   \nenable:Enable daemon logging.   \ndisable:Disable daemon logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "neighbor-event": {
                                    "type": "string",
                                    "description": "Enable\/disable neighbor event logging.   \nenable:Enable neighbor event logging.   \ndisable:Disable neighbor event logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "brief-traffic-format": {
                                    "type": "string",
                                    "description": "Enable\/disable brief format traffic logging.   \nenable:Enable brief format traffic logging.   \ndisable:Disable brief format traffic logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "user-anonymize": {
                                    "type": "string",
                                    "description": "Enable\/disable anonymizing user names in log messages.   \nenable:Enable anonymizing user names in log messages.   \ndisable:Disable anonymizing user names in log messages.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "expolicy-implicit-log": {
                                    "type": "string",
                                    "description": "Enable\/disable explicit proxy firewall implicit policy logging.   \nenable:Enable explicit proxy firewall implicit policy logging.   \ndisable:Disable explicit proxy firewall implicit policy logging.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "log-policy-comment": {
                                    "type": "string",
                                    "description": "Enable\/disable inserting policy comments into traffic logs.   \nenable:Enable inserting policy comments into traffic logs.   \ndisable:Disable inserting policy comments into traffic logs.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "faz-override": {
                                    "type": "string",
                                    "description": "Enable\/disable override FortiAnalyzer settings.   \nenable:Enable override FortiAnalyzer settings.   \ndisable:Disable override FortiAnalyzer settings.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "syslog-override": {
                                    "type": "string",
                                    "description": "Enable\/disable override Syslog settings.   \nenable:Enable override Syslog settings.   \ndisable:Disable override Syslog settings.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "custom-log-fields": {
                                    "description": "Custom fields to append to all log messages.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "field-id": {
                                                "type": "string",
                                                "description": "Custom log field.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": 5
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log\/setting"
                ]
            }
        },
        "\/log\/threat-weight": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable the threat weight feature.   \nenable:Enable the threat weight feature.   \ndisable:Disable the threat weight feature.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "level": {
                                    "description": "Score mapping for threat weight levels.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "low": {
                                                "type": "integer",
                                                "description": "Low level score value (1 - 100).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "medium": {
                                                "type": "integer",
                                                "description": "Medium level score value (1 - 100).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "high": {
                                                "type": "integer",
                                                "description": "High level score value (1 - 100).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "critical": {
                                                "type": "integer",
                                                "description": "Critical level score value (1 - 100).",
                                                "maximum": 100,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "blocked-connection": {
                                    "type": "string",
                                    "description": "Threat weight score for blocked connections.   \ndisable:Disable threat weight scoring for blocked connections.   \nlow:Use the low level score for blocked connections.   \nmedium:Use the medium level score for blocked connections.   \nhigh:Use the high level score for blocked connections.   \ncritical:Use the critical level score for blocked connections.",
                                    "enum": [
                                        "disable",
                                        "low",
                                        "medium",
                                        "high",
                                        "critical"
                                    ]
                                },
                                "failed-connection": {
                                    "type": "string",
                                    "description": "Threat weight score for failed connections.   \ndisable:Disable threat weight scoring for failed connections.   \nlow:Use the low level score for failed connections.   \nmedium:Use the medium level score for failed connections.   \nhigh:Use the high level score for failed connections.   \ncritical:Use the critical level score for failed connections.",
                                    "enum": [
                                        "disable",
                                        "low",
                                        "medium",
                                        "high",
                                        "critical"
                                    ]
                                },
                                "url-block-detected": {
                                    "type": "string",
                                    "description": "Threat weight score for URL blocking.   \ndisable:Disable threat weight scoring for URL blocking.   \nlow:Use the low level score for URL blocking.   \nmedium:Use the medium level score for URL blocking.   \nhigh:Use the high level score for URL blocking.   \ncritical:Use the critical level score for URL blocking.",
                                    "enum": [
                                        "disable",
                                        "low",
                                        "medium",
                                        "high",
                                        "critical"
                                    ]
                                },
                                "botnet-connection-detected": {
                                    "type": "string",
                                    "description": "Threat weight score for detected botnet connections.   \ndisable:Disable threat weight scoring for detected botnet connections.   \nlow:Use the low level score for detected botnet connections.   \nmedium:Use the medium level score for detected botnet connections.   \nhigh:Use the high level score for detected botnet connections.   \ncritical:Use the critical level score for detected botnet connections.",
                                    "enum": [
                                        "disable",
                                        "low",
                                        "medium",
                                        "high",
                                        "critical"
                                    ]
                                },
                                "malware": {
                                    "description": "Anti-virus malware threat weight settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "virus-infected": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (infected) detected.   \ndisable:Disable threat weight scoring for virus (infected) detected.   \nlow:Use the low level score for virus (infected) detected.   \nmedium:Use the medium level score for virus (infected) detected.   \nhigh:Use the high level score for virus (infected) detected.   \ncritical:Use the critical level score for virus (infected) detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "file-blocked": {
                                                "type": "string",
                                                "description": "Threat weight score for blocked file detected.   \ndisable:Disable threat weight scoring for blocked file detected.   \nlow:Use the low level score for blocked file detected.   \nmedium:Use the medium level score for blocked file detected.   \nhigh:Use the high level score for blocked file detected.   \ncritical:Use the critical level score for blocked file detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "command-blocked": {
                                                "type": "string",
                                                "description": "Threat weight score for blocked command detected.   \ndisable:Disable threat weight scoring for blocked command detected.   \nlow:Use the low level score for blocked command detected.   \nmedium:Use the medium level score for blocked command detected.   \nhigh:Use the high level score for blocked command detected.   \ncritical:Use the critical level score for blocked command detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "oversized": {
                                                "type": "string",
                                                "description": "Threat weight score for oversized file detected.   \ndisable:Disable threat weight scoring for oversized file detected.   \nlow:Use the low level score for oversized file detected.   \nmedium:Use the medium level score for oversized file detected.   \nhigh:Use the high level score for oversized file detected.   \ncritical:Use the critical level score for oversized file detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "virus-scan-error": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (scan error) detected.   \ndisable:Disable threat weight scoring for virus (scan error) detected.   \nlow:Use the low level score for virus (scan error) detected.   \nmedium:Use the medium level score for virus (scan error) detected.   \nhigh:Use the high level score for virus (scan error) detected.   \ncritical:Use the critical level score for virus (scan error) detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "switch-proto": {
                                                "type": "string",
                                                "description": "Threat weight score for switch proto detected.   \ndisable:Disable threat weight scoring for switch proto detected.   \nlow:Use the low level score for switch proto detected.   \nmedium:Use the medium level score for switch proto detected.   \nhigh:Use the high level score for switch proto detected.   \ncritical:Use the critical level score for switch proto detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "mimefragmented": {
                                                "type": "string",
                                                "description": "Threat weight score for mimefragmented detected.   \ndisable:Disable threat weight scoring for mimefragmented detected.   \nlow:Use the low level score for mimefragmented detected.   \nmedium:Use the medium level score for mimefragmented detected.   \nhigh:Use the high level score for mimefragmented detected.   \ncritical:Use the critical level score for mimefragmented detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "virus-file-type-executable": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (filetype executable) detected.   \ndisable:Disable threat weight scoring for virus (filetype executable) detected.   \nlow:Use the low level score for virus (filetype executable) detected.   \nmedium:Use the medium level score for virus (filetype executable) detected.   \nhigh:Use the high level score for virus (filetype executable) detected.   \ncritical:Use the critical level score for virus (filetype executable) detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "virus-outbreak-prevention": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (outbreak prevention) event.   \ndisable:Disable threat weight scoring for virus (outbreak prevention) event.   \nlow:Use the low level score for virus (outbreak prevention) event.   \nmedium:Use the medium level score for virus (outbreak prevention) event.   \nhigh:Use the high level score for virus (outbreak prevention) event.   \ncritical:Use the critical level score for virus (outbreak prevention) event.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "content-disarm": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (content disarm) detected.   \ndisable:Disable threat weight scoring for virus (content disarm) detected.   \nlow:Use the low level score for virus (content disarm) detected.   \nmedium:Use the medium level score for virus (content disarm) detected.   \nhigh:Use the high level score for virus (content disarm) detected.   \ncritical:Use the critical level score for virus (content disarm) detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "malware-list": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (malware list) detected.   \ndisable:Disable threat weight scoring for virus (malware list) detected.   \nlow:Use the low level score for virus (malware list) detected.   \nmedium:Use the medium level score for virus (malware list) detected.   \nhigh:Use the high level score for virus (malware list) detected.   \ncritical:Use the critical level score for virus (malware list) detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "fsa-malicious": {
                                                "type": "string",
                                                "description": "Threat weight score for FortiSandbox malicious malware detected.   \ndisable:Disable threat weight scoring for FortiSandbox malicious malware detected.   \nlow:Use the low level score for FortiSandbox malicious malware detected.   \nmedium:Use the medium level score for FortiSandbox malicious malware detected.   \nhigh:Use the high level score for FortiSandbox malicious malware detected.   \ncritical:Use the critical level score for FortiSandbox malicious malware detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "fsa-high-risk": {
                                                "type": "string",
                                                "description": "Threat weight score for FortiSandbox high risk malware detected.   \ndisable:Disable threat weight scoring for FortiSandbox high risk malware detected.   \nlow:Use the low level score for FortiSandbox high risk malware detected.   \nmedium:Use the medium level score for FortiSandbox high risk malware detected.   \nhigh:Use the high level score for FortiSandbox high risk malware detected.   \ncritical:Use the critical level score for FortiSandbox high risk malware detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "fsa-medium-risk": {
                                                "type": "string",
                                                "description": "Threat weight score for FortiSandbox medium risk malware detected.   \ndisable:Disable threat weight scoring for FortiSandbox medium risk malware detected.   \nlow:Use the low level score for FortiSandbox medium risk malware detected.   \nmedium:Use the medium level score for FortiSandbox medium risk malware detected.   \nhigh:Use the high level score for FortiSandbox medium risk malware detected.   \ncritical:Use the critical level score for FortiSandbox medium risk malware detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ips": {
                                    "description": "IPS threat weight settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "info-severity": {
                                                "type": "string",
                                                "description": "Threat weight score for IPS info severity events.   \ndisable:Disable threat weight scoring for IPS info severity events.   \nlow:Use the low level score for IPS info severity events.   \nmedium:Use the medium level score for IPS info severity events.   \nhigh:Use the high level score for IPS info severity events.   \ncritical:Use the critical level score for IPS info severity events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "low-severity": {
                                                "type": "string",
                                                "description": "Threat weight score for IPS low severity events.   \ndisable:Disable threat weight scoring for IPS low severity events.   \nlow:Use the low level score for IPS low severity events.   \nmedium:Use the medium level score for IPS low severity events.   \nhigh:Use the high level score for IPS low severity events.   \ncritical:Use the critical level score for IPS low severity events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "medium-severity": {
                                                "type": "string",
                                                "description": "Threat weight score for IPS medium severity events.   \ndisable:Disable threat weight scoring for IPS medium severity events.   \nlow:Use the low level score for IPS medium severity events.   \nmedium:Use the medium level score for IPS medium severity events.   \nhigh:Use the high level score for IPS medium severity events.   \ncritical:Use the critical level score for IPS medium severity events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "high-severity": {
                                                "type": "string",
                                                "description": "Threat weight score for IPS high severity events.   \ndisable:Disable threat weight scoring for IPS high severity events.   \nlow:Use the low level score for IPS high severity events.   \nmedium:Use the medium level score for IPS high severity events.   \nhigh:Use the high level score for IPS high severity events.   \ncritical:Use the critical level score for IPS high severity events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "critical-severity": {
                                                "type": "string",
                                                "description": "Threat weight score for IPS critical severity events.   \ndisable:Disable threat weight scoring for IPS critical severity events.   \nlow:Use the low level score for IPS critical severity events.   \nmedium:Use the medium level score for IPS critical severity events.   \nhigh:Use the high level score for IPS critical severity events.   \ncritical:Use the critical level score for IPS critical severity events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "web": {
                                    "description": "Web filtering threat weight settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "category": {
                                                "type": "integer",
                                                "description": "Threat weight score for web category filtering matches.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Threat weight score for web category filtering matches.   \ndisable:Disable threat weight scoring for web category filtering matches.   \nlow:Use the low level score for web category filtering matches.   \nmedium:Use the medium level score for web category filtering matches.   \nhigh:Use the high level score for web category filtering matches.   \ncritical:Use the critical level score for web category filtering matches.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "geolocation": {
                                    "description": "Geolocation-based threat weight settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "country": {
                                                "type": "string",
                                                "description": "Country code.",
                                                "maxLength": 2
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Threat weight score for Geolocation-based events.   \ndisable:Disable threat weight scoring for Geolocation-based events.   \nlow:Use the low level score for Geolocation-based events.   \nmedium:Use the medium level score for Geolocation-based events.   \nhigh:Use the high level score for Geolocation-based events.   \ncritical:Use the critical level score for Geolocation-based events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "application": {
                                    "description": "Application-control threat weight settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "category": {
                                                "type": "integer",
                                                "description": "Application category.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Threat weight score for Application events.   \ndisable:Disable threat weight scoring for Application events.   \nlow:Use the low level score for Application events.   \nmedium:Use the medium level score for Application events.   \nhigh:Use the high level score for Application events.   \ncritical:Use the critical level score for Application events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "log\/threat-weight"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Enable\/disable the threat weight feature.   \nenable:Enable the threat weight feature.   \ndisable:Disable the threat weight feature.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "level": {
                                    "description": "Score mapping for threat weight levels.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "low": {
                                                "type": "integer",
                                                "description": "Low level score value (1 - 100).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "medium": {
                                                "type": "integer",
                                                "description": "Medium level score value (1 - 100).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "high": {
                                                "type": "integer",
                                                "description": "High level score value (1 - 100).",
                                                "maximum": 100,
                                                "minimum": 1
                                            },
                                            "critical": {
                                                "type": "integer",
                                                "description": "Critical level score value (1 - 100).",
                                                "maximum": 100,
                                                "minimum": 1
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "blocked-connection": {
                                    "type": "string",
                                    "description": "Threat weight score for blocked connections.   \ndisable:Disable threat weight scoring for blocked connections.   \nlow:Use the low level score for blocked connections.   \nmedium:Use the medium level score for blocked connections.   \nhigh:Use the high level score for blocked connections.   \ncritical:Use the critical level score for blocked connections.",
                                    "enum": [
                                        "disable",
                                        "low",
                                        "medium",
                                        "high",
                                        "critical"
                                    ]
                                },
                                "failed-connection": {
                                    "type": "string",
                                    "description": "Threat weight score for failed connections.   \ndisable:Disable threat weight scoring for failed connections.   \nlow:Use the low level score for failed connections.   \nmedium:Use the medium level score for failed connections.   \nhigh:Use the high level score for failed connections.   \ncritical:Use the critical level score for failed connections.",
                                    "enum": [
                                        "disable",
                                        "low",
                                        "medium",
                                        "high",
                                        "critical"
                                    ]
                                },
                                "url-block-detected": {
                                    "type": "string",
                                    "description": "Threat weight score for URL blocking.   \ndisable:Disable threat weight scoring for URL blocking.   \nlow:Use the low level score for URL blocking.   \nmedium:Use the medium level score for URL blocking.   \nhigh:Use the high level score for URL blocking.   \ncritical:Use the critical level score for URL blocking.",
                                    "enum": [
                                        "disable",
                                        "low",
                                        "medium",
                                        "high",
                                        "critical"
                                    ]
                                },
                                "botnet-connection-detected": {
                                    "type": "string",
                                    "description": "Threat weight score for detected botnet connections.   \ndisable:Disable threat weight scoring for detected botnet connections.   \nlow:Use the low level score for detected botnet connections.   \nmedium:Use the medium level score for detected botnet connections.   \nhigh:Use the high level score for detected botnet connections.   \ncritical:Use the critical level score for detected botnet connections.",
                                    "enum": [
                                        "disable",
                                        "low",
                                        "medium",
                                        "high",
                                        "critical"
                                    ]
                                },
                                "malware": {
                                    "description": "Anti-virus malware threat weight settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "virus-infected": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (infected) detected.   \ndisable:Disable threat weight scoring for virus (infected) detected.   \nlow:Use the low level score for virus (infected) detected.   \nmedium:Use the medium level score for virus (infected) detected.   \nhigh:Use the high level score for virus (infected) detected.   \ncritical:Use the critical level score for virus (infected) detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "file-blocked": {
                                                "type": "string",
                                                "description": "Threat weight score for blocked file detected.   \ndisable:Disable threat weight scoring for blocked file detected.   \nlow:Use the low level score for blocked file detected.   \nmedium:Use the medium level score for blocked file detected.   \nhigh:Use the high level score for blocked file detected.   \ncritical:Use the critical level score for blocked file detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "command-blocked": {
                                                "type": "string",
                                                "description": "Threat weight score for blocked command detected.   \ndisable:Disable threat weight scoring for blocked command detected.   \nlow:Use the low level score for blocked command detected.   \nmedium:Use the medium level score for blocked command detected.   \nhigh:Use the high level score for blocked command detected.   \ncritical:Use the critical level score for blocked command detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "oversized": {
                                                "type": "string",
                                                "description": "Threat weight score for oversized file detected.   \ndisable:Disable threat weight scoring for oversized file detected.   \nlow:Use the low level score for oversized file detected.   \nmedium:Use the medium level score for oversized file detected.   \nhigh:Use the high level score for oversized file detected.   \ncritical:Use the critical level score for oversized file detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "virus-scan-error": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (scan error) detected.   \ndisable:Disable threat weight scoring for virus (scan error) detected.   \nlow:Use the low level score for virus (scan error) detected.   \nmedium:Use the medium level score for virus (scan error) detected.   \nhigh:Use the high level score for virus (scan error) detected.   \ncritical:Use the critical level score for virus (scan error) detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "switch-proto": {
                                                "type": "string",
                                                "description": "Threat weight score for switch proto detected.   \ndisable:Disable threat weight scoring for switch proto detected.   \nlow:Use the low level score for switch proto detected.   \nmedium:Use the medium level score for switch proto detected.   \nhigh:Use the high level score for switch proto detected.   \ncritical:Use the critical level score for switch proto detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "mimefragmented": {
                                                "type": "string",
                                                "description": "Threat weight score for mimefragmented detected.   \ndisable:Disable threat weight scoring for mimefragmented detected.   \nlow:Use the low level score for mimefragmented detected.   \nmedium:Use the medium level score for mimefragmented detected.   \nhigh:Use the high level score for mimefragmented detected.   \ncritical:Use the critical level score for mimefragmented detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "virus-file-type-executable": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (filetype executable) detected.   \ndisable:Disable threat weight scoring for virus (filetype executable) detected.   \nlow:Use the low level score for virus (filetype executable) detected.   \nmedium:Use the medium level score for virus (filetype executable) detected.   \nhigh:Use the high level score for virus (filetype executable) detected.   \ncritical:Use the critical level score for virus (filetype executable) detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "virus-outbreak-prevention": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (outbreak prevention) event.   \ndisable:Disable threat weight scoring for virus (outbreak prevention) event.   \nlow:Use the low level score for virus (outbreak prevention) event.   \nmedium:Use the medium level score for virus (outbreak prevention) event.   \nhigh:Use the high level score for virus (outbreak prevention) event.   \ncritical:Use the critical level score for virus (outbreak prevention) event.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "content-disarm": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (content disarm) detected.   \ndisable:Disable threat weight scoring for virus (content disarm) detected.   \nlow:Use the low level score for virus (content disarm) detected.   \nmedium:Use the medium level score for virus (content disarm) detected.   \nhigh:Use the high level score for virus (content disarm) detected.   \ncritical:Use the critical level score for virus (content disarm) detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "malware-list": {
                                                "type": "string",
                                                "description": "Threat weight score for virus (malware list) detected.   \ndisable:Disable threat weight scoring for virus (malware list) detected.   \nlow:Use the low level score for virus (malware list) detected.   \nmedium:Use the medium level score for virus (malware list) detected.   \nhigh:Use the high level score for virus (malware list) detected.   \ncritical:Use the critical level score for virus (malware list) detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "fsa-malicious": {
                                                "type": "string",
                                                "description": "Threat weight score for FortiSandbox malicious malware detected.   \ndisable:Disable threat weight scoring for FortiSandbox malicious malware detected.   \nlow:Use the low level score for FortiSandbox malicious malware detected.   \nmedium:Use the medium level score for FortiSandbox malicious malware detected.   \nhigh:Use the high level score for FortiSandbox malicious malware detected.   \ncritical:Use the critical level score for FortiSandbox malicious malware detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "fsa-high-risk": {
                                                "type": "string",
                                                "description": "Threat weight score for FortiSandbox high risk malware detected.   \ndisable:Disable threat weight scoring for FortiSandbox high risk malware detected.   \nlow:Use the low level score for FortiSandbox high risk malware detected.   \nmedium:Use the medium level score for FortiSandbox high risk malware detected.   \nhigh:Use the high level score for FortiSandbox high risk malware detected.   \ncritical:Use the critical level score for FortiSandbox high risk malware detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "fsa-medium-risk": {
                                                "type": "string",
                                                "description": "Threat weight score for FortiSandbox medium risk malware detected.   \ndisable:Disable threat weight scoring for FortiSandbox medium risk malware detected.   \nlow:Use the low level score for FortiSandbox medium risk malware detected.   \nmedium:Use the medium level score for FortiSandbox medium risk malware detected.   \nhigh:Use the high level score for FortiSandbox medium risk malware detected.   \ncritical:Use the critical level score for FortiSandbox medium risk malware detected.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "ips": {
                                    "description": "IPS threat weight settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "info-severity": {
                                                "type": "string",
                                                "description": "Threat weight score for IPS info severity events.   \ndisable:Disable threat weight scoring for IPS info severity events.   \nlow:Use the low level score for IPS info severity events.   \nmedium:Use the medium level score for IPS info severity events.   \nhigh:Use the high level score for IPS info severity events.   \ncritical:Use the critical level score for IPS info severity events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "low-severity": {
                                                "type": "string",
                                                "description": "Threat weight score for IPS low severity events.   \ndisable:Disable threat weight scoring for IPS low severity events.   \nlow:Use the low level score for IPS low severity events.   \nmedium:Use the medium level score for IPS low severity events.   \nhigh:Use the high level score for IPS low severity events.   \ncritical:Use the critical level score for IPS low severity events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "medium-severity": {
                                                "type": "string",
                                                "description": "Threat weight score for IPS medium severity events.   \ndisable:Disable threat weight scoring for IPS medium severity events.   \nlow:Use the low level score for IPS medium severity events.   \nmedium:Use the medium level score for IPS medium severity events.   \nhigh:Use the high level score for IPS medium severity events.   \ncritical:Use the critical level score for IPS medium severity events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "high-severity": {
                                                "type": "string",
                                                "description": "Threat weight score for IPS high severity events.   \ndisable:Disable threat weight scoring for IPS high severity events.   \nlow:Use the low level score for IPS high severity events.   \nmedium:Use the medium level score for IPS high severity events.   \nhigh:Use the high level score for IPS high severity events.   \ncritical:Use the critical level score for IPS high severity events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            },
                                            "critical-severity": {
                                                "type": "string",
                                                "description": "Threat weight score for IPS critical severity events.   \ndisable:Disable threat weight scoring for IPS critical severity events.   \nlow:Use the low level score for IPS critical severity events.   \nmedium:Use the medium level score for IPS critical severity events.   \nhigh:Use the high level score for IPS critical severity events.   \ncritical:Use the critical level score for IPS critical severity events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "web": {
                                    "description": "Web filtering threat weight settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "category": {
                                                "type": "integer",
                                                "description": "Threat weight score for web category filtering matches.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Threat weight score for web category filtering matches.   \ndisable:Disable threat weight scoring for web category filtering matches.   \nlow:Use the low level score for web category filtering matches.   \nmedium:Use the medium level score for web category filtering matches.   \nhigh:Use the high level score for web category filtering matches.   \ncritical:Use the critical level score for web category filtering matches.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "geolocation": {
                                    "description": "Geolocation-based threat weight settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "country": {
                                                "type": "string",
                                                "description": "Country code.",
                                                "maxLength": 2
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Threat weight score for Geolocation-based events.   \ndisable:Disable threat weight scoring for Geolocation-based events.   \nlow:Use the low level score for Geolocation-based events.   \nmedium:Use the medium level score for Geolocation-based events.   \nhigh:Use the high level score for Geolocation-based events.   \ncritical:Use the critical level score for Geolocation-based events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "application": {
                                    "description": "Application-control threat weight settings.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Entry ID.",
                                                "maximum": 255,
                                                "minimum": 0
                                            },
                                            "category": {
                                                "type": "integer",
                                                "description": "Application category.",
                                                "maximum": 65535,
                                                "minimum": 0
                                            },
                                            "level": {
                                                "type": "string",
                                                "description": "Threat weight score for Application events.   \ndisable:Disable threat weight scoring for Application events.   \nlow:Use the low level score for Application events.   \nmedium:Use the medium level score for Application events.   \nhigh:Use the high level score for Application events.   \ncritical:Use the critical level score for Application events.",
                                                "enum": [
                                                    "disable",
                                                    "low",
                                                    "medium",
                                                    "high",
                                                    "critical"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "log\/threat-weight"
                ]
            }
        }
    }
}