{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http:\/\/fortinet.com\/terms\/",
        "version": "v2",
        "contact": {
            "url": "http:\/\/modskristensen.net",
            "name": "FortiOS Web Application Team",
            "email": "fosguiqateam@fortinet.com"
        },
        "description": "REST API for configuring FortiOS objects and settings",
        "title": "FortiOS CMDB"
    },
    "host": "172.16.177.65",
    "basePath": "\/api\/v2\/cmdb",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application\/json"
    ],
    "produces": [
        "application\/json"
    ],
    "securityDefinitions": {
        "APIKeyQueryParam": {
            "type": "apiKey",
            "name": "access_token",
            "in": "query"
        }
    },
    "security": [
        {
            "APIKeyQueryParam": []
        }
    ],
    "tags": [
        {
            "name": "report\/chart",
            "description": "Report chart widget configuration."
        },
        {
            "name": "report\/dataset",
            "description": "Report dataset configuration."
        },
        {
            "name": "report\/layout",
            "description": "Report layout configuration."
        },
        {
            "name": "report\/setting",
            "description": "Report setting configuration."
        },
        {
            "name": "report\/style",
            "description": "Report style configuration."
        },
        {
            "name": "report\/theme",
            "description": "Report themes configuration"
        }
    ],
    "paths": {
        "\/report\/chart\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Chart Widget Name",
                                    "maxLength": 71
                                },
                                "policy": {
                                    "type": "integer",
                                    "description": "Used by monitor policy.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Chart type.   \ngraph:Graph.   \ntable:Table.",
                                    "enum": [
                                        "graph",
                                        "table"
                                    ]
                                },
                                "period": {
                                    "type": "string",
                                    "description": "Time period.   \nlast24h:Last 24 hours.   \nlast7d:Last 7 days.",
                                    "enum": [
                                        "last24h",
                                        "last7d"
                                    ]
                                },
                                "drill-down-charts": {
                                    "description": "Drill down charts.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Drill down chart ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "chart-name": {
                                                "type": "string",
                                                "description": "Drill down chart name.",
                                                "maxLength": 71
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable this drill down chart.   \nenable:Enable this drill down chart.   \ndisable:Disable this drill down chart.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "dataset": {
                                    "type": "string",
                                    "description": "Bind dataset to chart.",
                                    "maxLength": 71
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category.   \nmisc:Miscellaneous.   \ntraffic:Traffic.   \nevent:Event.   \nvirus:Virus.   \nwebfilter:Webfilter.   \nattack:Attack.   \nspam:Spam.   \ndlp:Data leak prevention.   \napp-ctrl:Application control.   \nvulnerability:Vulnerability.",
                                    "enum": [
                                        "misc",
                                        "traffic",
                                        "event",
                                        "virus",
                                        "webfilter",
                                        "attack",
                                        "spam",
                                        "dlp",
                                        "app-ctrl",
                                        "vulnerability"
                                    ]
                                },
                                "favorite": {
                                    "type": "string",
                                    "description": "Favorite.   \nno:Not a favorite chart.   \nyes:Favorite chart.",
                                    "enum": [
                                        "no",
                                        "yes"
                                    ]
                                },
                                "graph-type": {
                                    "type": "string",
                                    "description": "Graph type.   \nnone:None.   \nbar:Bar Chart.   \npie:Pie Chart.   \nline:Line Chart.   \nflow:flow Chart.",
                                    "enum": [
                                        "none",
                                        "bar",
                                        "pie",
                                        "line",
                                        "flow"
                                    ]
                                },
                                "style": {
                                    "type": "string",
                                    "description": "Style.   \nauto:Auto.   \nmanual:Manual.",
                                    "enum": [
                                        "auto",
                                        "manual"
                                    ]
                                },
                                "dimension": {
                                    "type": "string",
                                    "description": "Dimension.   \n2D:2D graphic.   \n3D:3D graphic.",
                                    "enum": [
                                        "2D",
                                        "3D"
                                    ]
                                },
                                "x-series": {
                                    "description": "X-series of chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "X-series value expression.",
                                                "maxLength": 127
                                            },
                                            "caption": {
                                                "type": "string",
                                                "description": "X-series caption.",
                                                "maxLength": 35
                                            },
                                            "caption-font-size": {
                                                "type": "integer",
                                                "description": "X-series caption font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "X-series label font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "label-angle": {
                                                "type": "string",
                                                "description": "X-series label angle.   \n45-degree:45-degree.   \nvertical:Vertical.   \nhorizontal:Horizontal.",
                                                "enum": [
                                                    "45-degree",
                                                    "vertical",
                                                    "horizontal"
                                                ]
                                            },
                                            "is-category": {
                                                "type": "string",
                                                "description": "X-series represent category or not.   \nyes:X-series is category.   \nno:X-series is not category.",
                                                "enum": [
                                                    "yes",
                                                    "no"
                                                ]
                                            },
                                            "scale-unit": {
                                                "type": "string",
                                                "description": "Scale unit.   \nminute:Minute.   \nhour:Hour.   \nday:Day.   \nmonth:Month.   \nyear:Year.",
                                                "enum": [
                                                    "minute",
                                                    "hour",
                                                    "day",
                                                    "month",
                                                    "year"
                                                ]
                                            },
                                            "scale-step": {
                                                "type": "integer",
                                                "description": "Scale step.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "scale-direction": {
                                                "type": "string",
                                                "description": "Scale increase or decrease.   \ndecrease:Decrease.   \nincrease:Increase.",
                                                "enum": [
                                                    "decrease",
                                                    "increase"
                                                ]
                                            },
                                            "scale-format": {
                                                "type": "string",
                                                "description": "Date\/time format.   \nYYYY-MM-DD-HH-MM:YYYY\/MM\/DD HH:MM   \nYYYY-MM-DD HH:YYYY\/MM\/DD HH   \nYYYY-MM-DD:YYYY\/MM\/DD   \nYYYY-MM:YYYY\/MM   \nYYYY:YYYY   \nHH-MM:HH:MM   \nMM-DD:MM:DD",
                                                "enum": [
                                                    "YYYY-MM-DD-HH-MM",
                                                    "YYYY-MM-DD HH",
                                                    "YYYY-MM-DD",
                                                    "YYYY-MM",
                                                    "YYYY",
                                                    "HH-MM",
                                                    "MM-DD"
                                                ]
                                            },
                                            "unit": {
                                                "type": "string",
                                                "description": "X-series unit.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "y-series": {
                                    "description": "Y-series of chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Y-series value expression.",
                                                "maxLength": 127
                                            },
                                            "caption": {
                                                "type": "string",
                                                "description": "Y-series caption.",
                                                "maxLength": 35
                                            },
                                            "caption-font-size": {
                                                "type": "integer",
                                                "description": "Y-series caption font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "Y-series label font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "label-angle": {
                                                "type": "string",
                                                "description": "Y-series label angle.   \n45-degree:45-degree.   \nvertical:Vertical.   \nhorizontal:Horizontal.",
                                                "enum": [
                                                    "45-degree",
                                                    "vertical",
                                                    "horizontal"
                                                ]
                                            },
                                            "group": {
                                                "type": "string",
                                                "description": "Y-series group option.",
                                                "maxLength": 127
                                            },
                                            "unit": {
                                                "type": "string",
                                                "description": "Y-series unit.",
                                                "maxLength": 35
                                            },
                                            "extra-y": {
                                                "type": "string",
                                                "description": "Allow another Y-series value   \nenable:Enable second Y-series.   \ndisable:Disable second Y-series.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "extra-databind": {
                                                "type": "string",
                                                "description": "Extra Y-series value.",
                                                "maxLength": 127
                                            },
                                            "y-legend": {
                                                "type": "string",
                                                "description": "First Y-series legend type\/name.",
                                                "maxLength": 35
                                            },
                                            "extra-y-legend": {
                                                "type": "string",
                                                "description": "Extra Y-series legend type\/name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "category-series": {
                                    "description": "Category series of pie chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Category series value expression.",
                                                "maxLength": 127
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "Font size of category-series title.",
                                                "maximum": 20,
                                                "minimum": 5
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "value-series": {
                                    "description": "Value series of pie chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Value series value expression.",
                                                "maxLength": 127
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Chart title.",
                                    "maxLength": 63
                                },
                                "title-font-size": {
                                    "type": "integer",
                                    "description": "Font size of chart title.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "background": {
                                    "type": "string",
                                    "description": "Chart background.",
                                    "maxLength": 11
                                },
                                "color-palette": {
                                    "type": "string",
                                    "description": "Color palette (system will pick color automatically by default).",
                                    "maxLength": 11
                                },
                                "legend": {
                                    "type": "string",
                                    "description": "Enable\/Disable Legend area.   \nenable:Enable legend area.   \ndisable:Disable legend area.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "legend-font-size": {
                                    "type": "integer",
                                    "description": "Font size of legend area.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "column": {
                                    "description": "Table column definition.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "header-value": {
                                                "type": "string",
                                                "description": "Display name of table header.",
                                                "maxLength": 127
                                            },
                                            "detail-value": {
                                                "type": "string",
                                                "description": "Detail value of column.",
                                                "maxLength": 127
                                            },
                                            "footer-value": {
                                                "type": "string",
                                                "description": "Footer value of column.",
                                                "maxLength": 127
                                            },
                                            "detail-unit": {
                                                "type": "string",
                                                "description": "Detail unit of column.",
                                                "maxLength": 35
                                            },
                                            "footer-unit": {
                                                "type": "string",
                                                "description": "Footer unit of column.",
                                                "maxLength": 35
                                            },
                                            "mapping": {
                                                "description": "Show detail in certain display value for certain condition.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "id",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "op": {
                                                            "type": "string",
                                                            "description": "Comparision operater.   \nnone:None.   \ngreater:Greater than.   \ngreater-equal:Greater than or equal to.   \nless:Less than.   \nless-equal:Less than or equal to.   \nequal:Equal to.   \nbetween:Between value 1 and value 2.",
                                                            "enum": [
                                                                "none",
                                                                "greater",
                                                                "greater-equal",
                                                                "less",
                                                                "less-equal",
                                                                "equal",
                                                                "between"
                                                            ]
                                                        },
                                                        "value-type": {
                                                            "type": "string",
                                                            "description": "Value type.   \ninteger:Integer.   \nstring:String.",
                                                            "enum": [
                                                                "integer",
                                                                "string"
                                                            ]
                                                        },
                                                        "value1": {
                                                            "type": "string",
                                                            "description": "Value 1.",
                                                            "maxLength": 127
                                                        },
                                                        "value2": {
                                                            "type": "string",
                                                            "description": "Value 2.",
                                                            "maxLength": 127
                                                        },
                                                        "displayname": {
                                                            "type": "string",
                                                            "description": "Display name.",
                                                            "maxLength": 127
                                                        }
                                                    }
                                                },
                                                "maxItems": 8
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "report\/chart"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Chart Widget Name",
                                    "maxLength": 71
                                },
                                "policy": {
                                    "type": "integer",
                                    "description": "Used by monitor policy.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Chart type.   \ngraph:Graph.   \ntable:Table.",
                                    "enum": [
                                        "graph",
                                        "table"
                                    ]
                                },
                                "period": {
                                    "type": "string",
                                    "description": "Time period.   \nlast24h:Last 24 hours.   \nlast7d:Last 7 days.",
                                    "enum": [
                                        "last24h",
                                        "last7d"
                                    ]
                                },
                                "drill-down-charts": {
                                    "description": "Drill down charts.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Drill down chart ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "chart-name": {
                                                "type": "string",
                                                "description": "Drill down chart name.",
                                                "maxLength": 71
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable this drill down chart.   \nenable:Enable this drill down chart.   \ndisable:Disable this drill down chart.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "dataset": {
                                    "type": "string",
                                    "description": "Bind dataset to chart.",
                                    "maxLength": 71
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category.   \nmisc:Miscellaneous.   \ntraffic:Traffic.   \nevent:Event.   \nvirus:Virus.   \nwebfilter:Webfilter.   \nattack:Attack.   \nspam:Spam.   \ndlp:Data leak prevention.   \napp-ctrl:Application control.   \nvulnerability:Vulnerability.",
                                    "enum": [
                                        "misc",
                                        "traffic",
                                        "event",
                                        "virus",
                                        "webfilter",
                                        "attack",
                                        "spam",
                                        "dlp",
                                        "app-ctrl",
                                        "vulnerability"
                                    ]
                                },
                                "favorite": {
                                    "type": "string",
                                    "description": "Favorite.   \nno:Not a favorite chart.   \nyes:Favorite chart.",
                                    "enum": [
                                        "no",
                                        "yes"
                                    ]
                                },
                                "graph-type": {
                                    "type": "string",
                                    "description": "Graph type.   \nnone:None.   \nbar:Bar Chart.   \npie:Pie Chart.   \nline:Line Chart.   \nflow:flow Chart.",
                                    "enum": [
                                        "none",
                                        "bar",
                                        "pie",
                                        "line",
                                        "flow"
                                    ]
                                },
                                "style": {
                                    "type": "string",
                                    "description": "Style.   \nauto:Auto.   \nmanual:Manual.",
                                    "enum": [
                                        "auto",
                                        "manual"
                                    ]
                                },
                                "dimension": {
                                    "type": "string",
                                    "description": "Dimension.   \n2D:2D graphic.   \n3D:3D graphic.",
                                    "enum": [
                                        "2D",
                                        "3D"
                                    ]
                                },
                                "x-series": {
                                    "description": "X-series of chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "X-series value expression.",
                                                "maxLength": 127
                                            },
                                            "caption": {
                                                "type": "string",
                                                "description": "X-series caption.",
                                                "maxLength": 35
                                            },
                                            "caption-font-size": {
                                                "type": "integer",
                                                "description": "X-series caption font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "X-series label font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "label-angle": {
                                                "type": "string",
                                                "description": "X-series label angle.   \n45-degree:45-degree.   \nvertical:Vertical.   \nhorizontal:Horizontal.",
                                                "enum": [
                                                    "45-degree",
                                                    "vertical",
                                                    "horizontal"
                                                ]
                                            },
                                            "is-category": {
                                                "type": "string",
                                                "description": "X-series represent category or not.   \nyes:X-series is category.   \nno:X-series is not category.",
                                                "enum": [
                                                    "yes",
                                                    "no"
                                                ]
                                            },
                                            "scale-unit": {
                                                "type": "string",
                                                "description": "Scale unit.   \nminute:Minute.   \nhour:Hour.   \nday:Day.   \nmonth:Month.   \nyear:Year.",
                                                "enum": [
                                                    "minute",
                                                    "hour",
                                                    "day",
                                                    "month",
                                                    "year"
                                                ]
                                            },
                                            "scale-step": {
                                                "type": "integer",
                                                "description": "Scale step.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "scale-direction": {
                                                "type": "string",
                                                "description": "Scale increase or decrease.   \ndecrease:Decrease.   \nincrease:Increase.",
                                                "enum": [
                                                    "decrease",
                                                    "increase"
                                                ]
                                            },
                                            "scale-format": {
                                                "type": "string",
                                                "description": "Date\/time format.   \nYYYY-MM-DD-HH-MM:YYYY\/MM\/DD HH:MM   \nYYYY-MM-DD HH:YYYY\/MM\/DD HH   \nYYYY-MM-DD:YYYY\/MM\/DD   \nYYYY-MM:YYYY\/MM   \nYYYY:YYYY   \nHH-MM:HH:MM   \nMM-DD:MM:DD",
                                                "enum": [
                                                    "YYYY-MM-DD-HH-MM",
                                                    "YYYY-MM-DD HH",
                                                    "YYYY-MM-DD",
                                                    "YYYY-MM",
                                                    "YYYY",
                                                    "HH-MM",
                                                    "MM-DD"
                                                ]
                                            },
                                            "unit": {
                                                "type": "string",
                                                "description": "X-series unit.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "y-series": {
                                    "description": "Y-series of chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Y-series value expression.",
                                                "maxLength": 127
                                            },
                                            "caption": {
                                                "type": "string",
                                                "description": "Y-series caption.",
                                                "maxLength": 35
                                            },
                                            "caption-font-size": {
                                                "type": "integer",
                                                "description": "Y-series caption font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "Y-series label font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "label-angle": {
                                                "type": "string",
                                                "description": "Y-series label angle.   \n45-degree:45-degree.   \nvertical:Vertical.   \nhorizontal:Horizontal.",
                                                "enum": [
                                                    "45-degree",
                                                    "vertical",
                                                    "horizontal"
                                                ]
                                            },
                                            "group": {
                                                "type": "string",
                                                "description": "Y-series group option.",
                                                "maxLength": 127
                                            },
                                            "unit": {
                                                "type": "string",
                                                "description": "Y-series unit.",
                                                "maxLength": 35
                                            },
                                            "extra-y": {
                                                "type": "string",
                                                "description": "Allow another Y-series value   \nenable:Enable second Y-series.   \ndisable:Disable second Y-series.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "extra-databind": {
                                                "type": "string",
                                                "description": "Extra Y-series value.",
                                                "maxLength": 127
                                            },
                                            "y-legend": {
                                                "type": "string",
                                                "description": "First Y-series legend type\/name.",
                                                "maxLength": 35
                                            },
                                            "extra-y-legend": {
                                                "type": "string",
                                                "description": "Extra Y-series legend type\/name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "category-series": {
                                    "description": "Category series of pie chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Category series value expression.",
                                                "maxLength": 127
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "Font size of category-series title.",
                                                "maximum": 20,
                                                "minimum": 5
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "value-series": {
                                    "description": "Value series of pie chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Value series value expression.",
                                                "maxLength": 127
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Chart title.",
                                    "maxLength": 63
                                },
                                "title-font-size": {
                                    "type": "integer",
                                    "description": "Font size of chart title.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "background": {
                                    "type": "string",
                                    "description": "Chart background.",
                                    "maxLength": 11
                                },
                                "color-palette": {
                                    "type": "string",
                                    "description": "Color palette (system will pick color automatically by default).",
                                    "maxLength": 11
                                },
                                "legend": {
                                    "type": "string",
                                    "description": "Enable\/Disable Legend area.   \nenable:Enable legend area.   \ndisable:Disable legend area.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "legend-font-size": {
                                    "type": "integer",
                                    "description": "Font size of legend area.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "column": {
                                    "description": "Table column definition.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "header-value": {
                                                "type": "string",
                                                "description": "Display name of table header.",
                                                "maxLength": 127
                                            },
                                            "detail-value": {
                                                "type": "string",
                                                "description": "Detail value of column.",
                                                "maxLength": 127
                                            },
                                            "footer-value": {
                                                "type": "string",
                                                "description": "Footer value of column.",
                                                "maxLength": 127
                                            },
                                            "detail-unit": {
                                                "type": "string",
                                                "description": "Detail unit of column.",
                                                "maxLength": 35
                                            },
                                            "footer-unit": {
                                                "type": "string",
                                                "description": "Footer unit of column.",
                                                "maxLength": 35
                                            },
                                            "mapping": {
                                                "description": "Show detail in certain display value for certain condition.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "id",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "op": {
                                                            "type": "string",
                                                            "description": "Comparision operater.   \nnone:None.   \ngreater:Greater than.   \ngreater-equal:Greater than or equal to.   \nless:Less than.   \nless-equal:Less than or equal to.   \nequal:Equal to.   \nbetween:Between value 1 and value 2.",
                                                            "enum": [
                                                                "none",
                                                                "greater",
                                                                "greater-equal",
                                                                "less",
                                                                "less-equal",
                                                                "equal",
                                                                "between"
                                                            ]
                                                        },
                                                        "value-type": {
                                                            "type": "string",
                                                            "description": "Value type.   \ninteger:Integer.   \nstring:String.",
                                                            "enum": [
                                                                "integer",
                                                                "string"
                                                            ]
                                                        },
                                                        "value1": {
                                                            "type": "string",
                                                            "description": "Value 1.",
                                                            "maxLength": 127
                                                        },
                                                        "value2": {
                                                            "type": "string",
                                                            "description": "Value 2.",
                                                            "maxLength": 127
                                                        },
                                                        "displayname": {
                                                            "type": "string",
                                                            "description": "Display name.",
                                                            "maxLength": 127
                                                        }
                                                    }
                                                },
                                                "maxItems": 8
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "report\/chart"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "report\/chart"
                ]
            }
        },
        "\/report\/chart": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Chart Widget Name",
                                    "maxLength": 71
                                },
                                "policy": {
                                    "type": "integer",
                                    "description": "Used by monitor policy.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Chart type.   \ngraph:Graph.   \ntable:Table.",
                                    "enum": [
                                        "graph",
                                        "table"
                                    ]
                                },
                                "period": {
                                    "type": "string",
                                    "description": "Time period.   \nlast24h:Last 24 hours.   \nlast7d:Last 7 days.",
                                    "enum": [
                                        "last24h",
                                        "last7d"
                                    ]
                                },
                                "drill-down-charts": {
                                    "description": "Drill down charts.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Drill down chart ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "chart-name": {
                                                "type": "string",
                                                "description": "Drill down chart name.",
                                                "maxLength": 71
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable this drill down chart.   \nenable:Enable this drill down chart.   \ndisable:Disable this drill down chart.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "dataset": {
                                    "type": "string",
                                    "description": "Bind dataset to chart.",
                                    "maxLength": 71
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category.   \nmisc:Miscellaneous.   \ntraffic:Traffic.   \nevent:Event.   \nvirus:Virus.   \nwebfilter:Webfilter.   \nattack:Attack.   \nspam:Spam.   \ndlp:Data leak prevention.   \napp-ctrl:Application control.   \nvulnerability:Vulnerability.",
                                    "enum": [
                                        "misc",
                                        "traffic",
                                        "event",
                                        "virus",
                                        "webfilter",
                                        "attack",
                                        "spam",
                                        "dlp",
                                        "app-ctrl",
                                        "vulnerability"
                                    ]
                                },
                                "favorite": {
                                    "type": "string",
                                    "description": "Favorite.   \nno:Not a favorite chart.   \nyes:Favorite chart.",
                                    "enum": [
                                        "no",
                                        "yes"
                                    ]
                                },
                                "graph-type": {
                                    "type": "string",
                                    "description": "Graph type.   \nnone:None.   \nbar:Bar Chart.   \npie:Pie Chart.   \nline:Line Chart.   \nflow:flow Chart.",
                                    "enum": [
                                        "none",
                                        "bar",
                                        "pie",
                                        "line",
                                        "flow"
                                    ]
                                },
                                "style": {
                                    "type": "string",
                                    "description": "Style.   \nauto:Auto.   \nmanual:Manual.",
                                    "enum": [
                                        "auto",
                                        "manual"
                                    ]
                                },
                                "dimension": {
                                    "type": "string",
                                    "description": "Dimension.   \n2D:2D graphic.   \n3D:3D graphic.",
                                    "enum": [
                                        "2D",
                                        "3D"
                                    ]
                                },
                                "x-series": {
                                    "description": "X-series of chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "X-series value expression.",
                                                "maxLength": 127
                                            },
                                            "caption": {
                                                "type": "string",
                                                "description": "X-series caption.",
                                                "maxLength": 35
                                            },
                                            "caption-font-size": {
                                                "type": "integer",
                                                "description": "X-series caption font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "X-series label font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "label-angle": {
                                                "type": "string",
                                                "description": "X-series label angle.   \n45-degree:45-degree.   \nvertical:Vertical.   \nhorizontal:Horizontal.",
                                                "enum": [
                                                    "45-degree",
                                                    "vertical",
                                                    "horizontal"
                                                ]
                                            },
                                            "is-category": {
                                                "type": "string",
                                                "description": "X-series represent category or not.   \nyes:X-series is category.   \nno:X-series is not category.",
                                                "enum": [
                                                    "yes",
                                                    "no"
                                                ]
                                            },
                                            "scale-unit": {
                                                "type": "string",
                                                "description": "Scale unit.   \nminute:Minute.   \nhour:Hour.   \nday:Day.   \nmonth:Month.   \nyear:Year.",
                                                "enum": [
                                                    "minute",
                                                    "hour",
                                                    "day",
                                                    "month",
                                                    "year"
                                                ]
                                            },
                                            "scale-step": {
                                                "type": "integer",
                                                "description": "Scale step.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "scale-direction": {
                                                "type": "string",
                                                "description": "Scale increase or decrease.   \ndecrease:Decrease.   \nincrease:Increase.",
                                                "enum": [
                                                    "decrease",
                                                    "increase"
                                                ]
                                            },
                                            "scale-format": {
                                                "type": "string",
                                                "description": "Date\/time format.   \nYYYY-MM-DD-HH-MM:YYYY\/MM\/DD HH:MM   \nYYYY-MM-DD HH:YYYY\/MM\/DD HH   \nYYYY-MM-DD:YYYY\/MM\/DD   \nYYYY-MM:YYYY\/MM   \nYYYY:YYYY   \nHH-MM:HH:MM   \nMM-DD:MM:DD",
                                                "enum": [
                                                    "YYYY-MM-DD-HH-MM",
                                                    "YYYY-MM-DD HH",
                                                    "YYYY-MM-DD",
                                                    "YYYY-MM",
                                                    "YYYY",
                                                    "HH-MM",
                                                    "MM-DD"
                                                ]
                                            },
                                            "unit": {
                                                "type": "string",
                                                "description": "X-series unit.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "y-series": {
                                    "description": "Y-series of chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Y-series value expression.",
                                                "maxLength": 127
                                            },
                                            "caption": {
                                                "type": "string",
                                                "description": "Y-series caption.",
                                                "maxLength": 35
                                            },
                                            "caption-font-size": {
                                                "type": "integer",
                                                "description": "Y-series caption font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "Y-series label font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "label-angle": {
                                                "type": "string",
                                                "description": "Y-series label angle.   \n45-degree:45-degree.   \nvertical:Vertical.   \nhorizontal:Horizontal.",
                                                "enum": [
                                                    "45-degree",
                                                    "vertical",
                                                    "horizontal"
                                                ]
                                            },
                                            "group": {
                                                "type": "string",
                                                "description": "Y-series group option.",
                                                "maxLength": 127
                                            },
                                            "unit": {
                                                "type": "string",
                                                "description": "Y-series unit.",
                                                "maxLength": 35
                                            },
                                            "extra-y": {
                                                "type": "string",
                                                "description": "Allow another Y-series value   \nenable:Enable second Y-series.   \ndisable:Disable second Y-series.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "extra-databind": {
                                                "type": "string",
                                                "description": "Extra Y-series value.",
                                                "maxLength": 127
                                            },
                                            "y-legend": {
                                                "type": "string",
                                                "description": "First Y-series legend type\/name.",
                                                "maxLength": 35
                                            },
                                            "extra-y-legend": {
                                                "type": "string",
                                                "description": "Extra Y-series legend type\/name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "category-series": {
                                    "description": "Category series of pie chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Category series value expression.",
                                                "maxLength": 127
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "Font size of category-series title.",
                                                "maximum": 20,
                                                "minimum": 5
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "value-series": {
                                    "description": "Value series of pie chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Value series value expression.",
                                                "maxLength": 127
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Chart title.",
                                    "maxLength": 63
                                },
                                "title-font-size": {
                                    "type": "integer",
                                    "description": "Font size of chart title.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "background": {
                                    "type": "string",
                                    "description": "Chart background.",
                                    "maxLength": 11
                                },
                                "color-palette": {
                                    "type": "string",
                                    "description": "Color palette (system will pick color automatically by default).",
                                    "maxLength": 11
                                },
                                "legend": {
                                    "type": "string",
                                    "description": "Enable\/Disable Legend area.   \nenable:Enable legend area.   \ndisable:Disable legend area.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "legend-font-size": {
                                    "type": "integer",
                                    "description": "Font size of legend area.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "column": {
                                    "description": "Table column definition.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "header-value": {
                                                "type": "string",
                                                "description": "Display name of table header.",
                                                "maxLength": 127
                                            },
                                            "detail-value": {
                                                "type": "string",
                                                "description": "Detail value of column.",
                                                "maxLength": 127
                                            },
                                            "footer-value": {
                                                "type": "string",
                                                "description": "Footer value of column.",
                                                "maxLength": 127
                                            },
                                            "detail-unit": {
                                                "type": "string",
                                                "description": "Detail unit of column.",
                                                "maxLength": 35
                                            },
                                            "footer-unit": {
                                                "type": "string",
                                                "description": "Footer unit of column.",
                                                "maxLength": 35
                                            },
                                            "mapping": {
                                                "description": "Show detail in certain display value for certain condition.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "id",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "op": {
                                                            "type": "string",
                                                            "description": "Comparision operater.   \nnone:None.   \ngreater:Greater than.   \ngreater-equal:Greater than or equal to.   \nless:Less than.   \nless-equal:Less than or equal to.   \nequal:Equal to.   \nbetween:Between value 1 and value 2.",
                                                            "enum": [
                                                                "none",
                                                                "greater",
                                                                "greater-equal",
                                                                "less",
                                                                "less-equal",
                                                                "equal",
                                                                "between"
                                                            ]
                                                        },
                                                        "value-type": {
                                                            "type": "string",
                                                            "description": "Value type.   \ninteger:Integer.   \nstring:String.",
                                                            "enum": [
                                                                "integer",
                                                                "string"
                                                            ]
                                                        },
                                                        "value1": {
                                                            "type": "string",
                                                            "description": "Value 1.",
                                                            "maxLength": 127
                                                        },
                                                        "value2": {
                                                            "type": "string",
                                                            "description": "Value 2.",
                                                            "maxLength": 127
                                                        },
                                                        "displayname": {
                                                            "type": "string",
                                                            "description": "Display name.",
                                                            "maxLength": 127
                                                        }
                                                    }
                                                },
                                                "maxItems": 8
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "report\/chart"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Chart Widget Name",
                                    "maxLength": 71
                                },
                                "policy": {
                                    "type": "integer",
                                    "description": "Used by monitor policy.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Chart type.   \ngraph:Graph.   \ntable:Table.",
                                    "enum": [
                                        "graph",
                                        "table"
                                    ]
                                },
                                "period": {
                                    "type": "string",
                                    "description": "Time period.   \nlast24h:Last 24 hours.   \nlast7d:Last 7 days.",
                                    "enum": [
                                        "last24h",
                                        "last7d"
                                    ]
                                },
                                "drill-down-charts": {
                                    "description": "Drill down charts.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Drill down chart ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "chart-name": {
                                                "type": "string",
                                                "description": "Drill down chart name.",
                                                "maxLength": 71
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Enable\/disable this drill down chart.   \nenable:Enable this drill down chart.   \ndisable:Disable this drill down chart.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comment.",
                                    "maxLength": 127
                                },
                                "dataset": {
                                    "type": "string",
                                    "description": "Bind dataset to chart.",
                                    "maxLength": 71
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category.   \nmisc:Miscellaneous.   \ntraffic:Traffic.   \nevent:Event.   \nvirus:Virus.   \nwebfilter:Webfilter.   \nattack:Attack.   \nspam:Spam.   \ndlp:Data leak prevention.   \napp-ctrl:Application control.   \nvulnerability:Vulnerability.",
                                    "enum": [
                                        "misc",
                                        "traffic",
                                        "event",
                                        "virus",
                                        "webfilter",
                                        "attack",
                                        "spam",
                                        "dlp",
                                        "app-ctrl",
                                        "vulnerability"
                                    ]
                                },
                                "favorite": {
                                    "type": "string",
                                    "description": "Favorite.   \nno:Not a favorite chart.   \nyes:Favorite chart.",
                                    "enum": [
                                        "no",
                                        "yes"
                                    ]
                                },
                                "graph-type": {
                                    "type": "string",
                                    "description": "Graph type.   \nnone:None.   \nbar:Bar Chart.   \npie:Pie Chart.   \nline:Line Chart.   \nflow:flow Chart.",
                                    "enum": [
                                        "none",
                                        "bar",
                                        "pie",
                                        "line",
                                        "flow"
                                    ]
                                },
                                "style": {
                                    "type": "string",
                                    "description": "Style.   \nauto:Auto.   \nmanual:Manual.",
                                    "enum": [
                                        "auto",
                                        "manual"
                                    ]
                                },
                                "dimension": {
                                    "type": "string",
                                    "description": "Dimension.   \n2D:2D graphic.   \n3D:3D graphic.",
                                    "enum": [
                                        "2D",
                                        "3D"
                                    ]
                                },
                                "x-series": {
                                    "description": "X-series of chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "X-series value expression.",
                                                "maxLength": 127
                                            },
                                            "caption": {
                                                "type": "string",
                                                "description": "X-series caption.",
                                                "maxLength": 35
                                            },
                                            "caption-font-size": {
                                                "type": "integer",
                                                "description": "X-series caption font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "X-series label font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "label-angle": {
                                                "type": "string",
                                                "description": "X-series label angle.   \n45-degree:45-degree.   \nvertical:Vertical.   \nhorizontal:Horizontal.",
                                                "enum": [
                                                    "45-degree",
                                                    "vertical",
                                                    "horizontal"
                                                ]
                                            },
                                            "is-category": {
                                                "type": "string",
                                                "description": "X-series represent category or not.   \nyes:X-series is category.   \nno:X-series is not category.",
                                                "enum": [
                                                    "yes",
                                                    "no"
                                                ]
                                            },
                                            "scale-unit": {
                                                "type": "string",
                                                "description": "Scale unit.   \nminute:Minute.   \nhour:Hour.   \nday:Day.   \nmonth:Month.   \nyear:Year.",
                                                "enum": [
                                                    "minute",
                                                    "hour",
                                                    "day",
                                                    "month",
                                                    "year"
                                                ]
                                            },
                                            "scale-step": {
                                                "type": "integer",
                                                "description": "Scale step.",
                                                "maximum": 65535,
                                                "minimum": 1
                                            },
                                            "scale-direction": {
                                                "type": "string",
                                                "description": "Scale increase or decrease.   \ndecrease:Decrease.   \nincrease:Increase.",
                                                "enum": [
                                                    "decrease",
                                                    "increase"
                                                ]
                                            },
                                            "scale-format": {
                                                "type": "string",
                                                "description": "Date\/time format.   \nYYYY-MM-DD-HH-MM:YYYY\/MM\/DD HH:MM   \nYYYY-MM-DD HH:YYYY\/MM\/DD HH   \nYYYY-MM-DD:YYYY\/MM\/DD   \nYYYY-MM:YYYY\/MM   \nYYYY:YYYY   \nHH-MM:HH:MM   \nMM-DD:MM:DD",
                                                "enum": [
                                                    "YYYY-MM-DD-HH-MM",
                                                    "YYYY-MM-DD HH",
                                                    "YYYY-MM-DD",
                                                    "YYYY-MM",
                                                    "YYYY",
                                                    "HH-MM",
                                                    "MM-DD"
                                                ]
                                            },
                                            "unit": {
                                                "type": "string",
                                                "description": "X-series unit.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "y-series": {
                                    "description": "Y-series of chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Y-series value expression.",
                                                "maxLength": 127
                                            },
                                            "caption": {
                                                "type": "string",
                                                "description": "Y-series caption.",
                                                "maxLength": 35
                                            },
                                            "caption-font-size": {
                                                "type": "integer",
                                                "description": "Y-series caption font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "Y-series label font size.",
                                                "maximum": 20,
                                                "minimum": 5
                                            },
                                            "label-angle": {
                                                "type": "string",
                                                "description": "Y-series label angle.   \n45-degree:45-degree.   \nvertical:Vertical.   \nhorizontal:Horizontal.",
                                                "enum": [
                                                    "45-degree",
                                                    "vertical",
                                                    "horizontal"
                                                ]
                                            },
                                            "group": {
                                                "type": "string",
                                                "description": "Y-series group option.",
                                                "maxLength": 127
                                            },
                                            "unit": {
                                                "type": "string",
                                                "description": "Y-series unit.",
                                                "maxLength": 35
                                            },
                                            "extra-y": {
                                                "type": "string",
                                                "description": "Allow another Y-series value   \nenable:Enable second Y-series.   \ndisable:Disable second Y-series.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "extra-databind": {
                                                "type": "string",
                                                "description": "Extra Y-series value.",
                                                "maxLength": 127
                                            },
                                            "y-legend": {
                                                "type": "string",
                                                "description": "First Y-series legend type\/name.",
                                                "maxLength": 35
                                            },
                                            "extra-y-legend": {
                                                "type": "string",
                                                "description": "Extra Y-series legend type\/name.",
                                                "maxLength": 35
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "category-series": {
                                    "description": "Category series of pie chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Category series value expression.",
                                                "maxLength": 127
                                            },
                                            "font-size": {
                                                "type": "integer",
                                                "description": "Font size of category-series title.",
                                                "maximum": 20,
                                                "minimum": 5
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "value-series": {
                                    "description": "Value series of pie chart.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "databind": {
                                                "type": "string",
                                                "description": "Value series value expression.",
                                                "maxLength": 127
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Chart title.",
                                    "maxLength": 63
                                },
                                "title-font-size": {
                                    "type": "integer",
                                    "description": "Font size of chart title.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "background": {
                                    "type": "string",
                                    "description": "Chart background.",
                                    "maxLength": 11
                                },
                                "color-palette": {
                                    "type": "string",
                                    "description": "Color palette (system will pick color automatically by default).",
                                    "maxLength": 11
                                },
                                "legend": {
                                    "type": "string",
                                    "description": "Enable\/Disable Legend area.   \nenable:Enable legend area.   \ndisable:Disable legend area.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "legend-font-size": {
                                    "type": "integer",
                                    "description": "Font size of legend area.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "column": {
                                    "description": "Table column definition.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "header-value": {
                                                "type": "string",
                                                "description": "Display name of table header.",
                                                "maxLength": 127
                                            },
                                            "detail-value": {
                                                "type": "string",
                                                "description": "Detail value of column.",
                                                "maxLength": 127
                                            },
                                            "footer-value": {
                                                "type": "string",
                                                "description": "Footer value of column.",
                                                "maxLength": 127
                                            },
                                            "detail-unit": {
                                                "type": "string",
                                                "description": "Detail unit of column.",
                                                "maxLength": 35
                                            },
                                            "footer-unit": {
                                                "type": "string",
                                                "description": "Footer unit of column.",
                                                "maxLength": 35
                                            },
                                            "mapping": {
                                                "description": "Show detail in certain display value for certain condition.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "id",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "op": {
                                                            "type": "string",
                                                            "description": "Comparision operater.   \nnone:None.   \ngreater:Greater than.   \ngreater-equal:Greater than or equal to.   \nless:Less than.   \nless-equal:Less than or equal to.   \nequal:Equal to.   \nbetween:Between value 1 and value 2.",
                                                            "enum": [
                                                                "none",
                                                                "greater",
                                                                "greater-equal",
                                                                "less",
                                                                "less-equal",
                                                                "equal",
                                                                "between"
                                                            ]
                                                        },
                                                        "value-type": {
                                                            "type": "string",
                                                            "description": "Value type.   \ninteger:Integer.   \nstring:String.",
                                                            "enum": [
                                                                "integer",
                                                                "string"
                                                            ]
                                                        },
                                                        "value1": {
                                                            "type": "string",
                                                            "description": "Value 1.",
                                                            "maxLength": 127
                                                        },
                                                        "value2": {
                                                            "type": "string",
                                                            "description": "Value 2.",
                                                            "maxLength": 127
                                                        },
                                                        "displayname": {
                                                            "type": "string",
                                                            "description": "Display name.",
                                                            "maxLength": 127
                                                        }
                                                    }
                                                },
                                                "maxItems": 8
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "report\/chart"
                ]
            }
        },
        "\/report\/dataset\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 71
                                },
                                "policy": {
                                    "type": "integer",
                                    "description": "Used by monitor policy.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "query": {
                                    "type": "string",
                                    "description": "SQL query statement.",
                                    "maxLength": 2303
                                },
                                "field": {
                                    "description": "Fields.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Field ID (1 to number of columns in SQL result).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Field type.   \ntext:Text.   \ninteger:Integer.   \ndouble:Double.",
                                                "enum": [
                                                    "text",
                                                    "integer",
                                                    "double"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 71
                                            },
                                            "displayname": {
                                                "type": "string",
                                                "description": "Display name.",
                                                "maxLength": 127
                                            }
                                        }
                                    },
                                    "maxItems": 32
                                },
                                "parameters": {
                                    "description": "Parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Parameter ID (1 to number of columns in SQL result).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "display-name": {
                                                "type": "string",
                                                "description": "Display name.",
                                                "maxLength": 127
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "SQL field name.",
                                                "maxLength": 127
                                            },
                                            "data-type": {
                                                "type": "string",
                                                "description": "Data type.   \ntext:Text.   \ninteger:Integer.   \ndouble:Double.   \nlong-integer:Long integer.   \ndate-time:Date and time.",
                                                "enum": [
                                                    "text",
                                                    "integer",
                                                    "double",
                                                    "long-integer",
                                                    "date-time"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "report\/dataset"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 71
                                },
                                "policy": {
                                    "type": "integer",
                                    "description": "Used by monitor policy.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "query": {
                                    "type": "string",
                                    "description": "SQL query statement.",
                                    "maxLength": 2303
                                },
                                "field": {
                                    "description": "Fields.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Field ID (1 to number of columns in SQL result).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Field type.   \ntext:Text.   \ninteger:Integer.   \ndouble:Double.",
                                                "enum": [
                                                    "text",
                                                    "integer",
                                                    "double"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 71
                                            },
                                            "displayname": {
                                                "type": "string",
                                                "description": "Display name.",
                                                "maxLength": 127
                                            }
                                        }
                                    },
                                    "maxItems": 32
                                },
                                "parameters": {
                                    "description": "Parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Parameter ID (1 to number of columns in SQL result).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "display-name": {
                                                "type": "string",
                                                "description": "Display name.",
                                                "maxLength": 127
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "SQL field name.",
                                                "maxLength": 127
                                            },
                                            "data-type": {
                                                "type": "string",
                                                "description": "Data type.   \ntext:Text.   \ninteger:Integer.   \ndouble:Double.   \nlong-integer:Long integer.   \ndate-time:Date and time.",
                                                "enum": [
                                                    "text",
                                                    "integer",
                                                    "double",
                                                    "long-integer",
                                                    "date-time"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "report\/dataset"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "report\/dataset"
                ]
            }
        },
        "\/report\/dataset": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 71
                                },
                                "policy": {
                                    "type": "integer",
                                    "description": "Used by monitor policy.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "query": {
                                    "type": "string",
                                    "description": "SQL query statement.",
                                    "maxLength": 2303
                                },
                                "field": {
                                    "description": "Fields.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Field ID (1 to number of columns in SQL result).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Field type.   \ntext:Text.   \ninteger:Integer.   \ndouble:Double.",
                                                "enum": [
                                                    "text",
                                                    "integer",
                                                    "double"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 71
                                            },
                                            "displayname": {
                                                "type": "string",
                                                "description": "Display name.",
                                                "maxLength": 127
                                            }
                                        }
                                    },
                                    "maxItems": 32
                                },
                                "parameters": {
                                    "description": "Parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Parameter ID (1 to number of columns in SQL result).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "display-name": {
                                                "type": "string",
                                                "description": "Display name.",
                                                "maxLength": 127
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "SQL field name.",
                                                "maxLength": 127
                                            },
                                            "data-type": {
                                                "type": "string",
                                                "description": "Data type.   \ntext:Text.   \ninteger:Integer.   \ndouble:Double.   \nlong-integer:Long integer.   \ndate-time:Date and time.",
                                                "enum": [
                                                    "text",
                                                    "integer",
                                                    "double",
                                                    "long-integer",
                                                    "date-time"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "report\/dataset"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name.",
                                    "maxLength": 71
                                },
                                "policy": {
                                    "type": "integer",
                                    "description": "Used by monitor policy.",
                                    "maximum": 4294967295,
                                    "minimum": 0
                                },
                                "query": {
                                    "type": "string",
                                    "description": "SQL query statement.",
                                    "maxLength": 2303
                                },
                                "field": {
                                    "description": "Fields.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Field ID (1 to number of columns in SQL result).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Field type.   \ntext:Text.   \ninteger:Integer.   \ndouble:Double.",
                                                "enum": [
                                                    "text",
                                                    "integer",
                                                    "double"
                                                ]
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name.",
                                                "maxLength": 71
                                            },
                                            "displayname": {
                                                "type": "string",
                                                "description": "Display name.",
                                                "maxLength": 127
                                            }
                                        }
                                    },
                                    "maxItems": 32
                                },
                                "parameters": {
                                    "description": "Parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Parameter ID (1 to number of columns in SQL result).",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "display-name": {
                                                "type": "string",
                                                "description": "Display name.",
                                                "maxLength": 127
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "SQL field name.",
                                                "maxLength": 127
                                            },
                                            "data-type": {
                                                "type": "string",
                                                "description": "Data type.   \ntext:Text.   \ninteger:Integer.   \ndouble:Double.   \nlong-integer:Long integer.   \ndate-time:Date and time.",
                                                "enum": [
                                                    "text",
                                                    "integer",
                                                    "double",
                                                    "long-integer",
                                                    "date-time"
                                                ]
                                            }
                                        }
                                    },
                                    "maxItems": null
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "report\/dataset"
                ]
            }
        },
        "\/report\/layout\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report layout name.",
                                    "maxLength": 35
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Report title.",
                                    "maxLength": 127
                                },
                                "subtitle": {
                                    "type": "string",
                                    "description": "Report subtitle.",
                                    "maxLength": 127
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description.",
                                    "maxLength": 127
                                },
                                "style-theme": {
                                    "type": "string",
                                    "description": "Report style theme.",
                                    "maxLength": 35
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Report layout options.   \ninclude-table-of-content:Include table of content in the report.   \nauto-numbering-heading:Prepend heading with auto numbering.   \nview-chart-as-heading:Auto add heading for each chart.   \nshow-html-navbar-before-heading:Show HTML navigation bar before each heading.   \ndummy-option:Use this option if you need none of the above options.",
                                    "enum": [
                                        "include-table-of-content",
                                        "auto-numbering-heading",
                                        "view-chart-as-heading",
                                        "show-html-navbar-before-heading",
                                        "dummy-option"
                                    ]
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Report format.   \npdf:PDF.",
                                    "enum": [
                                        "pdf"
                                    ]
                                },
                                "schedule-type": {
                                    "type": "string",
                                    "description": "Report schedule type.   \ndemand:Run on demand.   \ndaily:Schedule daily.   \nweekly:Schedule weekly.",
                                    "enum": [
                                        "demand",
                                        "daily",
                                        "weekly"
                                    ]
                                },
                                "day": {
                                    "type": "string",
                                    "description": "Schedule days of week to generate report.   \nsunday:Sunday.   \nmonday:Monday.   \ntuesday:Tuesday.   \nwednesday:Wednesday.   \nthursday:Thursday.   \nfriday:Friday.   \nsaturday:Saturday.",
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "time": {
                                    "type": "string",
                                    "description": "Schedule time to generate report [hh:mm]."
                                },
                                "cutoff-option": {
                                    "type": "string",
                                    "description": "Cutoff-option is either run-time or custom.   \nrun-time:Run time.   \ncustom:Custom.",
                                    "enum": [
                                        "run-time",
                                        "custom"
                                    ]
                                },
                                "cutoff-time": {
                                    "type": "string",
                                    "description": "Custom cutoff time to generate report [hh:mm]."
                                },
                                "email-send": {
                                    "type": "string",
                                    "description": "Enable\/disable sending emails after reports are generated.   \nenable:Enable sending emails after generating reports.   \ndisable:Disable sending emails after generating reports.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "email-recipients": {
                                    "type": "string",
                                    "description": "Email recipients for generated reports.",
                                    "maxLength": 511
                                },
                                "max-pdf-report": {
                                    "type": "integer",
                                    "description": "Maximum number of PDF reports to keep at one time (oldest report is overwritten).",
                                    "maximum": 365,
                                    "minimum": 1
                                },
                                "page": {
                                    "description": "Configure report page.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "paper": {
                                                "type": "string",
                                                "description": "Report page paper.   \na4:A4 paper.   \nletter:Letter paper.",
                                                "enum": [
                                                    "a4",
                                                    "letter"
                                                ]
                                            },
                                            "column-break-before": {
                                                "type": "string",
                                                "description": "Report page auto column break before heading.   \nheading1:Column break before heading 1.   \nheading2:Column break before heading 2.   \nheading3:Column break before heading 3.",
                                                "enum": [
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "page-break-before": {
                                                "type": "string",
                                                "description": "Report page auto page break before heading.   \nheading1:Page break before heading 1.   \nheading2:Page break before heading 2.   \nheading3:Page break before heading 3.",
                                                "enum": [
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "options": {
                                                "type": "string",
                                                "description": "Report page options.   \nheader-on-first-page:Show header on first page.   \nfooter-on-first-page:Show footer on first page.",
                                                "enum": [
                                                    "header-on-first-page",
                                                    "footer-on-first-page"
                                                ]
                                            },
                                            "header": {
                                                "description": "Configure report page header.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "style": {
                                                            "type": "string",
                                                            "description": "Report header style.",
                                                            "maxLength": 71
                                                        },
                                                        "header-item": {
                                                            "description": "Configure report header item.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Report item ID.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "Description.",
                                                                        "maxLength": 63
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "Report item type.   \ntext:Text.   \nimage:Image.",
                                                                        "enum": [
                                                                            "text",
                                                                            "image"
                                                                        ]
                                                                    },
                                                                    "style": {
                                                                        "type": "string",
                                                                        "description": "Report item style.",
                                                                        "maxLength": 71
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "description": "Report item text content.",
                                                                        "maxLength": 511
                                                                    },
                                                                    "img-src": {
                                                                        "type": "string",
                                                                        "description": "Report item image file name.",
                                                                        "maxLength": 127
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": 2
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "footer": {
                                                "description": "Configure report page footer.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "style": {
                                                            "type": "string",
                                                            "description": "Report footer style.",
                                                            "maxLength": 71
                                                        },
                                                        "footer-item": {
                                                            "description": "Configure report footer item.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Report item ID.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "Description.",
                                                                        "maxLength": 63
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "Report item type.   \ntext:Text.   \nimage:Image.",
                                                                        "enum": [
                                                                            "text",
                                                                            "image"
                                                                        ]
                                                                    },
                                                                    "style": {
                                                                        "type": "string",
                                                                        "description": "Report item style.",
                                                                        "maxLength": 71
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "description": "Report item text content.",
                                                                        "maxLength": 511
                                                                    },
                                                                    "img-src": {
                                                                        "type": "string",
                                                                        "description": "Report item image file name.",
                                                                        "maxLength": 127
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": 2
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "body-item": {
                                    "description": "Configure report body item.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Report item ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 63
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Report item type.   \ntext:Text.   \nimage:Image.   \nchart:Chart.   \nmisc:Miscellaneous.",
                                                "enum": [
                                                    "text",
                                                    "image",
                                                    "chart",
                                                    "misc"
                                                ]
                                            },
                                            "style": {
                                                "type": "string",
                                                "description": "Report item style.",
                                                "maxLength": 71
                                            },
                                            "top-n": {
                                                "type": "integer",
                                                "description": "Value of top.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "hide": {
                                                "type": "string",
                                                "description": "Enable\/disable hide item in report.   \nenable:Enable hide item in report.   \ndisable:Disable hide item in report.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "parameters": {
                                                "description": "Parameters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Field name that match field of parameters defined in dataset.",
                                                            "maxLength": 127
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value to replace corresponding field of parameters defined in dataset.",
                                                            "maxLength": 1023
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "text-component": {
                                                "type": "string",
                                                "description": "Report item text component.   \ntext:Normal text.   \nheading1:Heading 1.   \nheading2:Heading 2.   \nheading3:Heading 3.",
                                                "enum": [
                                                    "text",
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "Report item text content.",
                                                "maxLength": 511
                                            },
                                            "img-src": {
                                                "type": "string",
                                                "description": "Report item image file name.",
                                                "maxLength": 127
                                            },
                                            "list-component": {
                                                "type": "string",
                                                "description": "Report item list component.   \nbullet:Bullet list.   \nnumbered:Numbered list.",
                                                "enum": [
                                                    "bullet",
                                                    "numbered"
                                                ]
                                            },
                                            "list": {
                                                "description": "Configure report list item.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "List entry ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "content": {
                                                            "type": "string",
                                                            "description": "List entry content.",
                                                            "maxLength": 127
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "chart": {
                                                "type": "string",
                                                "description": "Report item chart name.",
                                                "maxLength": 71
                                            },
                                            "chart-options": {
                                                "type": "string",
                                                "description": "Report chart options.   \ninclude-no-data:Include chart with no data.   \nhide-title:Hide chart title.   \nshow-caption:Show chart caption.",
                                                "enum": [
                                                    "include-no-data",
                                                    "hide-title",
                                                    "show-caption"
                                                ]
                                            },
                                            "drill-down-items": {
                                                "type": "string",
                                                "description": "Control how drill down charts are shown.",
                                                "maxLength": 11
                                            },
                                            "drill-down-types": {
                                                "type": "string",
                                                "description": "Control whether keys from the parent being combined or not.",
                                                "maxLength": 7
                                            },
                                            "table-column-widths": {
                                                "type": "string",
                                                "description": "Report item table column widths.",
                                                "maxLength": 179
                                            },
                                            "table-caption-style": {
                                                "type": "string",
                                                "description": "Table chart caption style.",
                                                "maxLength": 71
                                            },
                                            "table-head-style": {
                                                "type": "string",
                                                "description": "Table chart head style.",
                                                "maxLength": 71
                                            },
                                            "table-odd-row-style": {
                                                "type": "string",
                                                "description": "Table chart odd row style.",
                                                "maxLength": 71
                                            },
                                            "table-even-row-style": {
                                                "type": "string",
                                                "description": "Table chart even row style.",
                                                "maxLength": 71
                                            },
                                            "misc-component": {
                                                "type": "string",
                                                "description": "Report item miscellaneous component.   \nhline:Horizontal line.   \npage-break:Page break.   \ncolumn-break:Column break.   \nsection-start:Section start.",
                                                "enum": [
                                                    "hline",
                                                    "page-break",
                                                    "column-break",
                                                    "section-start"
                                                ]
                                            },
                                            "column": {
                                                "type": "integer",
                                                "description": "Report section column number.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "title": {
                                                "type": "string",
                                                "description": "Report section title.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "report\/layout"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report layout name.",
                                    "maxLength": 35
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Report title.",
                                    "maxLength": 127
                                },
                                "subtitle": {
                                    "type": "string",
                                    "description": "Report subtitle.",
                                    "maxLength": 127
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description.",
                                    "maxLength": 127
                                },
                                "style-theme": {
                                    "type": "string",
                                    "description": "Report style theme.",
                                    "maxLength": 35
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Report layout options.   \ninclude-table-of-content:Include table of content in the report.   \nauto-numbering-heading:Prepend heading with auto numbering.   \nview-chart-as-heading:Auto add heading for each chart.   \nshow-html-navbar-before-heading:Show HTML navigation bar before each heading.   \ndummy-option:Use this option if you need none of the above options.",
                                    "enum": [
                                        "include-table-of-content",
                                        "auto-numbering-heading",
                                        "view-chart-as-heading",
                                        "show-html-navbar-before-heading",
                                        "dummy-option"
                                    ]
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Report format.   \npdf:PDF.",
                                    "enum": [
                                        "pdf"
                                    ]
                                },
                                "schedule-type": {
                                    "type": "string",
                                    "description": "Report schedule type.   \ndemand:Run on demand.   \ndaily:Schedule daily.   \nweekly:Schedule weekly.",
                                    "enum": [
                                        "demand",
                                        "daily",
                                        "weekly"
                                    ]
                                },
                                "day": {
                                    "type": "string",
                                    "description": "Schedule days of week to generate report.   \nsunday:Sunday.   \nmonday:Monday.   \ntuesday:Tuesday.   \nwednesday:Wednesday.   \nthursday:Thursday.   \nfriday:Friday.   \nsaturday:Saturday.",
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "time": {
                                    "type": "string",
                                    "description": "Schedule time to generate report [hh:mm]."
                                },
                                "cutoff-option": {
                                    "type": "string",
                                    "description": "Cutoff-option is either run-time or custom.   \nrun-time:Run time.   \ncustom:Custom.",
                                    "enum": [
                                        "run-time",
                                        "custom"
                                    ]
                                },
                                "cutoff-time": {
                                    "type": "string",
                                    "description": "Custom cutoff time to generate report [hh:mm]."
                                },
                                "email-send": {
                                    "type": "string",
                                    "description": "Enable\/disable sending emails after reports are generated.   \nenable:Enable sending emails after generating reports.   \ndisable:Disable sending emails after generating reports.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "email-recipients": {
                                    "type": "string",
                                    "description": "Email recipients for generated reports.",
                                    "maxLength": 511
                                },
                                "max-pdf-report": {
                                    "type": "integer",
                                    "description": "Maximum number of PDF reports to keep at one time (oldest report is overwritten).",
                                    "maximum": 365,
                                    "minimum": 1
                                },
                                "page": {
                                    "description": "Configure report page.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "paper": {
                                                "type": "string",
                                                "description": "Report page paper.   \na4:A4 paper.   \nletter:Letter paper.",
                                                "enum": [
                                                    "a4",
                                                    "letter"
                                                ]
                                            },
                                            "column-break-before": {
                                                "type": "string",
                                                "description": "Report page auto column break before heading.   \nheading1:Column break before heading 1.   \nheading2:Column break before heading 2.   \nheading3:Column break before heading 3.",
                                                "enum": [
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "page-break-before": {
                                                "type": "string",
                                                "description": "Report page auto page break before heading.   \nheading1:Page break before heading 1.   \nheading2:Page break before heading 2.   \nheading3:Page break before heading 3.",
                                                "enum": [
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "options": {
                                                "type": "string",
                                                "description": "Report page options.   \nheader-on-first-page:Show header on first page.   \nfooter-on-first-page:Show footer on first page.",
                                                "enum": [
                                                    "header-on-first-page",
                                                    "footer-on-first-page"
                                                ]
                                            },
                                            "header": {
                                                "description": "Configure report page header.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "style": {
                                                            "type": "string",
                                                            "description": "Report header style.",
                                                            "maxLength": 71
                                                        },
                                                        "header-item": {
                                                            "description": "Configure report header item.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Report item ID.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "Description.",
                                                                        "maxLength": 63
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "Report item type.   \ntext:Text.   \nimage:Image.",
                                                                        "enum": [
                                                                            "text",
                                                                            "image"
                                                                        ]
                                                                    },
                                                                    "style": {
                                                                        "type": "string",
                                                                        "description": "Report item style.",
                                                                        "maxLength": 71
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "description": "Report item text content.",
                                                                        "maxLength": 511
                                                                    },
                                                                    "img-src": {
                                                                        "type": "string",
                                                                        "description": "Report item image file name.",
                                                                        "maxLength": 127
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": 2
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "footer": {
                                                "description": "Configure report page footer.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "style": {
                                                            "type": "string",
                                                            "description": "Report footer style.",
                                                            "maxLength": 71
                                                        },
                                                        "footer-item": {
                                                            "description": "Configure report footer item.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Report item ID.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "Description.",
                                                                        "maxLength": 63
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "Report item type.   \ntext:Text.   \nimage:Image.",
                                                                        "enum": [
                                                                            "text",
                                                                            "image"
                                                                        ]
                                                                    },
                                                                    "style": {
                                                                        "type": "string",
                                                                        "description": "Report item style.",
                                                                        "maxLength": 71
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "description": "Report item text content.",
                                                                        "maxLength": 511
                                                                    },
                                                                    "img-src": {
                                                                        "type": "string",
                                                                        "description": "Report item image file name.",
                                                                        "maxLength": 127
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": 2
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "body-item": {
                                    "description": "Configure report body item.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Report item ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 63
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Report item type.   \ntext:Text.   \nimage:Image.   \nchart:Chart.   \nmisc:Miscellaneous.",
                                                "enum": [
                                                    "text",
                                                    "image",
                                                    "chart",
                                                    "misc"
                                                ]
                                            },
                                            "style": {
                                                "type": "string",
                                                "description": "Report item style.",
                                                "maxLength": 71
                                            },
                                            "top-n": {
                                                "type": "integer",
                                                "description": "Value of top.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "hide": {
                                                "type": "string",
                                                "description": "Enable\/disable hide item in report.   \nenable:Enable hide item in report.   \ndisable:Disable hide item in report.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "parameters": {
                                                "description": "Parameters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Field name that match field of parameters defined in dataset.",
                                                            "maxLength": 127
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value to replace corresponding field of parameters defined in dataset.",
                                                            "maxLength": 1023
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "text-component": {
                                                "type": "string",
                                                "description": "Report item text component.   \ntext:Normal text.   \nheading1:Heading 1.   \nheading2:Heading 2.   \nheading3:Heading 3.",
                                                "enum": [
                                                    "text",
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "Report item text content.",
                                                "maxLength": 511
                                            },
                                            "img-src": {
                                                "type": "string",
                                                "description": "Report item image file name.",
                                                "maxLength": 127
                                            },
                                            "list-component": {
                                                "type": "string",
                                                "description": "Report item list component.   \nbullet:Bullet list.   \nnumbered:Numbered list.",
                                                "enum": [
                                                    "bullet",
                                                    "numbered"
                                                ]
                                            },
                                            "list": {
                                                "description": "Configure report list item.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "List entry ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "content": {
                                                            "type": "string",
                                                            "description": "List entry content.",
                                                            "maxLength": 127
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "chart": {
                                                "type": "string",
                                                "description": "Report item chart name.",
                                                "maxLength": 71
                                            },
                                            "chart-options": {
                                                "type": "string",
                                                "description": "Report chart options.   \ninclude-no-data:Include chart with no data.   \nhide-title:Hide chart title.   \nshow-caption:Show chart caption.",
                                                "enum": [
                                                    "include-no-data",
                                                    "hide-title",
                                                    "show-caption"
                                                ]
                                            },
                                            "drill-down-items": {
                                                "type": "string",
                                                "description": "Control how drill down charts are shown.",
                                                "maxLength": 11
                                            },
                                            "drill-down-types": {
                                                "type": "string",
                                                "description": "Control whether keys from the parent being combined or not.",
                                                "maxLength": 7
                                            },
                                            "table-column-widths": {
                                                "type": "string",
                                                "description": "Report item table column widths.",
                                                "maxLength": 179
                                            },
                                            "table-caption-style": {
                                                "type": "string",
                                                "description": "Table chart caption style.",
                                                "maxLength": 71
                                            },
                                            "table-head-style": {
                                                "type": "string",
                                                "description": "Table chart head style.",
                                                "maxLength": 71
                                            },
                                            "table-odd-row-style": {
                                                "type": "string",
                                                "description": "Table chart odd row style.",
                                                "maxLength": 71
                                            },
                                            "table-even-row-style": {
                                                "type": "string",
                                                "description": "Table chart even row style.",
                                                "maxLength": 71
                                            },
                                            "misc-component": {
                                                "type": "string",
                                                "description": "Report item miscellaneous component.   \nhline:Horizontal line.   \npage-break:Page break.   \ncolumn-break:Column break.   \nsection-start:Section start.",
                                                "enum": [
                                                    "hline",
                                                    "page-break",
                                                    "column-break",
                                                    "section-start"
                                                ]
                                            },
                                            "column": {
                                                "type": "integer",
                                                "description": "Report section column number.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "title": {
                                                "type": "string",
                                                "description": "Report section title.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "report\/layout"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "report\/layout"
                ]
            }
        },
        "\/report\/layout": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report layout name.",
                                    "maxLength": 35
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Report title.",
                                    "maxLength": 127
                                },
                                "subtitle": {
                                    "type": "string",
                                    "description": "Report subtitle.",
                                    "maxLength": 127
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description.",
                                    "maxLength": 127
                                },
                                "style-theme": {
                                    "type": "string",
                                    "description": "Report style theme.",
                                    "maxLength": 35
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Report layout options.   \ninclude-table-of-content:Include table of content in the report.   \nauto-numbering-heading:Prepend heading with auto numbering.   \nview-chart-as-heading:Auto add heading for each chart.   \nshow-html-navbar-before-heading:Show HTML navigation bar before each heading.   \ndummy-option:Use this option if you need none of the above options.",
                                    "enum": [
                                        "include-table-of-content",
                                        "auto-numbering-heading",
                                        "view-chart-as-heading",
                                        "show-html-navbar-before-heading",
                                        "dummy-option"
                                    ]
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Report format.   \npdf:PDF.",
                                    "enum": [
                                        "pdf"
                                    ]
                                },
                                "schedule-type": {
                                    "type": "string",
                                    "description": "Report schedule type.   \ndemand:Run on demand.   \ndaily:Schedule daily.   \nweekly:Schedule weekly.",
                                    "enum": [
                                        "demand",
                                        "daily",
                                        "weekly"
                                    ]
                                },
                                "day": {
                                    "type": "string",
                                    "description": "Schedule days of week to generate report.   \nsunday:Sunday.   \nmonday:Monday.   \ntuesday:Tuesday.   \nwednesday:Wednesday.   \nthursday:Thursday.   \nfriday:Friday.   \nsaturday:Saturday.",
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "time": {
                                    "type": "string",
                                    "description": "Schedule time to generate report [hh:mm]."
                                },
                                "cutoff-option": {
                                    "type": "string",
                                    "description": "Cutoff-option is either run-time or custom.   \nrun-time:Run time.   \ncustom:Custom.",
                                    "enum": [
                                        "run-time",
                                        "custom"
                                    ]
                                },
                                "cutoff-time": {
                                    "type": "string",
                                    "description": "Custom cutoff time to generate report [hh:mm]."
                                },
                                "email-send": {
                                    "type": "string",
                                    "description": "Enable\/disable sending emails after reports are generated.   \nenable:Enable sending emails after generating reports.   \ndisable:Disable sending emails after generating reports.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "email-recipients": {
                                    "type": "string",
                                    "description": "Email recipients for generated reports.",
                                    "maxLength": 511
                                },
                                "max-pdf-report": {
                                    "type": "integer",
                                    "description": "Maximum number of PDF reports to keep at one time (oldest report is overwritten).",
                                    "maximum": 365,
                                    "minimum": 1
                                },
                                "page": {
                                    "description": "Configure report page.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "paper": {
                                                "type": "string",
                                                "description": "Report page paper.   \na4:A4 paper.   \nletter:Letter paper.",
                                                "enum": [
                                                    "a4",
                                                    "letter"
                                                ]
                                            },
                                            "column-break-before": {
                                                "type": "string",
                                                "description": "Report page auto column break before heading.   \nheading1:Column break before heading 1.   \nheading2:Column break before heading 2.   \nheading3:Column break before heading 3.",
                                                "enum": [
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "page-break-before": {
                                                "type": "string",
                                                "description": "Report page auto page break before heading.   \nheading1:Page break before heading 1.   \nheading2:Page break before heading 2.   \nheading3:Page break before heading 3.",
                                                "enum": [
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "options": {
                                                "type": "string",
                                                "description": "Report page options.   \nheader-on-first-page:Show header on first page.   \nfooter-on-first-page:Show footer on first page.",
                                                "enum": [
                                                    "header-on-first-page",
                                                    "footer-on-first-page"
                                                ]
                                            },
                                            "header": {
                                                "description": "Configure report page header.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "style": {
                                                            "type": "string",
                                                            "description": "Report header style.",
                                                            "maxLength": 71
                                                        },
                                                        "header-item": {
                                                            "description": "Configure report header item.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Report item ID.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "Description.",
                                                                        "maxLength": 63
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "Report item type.   \ntext:Text.   \nimage:Image.",
                                                                        "enum": [
                                                                            "text",
                                                                            "image"
                                                                        ]
                                                                    },
                                                                    "style": {
                                                                        "type": "string",
                                                                        "description": "Report item style.",
                                                                        "maxLength": 71
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "description": "Report item text content.",
                                                                        "maxLength": 511
                                                                    },
                                                                    "img-src": {
                                                                        "type": "string",
                                                                        "description": "Report item image file name.",
                                                                        "maxLength": 127
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": 2
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "footer": {
                                                "description": "Configure report page footer.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "style": {
                                                            "type": "string",
                                                            "description": "Report footer style.",
                                                            "maxLength": 71
                                                        },
                                                        "footer-item": {
                                                            "description": "Configure report footer item.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Report item ID.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "Description.",
                                                                        "maxLength": 63
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "Report item type.   \ntext:Text.   \nimage:Image.",
                                                                        "enum": [
                                                                            "text",
                                                                            "image"
                                                                        ]
                                                                    },
                                                                    "style": {
                                                                        "type": "string",
                                                                        "description": "Report item style.",
                                                                        "maxLength": 71
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "description": "Report item text content.",
                                                                        "maxLength": 511
                                                                    },
                                                                    "img-src": {
                                                                        "type": "string",
                                                                        "description": "Report item image file name.",
                                                                        "maxLength": 127
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": 2
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "body-item": {
                                    "description": "Configure report body item.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Report item ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 63
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Report item type.   \ntext:Text.   \nimage:Image.   \nchart:Chart.   \nmisc:Miscellaneous.",
                                                "enum": [
                                                    "text",
                                                    "image",
                                                    "chart",
                                                    "misc"
                                                ]
                                            },
                                            "style": {
                                                "type": "string",
                                                "description": "Report item style.",
                                                "maxLength": 71
                                            },
                                            "top-n": {
                                                "type": "integer",
                                                "description": "Value of top.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "hide": {
                                                "type": "string",
                                                "description": "Enable\/disable hide item in report.   \nenable:Enable hide item in report.   \ndisable:Disable hide item in report.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "parameters": {
                                                "description": "Parameters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Field name that match field of parameters defined in dataset.",
                                                            "maxLength": 127
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value to replace corresponding field of parameters defined in dataset.",
                                                            "maxLength": 1023
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "text-component": {
                                                "type": "string",
                                                "description": "Report item text component.   \ntext:Normal text.   \nheading1:Heading 1.   \nheading2:Heading 2.   \nheading3:Heading 3.",
                                                "enum": [
                                                    "text",
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "Report item text content.",
                                                "maxLength": 511
                                            },
                                            "img-src": {
                                                "type": "string",
                                                "description": "Report item image file name.",
                                                "maxLength": 127
                                            },
                                            "list-component": {
                                                "type": "string",
                                                "description": "Report item list component.   \nbullet:Bullet list.   \nnumbered:Numbered list.",
                                                "enum": [
                                                    "bullet",
                                                    "numbered"
                                                ]
                                            },
                                            "list": {
                                                "description": "Configure report list item.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "List entry ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "content": {
                                                            "type": "string",
                                                            "description": "List entry content.",
                                                            "maxLength": 127
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "chart": {
                                                "type": "string",
                                                "description": "Report item chart name.",
                                                "maxLength": 71
                                            },
                                            "chart-options": {
                                                "type": "string",
                                                "description": "Report chart options.   \ninclude-no-data:Include chart with no data.   \nhide-title:Hide chart title.   \nshow-caption:Show chart caption.",
                                                "enum": [
                                                    "include-no-data",
                                                    "hide-title",
                                                    "show-caption"
                                                ]
                                            },
                                            "drill-down-items": {
                                                "type": "string",
                                                "description": "Control how drill down charts are shown.",
                                                "maxLength": 11
                                            },
                                            "drill-down-types": {
                                                "type": "string",
                                                "description": "Control whether keys from the parent being combined or not.",
                                                "maxLength": 7
                                            },
                                            "table-column-widths": {
                                                "type": "string",
                                                "description": "Report item table column widths.",
                                                "maxLength": 179
                                            },
                                            "table-caption-style": {
                                                "type": "string",
                                                "description": "Table chart caption style.",
                                                "maxLength": 71
                                            },
                                            "table-head-style": {
                                                "type": "string",
                                                "description": "Table chart head style.",
                                                "maxLength": 71
                                            },
                                            "table-odd-row-style": {
                                                "type": "string",
                                                "description": "Table chart odd row style.",
                                                "maxLength": 71
                                            },
                                            "table-even-row-style": {
                                                "type": "string",
                                                "description": "Table chart even row style.",
                                                "maxLength": 71
                                            },
                                            "misc-component": {
                                                "type": "string",
                                                "description": "Report item miscellaneous component.   \nhline:Horizontal line.   \npage-break:Page break.   \ncolumn-break:Column break.   \nsection-start:Section start.",
                                                "enum": [
                                                    "hline",
                                                    "page-break",
                                                    "column-break",
                                                    "section-start"
                                                ]
                                            },
                                            "column": {
                                                "type": "integer",
                                                "description": "Report section column number.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "title": {
                                                "type": "string",
                                                "description": "Report section title.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "report\/layout"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report layout name.",
                                    "maxLength": 35
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Report title.",
                                    "maxLength": 127
                                },
                                "subtitle": {
                                    "type": "string",
                                    "description": "Report subtitle.",
                                    "maxLength": 127
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description.",
                                    "maxLength": 127
                                },
                                "style-theme": {
                                    "type": "string",
                                    "description": "Report style theme.",
                                    "maxLength": 35
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Report layout options.   \ninclude-table-of-content:Include table of content in the report.   \nauto-numbering-heading:Prepend heading with auto numbering.   \nview-chart-as-heading:Auto add heading for each chart.   \nshow-html-navbar-before-heading:Show HTML navigation bar before each heading.   \ndummy-option:Use this option if you need none of the above options.",
                                    "enum": [
                                        "include-table-of-content",
                                        "auto-numbering-heading",
                                        "view-chart-as-heading",
                                        "show-html-navbar-before-heading",
                                        "dummy-option"
                                    ]
                                },
                                "format": {
                                    "type": "string",
                                    "description": "Report format.   \npdf:PDF.",
                                    "enum": [
                                        "pdf"
                                    ]
                                },
                                "schedule-type": {
                                    "type": "string",
                                    "description": "Report schedule type.   \ndemand:Run on demand.   \ndaily:Schedule daily.   \nweekly:Schedule weekly.",
                                    "enum": [
                                        "demand",
                                        "daily",
                                        "weekly"
                                    ]
                                },
                                "day": {
                                    "type": "string",
                                    "description": "Schedule days of week to generate report.   \nsunday:Sunday.   \nmonday:Monday.   \ntuesday:Tuesday.   \nwednesday:Wednesday.   \nthursday:Thursday.   \nfriday:Friday.   \nsaturday:Saturday.",
                                    "enum": [
                                        "sunday",
                                        "monday",
                                        "tuesday",
                                        "wednesday",
                                        "thursday",
                                        "friday",
                                        "saturday"
                                    ]
                                },
                                "time": {
                                    "type": "string",
                                    "description": "Schedule time to generate report [hh:mm]."
                                },
                                "cutoff-option": {
                                    "type": "string",
                                    "description": "Cutoff-option is either run-time or custom.   \nrun-time:Run time.   \ncustom:Custom.",
                                    "enum": [
                                        "run-time",
                                        "custom"
                                    ]
                                },
                                "cutoff-time": {
                                    "type": "string",
                                    "description": "Custom cutoff time to generate report [hh:mm]."
                                },
                                "email-send": {
                                    "type": "string",
                                    "description": "Enable\/disable sending emails after reports are generated.   \nenable:Enable sending emails after generating reports.   \ndisable:Disable sending emails after generating reports.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "email-recipients": {
                                    "type": "string",
                                    "description": "Email recipients for generated reports.",
                                    "maxLength": 511
                                },
                                "max-pdf-report": {
                                    "type": "integer",
                                    "description": "Maximum number of PDF reports to keep at one time (oldest report is overwritten).",
                                    "maximum": 365,
                                    "minimum": 1
                                },
                                "page": {
                                    "description": "Configure report page.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "paper": {
                                                "type": "string",
                                                "description": "Report page paper.   \na4:A4 paper.   \nletter:Letter paper.",
                                                "enum": [
                                                    "a4",
                                                    "letter"
                                                ]
                                            },
                                            "column-break-before": {
                                                "type": "string",
                                                "description": "Report page auto column break before heading.   \nheading1:Column break before heading 1.   \nheading2:Column break before heading 2.   \nheading3:Column break before heading 3.",
                                                "enum": [
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "page-break-before": {
                                                "type": "string",
                                                "description": "Report page auto page break before heading.   \nheading1:Page break before heading 1.   \nheading2:Page break before heading 2.   \nheading3:Page break before heading 3.",
                                                "enum": [
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "options": {
                                                "type": "string",
                                                "description": "Report page options.   \nheader-on-first-page:Show header on first page.   \nfooter-on-first-page:Show footer on first page.",
                                                "enum": [
                                                    "header-on-first-page",
                                                    "footer-on-first-page"
                                                ]
                                            },
                                            "header": {
                                                "description": "Configure report page header.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "style": {
                                                            "type": "string",
                                                            "description": "Report header style.",
                                                            "maxLength": 71
                                                        },
                                                        "header-item": {
                                                            "description": "Configure report header item.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Report item ID.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "Description.",
                                                                        "maxLength": 63
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "Report item type.   \ntext:Text.   \nimage:Image.",
                                                                        "enum": [
                                                                            "text",
                                                                            "image"
                                                                        ]
                                                                    },
                                                                    "style": {
                                                                        "type": "string",
                                                                        "description": "Report item style.",
                                                                        "maxLength": 71
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "description": "Report item text content.",
                                                                        "maxLength": 511
                                                                    },
                                                                    "img-src": {
                                                                        "type": "string",
                                                                        "description": "Report item image file name.",
                                                                        "maxLength": 127
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": 2
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "footer": {
                                                "description": "Configure report page footer.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "style": {
                                                            "type": "string",
                                                            "description": "Report footer style.",
                                                            "maxLength": 71
                                                        },
                                                        "footer-item": {
                                                            "description": "Configure report footer item.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "description": "Report item ID.",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "Description.",
                                                                        "maxLength": 63
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "Report item type.   \ntext:Text.   \nimage:Image.",
                                                                        "enum": [
                                                                            "text",
                                                                            "image"
                                                                        ]
                                                                    },
                                                                    "style": {
                                                                        "type": "string",
                                                                        "description": "Report item style.",
                                                                        "maxLength": 71
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "description": "Report item text content.",
                                                                        "maxLength": 511
                                                                    },
                                                                    "img-src": {
                                                                        "type": "string",
                                                                        "description": "Report item image file name.",
                                                                        "maxLength": 127
                                                                    }
                                                                }
                                                            },
                                                            "maxItems": 2
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            }
                                        }
                                    },
                                    "maxItems": null
                                },
                                "body-item": {
                                    "description": "Configure report body item.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "Report item ID.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Description.",
                                                "maxLength": 63
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Report item type.   \ntext:Text.   \nimage:Image.   \nchart:Chart.   \nmisc:Miscellaneous.",
                                                "enum": [
                                                    "text",
                                                    "image",
                                                    "chart",
                                                    "misc"
                                                ]
                                            },
                                            "style": {
                                                "type": "string",
                                                "description": "Report item style.",
                                                "maxLength": 71
                                            },
                                            "top-n": {
                                                "type": "integer",
                                                "description": "Value of top.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "hide": {
                                                "type": "string",
                                                "description": "Enable\/disable hide item in report.   \nenable:Enable hide item in report.   \ndisable:Disable hide item in report.",
                                                "enum": [
                                                    "enable",
                                                    "disable"
                                                ]
                                            },
                                            "parameters": {
                                                "description": "Parameters.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Field name that match field of parameters defined in dataset.",
                                                            "maxLength": 127
                                                        },
                                                        "value": {
                                                            "type": "string",
                                                            "description": "Value to replace corresponding field of parameters defined in dataset.",
                                                            "maxLength": 1023
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "text-component": {
                                                "type": "string",
                                                "description": "Report item text component.   \ntext:Normal text.   \nheading1:Heading 1.   \nheading2:Heading 2.   \nheading3:Heading 3.",
                                                "enum": [
                                                    "text",
                                                    "heading1",
                                                    "heading2",
                                                    "heading3"
                                                ]
                                            },
                                            "content": {
                                                "type": "string",
                                                "description": "Report item text content.",
                                                "maxLength": 511
                                            },
                                            "img-src": {
                                                "type": "string",
                                                "description": "Report item image file name.",
                                                "maxLength": 127
                                            },
                                            "list-component": {
                                                "type": "string",
                                                "description": "Report item list component.   \nbullet:Bullet list.   \nnumbered:Numbered list.",
                                                "enum": [
                                                    "bullet",
                                                    "numbered"
                                                ]
                                            },
                                            "list": {
                                                "description": "Configure report list item.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "List entry ID.",
                                                            "maximum": 4294967295,
                                                            "minimum": 0
                                                        },
                                                        "content": {
                                                            "type": "string",
                                                            "description": "List entry content.",
                                                            "maxLength": 127
                                                        }
                                                    }
                                                },
                                                "maxItems": null
                                            },
                                            "chart": {
                                                "type": "string",
                                                "description": "Report item chart name.",
                                                "maxLength": 71
                                            },
                                            "chart-options": {
                                                "type": "string",
                                                "description": "Report chart options.   \ninclude-no-data:Include chart with no data.   \nhide-title:Hide chart title.   \nshow-caption:Show chart caption.",
                                                "enum": [
                                                    "include-no-data",
                                                    "hide-title",
                                                    "show-caption"
                                                ]
                                            },
                                            "drill-down-items": {
                                                "type": "string",
                                                "description": "Control how drill down charts are shown.",
                                                "maxLength": 11
                                            },
                                            "drill-down-types": {
                                                "type": "string",
                                                "description": "Control whether keys from the parent being combined or not.",
                                                "maxLength": 7
                                            },
                                            "table-column-widths": {
                                                "type": "string",
                                                "description": "Report item table column widths.",
                                                "maxLength": 179
                                            },
                                            "table-caption-style": {
                                                "type": "string",
                                                "description": "Table chart caption style.",
                                                "maxLength": 71
                                            },
                                            "table-head-style": {
                                                "type": "string",
                                                "description": "Table chart head style.",
                                                "maxLength": 71
                                            },
                                            "table-odd-row-style": {
                                                "type": "string",
                                                "description": "Table chart odd row style.",
                                                "maxLength": 71
                                            },
                                            "table-even-row-style": {
                                                "type": "string",
                                                "description": "Table chart even row style.",
                                                "maxLength": 71
                                            },
                                            "misc-component": {
                                                "type": "string",
                                                "description": "Report item miscellaneous component.   \nhline:Horizontal line.   \npage-break:Page break.   \ncolumn-break:Column break.   \nsection-start:Section start.",
                                                "enum": [
                                                    "hline",
                                                    "page-break",
                                                    "column-break",
                                                    "section-start"
                                                ]
                                            },
                                            "column": {
                                                "type": "integer",
                                                "description": "Report section column number.",
                                                "maximum": 4294967295,
                                                "minimum": 0
                                            },
                                            "title": {
                                                "type": "string",
                                                "description": "Report section title.",
                                                "maxLength": 511
                                            }
                                        }
                                    },
                                    "maxItems": 256
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "report\/layout"
                ]
            }
        },
        "\/report\/setting": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "pdf-report": {
                                    "type": "string",
                                    "description": "Enable\/disable PDF report.   \nenable:Enable PDF report.   \ndisable:Disable PDF report.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fortiview": {
                                    "type": "string",
                                    "description": "Enable\/disable historical FortiView.   \nenable:Enable historical FortiView.   \ndisable:Disable historical FortiView.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "report-source": {
                                    "type": "string",
                                    "description": "Report log source.   \nforward-traffic:Report includes forward traffic logs.   \nsniffer-traffic:Report includes sniffer traffic logs.   \nlocal-deny-traffic:Report includes local deny traffic logs.",
                                    "enum": [
                                        "forward-traffic",
                                        "sniffer-traffic",
                                        "local-deny-traffic"
                                    ]
                                },
                                "web-browsing-threshold": {
                                    "type": "integer",
                                    "description": "Web browsing time calculation threshold (3 - 15 min).",
                                    "maximum": 15,
                                    "minimum": 3
                                },
                                "top-n": {
                                    "type": "integer",
                                    "description": "Number of items to populate (1000 - 20000).",
                                    "maximum": 20000,
                                    "minimum": 1000
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "report\/setting"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "pdf-report": {
                                    "type": "string",
                                    "description": "Enable\/disable PDF report.   \nenable:Enable PDF report.   \ndisable:Disable PDF report.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "fortiview": {
                                    "type": "string",
                                    "description": "Enable\/disable historical FortiView.   \nenable:Enable historical FortiView.   \ndisable:Disable historical FortiView.",
                                    "enum": [
                                        "enable",
                                        "disable"
                                    ]
                                },
                                "report-source": {
                                    "type": "string",
                                    "description": "Report log source.   \nforward-traffic:Report includes forward traffic logs.   \nsniffer-traffic:Report includes sniffer traffic logs.   \nlocal-deny-traffic:Report includes local deny traffic logs.",
                                    "enum": [
                                        "forward-traffic",
                                        "sniffer-traffic",
                                        "local-deny-traffic"
                                    ]
                                },
                                "web-browsing-threshold": {
                                    "type": "integer",
                                    "description": "Web browsing time calculation threshold (3 - 15 min).",
                                    "maximum": 15,
                                    "minimum": 3
                                },
                                "top-n": {
                                    "type": "integer",
                                    "description": "Number of items to populate (1000 - 20000).",
                                    "maximum": 20000,
                                    "minimum": 1000
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "report\/setting"
                ]
            }
        },
        "\/report\/style\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report style name.",
                                    "maxLength": 71
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Report style options.   \nfont:Font.   \ntext:Text.   \ncolor:Color.   \nalign:Align.   \nsize:Size.   \nmargin:Margin.   \nborder:Border.   \npadding:Padding.   \ncolumn:Column.",
                                    "enum": [
                                        "font",
                                        "text",
                                        "color",
                                        "align",
                                        "size",
                                        "margin",
                                        "border",
                                        "padding",
                                        "column"
                                    ]
                                },
                                "font-family": {
                                    "type": "string",
                                    "description": "Font family.   \nVerdana:Verdana.   \nArial:Arial.   \nHelvetica:Helvetica.   \nCourier:Courier.   \nTimes:Times Roman.",
                                    "enum": [
                                        "Verdana",
                                        "Arial",
                                        "Helvetica",
                                        "Courier",
                                        "Times"
                                    ]
                                },
                                "font-style": {
                                    "type": "string",
                                    "description": "Font style.   \nnormal:Normal.   \nitalic:Italic.",
                                    "enum": [
                                        "normal",
                                        "italic"
                                    ]
                                },
                                "font-weight": {
                                    "type": "string",
                                    "description": "Font weight.   \nnormal:Normal.   \nbold:Bold.",
                                    "enum": [
                                        "normal",
                                        "bold"
                                    ]
                                },
                                "font-size": {
                                    "type": "string",
                                    "description": "Font size.",
                                    "maxLength": 15
                                },
                                "line-height": {
                                    "type": "string",
                                    "description": "Text line height.",
                                    "maxLength": 15
                                },
                                "fg-color": {
                                    "type": "string",
                                    "description": "Foreground color.",
                                    "maxLength": 15
                                },
                                "bg-color": {
                                    "type": "string",
                                    "description": "Background color.",
                                    "maxLength": 15
                                },
                                "align": {
                                    "type": "string",
                                    "description": "Alignment.   \nleft:Align left.   \ncenter:Align center.   \nright:Align right.   \njustify:Align justify.",
                                    "enum": [
                                        "left",
                                        "center",
                                        "right",
                                        "justify"
                                    ]
                                },
                                "width": {
                                    "type": "string",
                                    "description": "Width.",
                                    "maxLength": 15
                                },
                                "height": {
                                    "type": "string",
                                    "description": "Height.",
                                    "maxLength": 15
                                },
                                "margin-top": {
                                    "type": "string",
                                    "description": "Margin top.",
                                    "maxLength": 15
                                },
                                "margin-right": {
                                    "type": "string",
                                    "description": "Margin right.",
                                    "maxLength": 15
                                },
                                "margin-bottom": {
                                    "type": "string",
                                    "description": "Margin bottom.",
                                    "maxLength": 15
                                },
                                "margin-left": {
                                    "type": "string",
                                    "description": "Margin left.",
                                    "maxLength": 15
                                },
                                "border-top": {
                                    "type": "string",
                                    "description": "Border top."
                                },
                                "border-right": {
                                    "type": "string",
                                    "description": "Border right."
                                },
                                "border-bottom": {
                                    "type": "string",
                                    "description": "Border bottom."
                                },
                                "border-left": {
                                    "type": "string",
                                    "description": "Border left."
                                },
                                "padding-top": {
                                    "type": "string",
                                    "description": "Padding top.",
                                    "maxLength": 15
                                },
                                "padding-right": {
                                    "type": "string",
                                    "description": "Padding right.",
                                    "maxLength": 15
                                },
                                "padding-bottom": {
                                    "type": "string",
                                    "description": "Padding bottom.",
                                    "maxLength": 15
                                },
                                "padding-left": {
                                    "type": "string",
                                    "description": "Padding left.",
                                    "maxLength": 15
                                },
                                "column-span": {
                                    "type": "string",
                                    "description": "Column span.   \nnone:Does not span.   \nall:Span across all columns.",
                                    "enum": [
                                        "none",
                                        "all"
                                    ]
                                },
                                "column-gap": {
                                    "type": "string",
                                    "description": "Column gap.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "report\/style"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report style name.",
                                    "maxLength": 71
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Report style options.   \nfont:Font.   \ntext:Text.   \ncolor:Color.   \nalign:Align.   \nsize:Size.   \nmargin:Margin.   \nborder:Border.   \npadding:Padding.   \ncolumn:Column.",
                                    "enum": [
                                        "font",
                                        "text",
                                        "color",
                                        "align",
                                        "size",
                                        "margin",
                                        "border",
                                        "padding",
                                        "column"
                                    ]
                                },
                                "font-family": {
                                    "type": "string",
                                    "description": "Font family.   \nVerdana:Verdana.   \nArial:Arial.   \nHelvetica:Helvetica.   \nCourier:Courier.   \nTimes:Times Roman.",
                                    "enum": [
                                        "Verdana",
                                        "Arial",
                                        "Helvetica",
                                        "Courier",
                                        "Times"
                                    ]
                                },
                                "font-style": {
                                    "type": "string",
                                    "description": "Font style.   \nnormal:Normal.   \nitalic:Italic.",
                                    "enum": [
                                        "normal",
                                        "italic"
                                    ]
                                },
                                "font-weight": {
                                    "type": "string",
                                    "description": "Font weight.   \nnormal:Normal.   \nbold:Bold.",
                                    "enum": [
                                        "normal",
                                        "bold"
                                    ]
                                },
                                "font-size": {
                                    "type": "string",
                                    "description": "Font size.",
                                    "maxLength": 15
                                },
                                "line-height": {
                                    "type": "string",
                                    "description": "Text line height.",
                                    "maxLength": 15
                                },
                                "fg-color": {
                                    "type": "string",
                                    "description": "Foreground color.",
                                    "maxLength": 15
                                },
                                "bg-color": {
                                    "type": "string",
                                    "description": "Background color.",
                                    "maxLength": 15
                                },
                                "align": {
                                    "type": "string",
                                    "description": "Alignment.   \nleft:Align left.   \ncenter:Align center.   \nright:Align right.   \njustify:Align justify.",
                                    "enum": [
                                        "left",
                                        "center",
                                        "right",
                                        "justify"
                                    ]
                                },
                                "width": {
                                    "type": "string",
                                    "description": "Width.",
                                    "maxLength": 15
                                },
                                "height": {
                                    "type": "string",
                                    "description": "Height.",
                                    "maxLength": 15
                                },
                                "margin-top": {
                                    "type": "string",
                                    "description": "Margin top.",
                                    "maxLength": 15
                                },
                                "margin-right": {
                                    "type": "string",
                                    "description": "Margin right.",
                                    "maxLength": 15
                                },
                                "margin-bottom": {
                                    "type": "string",
                                    "description": "Margin bottom.",
                                    "maxLength": 15
                                },
                                "margin-left": {
                                    "type": "string",
                                    "description": "Margin left.",
                                    "maxLength": 15
                                },
                                "border-top": {
                                    "type": "string",
                                    "description": "Border top."
                                },
                                "border-right": {
                                    "type": "string",
                                    "description": "Border right."
                                },
                                "border-bottom": {
                                    "type": "string",
                                    "description": "Border bottom."
                                },
                                "border-left": {
                                    "type": "string",
                                    "description": "Border left."
                                },
                                "padding-top": {
                                    "type": "string",
                                    "description": "Padding top.",
                                    "maxLength": 15
                                },
                                "padding-right": {
                                    "type": "string",
                                    "description": "Padding right.",
                                    "maxLength": 15
                                },
                                "padding-bottom": {
                                    "type": "string",
                                    "description": "Padding bottom.",
                                    "maxLength": 15
                                },
                                "padding-left": {
                                    "type": "string",
                                    "description": "Padding left.",
                                    "maxLength": 15
                                },
                                "column-span": {
                                    "type": "string",
                                    "description": "Column span.   \nnone:Does not span.   \nall:Span across all columns.",
                                    "enum": [
                                        "none",
                                        "all"
                                    ]
                                },
                                "column-gap": {
                                    "type": "string",
                                    "description": "Column gap.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "report\/style"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "report\/style"
                ]
            }
        },
        "\/report\/style": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report style name.",
                                    "maxLength": 71
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Report style options.   \nfont:Font.   \ntext:Text.   \ncolor:Color.   \nalign:Align.   \nsize:Size.   \nmargin:Margin.   \nborder:Border.   \npadding:Padding.   \ncolumn:Column.",
                                    "enum": [
                                        "font",
                                        "text",
                                        "color",
                                        "align",
                                        "size",
                                        "margin",
                                        "border",
                                        "padding",
                                        "column"
                                    ]
                                },
                                "font-family": {
                                    "type": "string",
                                    "description": "Font family.   \nVerdana:Verdana.   \nArial:Arial.   \nHelvetica:Helvetica.   \nCourier:Courier.   \nTimes:Times Roman.",
                                    "enum": [
                                        "Verdana",
                                        "Arial",
                                        "Helvetica",
                                        "Courier",
                                        "Times"
                                    ]
                                },
                                "font-style": {
                                    "type": "string",
                                    "description": "Font style.   \nnormal:Normal.   \nitalic:Italic.",
                                    "enum": [
                                        "normal",
                                        "italic"
                                    ]
                                },
                                "font-weight": {
                                    "type": "string",
                                    "description": "Font weight.   \nnormal:Normal.   \nbold:Bold.",
                                    "enum": [
                                        "normal",
                                        "bold"
                                    ]
                                },
                                "font-size": {
                                    "type": "string",
                                    "description": "Font size.",
                                    "maxLength": 15
                                },
                                "line-height": {
                                    "type": "string",
                                    "description": "Text line height.",
                                    "maxLength": 15
                                },
                                "fg-color": {
                                    "type": "string",
                                    "description": "Foreground color.",
                                    "maxLength": 15
                                },
                                "bg-color": {
                                    "type": "string",
                                    "description": "Background color.",
                                    "maxLength": 15
                                },
                                "align": {
                                    "type": "string",
                                    "description": "Alignment.   \nleft:Align left.   \ncenter:Align center.   \nright:Align right.   \njustify:Align justify.",
                                    "enum": [
                                        "left",
                                        "center",
                                        "right",
                                        "justify"
                                    ]
                                },
                                "width": {
                                    "type": "string",
                                    "description": "Width.",
                                    "maxLength": 15
                                },
                                "height": {
                                    "type": "string",
                                    "description": "Height.",
                                    "maxLength": 15
                                },
                                "margin-top": {
                                    "type": "string",
                                    "description": "Margin top.",
                                    "maxLength": 15
                                },
                                "margin-right": {
                                    "type": "string",
                                    "description": "Margin right.",
                                    "maxLength": 15
                                },
                                "margin-bottom": {
                                    "type": "string",
                                    "description": "Margin bottom.",
                                    "maxLength": 15
                                },
                                "margin-left": {
                                    "type": "string",
                                    "description": "Margin left.",
                                    "maxLength": 15
                                },
                                "border-top": {
                                    "type": "string",
                                    "description": "Border top."
                                },
                                "border-right": {
                                    "type": "string",
                                    "description": "Border right."
                                },
                                "border-bottom": {
                                    "type": "string",
                                    "description": "Border bottom."
                                },
                                "border-left": {
                                    "type": "string",
                                    "description": "Border left."
                                },
                                "padding-top": {
                                    "type": "string",
                                    "description": "Padding top.",
                                    "maxLength": 15
                                },
                                "padding-right": {
                                    "type": "string",
                                    "description": "Padding right.",
                                    "maxLength": 15
                                },
                                "padding-bottom": {
                                    "type": "string",
                                    "description": "Padding bottom.",
                                    "maxLength": 15
                                },
                                "padding-left": {
                                    "type": "string",
                                    "description": "Padding left.",
                                    "maxLength": 15
                                },
                                "column-span": {
                                    "type": "string",
                                    "description": "Column span.   \nnone:Does not span.   \nall:Span across all columns.",
                                    "enum": [
                                        "none",
                                        "all"
                                    ]
                                },
                                "column-gap": {
                                    "type": "string",
                                    "description": "Column gap.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "report\/style"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report style name.",
                                    "maxLength": 71
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Report style options.   \nfont:Font.   \ntext:Text.   \ncolor:Color.   \nalign:Align.   \nsize:Size.   \nmargin:Margin.   \nborder:Border.   \npadding:Padding.   \ncolumn:Column.",
                                    "enum": [
                                        "font",
                                        "text",
                                        "color",
                                        "align",
                                        "size",
                                        "margin",
                                        "border",
                                        "padding",
                                        "column"
                                    ]
                                },
                                "font-family": {
                                    "type": "string",
                                    "description": "Font family.   \nVerdana:Verdana.   \nArial:Arial.   \nHelvetica:Helvetica.   \nCourier:Courier.   \nTimes:Times Roman.",
                                    "enum": [
                                        "Verdana",
                                        "Arial",
                                        "Helvetica",
                                        "Courier",
                                        "Times"
                                    ]
                                },
                                "font-style": {
                                    "type": "string",
                                    "description": "Font style.   \nnormal:Normal.   \nitalic:Italic.",
                                    "enum": [
                                        "normal",
                                        "italic"
                                    ]
                                },
                                "font-weight": {
                                    "type": "string",
                                    "description": "Font weight.   \nnormal:Normal.   \nbold:Bold.",
                                    "enum": [
                                        "normal",
                                        "bold"
                                    ]
                                },
                                "font-size": {
                                    "type": "string",
                                    "description": "Font size.",
                                    "maxLength": 15
                                },
                                "line-height": {
                                    "type": "string",
                                    "description": "Text line height.",
                                    "maxLength": 15
                                },
                                "fg-color": {
                                    "type": "string",
                                    "description": "Foreground color.",
                                    "maxLength": 15
                                },
                                "bg-color": {
                                    "type": "string",
                                    "description": "Background color.",
                                    "maxLength": 15
                                },
                                "align": {
                                    "type": "string",
                                    "description": "Alignment.   \nleft:Align left.   \ncenter:Align center.   \nright:Align right.   \njustify:Align justify.",
                                    "enum": [
                                        "left",
                                        "center",
                                        "right",
                                        "justify"
                                    ]
                                },
                                "width": {
                                    "type": "string",
                                    "description": "Width.",
                                    "maxLength": 15
                                },
                                "height": {
                                    "type": "string",
                                    "description": "Height.",
                                    "maxLength": 15
                                },
                                "margin-top": {
                                    "type": "string",
                                    "description": "Margin top.",
                                    "maxLength": 15
                                },
                                "margin-right": {
                                    "type": "string",
                                    "description": "Margin right.",
                                    "maxLength": 15
                                },
                                "margin-bottom": {
                                    "type": "string",
                                    "description": "Margin bottom.",
                                    "maxLength": 15
                                },
                                "margin-left": {
                                    "type": "string",
                                    "description": "Margin left.",
                                    "maxLength": 15
                                },
                                "border-top": {
                                    "type": "string",
                                    "description": "Border top."
                                },
                                "border-right": {
                                    "type": "string",
                                    "description": "Border right."
                                },
                                "border-bottom": {
                                    "type": "string",
                                    "description": "Border bottom."
                                },
                                "border-left": {
                                    "type": "string",
                                    "description": "Border left."
                                },
                                "padding-top": {
                                    "type": "string",
                                    "description": "Padding top.",
                                    "maxLength": 15
                                },
                                "padding-right": {
                                    "type": "string",
                                    "description": "Padding right.",
                                    "maxLength": 15
                                },
                                "padding-bottom": {
                                    "type": "string",
                                    "description": "Padding bottom.",
                                    "maxLength": 15
                                },
                                "padding-left": {
                                    "type": "string",
                                    "description": "Padding left.",
                                    "maxLength": 15
                                },
                                "column-span": {
                                    "type": "string",
                                    "description": "Column span.   \nnone:Does not span.   \nall:Span across all columns.",
                                    "enum": [
                                        "none",
                                        "all"
                                    ]
                                },
                                "column-gap": {
                                    "type": "string",
                                    "description": "Column gap.",
                                    "maxLength": 15
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "report\/style"
                ]
            }
        },
        "\/report\/theme\/{name}": {
            "get": {
                "summary": "Select a specific entry from a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report theme name.",
                                    "maxLength": 35
                                },
                                "page-orient": {
                                    "type": "string",
                                    "description": "Report page orientation.   \nportrait:Portrait Orientation.   \nlandscape:Landscape Orientation.",
                                    "enum": [
                                        "portrait",
                                        "landscape"
                                    ]
                                },
                                "column-count": {
                                    "type": "string",
                                    "description": "Report page column count.   \n1:One Column.   \n2:Two Columns.   \n3:Three Columns.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "3"
                                    ]
                                },
                                "default-html-style": {
                                    "type": "string",
                                    "description": "Default HTML report style.",
                                    "maxLength": 71
                                },
                                "default-pdf-style": {
                                    "type": "string",
                                    "description": "Default PDF report style.",
                                    "maxLength": 71
                                },
                                "page-style": {
                                    "type": "string",
                                    "description": "Report page style.",
                                    "maxLength": 71
                                },
                                "page-header-style": {
                                    "type": "string",
                                    "description": "Report page header style.",
                                    "maxLength": 71
                                },
                                "page-footer-style": {
                                    "type": "string",
                                    "description": "Report page footer style.",
                                    "maxLength": 71
                                },
                                "report-title-style": {
                                    "type": "string",
                                    "description": "Report title style.",
                                    "maxLength": 71
                                },
                                "report-subtitle-style": {
                                    "type": "string",
                                    "description": "Report subtitle style.",
                                    "maxLength": 71
                                },
                                "toc-title-style": {
                                    "type": "string",
                                    "description": "Table of contents title style.",
                                    "maxLength": 71
                                },
                                "toc-heading1-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading2-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading3-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading4-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "heading1-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading2-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading3-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading4-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "normal-text-style": {
                                    "type": "string",
                                    "description": "Normal text style.",
                                    "maxLength": 71
                                },
                                "bullet-list-style": {
                                    "type": "string",
                                    "description": "Bullet list style.",
                                    "maxLength": 71
                                },
                                "numbered-list-style": {
                                    "type": "string",
                                    "description": "Numbered list style.",
                                    "maxLength": 71
                                },
                                "image-style": {
                                    "type": "string",
                                    "description": "Image style.",
                                    "maxLength": 71
                                },
                                "hline-style": {
                                    "type": "string",
                                    "description": "Horizontal line style.",
                                    "maxLength": 71
                                },
                                "graph-chart-style": {
                                    "type": "string",
                                    "description": "Graph chart style.",
                                    "maxLength": 71
                                },
                                "table-chart-style": {
                                    "type": "string",
                                    "description": "Table chart style.",
                                    "maxLength": 71
                                },
                                "table-chart-caption-style": {
                                    "type": "string",
                                    "description": "Table chart caption style.",
                                    "maxLength": 71
                                },
                                "table-chart-head-style": {
                                    "type": "string",
                                    "description": "Table chart head row style.",
                                    "maxLength": 71
                                },
                                "table-chart-odd-row-style": {
                                    "type": "string",
                                    "description": "Table chart odd row style.",
                                    "maxLength": 71
                                },
                                "table-chart-even-row-style": {
                                    "type": "string",
                                    "description": "Table chart even row style.",
                                    "maxLength": 71
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for this object type.\nschema: Return the CLI schema for this object type.\nrevision: Return the CMDB revision for this object type.\ntransaction-list: List all configuration transaction(s).\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema",
                            "revision"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "report\/theme"
                ]
            },
            "put": {
                "summary": "Update this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report theme name.",
                                    "maxLength": 35
                                },
                                "page-orient": {
                                    "type": "string",
                                    "description": "Report page orientation.   \nportrait:Portrait Orientation.   \nlandscape:Landscape Orientation.",
                                    "enum": [
                                        "portrait",
                                        "landscape"
                                    ]
                                },
                                "column-count": {
                                    "type": "string",
                                    "description": "Report page column count.   \n1:One Column.   \n2:Two Columns.   \n3:Three Columns.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "3"
                                    ]
                                },
                                "default-html-style": {
                                    "type": "string",
                                    "description": "Default HTML report style.",
                                    "maxLength": 71
                                },
                                "default-pdf-style": {
                                    "type": "string",
                                    "description": "Default PDF report style.",
                                    "maxLength": 71
                                },
                                "page-style": {
                                    "type": "string",
                                    "description": "Report page style.",
                                    "maxLength": 71
                                },
                                "page-header-style": {
                                    "type": "string",
                                    "description": "Report page header style.",
                                    "maxLength": 71
                                },
                                "page-footer-style": {
                                    "type": "string",
                                    "description": "Report page footer style.",
                                    "maxLength": 71
                                },
                                "report-title-style": {
                                    "type": "string",
                                    "description": "Report title style.",
                                    "maxLength": 71
                                },
                                "report-subtitle-style": {
                                    "type": "string",
                                    "description": "Report subtitle style.",
                                    "maxLength": 71
                                },
                                "toc-title-style": {
                                    "type": "string",
                                    "description": "Table of contents title style.",
                                    "maxLength": 71
                                },
                                "toc-heading1-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading2-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading3-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading4-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "heading1-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading2-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading3-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading4-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "normal-text-style": {
                                    "type": "string",
                                    "description": "Normal text style.",
                                    "maxLength": 71
                                },
                                "bullet-list-style": {
                                    "type": "string",
                                    "description": "Bullet list style.",
                                    "maxLength": 71
                                },
                                "numbered-list-style": {
                                    "type": "string",
                                    "description": "Numbered list style.",
                                    "maxLength": 71
                                },
                                "image-style": {
                                    "type": "string",
                                    "description": "Image style.",
                                    "maxLength": 71
                                },
                                "hline-style": {
                                    "type": "string",
                                    "description": "Horizontal line style.",
                                    "maxLength": 71
                                },
                                "graph-chart-style": {
                                    "type": "string",
                                    "description": "Graph chart style.",
                                    "maxLength": 71
                                },
                                "table-chart-style": {
                                    "type": "string",
                                    "description": "Table chart style.",
                                    "maxLength": 71
                                },
                                "table-chart-caption-style": {
                                    "type": "string",
                                    "description": "Table chart caption style.",
                                    "maxLength": 71
                                },
                                "table-chart-head-style": {
                                    "type": "string",
                                    "description": "Table chart head row style.",
                                    "maxLength": 71
                                },
                                "table-chart-odd-row-style": {
                                    "type": "string",
                                    "description": "Table chart odd row style.",
                                    "maxLength": 71
                                },
                                "table-chart-even-row-style": {
                                    "type": "string",
                                    "description": "Table chart even row style.",
                                    "maxLength": 71
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_move_: Move this specific resource.\nWhen *action=move* is set, one of the extra parameters (*before*, *after*) must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "move"
                        ]
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "If *action=move*, use *before* to specify the ID of the resource that this resource will be moved before.\nFor example, to move `object 1` to before `object 2`, use:\n__action=move&before=2__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "If *action=move*, use *after* to specify the ID of the resource that this resource will be moved after.\nFor example, to move `object 1` to after `object 3`, use:\n__action=move&after=3__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *move*.\n",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    }
                ],
                "tags": [
                    "report\/theme"
                ]
            },
            "delete": {
                "summary": "Delete this specific resource.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "mkey"
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "report\/theme"
                ]
            }
        },
        "\/report\/theme": {
            "get": {
                "summary": "Select all entries in a CLI table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful",
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report theme name.",
                                    "maxLength": 35
                                },
                                "page-orient": {
                                    "type": "string",
                                    "description": "Report page orientation.   \nportrait:Portrait Orientation.   \nlandscape:Landscape Orientation.",
                                    "enum": [
                                        "portrait",
                                        "landscape"
                                    ]
                                },
                                "column-count": {
                                    "type": "string",
                                    "description": "Report page column count.   \n1:One Column.   \n2:Two Columns.   \n3:Three Columns.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "3"
                                    ]
                                },
                                "default-html-style": {
                                    "type": "string",
                                    "description": "Default HTML report style.",
                                    "maxLength": 71
                                },
                                "default-pdf-style": {
                                    "type": "string",
                                    "description": "Default PDF report style.",
                                    "maxLength": 71
                                },
                                "page-style": {
                                    "type": "string",
                                    "description": "Report page style.",
                                    "maxLength": 71
                                },
                                "page-header-style": {
                                    "type": "string",
                                    "description": "Report page header style.",
                                    "maxLength": 71
                                },
                                "page-footer-style": {
                                    "type": "string",
                                    "description": "Report page footer style.",
                                    "maxLength": 71
                                },
                                "report-title-style": {
                                    "type": "string",
                                    "description": "Report title style.",
                                    "maxLength": 71
                                },
                                "report-subtitle-style": {
                                    "type": "string",
                                    "description": "Report subtitle style.",
                                    "maxLength": 71
                                },
                                "toc-title-style": {
                                    "type": "string",
                                    "description": "Table of contents title style.",
                                    "maxLength": 71
                                },
                                "toc-heading1-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading2-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading3-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading4-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "heading1-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading2-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading3-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading4-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "normal-text-style": {
                                    "type": "string",
                                    "description": "Normal text style.",
                                    "maxLength": 71
                                },
                                "bullet-list-style": {
                                    "type": "string",
                                    "description": "Bullet list style.",
                                    "maxLength": 71
                                },
                                "numbered-list-style": {
                                    "type": "string",
                                    "description": "Numbered list style.",
                                    "maxLength": 71
                                },
                                "image-style": {
                                    "type": "string",
                                    "description": "Image style.",
                                    "maxLength": 71
                                },
                                "hline-style": {
                                    "type": "string",
                                    "description": "Horizontal line style.",
                                    "maxLength": 71
                                },
                                "graph-chart-style": {
                                    "type": "string",
                                    "description": "Graph chart style.",
                                    "maxLength": 71
                                },
                                "table-chart-style": {
                                    "type": "string",
                                    "description": "Table chart style.",
                                    "maxLength": 71
                                },
                                "table-chart-caption-style": {
                                    "type": "string",
                                    "description": "Table chart caption style.",
                                    "maxLength": 71
                                },
                                "table-chart-head-style": {
                                    "type": "string",
                                    "description": "Table chart head row style.",
                                    "maxLength": 71
                                },
                                "table-chart-odd-row-style": {
                                    "type": "string",
                                    "description": "Table chart odd row style.",
                                    "maxLength": 71
                                },
                                "table-chart-even-row-style": {
                                    "type": "string",
                                    "description": "Table chart even row style.",
                                    "maxLength": 71
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include datasource information for each linked object."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Starting entry index."
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "description": "Maximum number of entries to return."
                    },
                    {
                        "name": "with_meta",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include meta information about each object (type id, references, etc)."
                    },
                    {
                        "name": "with_contents_hash",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to include a checksum of each object's contents."
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Enable to call CLI skip operator to hide skipped properties."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "List of property names to include in results, separated by | (i.e. policyid|srcintf).",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "pipes",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filtering multiple key\/value pairs\nOperator     |   Description\n==     |   Case insensitive match with pattern.\n!=     |    Does not match with pattern (case insensitive).\n=@     |    Pattern found in object value (case insensitive).\n!@     |    \ufeffPattern not\ufeff found in object value (case insensitive).\n<=     |    Value must be less than or equal to \ufeffpattern\ufeff.\n<     |    Value must be less than pattern\ufeff.\n.>=    |    Value must be greater than or equal to \ufeffpattern\ufeff.\n.>     |    Value must be greater than \ufeffpattern\ufeff.\nLogical OR    |    Separate filters using commas ','\nLogical AND    |    Filter strings can be combined to create logical AND queries by including multiple filters in the request.\nCombining AND and OR    |    You can combine AND and OR filters together to create more complex filters.\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this name."
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "If present, objects will be filtered on property with this value."
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Scope [global|vdom|both*]"
                    },
                    {
                        "name": "exclude-default-values",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "description": "Exclude properties\/objects with default value"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "default: Return the CLI default values for entire CLI tree.\nmeta: Return meta data for a specific object, table, or the entire CLI tree.\nschema: Return schema for entire CLI tree.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "default",
                            "schema"
                        ]
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "report\/theme"
                ]
            },
            "post": {
                "summary": "Create object(s) in this table.\n Access Group: loggrp",
                "responses": {
                    "400": {
                        "description": "Bad Request: Request cannot be processed by the API"
                    },
                    "401": {
                        "description": "Not Authorized: Request without successful login session"
                    },
                    "403": {
                        "description": "Forbidden: Request is missing CSRF token or administrator is missing access profile permissions."
                    },
                    "404": {
                        "description": "Resource Not Found: Unable to find the specified resource."
                    },
                    "405": {
                        "description": "Method Not Allowed: Specified HTTP method is not allowed for this resource. "
                    },
                    "424": {
                        "description": "Failed Dependency: Fail dependency can be duplicate resource, missing required parameter, missing required attribute, invalid attribute value"
                    },
                    "200": {
                        "description": "OK: Request returns successful"
                    },
                    "500": {
                        "description": "Internal Server Error: Internal error when processing the request "
                    },
                    "413": {
                        "description": "Request Entity Too Large: Request cannot be processed due to large entity "
                    },
                    "429": {
                        "description": "Access temporarily blocked: Maximum failed authentications reached. The offended source is temporarily blocked for certain amount of time."
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Possible parameters to go in the body for the request",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Report theme name.",
                                    "maxLength": 35
                                },
                                "page-orient": {
                                    "type": "string",
                                    "description": "Report page orientation.   \nportrait:Portrait Orientation.   \nlandscape:Landscape Orientation.",
                                    "enum": [
                                        "portrait",
                                        "landscape"
                                    ]
                                },
                                "column-count": {
                                    "type": "string",
                                    "description": "Report page column count.   \n1:One Column.   \n2:Two Columns.   \n3:Three Columns.",
                                    "enum": [
                                        "1",
                                        "2",
                                        "3"
                                    ]
                                },
                                "default-html-style": {
                                    "type": "string",
                                    "description": "Default HTML report style.",
                                    "maxLength": 71
                                },
                                "default-pdf-style": {
                                    "type": "string",
                                    "description": "Default PDF report style.",
                                    "maxLength": 71
                                },
                                "page-style": {
                                    "type": "string",
                                    "description": "Report page style.",
                                    "maxLength": 71
                                },
                                "page-header-style": {
                                    "type": "string",
                                    "description": "Report page header style.",
                                    "maxLength": 71
                                },
                                "page-footer-style": {
                                    "type": "string",
                                    "description": "Report page footer style.",
                                    "maxLength": 71
                                },
                                "report-title-style": {
                                    "type": "string",
                                    "description": "Report title style.",
                                    "maxLength": 71
                                },
                                "report-subtitle-style": {
                                    "type": "string",
                                    "description": "Report subtitle style.",
                                    "maxLength": 71
                                },
                                "toc-title-style": {
                                    "type": "string",
                                    "description": "Table of contents title style.",
                                    "maxLength": 71
                                },
                                "toc-heading1-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading2-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading3-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "toc-heading4-style": {
                                    "type": "string",
                                    "description": "Table of contents heading style.",
                                    "maxLength": 71
                                },
                                "heading1-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading2-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading3-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "heading4-style": {
                                    "type": "string",
                                    "description": "Report heading style.",
                                    "maxLength": 71
                                },
                                "normal-text-style": {
                                    "type": "string",
                                    "description": "Normal text style.",
                                    "maxLength": 71
                                },
                                "bullet-list-style": {
                                    "type": "string",
                                    "description": "Bullet list style.",
                                    "maxLength": 71
                                },
                                "numbered-list-style": {
                                    "type": "string",
                                    "description": "Numbered list style.",
                                    "maxLength": 71
                                },
                                "image-style": {
                                    "type": "string",
                                    "description": "Image style.",
                                    "maxLength": 71
                                },
                                "hline-style": {
                                    "type": "string",
                                    "description": "Horizontal line style.",
                                    "maxLength": 71
                                },
                                "graph-chart-style": {
                                    "type": "string",
                                    "description": "Graph chart style.",
                                    "maxLength": 71
                                },
                                "table-chart-style": {
                                    "type": "string",
                                    "description": "Table chart style.",
                                    "maxLength": 71
                                },
                                "table-chart-caption-style": {
                                    "type": "string",
                                    "description": "Table chart caption style.",
                                    "maxLength": 71
                                },
                                "table-chart-head-style": {
                                    "type": "string",
                                    "description": "Table chart head row style.",
                                    "maxLength": 71
                                },
                                "table-chart-odd-row-style": {
                                    "type": "string",
                                    "description": "Table chart odd row style.",
                                    "maxLength": 71
                                },
                                "table-chart-even-row-style": {
                                    "type": "string",
                                    "description": "Table chart even row style.",
                                    "maxLength": 71
                                }
                            }
                        }
                    },
                    {
                        "name": "vdom",
                        "in": "query",
                        "description": "Specify the Virtual Domain(s) from which results are returned or changes are applied to. If this parameter is not provided, the management VDOM will be used. If the admin does not have access to the VDOM, a permission error will be returned.\nThe URL parameter is one of:\nvdom=root (Single VDOM)\nvdom=vdom1,vdom2 (Multiple VDOMs)\nvdom=* (All VDOMs)\n",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "csv",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "If supported, an action can be specified.\n_clone_: Clone this specific resource.\nWhen *action=clone* is set, the extra parameters *nkey* must be provided.\n__*Note:*__ If this parameter is provided when not supported, the action will be ignored and an \u201cinvalid request\u201d error will be returned.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "clone"
                        ]
                    },
                    {
                        "name": "nkey",
                        "in": "query",
                        "description": " If *action=clone*, use *nkey* to specify the ID for the new resource to be created.\nFor example, to clone `address1` to `address1_clone`, use:\n__action=clone&nkey=address1_clone__\n__*Note:*__ This parameter can only be used when the *action* parameter is set to *clone*.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "report\/theme"
                ]
            }
        }
    }
}